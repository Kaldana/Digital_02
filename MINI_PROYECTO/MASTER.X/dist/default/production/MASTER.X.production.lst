

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 20:29:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  0105                     	;# 
   304  0107                     	;# 
   305  0108                     	;# 
   306  0109                     	;# 
   307  010C                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0185                     	;# 
   313  0187                     	;# 
   314  0188                     	;# 
   315  0189                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318                           
   319                           	psect	strings
   320  0700                     __pstrings:
   321  0700                     stringtab:
   322  0700                     __stringtab:
   323                           
   324                           ;	String table - string pointers are 1 byte each
   325  0700  1BFF               	btfsc	btemp+1,7
   326  0701  2F0A               	ljmp	stringcode
   327  0702  1383               	bcf	3,7
   328  0703  187F               	btfsc	btemp+1,0
   329  0704  1783               	bsf	3,7
   330  0705  0800               	movf	0,w
   331  0706  0A84               	incf	4,f
   332  0707  1903               	skipnz
   333  0708  0AFF               	incf	btemp+1,f
   334  0709  0008               	return
   335  070A                     stringcode:
   336  070A                     stringdir:
   337  070A  3007               	movlw	high stringdir
   338  070B  008A               	movwf	10
   339  070C  0804               	movf	4,w
   340  070D  0A84               	incf	4,f
   341  070E  0782               	addwf	2,f
   342  070F                     __stringbase:
   343  070F  3400               	retlw	0
   344  0710                     __end_of__stringtab:
   345  0710                     __powers_:
   346  0710  3400               	retlw	0
   347  0711  3400               	retlw	0
   348  0712  3480               	retlw	128
   349  0713  343F               	retlw	63
   350  0714  3400               	retlw	0
   351  0715  3400               	retlw	0
   352  0716  3420               	retlw	32
   353  0717  3441               	retlw	65
   354  0718  3400               	retlw	0
   355  0719  3400               	retlw	0
   356  071A  34C8               	retlw	200
   357  071B  3442               	retlw	66
   358  071C  3400               	retlw	0
   359  071D  3400               	retlw	0
   360  071E  347A               	retlw	122
   361  071F  3444               	retlw	68
   362  0720  3400               	retlw	0
   363  0721  3440               	retlw	64
   364  0722  341C               	retlw	28
   365  0723  3446               	retlw	70
   366  0724  3400               	retlw	0
   367  0725  3450               	retlw	80
   368  0726  34C3               	retlw	195
   369  0727  3447               	retlw	71
   370  0728  3400               	retlw	0
   371  0729  3424               	retlw	36
   372  072A  3474               	retlw	116
   373  072B  3449               	retlw	73
   374  072C  3480               	retlw	128
   375  072D  3496               	retlw	150
   376  072E  3418               	retlw	24
   377  072F  344B               	retlw	75
   378  0730  3420               	retlw	32
   379  0731  34BC               	retlw	188
   380  0732  34BE               	retlw	190
   381  0733  344C               	retlw	76
   382  0734  3428               	retlw	40
   383  0735  346B               	retlw	107
   384  0736  346E               	retlw	110
   385  0737  344E               	retlw	78
   386  0738  34F9               	retlw	249
   387  0739  3402               	retlw	2
   388  073A  3415               	retlw	21
   389  073B  3450               	retlw	80
   390  073C  34EC               	retlw	236
   391  073D  3478               	retlw	120
   392  073E  34AD               	retlw	173
   393  073F  3460               	retlw	96
   394  0740  34CA               	retlw	202
   395  0741  34F2               	retlw	242
   396  0742  3449               	retlw	73
   397  0743  3471               	retlw	113
   398  0744                     __end_of__powers_:
   399  0744                     __npowers_:
   400  0744  3400               	retlw	0
   401  0745  3400               	retlw	0
   402  0746  3480               	retlw	128
   403  0747  343F               	retlw	63
   404  0748  34CD               	retlw	205
   405  0749  34CC               	retlw	204
   406  074A  34CC               	retlw	204
   407  074B  343D               	retlw	61
   408  074C  340A               	retlw	10
   409  074D  34D7               	retlw	215
   410  074E  3423               	retlw	35
   411  074F  343C               	retlw	60
   412  0750  346F               	retlw	111
   413  0751  3412               	retlw	18
   414  0752  3483               	retlw	131
   415  0753  343A               	retlw	58
   416  0754  3417               	retlw	23
   417  0755  34B7               	retlw	183
   418  0756  34D1               	retlw	209
   419  0757  3438               	retlw	56
   420  0758  34AC               	retlw	172
   421  0759  34C5               	retlw	197
   422  075A  3427               	retlw	39
   423  075B  3437               	retlw	55
   424  075C  34BD               	retlw	189
   425  075D  3437               	retlw	55
   426  075E  3486               	retlw	134
   427  075F  3435               	retlw	53
   428  0760  3495               	retlw	149
   429  0761  34BF               	retlw	191
   430  0762  34D6               	retlw	214
   431  0763  3433               	retlw	51
   432  0764  3477               	retlw	119
   433  0765  34CC               	retlw	204
   434  0766  342B               	retlw	43
   435  0767  3432               	retlw	50
   436  0768  345F               	retlw	95
   437  0769  3470               	retlw	112
   438  076A  3489               	retlw	137
   439  076B  3430               	retlw	48
   440  076C  34FF               	retlw	255
   441  076D  34E6               	retlw	230
   442  076E  34DB               	retlw	219
   443  076F  342E               	retlw	46
   444  0770  3408               	retlw	8
   445  0771  34E5               	retlw	229
   446  0772  343C               	retlw	60
   447  0773  341E               	retlw	30
   448  0774  3460               	retlw	96
   449  0775  3442               	retlw	66
   450  0776  34A2               	retlw	162
   451  0777  340D               	retlw	13
   452  0778                     __end_of__npowers_:
   453  0778                     _dpowers:
   454  0778  3401               	retlw	1
   455  0779  3400               	retlw	0
   456  077A  3400               	retlw	0
   457  077B  3400               	retlw	0
   458  077C  340A               	retlw	10
   459  077D  3400               	retlw	0
   460  077E  3400               	retlw	0
   461  077F  3400               	retlw	0
   462  0780  3464               	retlw	100
   463  0781  3400               	retlw	0
   464  0782  3400               	retlw	0
   465  0783  3400               	retlw	0
   466  0784  34E8               	retlw	232
   467  0785  3403               	retlw	3
   468  0786  3400               	retlw	0
   469  0787  3400               	retlw	0
   470  0788  3410               	retlw	16
   471  0789  3427               	retlw	39
   472  078A  3400               	retlw	0
   473  078B  3400               	retlw	0
   474  078C  34A0               	retlw	160
   475  078D  3486               	retlw	134
   476  078E  3401               	retlw	1
   477  078F  3400               	retlw	0
   478  0790  3440               	retlw	64
   479  0791  3442               	retlw	66
   480  0792  340F               	retlw	15
   481  0793  3400               	retlw	0
   482  0794  3480               	retlw	128
   483  0795  3496               	retlw	150
   484  0796  3498               	retlw	152
   485  0797  3400               	retlw	0
   486  0798  3400               	retlw	0
   487  0799  34E1               	retlw	225
   488  079A  34F5               	retlw	245
   489  079B  3405               	retlw	5
   490  079C  3400               	retlw	0
   491  079D  34CA               	retlw	202
   492  079E  349A               	retlw	154
   493  079F  343B               	retlw	59
   494  07A0                     __end_of_dpowers:
   495  000C                     _PIR1bits	set	12
   496  001E                     _ADRESH	set	30
   497  001A                     _RCREG	set	26
   498  001F                     _ADCON0bits	set	31
   499  0009                     _PORTE	set	9
   500  0008                     _PORTD	set	8
   501  0007                     _PORTC	set	7
   502  0005                     _PORTA	set	5
   503  0049                     _RE1	set	73
   504  0048                     _RE0	set	72
   505  0065                     _RCIF	set	101
   506  0089                     _TRISE	set	137
   507  0088                     _TRISD	set	136
   508  0087                     _TRISC	set	135
   509  0085                     _TRISA	set	133
   510  0189                     _ANSELH	set	393
   511  0188                     _ANSEL	set	392
   512  07A0                     STR_2:
   513  07A0  3456               	retlw	86	;'V'
   514  07A1  3431               	retlw	49	;'1'
   515  07A2  3420               	retlw	32	;' '
   516  07A3  3420               	retlw	32	;' '
   517  07A4  3420               	retlw	32	;' '
   518  07A5  3456               	retlw	86	;'V'
   519  07A6  3432               	retlw	50	;'2'
   520  07A7  3420               	retlw	32	;' '
   521  07A8  3420               	retlw	32	;' '
   522  07A9  3420               	retlw	32	;' '
   523  07AA  3420               	retlw	32	;' '
   524  07AB  3420               	retlw	32	;' '
   525  07AC  3420               	retlw	32	;' '
   526  07AD  3420               	retlw	32	;' '
   527  07AE  3443               	retlw	67	;'C'
   528  07AF  344F               	retlw	79	;'O'
   529  07B0  344E               	retlw	78	;'N'
   530  07B1  3454               	retlw	84	;'T'
   531  07B2  3400               	retlw	0
   532  07B3                     STR_1:
   533  07B3  3425               	retlw	37	;'%'
   534  07B4  3431               	retlw	49	;'1'
   535  07B5  342E               	retlw	46	;'.'
   536  07B6  3432               	retlw	50	;'2'
   537  07B7  3466               	retlw	102	;'f'
   538  07B8  3420               	retlw	32	;' '
   539  07B9  3420               	retlw	32	;' '
   540  07BA  3425               	retlw	37	;'%'
   541  07BB  3431               	retlw	49	;'1'
   542  07BC  342E               	retlw	46	;'.'
   543  07BD  3432               	retlw	50	;'2'
   544  07BE  3466               	retlw	102	;'f'
   545  07BF  3420               	retlw	32	;' '
   546  07C0  3425               	retlw	37	;'%'
   547  07C1  3433               	retlw	51	;'3'
   548  07C2  3464               	retlw	100	;'d'
   549  07C3  3400               	retlw	0
   550                           
   551                           	psect	cinit
   552  000F                     start_initialization:	
   553                           ; #config settings
   554                           
   555  000F                     __initialization:
   556                           
   557                           ; Clear objects allocated to COMMON
   558  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   559  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   560                           
   561                           ; Clear objects allocated to BANK1
   562  0011  1383               	bcf	3,7	;select IRP bank0
   563  0012  30D7               	movlw	low __pbssBANK1
   564  0013  0084               	movwf	4
   565  0014  30E1               	movlw	low (__pbssBANK1+10)
   566  0015  160A  158A  214C  120A  118A  	fcall	clear_ram0
   567                           
   568                           ; Clear objects allocated to BANK3
   569  001A  1783               	bsf	3,7	;select IRP bank2
   570  001B  3090               	movlw	low __pbssBANK3
   571  001C  0084               	movwf	4
   572  001D  30A4               	movlw	low (__pbssBANK3+20)
   573  001E  160A  158A  214C  120A  118A  	fcall	clear_ram0
   574  0023                     end_of_initialization:	
   575                           ;End of C runtime variable initialization code
   576                           
   577  0023                     __end_of__initialization:
   578  0023  0183               	clrf	3
   579  0024  120A  158A  287B   	ljmp	_main	;jump to C main() function
   580                           
   581                           	psect	bssCOMMON
   582  0078                     __pbssCOMMON:
   583  0078                     _receive:
   584  0078                     	ds	1
   585  0079                     _adcvar1:
   586  0079                     	ds	1
   587                           
   588                           	psect	bssBANK1
   589  00D7                     __pbssBANK1:
   590  00D7                     _Vol2:
   591  00D7                     	ds	4
   592  00DB                     _Vol1:
   593  00DB                     	ds	4
   594  00DF                     _contador:
   595  00DF                     	ds	1
   596  00E0                     _adcvar:
   597  00E0                     	ds	1
   598                           
   599                           	psect	bssBANK3
   600  0190                     __pbssBANK3:
   601  0190                     _Lcdvar:
   602  0190                     	ds	20
   603                           
   604                           	psect	clrtext
   605  194C                     clear_ram0:	
   606                           ;	Called with FSR containing the base address, and
   607                           ;	W with the last address+1
   608                           
   609  194C  0064               	clrwdt	;clear the watchdog before getting into this loop
   610  194D                     clrloop0:
   611  194D  0180               	clrf	0	;clear RAM location pointed to by FSR
   612  194E  0A84               	incf	4,f	;increment pointer
   613  194F  0604               	xorwf	4,w	;XOR with final address
   614  1950  1903               	btfsc	3,2	;have we reached the end yet?
   615  1951  3400               	retlw	0	;all done for this memory range, return
   616  1952  0604               	xorwf	4,w	;XOR again to restore value
   617  1953  294D               	goto	clrloop0	;do the next byte
   618                           
   619                           	psect	cstackBANK1
   620  00A0                     __pcstackBANK1:
   621  00A0                     ?___flsub:
   622  00A0                     ___flsub@a:	
   623                           ; 4 bytes @ 0x0
   624                           
   625                           
   626                           ; 4 bytes @ 0x0
   627  00A0                     	ds	4
   628  00A4                     ___flsub@b:
   629                           
   630                           ; 4 bytes @ 0x4
   631  00A4                     	ds	4
   632  00A8                     ?_sprintf:
   633  00A8                     sprintf@f:	
   634                           ; 2 bytes @ 0x8
   635                           
   636                           
   637                           ; 1 bytes @ 0x8
   638  00A8                     	ds	11
   639  00B3                     ??_sprintf:
   640                           
   641                           ; 1 bytes @ 0x13
   642  00B3                     	ds	5
   643  00B8                     _sprintf$890:
   644                           
   645                           ; 4 bytes @ 0x18
   646  00B8                     	ds	4
   647  00BC                     sprintf@ap:
   648                           
   649                           ; 1 bytes @ 0x1C
   650  00BC                     	ds	1
   651  00BD                     sprintf@flag:
   652                           
   653                           ; 2 bytes @ 0x1D
   654  00BD                     	ds	2
   655  00BF                     sprintf@width:
   656                           
   657                           ; 2 bytes @ 0x1F
   658  00BF                     	ds	2
   659  00C1                     sprintf@tmpval:
   660                           
   661                           ; 4 bytes @ 0x21
   662  00C1                     	ds	4
   663  00C5                     sprintf@val:
   664                           
   665                           ; 4 bytes @ 0x25
   666  00C5                     	ds	4
   667  00C9                     sprintf@eexp:
   668                           
   669                           ; 2 bytes @ 0x29
   670  00C9                     	ds	2
   671  00CB                     sprintf@fval:
   672                           
   673                           ; 4 bytes @ 0x2B
   674  00CB                     	ds	4
   675  00CF                     sprintf@sp:
   676                           
   677                           ; 1 bytes @ 0x2F
   678  00CF                     	ds	1
   679  00D0                     sprintf@prec:
   680                           
   681                           ; 2 bytes @ 0x30
   682  00D0                     	ds	2
   683  00D2                     sprintf@c:
   684                           
   685                           ; 1 bytes @ 0x32
   686  00D2                     	ds	1
   687  00D3                     ??_main:
   688                           
   689                           ; 1 bytes @ 0x33
   690  00D3                     	ds	4
   691                           
   692                           	psect	cstackCOMMON
   693  0070                     __pcstackCOMMON:
   694  0070                     ?_isdigit:
   695  0070                     ?_LCD_Init:	
   696                           ; 1 bit 
   697                           
   698  0070                     ?_LCD_Clear:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_LCD_Port:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_LCD_Cmd:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_Setup:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_ISR:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ??_ISR:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_main:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_LCD_Write_Char:	
   720                           ; 1 bytes @ 0x0
   721                           
   722                           
   723                           ; 1 bytes @ 0x0
   724  0070                     	ds	4
   725  0074                     ??_LCD_Port:
   726  0074                     ??_isdigit:	
   727                           ; 1 bytes @ 0x4
   728                           
   729  0074                     ??__tdiv_to_l_:	
   730                           ; 1 bytes @ 0x4
   731                           
   732  0074                     ??__div_to_l_:	
   733                           ; 1 bytes @ 0x4
   734                           
   735  0074                     ??_Setup:	
   736                           ; 1 bytes @ 0x4
   737                           
   738  0074                     ??___lldiv:	
   739                           ; 1 bytes @ 0x4
   740                           
   741  0074                     ??___fleq:	
   742                           ; 1 bytes @ 0x4
   743                           
   744  0074                     ??___flge:	
   745                           ; 1 bytes @ 0x4
   746                           
   747  0074                     ?__Umul8_16:	
   748                           ; 1 bytes @ 0x4
   749                           
   750  0074                     ?___wmul:	
   751                           ; 2 bytes @ 0x4
   752                           
   753  0074                     ?___awmod:	
   754                           ; 2 bytes @ 0x4
   755                           
   756  0074                     ?___lwmod:	
   757                           ; 2 bytes @ 0x4
   758                           
   759  0074                     ?___flneg:	
   760                           ; 2 bytes @ 0x4
   761                           
   762  0074                     ?___xxtofl:	
   763                           ; 4 bytes @ 0x4
   764                           
   765  0074                     LCD_Port@a:	
   766                           ; 4 bytes @ 0x4
   767                           
   768  0074                     __Umul8_16@multiplicand:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0074                     _isdigit$714:	
   772                           ; 1 bytes @ 0x4
   773                           
   774  0074                     ___wmul@multiplier:	
   775                           ; 1 bytes @ 0x4
   776                           
   777  0074                     ___awmod@divisor:	
   778                           ; 2 bytes @ 0x4
   779                           
   780  0074                     ___lwmod@divisor:	
   781                           ; 2 bytes @ 0x4
   782                           
   783  0074                     ___flneg@f1:	
   784                           ; 2 bytes @ 0x4
   785                           
   786  0074                     ___xxtofl@val:	
   787                           ; 4 bytes @ 0x4
   788                           
   789                           
   790                           ; 4 bytes @ 0x4
   791  0074                     	ds	1
   792  0075                     ??_LCD_Cmd:
   793  0075                     ??_LCD_Write_Char:	
   794                           ; 1 bytes @ 0x5
   795                           
   796  0075                     ??___llmod:	
   797                           ; 1 bytes @ 0x5
   798                           
   799  0075                     isdigit@c:	
   800                           ; 1 bytes @ 0x5
   801                           
   802                           
   803                           ; 1 bytes @ 0x5
   804  0075                     	ds	1
   805  0076                     ??__Umul8_16:
   806  0076                     LCD_Write_Char@a:	
   807                           ; 1 bytes @ 0x6
   808                           
   809  0076                     ___llmod@counter:	
   810                           ; 1 bytes @ 0x6
   811                           
   812  0076                     ___wmul@multiplicand:	
   813                           ; 1 bytes @ 0x6
   814                           
   815  0076                     ___awmod@dividend:	
   816                           ; 2 bytes @ 0x6
   817                           
   818  0076                     ___lwmod@dividend:	
   819                           ; 2 bytes @ 0x6
   820                           
   821                           
   822                           ; 2 bytes @ 0x6
   823  0076                     	ds	1
   824  0077                     LCD_Cmd@a:
   825                           
   826                           ; 1 bytes @ 0x7
   827  0077                     	ds	1
   828  0078                     ??_LCD_Clear:
   829  0078                     ??___wmul:	
   830                           ; 1 bytes @ 0x8
   831                           
   832  0078                     ??___flneg:	
   833                           ; 1 bytes @ 0x8
   834                           
   835  0078                     ??___flsub:	
   836                           ; 1 bytes @ 0x8
   837                           
   838                           
   839                           	psect	cstackBANK0
   840  0020                     __pcstackBANK0:	
   841                           ; 1 bytes @ 0x8
   842                           
   843  0020                     ?___fleq:
   844  0020                     ?___flge:	
   845                           ; 1 bit 
   846                           
   847  0020                     ??_LCD_Init:	
   848                           ; 1 bit 
   849                           
   850  0020                     ?_LCD_Set_Cursor:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     ?_LCD_Write_String:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0020                     ??___awmod:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0020                     ??___lwmod:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0020                     ??___xxtofl:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0020                     ?__tdiv_to_l_:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0020                     ?__div_to_l_:	
   869                           ; 4 bytes @ 0x0
   870                           
   871  0020                     ?___lldiv:	
   872                           ; 4 bytes @ 0x0
   873                           
   874  0020                     LCD_Set_Cursor@y:	
   875                           ; 4 bytes @ 0x0
   876                           
   877  0020                     LCD_Write_String@a:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0020                     ___wmul@product:	
   881                           ; 2 bytes @ 0x0
   882                           
   883  0020                     __Umul8_16@product:	
   884                           ; 2 bytes @ 0x0
   885                           
   886  0020                     ___lldiv@divisor:	
   887                           ; 2 bytes @ 0x0
   888                           
   889  0020                     __div_to_l_@f1:	
   890                           ; 4 bytes @ 0x0
   891                           
   892  0020                     ___fleq@ff1:	
   893                           ; 4 bytes @ 0x0
   894                           
   895  0020                     ___flge@ff1:	
   896                           ; 4 bytes @ 0x0
   897                           
   898  0020                     __tdiv_to_l_@f1:	
   899                           ; 4 bytes @ 0x0
   900                           
   901                           
   902                           ; 4 bytes @ 0x0
   903  0020                     	ds	1
   904  0021                     ??_LCD_Set_Cursor:
   905  0021                     ___awmod@counter:	
   906                           ; 1 bytes @ 0x1
   907                           
   908  0021                     ___lwmod@counter:	
   909                           ; 1 bytes @ 0x1
   910                           
   911                           
   912                           ; 1 bytes @ 0x1
   913  0021                     	ds	1
   914  0022                     ??_LCD_Write_String:
   915  0022                     ?___lwdiv:	
   916                           ; 1 bytes @ 0x2
   917                           
   918  0022                     LCD_Set_Cursor@x:	
   919                           ; 2 bytes @ 0x2
   920                           
   921  0022                     ___awmod@sign:	
   922                           ; 1 bytes @ 0x2
   923                           
   924  0022                     ___lwdiv@divisor:	
   925                           ; 1 bytes @ 0x2
   926                           
   927  0022                     __Umul8_16@word_mpld:	
   928                           ; 2 bytes @ 0x2
   929                           
   930                           
   931                           ; 2 bytes @ 0x2
   932  0022                     	ds	1
   933  0023                     ?___awdiv:
   934  0023                     LCD_Set_Cursor@a:	
   935                           ; 2 bytes @ 0x3
   936                           
   937  0023                     ___awdiv@divisor:	
   938                           ; 1 bytes @ 0x3
   939                           
   940                           
   941                           ; 2 bytes @ 0x3
   942  0023                     	ds	1
   943  0024                     __Umul8_16@multiplier:
   944  0024                     ___xxtofl@sign:	
   945                           ; 1 bytes @ 0x4
   946                           
   947  0024                     ___lwdiv@dividend:	
   948                           ; 1 bytes @ 0x4
   949                           
   950  0024                     ___lldiv@dividend:	
   951                           ; 2 bytes @ 0x4
   952                           
   953  0024                     __div_to_l_@f2:	
   954                           ; 4 bytes @ 0x4
   955                           
   956  0024                     ___fleq@ff2:	
   957                           ; 4 bytes @ 0x4
   958                           
   959  0024                     ___flge@ff2:	
   960                           ; 4 bytes @ 0x4
   961                           
   962  0024                     __tdiv_to_l_@f2:	
   963                           ; 4 bytes @ 0x4
   964                           
   965                           
   966                           ; 4 bytes @ 0x4
   967  0024                     	ds	1
   968  0025                     ___xxtofl@exp:
   969  0025                     LCD_Write_String@i:	
   970                           ; 1 bytes @ 0x5
   971                           
   972  0025                     ___awdiv@dividend:	
   973                           ; 2 bytes @ 0x5
   974                           
   975                           
   976                           ; 2 bytes @ 0x5
   977  0025                     	ds	1
   978  0026                     ??___lwdiv:
   979  0026                     ___xxtofl@arg:	
   980                           ; 1 bytes @ 0x6
   981                           
   982                           
   983                           ; 4 bytes @ 0x6
   984  0026                     	ds	1
   985  0027                     ??___awdiv:
   986  0027                     ___lwdiv@quotient:	
   987                           ; 1 bytes @ 0x7
   988                           
   989                           
   990                           ; 2 bytes @ 0x7
   991  0027                     	ds	1
   992  0028                     ___awdiv@counter:
   993  0028                     ___lldiv@quotient:	
   994                           ; 1 bytes @ 0x8
   995                           
   996  0028                     __div_to_l_@quot:	
   997                           ; 4 bytes @ 0x8
   998                           
   999  0028                     __tdiv_to_l_@quot:	
  1000                           ; 4 bytes @ 0x8
  1001                           
  1002                           
  1003                           ; 4 bytes @ 0x8
  1004  0028                     	ds	1
  1005  0029                     ___awdiv@sign:
  1006  0029                     ___lwdiv@counter:	
  1007                           ; 1 bytes @ 0x9
  1008                           
  1009                           
  1010                           ; 1 bytes @ 0x9
  1011  0029                     	ds	1
  1012  002A                     ___awdiv@quotient:
  1013                           
  1014                           ; 2 bytes @ 0xA
  1015  002A                     	ds	2
  1016  002C                     ?___flmul:
  1017  002C                     ___lldiv@counter:	
  1018                           ; 4 bytes @ 0xC
  1019                           
  1020  002C                     __div_to_l_@cntr:	
  1021                           ; 1 bytes @ 0xC
  1022                           
  1023  002C                     __tdiv_to_l_@cntr:	
  1024                           ; 1 bytes @ 0xC
  1025                           
  1026  002C                     ___flmul@b:	
  1027                           ; 1 bytes @ 0xC
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0xC
  1031  002C                     	ds	1
  1032  002D                     ?___llmod:
  1033  002D                     __div_to_l_@exp1:	
  1034                           ; 4 bytes @ 0xD
  1035                           
  1036  002D                     __tdiv_to_l_@exp1:	
  1037                           ; 1 bytes @ 0xD
  1038                           
  1039  002D                     ___llmod@divisor:	
  1040                           ; 1 bytes @ 0xD
  1041                           
  1042                           
  1043                           ; 4 bytes @ 0xD
  1044  002D                     	ds	3
  1045  0030                     ___flmul@a:
  1046                           
  1047                           ; 4 bytes @ 0x10
  1048  0030                     	ds	1
  1049  0031                     ___llmod@dividend:
  1050                           
  1051                           ; 4 bytes @ 0x11
  1052  0031                     	ds	3
  1053  0034                     ??___flmul:
  1054                           
  1055                           ; 1 bytes @ 0x14
  1056  0034                     	ds	5
  1057  0039                     ___flmul@sign:
  1058                           
  1059                           ; 1 bytes @ 0x19
  1060  0039                     	ds	1
  1061  003A                     ___flmul@grs:
  1062                           
  1063                           ; 4 bytes @ 0x1A
  1064  003A                     	ds	4
  1065  003E                     ___flmul@aexp:
  1066                           
  1067                           ; 1 bytes @ 0x1E
  1068  003E                     	ds	1
  1069  003F                     ___flmul@bexp:
  1070                           
  1071                           ; 1 bytes @ 0x1F
  1072  003F                     	ds	1
  1073  0040                     ___flmul@prod:
  1074                           
  1075                           ; 4 bytes @ 0x20
  1076  0040                     	ds	4
  1077  0044                     ___flmul@temp:
  1078                           
  1079                           ; 2 bytes @ 0x24
  1080  0044                     	ds	2
  1081  0046                     ?_fround:
  1082  0046                     ?_scale:	
  1083                           ; 4 bytes @ 0x26
  1084                           
  1085                           
  1086                           ; 4 bytes @ 0x26
  1087  0046                     	ds	4
  1088  004A                     ??_fround:
  1089  004A                     ??_scale:	
  1090                           ; 1 bytes @ 0x2A
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x2A
  1094  004A                     	ds	7
  1095  0051                     _fround$888:
  1096                           
  1097                           ; 4 bytes @ 0x31
  1098  0051                     	ds	3
  1099  0054                     _scale$889:
  1100                           
  1101                           ; 4 bytes @ 0x34
  1102  0054                     	ds	1
  1103  0055                     _fround$887:
  1104                           
  1105                           ; 4 bytes @ 0x35
  1106  0055                     	ds	3
  1107  0058                     scale@scl:
  1108                           
  1109                           ; 1 bytes @ 0x38
  1110  0058                     	ds	1
  1111  0059                     ?___fltol:
  1112  0059                     fround@prec:	
  1113                           ; 4 bytes @ 0x39
  1114                           
  1115  0059                     ___fltol@f1:	
  1116                           ; 1 bytes @ 0x39
  1117                           
  1118                           
  1119                           ; 4 bytes @ 0x39
  1120  0059                     	ds	1
  1121  005A                     ?___fladd:
  1122  005A                     ___fladd@b:	
  1123                           ; 4 bytes @ 0x3A
  1124                           
  1125                           
  1126                           ; 4 bytes @ 0x3A
  1127  005A                     	ds	3
  1128  005D                     ??___fltol:
  1129                           
  1130                           ; 1 bytes @ 0x3D
  1131  005D                     	ds	1
  1132  005E                     ___fladd@a:
  1133                           
  1134                           ; 4 bytes @ 0x3E
  1135  005E                     	ds	4
  1136  0062                     ??___fladd:
  1137  0062                     ___fltol@sign1:	
  1138                           ; 1 bytes @ 0x42
  1139                           
  1140                           
  1141                           ; 1 bytes @ 0x42
  1142  0062                     	ds	1
  1143  0063                     ___fltol@exp1:
  1144                           
  1145                           ; 1 bytes @ 0x43
  1146  0063                     	ds	7
  1147  006A                     ___fladd@signs:
  1148                           
  1149                           ; 1 bytes @ 0x4A
  1150  006A                     	ds	1
  1151  006B                     ___fladd@aexp:
  1152                           
  1153                           ; 1 bytes @ 0x4B
  1154  006B                     	ds	1
  1155  006C                     ___fladd@bexp:
  1156                           
  1157                           ; 1 bytes @ 0x4C
  1158  006C                     	ds	1
  1159  006D                     ___fladd@grs:
  1160                           
  1161                           ; 1 bytes @ 0x4D
  1162  006D                     	ds	1
  1163                           
  1164                           	psect	maintext
  1165  087B                     __pmaintext:	
  1166 ;;
  1167 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1168 ;;
  1169 ;; *************** function _main *****************
  1170 ;; Defined at:
  1171 ;;		line 122 in file "Master_main.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : B00/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1185 ;;      Params:         0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0
  1187 ;;      Temps:          0       0       4       0       0
  1188 ;;      Totals:         0       0       4       0       0
  1189 ;;Total ram usage:        4 bytes
  1190 ;; Hardware stack levels required when called:    5
  1191 ;; This function calls:
  1192 ;;		_LCD_Clear
  1193 ;;		_LCD_Init
  1194 ;;		_LCD_Set_Cursor
  1195 ;;		_LCD_Write_String
  1196 ;;		_Setup
  1197 ;;		___flmul
  1198 ;;		___xxtofl
  1199 ;;		_sprintf
  1200 ;; This function is called by:
  1201 ;;		Startup code after reset
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _main
  1207  087B                     _main:
  1208  087B                     l4008:	
  1209                           ;incstack = 0
  1210                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1211                           
  1212                           
  1213                           ;Master_main.c: 123:     Setup();
  1214  087B  160A  158A  2187  120A  158A  	fcall	_Setup
  1215                           
  1216                           ;Master_main.c: 124:     LCD_Init();
  1217  0880  160A  158A  2371  120A  158A  	fcall	_LCD_Init
  1218                           
  1219                           ;Master_main.c: 125:     LCD_Clear();
  1220  0885  160A  158A  215F  120A  158A  	fcall	_LCD_Clear
  1221  088A                     l4010:
  1222                           
  1223                           ;Master_main.c: 126:     _delay((unsigned long)((25)*(8000000/4000000.0)));
  1224  088A  300F               	movlw	15
  1225  088B  1683               	bsf	3,5	;RP0=1, select bank1
  1226  088C  1303               	bcf	3,6	;RP1=0, select bank1
  1227  088D  00D3               	movwf	??_main^(0+128)
  1228  088E                     u7067:
  1229  088E  0BD3               	decfsz	??_main^(0+128),f
  1230  088F  288E               	goto	u7067
  1231  0890  2891               	nop2
  1232  0891                     l4012:
  1233                           
  1234                           ;Master_main.c: 127:     ADCON0bits.GO_DONE = 1;
  1235  0891  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0892  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0893  149F               	bsf	31,1	;volatile
  1238  0894                     l4014:
  1239                           
  1240                           ;Master_main.c: 131:         Vol1 = adcvar*(0.0196);
  1241  0894  303C               	movlw	60
  1242  0895  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0896  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0897  00AF               	movwf	___flmul@b+3
  1245  0898  30A0               	movlw	160
  1246  0899  00AE               	movwf	___flmul@b+2
  1247  089A  3090               	movlw	144
  1248  089B  00AD               	movwf	___flmul@b+1
  1249  089C  302E               	movlw	46
  1250  089D  00AC               	movwf	___flmul@b
  1251  089E  1683               	bsf	3,5	;RP0=1, select bank1
  1252  089F  1303               	bcf	3,6	;RP1=0, select bank1
  1253  08A0  0860               	movf	_adcvar^(0+128),w
  1254  08A1  00D3               	movwf	??_main^(0+128)
  1255  08A2  01D4               	clrf	(??_main^(0+128)+1)
  1256  08A3  01D5               	clrf	(??_main^(0+128)+2)
  1257  08A4  01D6               	clrf	(??_main^(0+128)+3)
  1258  08A5  0856               	movf	(??_main+3)^(0+128),w
  1259  08A6  00F7               	movwf	___xxtofl@val+3
  1260  08A7  0855               	movf	(??_main+2)^(0+128),w
  1261  08A8  00F6               	movwf	___xxtofl@val+2
  1262  08A9  0854               	movf	(??_main+1)^(0+128),w
  1263  08AA  00F5               	movwf	___xxtofl@val+1
  1264  08AB  0853               	movf	??_main^(0+128),w
  1265  08AC  00F4               	movwf	___xxtofl@val
  1266  08AD  3001               	movlw	1
  1267  08AE  160A  158A  25C9  120A  158A  	fcall	___xxtofl
  1268  08B3  0877               	movf	?___xxtofl+3,w
  1269  08B4  1283               	bcf	3,5	;RP0=0, select bank0
  1270  08B5  1303               	bcf	3,6	;RP1=0, select bank0
  1271  08B6  00B3               	movwf	___flmul@a+3
  1272  08B7  0876               	movf	?___xxtofl+2,w
  1273  08B8  00B2               	movwf	___flmul@a+2
  1274  08B9  0875               	movf	?___xxtofl+1,w
  1275  08BA  00B1               	movwf	___flmul@a+1
  1276  08BB  0874               	movf	?___xxtofl,w
  1277  08BC  00B0               	movwf	___flmul@a
  1278  08BD  120A  158A  213C  120A  158A  	fcall	___flmul
  1279  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  1280  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  1281  08C4  082F               	movf	?___flmul+3,w
  1282  08C5  1683               	bsf	3,5	;RP0=1, select bank1
  1283  08C6  1303               	bcf	3,6	;RP1=0, select bank1
  1284  08C7  00DE               	movwf	(_Vol1+3)^(0+128)
  1285  08C8  1283               	bcf	3,5	;RP0=0, select bank0
  1286  08C9  1303               	bcf	3,6	;RP1=0, select bank0
  1287  08CA  082E               	movf	?___flmul+2,w
  1288  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  1289  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  1290  08CD  00DD               	movwf	(_Vol1+2)^(0+128)
  1291  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  1292  08CF  1303               	bcf	3,6	;RP1=0, select bank0
  1293  08D0  082D               	movf	?___flmul+1,w
  1294  08D1  1683               	bsf	3,5	;RP0=1, select bank1
  1295  08D2  1303               	bcf	3,6	;RP1=0, select bank1
  1296  08D3  00DC               	movwf	(_Vol1+1)^(0+128)
  1297  08D4  1283               	bcf	3,5	;RP0=0, select bank0
  1298  08D5  1303               	bcf	3,6	;RP1=0, select bank0
  1299  08D6  082C               	movf	?___flmul,w
  1300  08D7  1683               	bsf	3,5	;RP0=1, select bank1
  1301  08D8  1303               	bcf	3,6	;RP1=0, select bank1
  1302  08D9  00DB               	movwf	_Vol1^(0+128)
  1303  08DA                     l4016:
  1304                           
  1305                           ;Master_main.c: 132:         sprintf(Lcdvar, "%1.2f  %1.2f %3d", Vol1,Vol2,contador);
  1306  08DA  30A4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1307  08DB  00D3               	movwf	??_main^(0+128)
  1308  08DC  0853               	movf	??_main^(0+128),w
  1309  08DD  00A8               	movwf	sprintf@f^(0+128)
  1310  08DE  085E               	movf	(_Vol1+3)^(0+128),w
  1311  08DF  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1312  08E0  085D               	movf	(_Vol1+2)^(0+128),w
  1313  08E1  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1314  08E2  085C               	movf	(_Vol1+1)^(0+128),w
  1315  08E3  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1316  08E4  085B               	movf	_Vol1^(0+128),w
  1317  08E5  00A9               	movwf	(?_sprintf^(0+128)+1)
  1318  08E6  3000               	movlw	0
  1319  08E7  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1320  08E8  3000               	movlw	0
  1321  08E9  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1322  08EA  3000               	movlw	0
  1323  08EB  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1324  08EC  3000               	movlw	0
  1325  08ED  00AD               	movwf	(?_sprintf^(0+128)+5)
  1326  08EE  085F               	movf	_contador^(0+128),w
  1327  08EF  00D4               	movwf	(??_main+1)^(0+128)
  1328  08F0  01D5               	clrf	((??_main+1)^(0+128)+1)
  1329  08F1  0854               	movf	(??_main+1)^(0+128),w
  1330  08F2  00B1               	movwf	(?_sprintf^(0+128)+9)
  1331  08F3  0855               	movf	(??_main+2)^(0+128),w
  1332  08F4  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1333  08F5  3090               	movlw	(low (_Lcdvar| (0+256)))& (0+255)
  1334  08F6  160A  118A  24F6  120A  158A  	fcall	_sprintf
  1335  08FB                     l4018:
  1336                           
  1337                           ;Master_main.c: 134:         LCD_Clear();
  1338  08FB  160A  158A  215F  120A  158A  	fcall	_LCD_Clear
  1339  0900                     l4020:
  1340                           
  1341                           ;Master_main.c: 135:         LCD_Set_Cursor(1,1);
  1342  0900  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0901  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0902  01A0               	clrf	LCD_Set_Cursor@y
  1345  0903  0AA0               	incf	LCD_Set_Cursor@y,f
  1346  0904  3001               	movlw	1
  1347  0905  160A  158A  21CB  120A  158A  	fcall	_LCD_Set_Cursor
  1348  090A                     l4022:
  1349                           
  1350                           ;Master_main.c: 136:         LCD_Write_String("V1   V2       CONT");
  1351  090A  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1352  090B  1283               	bcf	3,5	;RP0=0, select bank0
  1353  090C  1303               	bcf	3,6	;RP1=0, select bank0
  1354  090D  00A0               	movwf	LCD_Write_String@a
  1355  090E  3080               	movlw	128
  1356  090F  00A1               	movwf	LCD_Write_String@a+1
  1357  0910  160A  158A  2245  120A  158A  	fcall	_LCD_Write_String
  1358  0915                     l4024:
  1359                           
  1360                           ;Master_main.c: 137:         LCD_Set_Cursor(2,1);
  1361  0915  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0916  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0917  01A0               	clrf	LCD_Set_Cursor@y
  1364  0918  0AA0               	incf	LCD_Set_Cursor@y,f
  1365  0919  3002               	movlw	2
  1366  091A  160A  158A  21CB  120A  158A  	fcall	_LCD_Set_Cursor
  1367  091F                     l4026:
  1368                           
  1369                           ;Master_main.c: 138:         LCD_Write_String(Lcdvar);
  1370  091F  3090               	movlw	(low (_Lcdvar| (0+256)))& (0+255)
  1371  0920  1283               	bcf	3,5	;RP0=0, select bank0
  1372  0921  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0922  00A0               	movwf	LCD_Write_String@a
  1374  0923  3001               	movlw	1
  1375  0924  00A1               	movwf	LCD_Write_String@a+1
  1376  0925  160A  158A  2245  120A  158A  	fcall	_LCD_Write_String
  1377  092A                     l4028:
  1378                           
  1379                           ;Master_main.c: 140:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1380  092A  3006               	movlw	6
  1381  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1382  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1383  092D  00D5               	movwf	(??_main^(0+128)+2)
  1384  092E  3013               	movlw	19
  1385  092F  00D4               	movwf	(??_main^(0+128)+1)
  1386  0930  30AD               	movlw	173
  1387  0931  00D3               	movwf	??_main^(0+128)
  1388  0932                     u7077:
  1389  0932  0BD3               	decfsz	??_main^(0+128),f
  1390  0933  2932               	goto	u7077
  1391  0934  0BD4               	decfsz	(??_main^(0+128)+1),f
  1392  0935  2932               	goto	u7077
  1393  0936  0BD5               	decfsz	(??_main^(0+128)+2),f
  1394  0937  2932               	goto	u7077
  1395  0938  2894               	goto	l4014
  1396  0939  120A  118A  280C   	ljmp	start
  1397  093C                     __end_of_main:
  1398                           
  1399                           	psect	text1
  1400  14F6                     __ptext1:	
  1401 ;; *************** function _sprintf *****************
  1402 ;; Defined at:
  1403 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  sp              1    wreg     PTR unsigned char 
  1406 ;;		 -> Lcdvar(20), 
  1407 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1408 ;;		 -> STR_1(17), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  sp              1   47[BANK1 ] PTR unsigned char 
  1411 ;;		 -> Lcdvar(20), 
  1412 ;;  fval            4   43[BANK1 ] PTR unsigned char 
  1413 ;;  val             4   37[BANK1 ] unsigned long 
  1414 ;;  tmpval          4   33[BANK1 ] struct .
  1415 ;;  prec            2   48[BANK1 ] int 
  1416 ;;  eexp            2   41[BANK1 ] int 
  1417 ;;  width           2   31[BANK1 ] int 
  1418 ;;  flag            2   29[BANK1 ] unsigned short 
  1419 ;;  cp              2    0        PTR const unsigned char 
  1420 ;;  len             2    0        unsigned int 
  1421 ;;  c               1   50[BANK1 ] unsigned char 
  1422 ;;  ap              1   28[BANK1 ] PTR void [1]
  1423 ;;		 -> ?_sprintf(2), 
  1424 ;;  d               1    0        unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  2    8[BANK1 ] int 
  1427 ;; Registers used:
  1428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0      11       0       0
  1435 ;;      Locals:         0       0      27       0       0
  1436 ;;      Temps:          0       0       5       0       0
  1437 ;;      Totals:         0       0      43       0       0
  1438 ;;Total ram usage:       43 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    4
  1441 ;; This function calls:
  1442 ;;		___awdiv
  1443 ;;		___fladd
  1444 ;;		___fleq
  1445 ;;		___flge
  1446 ;;		___flmul
  1447 ;;		___flneg
  1448 ;;		___flsub
  1449 ;;		___fltol
  1450 ;;		___lldiv
  1451 ;;		___llmod
  1452 ;;		___wmul
  1453 ;;		___xxtofl
  1454 ;;		__div_to_l_
  1455 ;;		__tdiv_to_l_
  1456 ;;		_fround
  1457 ;;		_isdigit
  1458 ;;		_scale
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _sprintf
  1466  14F6                     _sprintf:
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1470                           ;sprintf@sp stored from wreg
  1471  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  1472  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  1473  14F8  00CF               	movwf	sprintf@sp^(0+128)
  1474  14F9                     l3694:
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1477  14F9  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1478  14FA  00B3               	movwf	??_sprintf^(0+128)
  1479  14FB  0833               	movf	??_sprintf^(0+128),w
  1480  14FC  00BC               	movwf	sprintf@ap^(0+128)
  1481  14FD                     L1:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1484  14FD  120A  118A  2E90   	goto	l3976
  1485  1500                     l3696:
  1486                           
  1487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1488  1500  3025               	movlw	37
  1489  1501  0652               	xorwf	sprintf@c^(0+128),w
  1490  1502  1903               	btfsc	3,2
  1491  1503  2D05               	goto	u6481
  1492  1504  2D06               	goto	u6480
  1493  1505                     u6481:
  1494  1505  2D12               	goto	l3702
  1495  1506                     u6480:
  1496  1506                     l3698:
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1499  1506  0852               	movf	sprintf@c^(0+128),w
  1500  1507  00B3               	movwf	??_sprintf^(0+128)
  1501  1508  084F               	movf	sprintf@sp^(0+128),w
  1502  1509  0084               	movwf	4
  1503  150A  0833               	movf	??_sprintf^(0+128),w
  1504  150B  1783               	bsf	3,7	;select IRP bank2
  1505  150C  0080               	movwf	0
  1506  150D                     l3700:
  1507  150D  3001               	movlw	1
  1508  150E  00B3               	movwf	??_sprintf^(0+128)
  1509  150F  0833               	movf	??_sprintf^(0+128),w
  1510  1510  07CF               	addwf	sprintf@sp^(0+128),f
  1511                           
  1512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1513  1511  2CFD               	goto	L1
  1514  1512                     l3702:
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1517  1512  01BF               	clrf	sprintf@width^(0+128)
  1518  1513  01C0               	clrf	(sprintf@width+1)^(0+128)
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1521  1514  01BD               	clrf	sprintf@flag^(0+128)
  1522  1515  01BE               	clrf	(sprintf@flag+1)^(0+128)
  1523  1516                     l3704:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1526  1516  0828               	movf	sprintf@f^(0+128),w
  1527  1517  0084               	movwf	4
  1528  1518  120A  118A  270A  160A  118A  	fcall	stringdir
  1529  151D  120A  158A  2000  160A  118A  	fcall	_isdigit
  1530  1522  1C03               	btfss	3,0
  1531  1523  2D25               	goto	u6491
  1532  1524  2D26               	goto	u6490
  1533  1525                     u6491:
  1534  1525  2D66               	goto	l3716
  1535  1526                     u6490:
  1536  1526                     l3706:
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1539  1526  1683               	bsf	3,5	;RP0=1, select bank1
  1540  1527  1303               	bcf	3,6	;RP1=0, select bank1
  1541  1528  01BF               	clrf	sprintf@width^(0+128)
  1542  1529  01C0               	clrf	(sprintf@width+1)^(0+128)
  1543  152A                     l3708:
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1546  152A  300A               	movlw	10
  1547  152B  00F4               	movwf	___wmul@multiplier
  1548  152C  3000               	movlw	0
  1549  152D  00F5               	movwf	___wmul@multiplier+1
  1550  152E  1683               	bsf	3,5	;RP0=1, select bank1
  1551  152F  1303               	bcf	3,6	;RP1=0, select bank1
  1552  1530  0840               	movf	(sprintf@width+1)^(0+128),w
  1553  1531  00F7               	movwf	___wmul@multiplicand+1
  1554  1532  083F               	movf	sprintf@width^(0+128),w
  1555  1533  00F6               	movwf	___wmul@multiplicand
  1556  1534  160A  158A  221A  160A  118A  	fcall	___wmul
  1557  1539  0875               	movf	?___wmul+1,w
  1558  153A  1683               	bsf	3,5	;RP0=1, select bank1
  1559  153B  1303               	bcf	3,6	;RP1=0, select bank1
  1560  153C  00C0               	movwf	(sprintf@width+1)^(0+128)
  1561  153D  0874               	movf	?___wmul,w
  1562  153E  00BF               	movwf	sprintf@width^(0+128)
  1563  153F                     l3710:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1566  153F  0828               	movf	sprintf@f^(0+128),w
  1567  1540  0084               	movwf	4
  1568  1541  120A  118A  270A  160A  118A  	fcall	stringdir
  1569  1546  3ED0               	addlw	208
  1570  1547  00B3               	movwf	??_sprintf^(0+128)
  1571  1548  30FF               	movlw	255
  1572  1549  1803               	skipnc
  1573  154A  3000               	movlw	0
  1574  154B  00B4               	movwf	(??_sprintf^(0+128)+1)
  1575  154C  0833               	movf	??_sprintf^(0+128),w
  1576  154D  07BF               	addwf	sprintf@width^(0+128),f
  1577  154E  1803               	skipnc
  1578  154F  0AC0               	incf	(sprintf@width+1)^(0+128),f
  1579  1550  0834               	movf	(??_sprintf+1)^(0+128),w
  1580  1551  07C0               	addwf	(sprintf@width+1)^(0+128),f
  1581  1552                     l3712:
  1582  1552  3001               	movlw	1
  1583  1553  00B3               	movwf	??_sprintf^(0+128)
  1584  1554  0833               	movf	??_sprintf^(0+128),w
  1585  1555  07A8               	addwf	sprintf@f^(0+128),f
  1586  1556                     l3714:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1589  1556  0828               	movf	sprintf@f^(0+128),w
  1590  1557  0084               	movwf	4
  1591  1558  120A  118A  270A  160A  118A  	fcall	stringdir
  1592  155D  120A  158A  2000  160A  118A  	fcall	_isdigit
  1593  1562  1803               	btfsc	3,0
  1594  1563  2D65               	goto	u6501
  1595  1564  2D66               	goto	u6500
  1596  1565                     u6501:
  1597  1565  2D2A               	goto	l3708
  1598  1566                     u6500:
  1599  1566                     l3716:
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1602  1566  1683               	bsf	3,5	;RP0=1, select bank1
  1603  1567  1303               	bcf	3,6	;RP1=0, select bank1
  1604  1568  0828               	movf	sprintf@f^(0+128),w
  1605  1569  0084               	movwf	4
  1606  156A  120A  118A  270A  160A  118A  	fcall	stringdir
  1607  156F  3A2E               	xorlw	46
  1608  1570  1D03               	skipz
  1609  1571  2D73               	goto	u6511
  1610  1572  2D74               	goto	u6510
  1611  1573                     u6511:
  1612  1573  2DB9               	goto	l3732
  1613  1574                     u6510:
  1614  1574                     l3718:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1617  1574  173E               	bsf	(sprintf@flag^(0+128)+1),6
  1618  1575                     l3720:
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1621  1575  3001               	movlw	1
  1622  1576  00B3               	movwf	??_sprintf^(0+128)
  1623  1577  0833               	movf	??_sprintf^(0+128),w
  1624  1578  07A8               	addwf	sprintf@f^(0+128),f
  1625  1579                     l3722:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1628  1579  01D0               	clrf	sprintf@prec^(0+128)
  1629  157A  01D1               	clrf	(sprintf@prec+1)^(0+128)
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1632  157B  2DA8               	goto	l3730
  1633  157C                     l3724:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1636  157C  300A               	movlw	10
  1637  157D  00F4               	movwf	___wmul@multiplier
  1638  157E  3000               	movlw	0
  1639  157F  00F5               	movwf	___wmul@multiplier+1
  1640  1580  1683               	bsf	3,5	;RP0=1, select bank1
  1641  1581  1303               	bcf	3,6	;RP1=0, select bank1
  1642  1582  0851               	movf	(sprintf@prec+1)^(0+128),w
  1643  1583  00F7               	movwf	___wmul@multiplicand+1
  1644  1584  0850               	movf	sprintf@prec^(0+128),w
  1645  1585  00F6               	movwf	___wmul@multiplicand
  1646  1586  160A  158A  221A  160A  118A  	fcall	___wmul
  1647  158B  0875               	movf	?___wmul+1,w
  1648  158C  1683               	bsf	3,5	;RP0=1, select bank1
  1649  158D  1303               	bcf	3,6	;RP1=0, select bank1
  1650  158E  00D1               	movwf	(sprintf@prec+1)^(0+128)
  1651  158F  0874               	movf	?___wmul,w
  1652  1590  00D0               	movwf	sprintf@prec^(0+128)
  1653  1591                     l3726:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1656  1591  0828               	movf	sprintf@f^(0+128),w
  1657  1592  0084               	movwf	4
  1658  1593  120A  118A  270A  160A  118A  	fcall	stringdir
  1659  1598  3ED0               	addlw	208
  1660  1599  00B3               	movwf	??_sprintf^(0+128)
  1661  159A  30FF               	movlw	255
  1662  159B  1803               	skipnc
  1663  159C  3000               	movlw	0
  1664  159D  00B4               	movwf	(??_sprintf^(0+128)+1)
  1665  159E  0833               	movf	??_sprintf^(0+128),w
  1666  159F  07D0               	addwf	sprintf@prec^(0+128),f
  1667  15A0  1803               	skipnc
  1668  15A1  0AD1               	incf	(sprintf@prec+1)^(0+128),f
  1669  15A2  0834               	movf	(??_sprintf+1)^(0+128),w
  1670  15A3  07D1               	addwf	(sprintf@prec+1)^(0+128),f
  1671  15A4                     l3728:
  1672  15A4  3001               	movlw	1
  1673  15A5  00B3               	movwf	??_sprintf^(0+128)
  1674  15A6  0833               	movf	??_sprintf^(0+128),w
  1675  15A7  07A8               	addwf	sprintf@f^(0+128),f
  1676  15A8                     l3730:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1679  15A8  0828               	movf	sprintf@f^(0+128),w
  1680  15A9  0084               	movwf	4
  1681  15AA  120A  118A  270A  160A  118A  	fcall	stringdir
  1682  15AF  120A  158A  2000  160A  118A  	fcall	_isdigit
  1683  15B4  1803               	btfsc	3,0
  1684  15B5  2DB7               	goto	u6521
  1685  15B6  2DB8               	goto	u6520
  1686  15B7                     u6521:
  1687  15B7  2D7C               	goto	l3724
  1688  15B8                     u6520:
  1689  15B8  2DBF               	goto	l3738
  1690  15B9                     l3732:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1693  15B9  01D0               	clrf	sprintf@prec^(0+128)
  1694  15BA  01D1               	clrf	(sprintf@prec+1)^(0+128)
  1695  15BB                     l3734:
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1698  15BB  163E               	bsf	(sprintf@flag^(0+128)+1),4
  1699  15BC  2DBF               	goto	l3738
  1700  15BD                     l247:	
  1701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1702                           
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1705  15BD  153E               	bsf	(sprintf@flag^(0+128)+1),2
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1708  15BE  2DE1               	goto	l3740
  1709  15BF                     l3738:
  1710  15BF  3001               	movlw	1
  1711  15C0  1683               	bsf	3,5	;RP0=1, select bank1
  1712  15C1  1303               	bcf	3,6	;RP1=0, select bank1
  1713  15C2  07A8               	addwf	sprintf@f^(0+128),f
  1714  15C3  30FF               	movlw	-1
  1715  15C4  0728               	addwf	sprintf@f^(0+128),w
  1716  15C5  0084               	movwf	4
  1717  15C6  120A  118A  270A  160A  118A  	fcall	stringdir
  1718  15CB  00D2               	movwf	sprintf@c^(0+128)
  1719  15CC  00B3               	movwf	??_sprintf^(0+128)
  1720  15CD  01B4               	clrf	(??_sprintf^(0+128)+1)
  1721                           
  1722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1723                           ; Switch size 1, requested type "simple"
  1724                           ; Number of cases is 1, Range of values is 0 to 0
  1725                           ; switch strategies available:
  1726                           ; Name         Instructions Cycles
  1727                           ; simple_byte            4     3 (average)
  1728                           ; direct_byte           11     8 (fixed)
  1729                           ; jumptable            260     6 (fixed)
  1730                           ;	Chosen strategy is simple_byte
  1731  15CE  0834               	movf	(??_sprintf+1)^(0+128),w
  1732  15CF  3A00               	xorlw	0	; case 0
  1733  15D0  1903               	skipnz
  1734  15D1  2DD3               	goto	l4060
  1735  15D2  2CFD               	goto	L1
  1736  15D3                     l4060:
  1737                           
  1738                           ; Switch size 1, requested type "simple"
  1739                           ; Number of cases is 4, Range of values is 0 to 105
  1740                           ; switch strategies available:
  1741                           ; Name         Instructions Cycles
  1742                           ; simple_byte           13     7 (average)
  1743                           ; jumptable            260     6 (fixed)
  1744                           ;	Chosen strategy is simple_byte
  1745  15D3  0833               	movf	??_sprintf^(0+128),w
  1746  15D4  3A00               	xorlw	0	; case 0
  1747  15D5  1903               	skipnz
  1748  15D6  2FFD               	goto	L3
  1749  15D7  3A64               	xorlw	100	; case 100
  1750  15D8  1903               	skipnz
  1751  15D9  2DE1               	goto	l3740
  1752  15DA  3A02               	xorlw	2	; case 102
  1753  15DB  1903               	skipnz
  1754  15DC  2DBD               	goto	l247
  1755  15DD  3A0F               	xorlw	15	; case 105
  1756  15DE  1903               	skipnz
  1757  15DF  2DE1               	goto	l3740
  1758  15E0  2CFD               	goto	L1
  1759  15E1                     l3740:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1762  15E1  3000               	movlw	0
  1763  15E2  053D               	andwf	sprintf@flag^(0+128),w
  1764  15E3  00B3               	movwf	??_sprintf^(0+128)
  1765  15E4  3007               	movlw	7
  1766  15E5  053E               	andwf	(sprintf@flag+1)^(0+128),w
  1767  15E6  00B4               	movwf	(??_sprintf+1)^(0+128)
  1768  15E7  0833               	movf	??_sprintf^(0+128),w
  1769  15E8  0434               	iorwf	(??_sprintf^(0+128)+1),w
  1770  15E9  1903               	btfsc	3,2
  1771  15EA  2DEC               	goto	u6531
  1772  15EB  2DEF               	goto	u6530
  1773  15EC                     u6531:
  1774  15EC  120A  118A  2CE1   	goto	l3898
  1775  15EF                     u6530:
  1776  15EF                     l3742:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1779  15EF  1E3E               	btfss	(sprintf@flag+1)^(0+128),4
  1780  15F0  2DF2               	goto	u6541
  1781  15F1  2DF3               	goto	u6540
  1782  15F2                     u6541:
  1783  15F2  2DF7               	goto	l3746
  1784  15F3                     u6540:
  1785  15F3                     l3744:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1788  15F3  3006               	movlw	6
  1789  15F4  00D0               	movwf	sprintf@prec^(0+128)
  1790  15F5  3000               	movlw	0
  1791  15F6  00D1               	movwf	(sprintf@prec^(0+128)+1)
  1792  15F7                     l3746:
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1795  15F7  083C               	movf	sprintf@ap^(0+128),w
  1796  15F8  0084               	movwf	4
  1797  15F9  1383               	bcf	3,7	;select IRP bank0
  1798  15FA  0800               	movf	0,w
  1799  15FB  00CB               	movwf	sprintf@fval^(0+128)
  1800  15FC  0A84               	incf	4,f
  1801  15FD  0800               	movf	0,w
  1802  15FE  00CC               	movwf	(sprintf@fval+1)^(0+128)
  1803  15FF  0A84               	incf	4,f
  1804  1600  0800               	movf	0,w
  1805  1601  00CD               	movwf	(sprintf@fval+2)^(0+128)
  1806  1602  0A84               	incf	4,f
  1807  1603  0800               	movf	0,w
  1808  1604  00CE               	movwf	(sprintf@fval+3)^(0+128)
  1809  1605                     l3748:
  1810  1605  3004               	movlw	4
  1811  1606  00B3               	movwf	??_sprintf^(0+128)
  1812  1607  0833               	movf	??_sprintf^(0+128),w
  1813  1608  07BC               	addwf	sprintf@ap^(0+128),f
  1814  1609                     l3750:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1817  1609  084E               	movf	(sprintf@fval+3)^(0+128),w
  1818  160A  1283               	bcf	3,5	;RP0=0, select bank0
  1819  160B  1303               	bcf	3,6	;RP1=0, select bank0
  1820  160C  00A3               	movwf	___flge@ff1+3
  1821  160D  1683               	bsf	3,5	;RP0=1, select bank1
  1822  160E  1303               	bcf	3,6	;RP1=0, select bank1
  1823  160F  084D               	movf	(sprintf@fval+2)^(0+128),w
  1824  1610  1283               	bcf	3,5	;RP0=0, select bank0
  1825  1611  1303               	bcf	3,6	;RP1=0, select bank0
  1826  1612  00A2               	movwf	___flge@ff1+2
  1827  1613  1683               	bsf	3,5	;RP0=1, select bank1
  1828  1614  1303               	bcf	3,6	;RP1=0, select bank1
  1829  1615  084C               	movf	(sprintf@fval+1)^(0+128),w
  1830  1616  1283               	bcf	3,5	;RP0=0, select bank0
  1831  1617  1303               	bcf	3,6	;RP1=0, select bank0
  1832  1618  00A1               	movwf	___flge@ff1+1
  1833  1619  1683               	bsf	3,5	;RP0=1, select bank1
  1834  161A  1303               	bcf	3,6	;RP1=0, select bank1
  1835  161B  084B               	movf	sprintf@fval^(0+128),w
  1836  161C  1283               	bcf	3,5	;RP0=0, select bank0
  1837  161D  1303               	bcf	3,6	;RP1=0, select bank0
  1838  161E  00A0               	movwf	___flge@ff1
  1839  161F  3000               	movlw	0
  1840  1620  00A7               	movwf	___flge@ff2+3
  1841  1621  3000               	movlw	0
  1842  1622  00A6               	movwf	___flge@ff2+2
  1843  1623  3000               	movlw	0
  1844  1624  00A5               	movwf	___flge@ff2+1
  1845  1625  3000               	movlw	0
  1846  1626  00A4               	movwf	___flge@ff2
  1847  1627  160A  158A  2525  160A  118A  	fcall	___flge
  1848  162C  1803               	btfsc	3,0
  1849  162D  2E2F               	goto	u6551
  1850  162E  2E30               	goto	u6550
  1851  162F                     u6551:
  1852  162F  2E4D               	goto	l3756
  1853  1630                     u6550:
  1854  1630                     l3752:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1857  1630  1683               	bsf	3,5	;RP0=1, select bank1
  1858  1631  1303               	bcf	3,6	;RP1=0, select bank1
  1859  1632  084E               	movf	(sprintf@fval+3)^(0+128),w
  1860  1633  00F7               	movwf	___flneg@f1+3
  1861  1634  084D               	movf	(sprintf@fval+2)^(0+128),w
  1862  1635  00F6               	movwf	___flneg@f1+2
  1863  1636  084C               	movf	(sprintf@fval+1)^(0+128),w
  1864  1637  00F5               	movwf	___flneg@f1+1
  1865  1638  084B               	movf	sprintf@fval^(0+128),w
  1866  1639  00F4               	movwf	___flneg@f1
  1867  163A  160A  158A  2154  160A  118A  	fcall	___flneg
  1868  163F  0877               	movf	?___flneg+3,w
  1869  1640  1683               	bsf	3,5	;RP0=1, select bank1
  1870  1641  1303               	bcf	3,6	;RP1=0, select bank1
  1871  1642  00CE               	movwf	(sprintf@fval+3)^(0+128)
  1872  1643  0876               	movf	?___flneg+2,w
  1873  1644  00CD               	movwf	(sprintf@fval+2)^(0+128)
  1874  1645  0875               	movf	?___flneg+1,w
  1875  1646  00CC               	movwf	(sprintf@fval+1)^(0+128)
  1876  1647  0874               	movf	?___flneg,w
  1877  1648  00CB               	movwf	sprintf@fval^(0+128)
  1878  1649                     l3754:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1881  1649  3003               	movlw	3
  1882  164A  04BD               	iorwf	sprintf@flag^(0+128),f
  1883  164B  3000               	movlw	0
  1884  164C  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
  1885  164D                     l3756:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1888  164D  1683               	bsf	3,5	;RP0=1, select bank1
  1889  164E  1303               	bcf	3,6	;RP1=0, select bank1
  1890  164F  01C9               	clrf	sprintf@eexp^(0+128)
  1891  1650  01CA               	clrf	(sprintf@eexp+1)^(0+128)
  1892  1651                     l3758:
  1893                           
  1894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1895  1651  084E               	movf	(sprintf@fval+3)^(0+128),w
  1896  1652  1283               	bcf	3,5	;RP0=0, select bank0
  1897  1653  1303               	bcf	3,6	;RP1=0, select bank0
  1898  1654  00A3               	movwf	___fleq@ff1+3
  1899  1655  1683               	bsf	3,5	;RP0=1, select bank1
  1900  1656  1303               	bcf	3,6	;RP1=0, select bank1
  1901  1657  084D               	movf	(sprintf@fval+2)^(0+128),w
  1902  1658  1283               	bcf	3,5	;RP0=0, select bank0
  1903  1659  1303               	bcf	3,6	;RP1=0, select bank0
  1904  165A  00A2               	movwf	___fleq@ff1+2
  1905  165B  1683               	bsf	3,5	;RP0=1, select bank1
  1906  165C  1303               	bcf	3,6	;RP1=0, select bank1
  1907  165D  084C               	movf	(sprintf@fval+1)^(0+128),w
  1908  165E  1283               	bcf	3,5	;RP0=0, select bank0
  1909  165F  1303               	bcf	3,6	;RP1=0, select bank0
  1910  1660  00A1               	movwf	___fleq@ff1+1
  1911  1661  1683               	bsf	3,5	;RP0=1, select bank1
  1912  1662  1303               	bcf	3,6	;RP1=0, select bank1
  1913  1663  084B               	movf	sprintf@fval^(0+128),w
  1914  1664  1283               	bcf	3,5	;RP0=0, select bank0
  1915  1665  1303               	bcf	3,6	;RP1=0, select bank0
  1916  1666  00A0               	movwf	___fleq@ff1
  1917  1667  3000               	movlw	0
  1918  1668  00A7               	movwf	___fleq@ff2+3
  1919  1669  3000               	movlw	0
  1920  166A  00A6               	movwf	___fleq@ff2+2
  1921  166B  3000               	movlw	0
  1922  166C  00A5               	movwf	___fleq@ff2+1
  1923  166D  3000               	movlw	0
  1924  166E  00A4               	movwf	___fleq@ff2
  1925  166F  160A  158A  22D1  160A  118A  	fcall	___fleq
  1926  1674  1803               	btfsc	3,0
  1927  1675  2E77               	goto	u6561
  1928  1676  2E78               	goto	u6560
  1929  1677                     u6561:
  1930  1677  2F94               	goto	l3784
  1931  1678                     u6560:
  1932  1678                     l3760:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1935  1678  1003               	clrc
  1936  1679  1683               	bsf	3,5	;RP0=1, select bank1
  1937  167A  1303               	bcf	3,6	;RP1=0, select bank1
  1938  167B  0D4D               	rlf	(sprintf@fval+2)^(0+128),w
  1939  167C  0D4E               	rlf	(sprintf@fval+3)^(0+128),w
  1940  167D  3E82               	addlw	130
  1941  167E  00C9               	movwf	sprintf@eexp^(0+128)
  1942  167F  30FF               	movlw	255
  1943  1680  1803               	skipnc
  1944  1681  3000               	movlw	0
  1945  1682  00CA               	movwf	(sprintf@eexp^(0+128)+1)
  1946  1683                     l3762:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1949  1683  30FF               	movlw	255
  1950  1684  07C9               	addwf	sprintf@eexp^(0+128),f
  1951  1685  1803               	skipnc
  1952  1686  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  1953  1687  30FF               	movlw	255
  1954  1688  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  1955  1689                     l3764:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1958  1689  3003               	movlw	3
  1959  168A  00F4               	movwf	___wmul@multiplier
  1960  168B  3000               	movlw	0
  1961  168C  00F5               	movwf	___wmul@multiplier+1
  1962  168D  084A               	movf	(sprintf@eexp+1)^(0+128),w
  1963  168E  00F7               	movwf	___wmul@multiplicand+1
  1964  168F  0849               	movf	sprintf@eexp^(0+128),w
  1965  1690  00F6               	movwf	___wmul@multiplicand
  1966  1691  160A  158A  221A  160A  118A  	fcall	___wmul
  1967  1696  0875               	movf	?___wmul+1,w
  1968  1697  1683               	bsf	3,5	;RP0=1, select bank1
  1969  1698  1303               	bcf	3,6	;RP1=0, select bank1
  1970  1699  00CA               	movwf	(sprintf@eexp+1)^(0+128)
  1971  169A  0874               	movf	?___wmul,w
  1972  169B  00C9               	movwf	sprintf@eexp^(0+128)
  1973  169C                     l3766:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1976  169C  300A               	movlw	10
  1977  169D  1283               	bcf	3,5	;RP0=0, select bank0
  1978  169E  1303               	bcf	3,6	;RP1=0, select bank0
  1979  169F  00A3               	movwf	___awdiv@divisor
  1980  16A0  3000               	movlw	0
  1981  16A1  00A4               	movwf	___awdiv@divisor+1
  1982  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  1983  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  1984  16A4  084A               	movf	(sprintf@eexp+1)^(0+128),w
  1985  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  1986  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  1987  16A7  00A6               	movwf	___awdiv@dividend+1
  1988  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  1989  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  1990  16AA  0849               	movf	sprintf@eexp^(0+128),w
  1991  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  1992  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  1993  16AD  00A5               	movwf	___awdiv@dividend
  1994  16AE  120A  158A  2012  160A  118A  	fcall	___awdiv
  1995  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  1996  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  1997  16B5  0824               	movf	?___awdiv+1,w
  1998  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  1999  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2000  16B8  00CA               	movwf	(sprintf@eexp+1)^(0+128)
  2001  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2002  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2003  16BB  0823               	movf	?___awdiv,w
  2004  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2005  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2006  16BE  00C9               	movwf	sprintf@eexp^(0+128)
  2007  16BF                     l3768:
  2008                           
  2009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2010  16BF  1FCA               	btfss	(sprintf@eexp+1)^(0+128),7
  2011  16C0  2EC2               	goto	u6571
  2012  16C1  2EC3               	goto	u6570
  2013  16C2                     u6571:
  2014  16C2  2EC9               	goto	l3772
  2015  16C3                     u6570:
  2016  16C3                     l3770:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2019  16C3  30FF               	movlw	255
  2020  16C4  07C9               	addwf	sprintf@eexp^(0+128),f
  2021  16C5  1803               	skipnc
  2022  16C6  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2023  16C7  30FF               	movlw	255
  2024  16C8  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2025  16C9                     l3772:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2028  16C9  0349               	decf	sprintf@eexp^(0+128),w
  2029  16CA  3AFF               	xorlw	255
  2030  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2031  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2032  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2033  16D2  0849               	movf	?_scale+3,w
  2034  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2035  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2036  16D5  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2037  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2038  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2039  16D8  0848               	movf	?_scale+2,w
  2040  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2041  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2042  16DB  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2043  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2044  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2045  16DE  0847               	movf	?_scale+1,w
  2046  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2047  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2048  16E1  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2049  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2050  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2051  16E4  0846               	movf	?_scale,w
  2052  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2053  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2054  16E7  00C1               	movwf	sprintf@tmpval^(0+128)
  2055  16E8                     l3774:
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2058  16E8  084E               	movf	(sprintf@fval+3)^(0+128),w
  2059  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2060  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2061  16EB  00AF               	movwf	___flmul@b+3
  2062  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2063  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2064  16EE  084D               	movf	(sprintf@fval+2)^(0+128),w
  2065  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2066  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2067  16F1  00AE               	movwf	___flmul@b+2
  2068  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2069  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2070  16F4  084C               	movf	(sprintf@fval+1)^(0+128),w
  2071  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2072  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2073  16F7  00AD               	movwf	___flmul@b+1
  2074  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2075  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2076  16FA  084B               	movf	sprintf@fval^(0+128),w
  2077  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2078  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2079  16FD  00AC               	movwf	___flmul@b
  2080  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2081  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2082  1700  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2083  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2084  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2085  1703  00B3               	movwf	___flmul@a+3
  2086  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2087  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2088  1706  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2089  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2090  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2091  1709  00B2               	movwf	___flmul@a+2
  2092  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2093  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2094  170C  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2095  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2096  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2097  170F  00B1               	movwf	___flmul@a+1
  2098  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2099  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2100  1712  0841               	movf	sprintf@tmpval^(0+128),w
  2101  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2102  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2103  1715  00B0               	movwf	___flmul@a
  2104  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2105  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2106  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2107  171D  082F               	movf	?___flmul+3,w
  2108  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2109  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2110  1720  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2111  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2112  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2113  1723  082E               	movf	?___flmul+2,w
  2114  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2115  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2116  1726  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2117  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2118  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2119  1729  082D               	movf	?___flmul+1,w
  2120  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2121  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2122  172C  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2123  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2124  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2125  172F  082C               	movf	?___flmul,w
  2126  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2127  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2128  1732  00C1               	movwf	sprintf@tmpval^(0+128)
  2129  1733                     l3776:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2132  1733  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2133  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2134  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2135  1736  00A3               	movwf	___flge@ff1+3
  2136  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2137  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2138  1739  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2139  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2140  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2141  173C  00A2               	movwf	___flge@ff1+2
  2142  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2143  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2144  173F  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2145  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2146  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2147  1742  00A1               	movwf	___flge@ff1+1
  2148  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2149  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2150  1745  0841               	movf	sprintf@tmpval^(0+128),w
  2151  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2152  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2153  1748  00A0               	movwf	___flge@ff1
  2154  1749  303F               	movlw	63
  2155  174A  00A7               	movwf	___flge@ff2+3
  2156  174B  3080               	movlw	128
  2157  174C  00A6               	movwf	___flge@ff2+2
  2158  174D  3000               	movlw	0
  2159  174E  00A5               	movwf	___flge@ff2+1
  2160  174F  3000               	movlw	0
  2161  1750  00A4               	movwf	___flge@ff2
  2162  1751  160A  158A  2525  160A  118A  	fcall	___flge
  2163  1756  1803               	btfsc	3,0
  2164  1757  2F59               	goto	u6581
  2165  1758  2F5A               	goto	u6580
  2166  1759                     u6581:
  2167  1759  2F63               	goto	l3780
  2168  175A                     u6580:
  2169  175A                     l3778:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2172  175A  30FF               	movlw	255
  2173  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2174  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2175  175D  07C9               	addwf	sprintf@eexp^(0+128),f
  2176  175E  1803               	skipnc
  2177  175F  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2178  1760  30FF               	movlw	255
  2179  1761  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2180  1762  2F94               	goto	l3784
  2181  1763                     l3780:
  2182  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2183  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2184  1765  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2185  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2186  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2187  1768  00A3               	movwf	___flge@ff1+3
  2188  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2189  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2190  176B  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2191  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2192  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2193  176E  00A2               	movwf	___flge@ff1+2
  2194  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2195  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2196  1771  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2197  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2198  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2199  1774  00A1               	movwf	___flge@ff1+1
  2200  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2201  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2202  1777  0841               	movf	sprintf@tmpval^(0+128),w
  2203  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2204  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2205  177A  00A0               	movwf	___flge@ff1
  2206  177B  3041               	movlw	65
  2207  177C  00A7               	movwf	___flge@ff2+3
  2208  177D  3020               	movlw	32
  2209  177E  00A6               	movwf	___flge@ff2+2
  2210  177F  3000               	movlw	0
  2211  1780  00A5               	movwf	___flge@ff2+1
  2212  1781  3000               	movlw	0
  2213  1782  00A4               	movwf	___flge@ff2
  2214  1783  160A  158A  2525  160A  118A  	fcall	___flge
  2215  1788  1C03               	btfss	3,0
  2216  1789  2F8B               	goto	u6591
  2217  178A  2F8C               	goto	u6590
  2218  178B                     u6591:
  2219  178B  2F94               	goto	l3784
  2220  178C                     u6590:
  2221  178C                     l3782:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2224  178C  3001               	movlw	1
  2225  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2226  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2227  178F  07C9               	addwf	sprintf@eexp^(0+128),f
  2228  1790  1803               	skipnc
  2229  1791  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  2230  1792  3000               	movlw	0
  2231  1793  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  2232  1794                     l3784:
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2235  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2236  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2237  1796  0851               	movf	(sprintf@prec+1)^(0+128),w
  2238  1797  3A80               	xorlw	128
  2239  1798  00FF               	movwf	btemp+1
  2240  1799  3080               	movlw	128
  2241  179A  027F               	subwf	btemp+1,w
  2242  179B  1D03               	skipz
  2243  179C  2F9F               	goto	u6605
  2244  179D  300D               	movlw	13
  2245  179E  0250               	subwf	sprintf@prec^(0+128),w
  2246  179F                     u6605:
  2247  179F  1803               	skipnc
  2248  17A0  2FA2               	goto	u6601
  2249  17A1  2FA3               	goto	u6600
  2250  17A2                     u6601:
  2251  17A2  2FEA               	goto	l3788
  2252  17A3                     u6600:
  2253  17A3                     l3786:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2256  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2257  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2258  17A5  0850               	movf	sprintf@prec^(0+128),w
  2259  17A6  160A  118A  2061  160A  118A  	fcall	_fround
  2260  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2261  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2262  17AD  0849               	movf	?_fround+3,w
  2263  17AE  00DD               	movwf	___fladd@b+3
  2264  17AF  0848               	movf	?_fround+2,w
  2265  17B0  00DC               	movwf	___fladd@b+2
  2266  17B1  0847               	movf	?_fround+1,w
  2267  17B2  00DB               	movwf	___fladd@b+1
  2268  17B3  0846               	movf	?_fround,w
  2269  17B4  00DA               	movwf	___fladd@b
  2270  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2271  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2272  17B7  084E               	movf	(sprintf@fval+3)^(0+128),w
  2273  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2274  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2275  17BA  00E1               	movwf	___fladd@a+3
  2276  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2277  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2278  17BD  084D               	movf	(sprintf@fval+2)^(0+128),w
  2279  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2280  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2281  17C0  00E0               	movwf	___fladd@a+2
  2282  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2283  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2284  17C3  084C               	movf	(sprintf@fval+1)^(0+128),w
  2285  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2286  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2287  17C6  00DF               	movwf	___fladd@a+1
  2288  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2289  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2290  17C9  084B               	movf	sprintf@fval^(0+128),w
  2291  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2292  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2293  17CC  00DE               	movwf	___fladd@a
  2294  17CD  160A  118A  226E  160A  118A  	fcall	___fladd
  2295  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2296  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2297  17D4  085D               	movf	?___fladd+3,w
  2298  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2299  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2300  17D7  00CE               	movwf	(sprintf@fval+3)^(0+128)
  2301  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2302  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2303  17DA  085C               	movf	?___fladd+2,w
  2304  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2305  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2306  17DD  00CD               	movwf	(sprintf@fval+2)^(0+128)
  2307  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2308  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2309  17E0  085B               	movf	?___fladd+1,w
  2310  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2311  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2312  17E3  00CC               	movwf	(sprintf@fval+1)^(0+128)
  2313  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2314  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2315  17E6  085A               	movf	?___fladd,w
  2316  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2317  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2318  17E9  00CB               	movwf	sprintf@fval^(0+128)
  2319  17EA                     l3788:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2322  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2323  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2324  17EC  084A               	movf	(sprintf@eexp+1)^(0+128),w
  2325  17ED  3A80               	xorlw	128
  2326  17EE  00FF               	movwf	btemp+1
  2327  17EF  3080               	movlw	128
  2328  17F0  027F               	subwf	btemp+1,w
  2329  17F1  1D03               	skipz
  2330  17F2  2FF5               	goto	u6615
  2331  17F3  300A               	movlw	10
  2332  17F4  0249               	subwf	sprintf@eexp^(0+128),w
  2333  17F5                     u6615:
  2334  17F5  1803               	skipnc
  2335  17F6  2FFA               	goto	u6611
  2336  17F7  120A  118A  2827   	goto	u6610
  2337  17FA                     u6611:
  2338  17FA  120A  118A  2886   	goto	l3796
  2339  17FD                     L3:
  2340  17FD                     L2:
  2341  17FD  120A  118A  2EA4   	ljmp	l3978
  2342                           
  2343                           	psect	text2
  2344  0C9D                     __ptext2:	
  2345 ;; *************** function _scale *****************
  2346 ;; Defined at:
  2347 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  scl             1    wreg     char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  scl             1   56[BANK0 ] char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  4   38[BANK0 ] char 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         0       4       0       0       0
  2362 ;;      Locals:         0       5       0       0       0
  2363 ;;      Temps:          0      10       0       0       0
  2364 ;;      Totals:         0      19       0       0       0
  2365 ;;Total ram usage:       19 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    3
  2368 ;; This function calls:
  2369 ;;		___awdiv
  2370 ;;		___awmod
  2371 ;;		___flmul
  2372 ;; This function is called by:
  2373 ;;		_sprintf
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _scale
  2379  0C9D                     _scale:
  2380                           
  2381                           ;incstack = 0
  2382                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2383                           ;scale@scl stored from wreg
  2384  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0C9F  00D8               	movwf	scale@scl
  2387  0CA0                     l3584:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2390  0CA0  1FD8               	btfss	scale@scl,7
  2391  0CA1  2CA3               	goto	u6141
  2392  0CA2  2CA4               	goto	u6140
  2393  0CA3                     u6141:
  2394  0CA3  2E53               	goto	l3606
  2395  0CA4                     u6140:
  2396  0CA4                     l3586:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2399  0CA4  09D8               	comf	scale@scl,f
  2400  0CA5  0AD8               	incf	scale@scl,f
  2401  0CA6                     l3588:
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2404  0CA6  0858               	movf	scale@scl,w
  2405  0CA7  3A80               	xorlw	128
  2406  0CA8  3E12               	addlw	-238
  2407  0CA9  1C03               	skipc
  2408  0CAA  2CAC               	goto	u6151
  2409  0CAB  2CAD               	goto	u6150
  2410  0CAC                     u6151:
  2411  0CAC  2D97               	goto	l3596
  2412  0CAD                     u6150:
  2413  0CAD                     l3590:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2416  0CAD  300A               	movlw	10
  2417  0CAE  00A3               	movwf	___awdiv@divisor
  2418  0CAF  3000               	movlw	0
  2419  0CB0  00A4               	movwf	___awdiv@divisor+1
  2420  0CB1  0858               	movf	scale@scl,w
  2421  0CB2  00F6               	movwf	___awmod@dividend
  2422  0CB3  01F7               	clrf	___awmod@dividend+1
  2423  0CB4  1BF6               	btfsc	___awmod@dividend,7
  2424  0CB5  03F7               	decf	___awmod@dividend+1,f
  2425  0CB6  3064               	movlw	100
  2426  0CB7  00F4               	movwf	___awmod@divisor
  2427  0CB8  3000               	movlw	0
  2428  0CB9  00F5               	movwf	___awmod@divisor+1
  2429  0CBA  160A  118A  2006  120A  158A  	fcall	___awmod
  2430  0CBF  0875               	movf	?___awmod+1,w
  2431  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0CC2  00A6               	movwf	___awdiv@dividend+1
  2434  0CC3  0874               	movf	?___awmod,w
  2435  0CC4  00A5               	movwf	___awdiv@dividend
  2436  0CC5  120A  158A  2012  120A  158A  	fcall	___awdiv
  2437  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0CCC  0823               	movf	?___awdiv,w
  2440  0CCD  00CA               	movwf	??_scale
  2441  0CCE  3001               	movlw	1
  2442  0CCF                     u6165:
  2443  0CCF  1003               	clrc
  2444  0CD0  0DCA               	rlf	??_scale,f
  2445  0CD1  3EFF               	addlw	-1
  2446  0CD2  1D03               	skipz
  2447  0CD3  2CCF               	goto	u6165
  2448  0CD4  1003               	clrc
  2449  0CD5  0D4A               	rlf	??_scale,w
  2450  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2451  0CD7  0084               	movwf	4
  2452  0CD8  120A  118A  270A  120A  158A  	fcall	stringdir
  2453  0CDD  00CB               	movwf	??_scale+1
  2454  0CDE  120A  118A  270A  120A  158A  	fcall	stringdir
  2455  0CE3  00CC               	movwf	??_scale+2
  2456  0CE4  120A  118A  270A  120A  158A  	fcall	stringdir
  2457  0CE9  00CD               	movwf	??_scale+3
  2458  0CEA  120A  118A  270A  120A  158A  	fcall	stringdir
  2459  0CEF  00CE               	movwf	??_scale+4
  2460  0CF0  084E               	movf	??_scale+4,w
  2461  0CF1  00AF               	movwf	___flmul@b+3
  2462  0CF2  084D               	movf	??_scale+3,w
  2463  0CF3  00AE               	movwf	___flmul@b+2
  2464  0CF4  084C               	movf	??_scale+2,w
  2465  0CF5  00AD               	movwf	___flmul@b+1
  2466  0CF6  084B               	movf	??_scale+1,w
  2467  0CF7  00AC               	movwf	___flmul@b
  2468  0CF8  3064               	movlw	100
  2469  0CF9  00A3               	movwf	___awdiv@divisor
  2470  0CFA  3000               	movlw	0
  2471  0CFB  00A4               	movwf	___awdiv@divisor+1
  2472  0CFC  0858               	movf	scale@scl,w
  2473  0CFD  00A5               	movwf	___awdiv@dividend
  2474  0CFE  01A6               	clrf	___awdiv@dividend+1
  2475  0CFF  1BA5               	btfsc	___awdiv@dividend,7
  2476  0D00  03A6               	decf	___awdiv@dividend+1,f
  2477  0D01  120A  158A  2012  120A  158A  	fcall	___awdiv
  2478  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0D08  0823               	movf	?___awdiv,w
  2481  0D09  00CF               	movwf	??_scale+5
  2482  0D0A  3001               	movlw	1
  2483  0D0B                     u6175:
  2484  0D0B  1003               	clrc
  2485  0D0C  0DCF               	rlf	??_scale+5,f
  2486  0D0D  3EFF               	addlw	-1
  2487  0D0E  1D03               	skipz
  2488  0D0F  2D0B               	goto	u6175
  2489  0D10  1003               	clrc
  2490  0D11  0D4F               	rlf	??_scale+5,w
  2491  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2492  0D13  0084               	movwf	4
  2493  0D14  120A  118A  270A  120A  158A  	fcall	stringdir
  2494  0D19  00D0               	movwf	??_scale+6
  2495  0D1A  120A  118A  270A  120A  158A  	fcall	stringdir
  2496  0D1F  00D1               	movwf	??_scale+7
  2497  0D20  120A  118A  270A  120A  158A  	fcall	stringdir
  2498  0D25  00D2               	movwf	??_scale+8
  2499  0D26  120A  118A  270A  120A  158A  	fcall	stringdir
  2500  0D2B  00D3               	movwf	??_scale+9
  2501  0D2C  0853               	movf	??_scale+9,w
  2502  0D2D  00B3               	movwf	___flmul@a+3
  2503  0D2E  0852               	movf	??_scale+8,w
  2504  0D2F  00B2               	movwf	___flmul@a+2
  2505  0D30  0851               	movf	??_scale+7,w
  2506  0D31  00B1               	movwf	___flmul@a+1
  2507  0D32  0850               	movf	??_scale+6,w
  2508  0D33  00B0               	movwf	___flmul@a
  2509  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2510  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2512  0D3B  082F               	movf	?___flmul+3,w
  2513  0D3C  00D7               	movwf	_scale$889+3
  2514  0D3D  082E               	movf	?___flmul+2,w
  2515  0D3E  00D6               	movwf	_scale$889+2
  2516  0D3F  082D               	movf	?___flmul+1,w
  2517  0D40  00D5               	movwf	_scale$889+1
  2518  0D41  082C               	movf	?___flmul,w
  2519  0D42  00D4               	movwf	_scale$889
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2522  0D43  300A               	movlw	10
  2523  0D44  00F4               	movwf	___awmod@divisor
  2524  0D45  3000               	movlw	0
  2525  0D46  00F5               	movwf	___awmod@divisor+1
  2526  0D47  0858               	movf	scale@scl,w
  2527  0D48  00F6               	movwf	___awmod@dividend
  2528  0D49  01F7               	clrf	___awmod@dividend+1
  2529  0D4A  1BF6               	btfsc	___awmod@dividend,7
  2530  0D4B  03F7               	decf	___awmod@dividend+1,f
  2531  0D4C  160A  118A  2006  120A  158A  	fcall	___awmod
  2532  0D51  0874               	movf	?___awmod,w
  2533  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0D54  00CA               	movwf	??_scale
  2536  0D55  3001               	movlw	1
  2537  0D56                     u6185:
  2538  0D56  1003               	clrc
  2539  0D57  0DCA               	rlf	??_scale,f
  2540  0D58  3EFF               	addlw	-1
  2541  0D59  1D03               	skipz
  2542  0D5A  2D56               	goto	u6185
  2543  0D5B  1003               	clrc
  2544  0D5C  0D4A               	rlf	??_scale,w
  2545  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2546  0D5E  0084               	movwf	4
  2547  0D5F  120A  118A  270A  120A  158A  	fcall	stringdir
  2548  0D64  00CB               	movwf	??_scale+1
  2549  0D65  120A  118A  270A  120A  158A  	fcall	stringdir
  2550  0D6A  00CC               	movwf	??_scale+2
  2551  0D6B  120A  118A  270A  120A  158A  	fcall	stringdir
  2552  0D70  00CD               	movwf	??_scale+3
  2553  0D71  120A  118A  270A  120A  158A  	fcall	stringdir
  2554  0D76  00CE               	movwf	??_scale+4
  2555  0D77  084E               	movf	??_scale+4,w
  2556  0D78  00AF               	movwf	___flmul@b+3
  2557  0D79  084D               	movf	??_scale+3,w
  2558  0D7A  00AE               	movwf	___flmul@b+2
  2559  0D7B  084C               	movf	??_scale+2,w
  2560  0D7C  00AD               	movwf	___flmul@b+1
  2561  0D7D  084B               	movf	??_scale+1,w
  2562  0D7E  00AC               	movwf	___flmul@b
  2563  0D7F  0857               	movf	_scale$889+3,w
  2564  0D80  00B3               	movwf	___flmul@a+3
  2565  0D81  0856               	movf	_scale$889+2,w
  2566  0D82  00B2               	movwf	___flmul@a+2
  2567  0D83  0855               	movf	_scale$889+1,w
  2568  0D84  00B1               	movwf	___flmul@a+1
  2569  0D85  0854               	movf	_scale$889,w
  2570  0D86  00B0               	movwf	___flmul@a
  2571  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2572  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0D8E  082F               	movf	?___flmul+3,w
  2575  0D8F  00C9               	movwf	?_scale+3
  2576  0D90  082E               	movf	?___flmul+2,w
  2577  0D91  00C8               	movwf	?_scale+2
  2578  0D92  082D               	movf	?___flmul+1,w
  2579  0D93  00C7               	movwf	?_scale+1
  2580  0D94  082C               	movf	?___flmul,w
  2581  0D95  00C6               	movwf	?_scale
  2582  0D96  2FFF               	goto	l225
  2583  0D97                     l3596:
  2584  0D97  0858               	movf	scale@scl,w
  2585  0D98  3A80               	xorlw	128
  2586  0D99  3E75               	addlw	-139
  2587  0D9A  1C03               	skipc
  2588  0D9B  2D9D               	goto	u6191
  2589  0D9C  2D9E               	goto	u6190
  2590  0D9D                     u6191:
  2591  0D9D  2E26               	goto	l3602
  2592  0D9E                     u6190:
  2593  0D9E                     l3598:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2596  0D9E  300A               	movlw	10
  2597  0D9F  00F4               	movwf	___awmod@divisor
  2598  0DA0  3000               	movlw	0
  2599  0DA1  00F5               	movwf	___awmod@divisor+1
  2600  0DA2  0858               	movf	scale@scl,w
  2601  0DA3  00F6               	movwf	___awmod@dividend
  2602  0DA4  01F7               	clrf	___awmod@dividend+1
  2603  0DA5  1BF6               	btfsc	___awmod@dividend,7
  2604  0DA6  03F7               	decf	___awmod@dividend+1,f
  2605  0DA7  160A  118A  2006  120A  158A  	fcall	___awmod
  2606  0DAC  0874               	movf	?___awmod,w
  2607  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2608  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2609  0DAF  00CA               	movwf	??_scale
  2610  0DB0  3001               	movlw	1
  2611  0DB1                     u6205:
  2612  0DB1  1003               	clrc
  2613  0DB2  0DCA               	rlf	??_scale,f
  2614  0DB3  3EFF               	addlw	-1
  2615  0DB4  1D03               	skipz
  2616  0DB5  2DB1               	goto	u6205
  2617  0DB6  1003               	clrc
  2618  0DB7  0D4A               	rlf	??_scale,w
  2619  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2620  0DB9  0084               	movwf	4
  2621  0DBA  120A  118A  270A  120A  158A  	fcall	stringdir
  2622  0DBF  00CB               	movwf	??_scale+1
  2623  0DC0  120A  118A  270A  120A  158A  	fcall	stringdir
  2624  0DC5  00CC               	movwf	??_scale+2
  2625  0DC6  120A  118A  270A  120A  158A  	fcall	stringdir
  2626  0DCB  00CD               	movwf	??_scale+3
  2627  0DCC  120A  118A  270A  120A  158A  	fcall	stringdir
  2628  0DD1  00CE               	movwf	??_scale+4
  2629  0DD2  084E               	movf	??_scale+4,w
  2630  0DD3  00AF               	movwf	___flmul@b+3
  2631  0DD4  084D               	movf	??_scale+3,w
  2632  0DD5  00AE               	movwf	___flmul@b+2
  2633  0DD6  084C               	movf	??_scale+2,w
  2634  0DD7  00AD               	movwf	___flmul@b+1
  2635  0DD8  084B               	movf	??_scale+1,w
  2636  0DD9  00AC               	movwf	___flmul@b
  2637  0DDA  300A               	movlw	10
  2638  0DDB  00A3               	movwf	___awdiv@divisor
  2639  0DDC  3000               	movlw	0
  2640  0DDD  00A4               	movwf	___awdiv@divisor+1
  2641  0DDE  0858               	movf	scale@scl,w
  2642  0DDF  00A5               	movwf	___awdiv@dividend
  2643  0DE0  01A6               	clrf	___awdiv@dividend+1
  2644  0DE1  1BA5               	btfsc	___awdiv@dividend,7
  2645  0DE2  03A6               	decf	___awdiv@dividend+1,f
  2646  0DE3  120A  158A  2012  120A  158A  	fcall	___awdiv
  2647  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0DEA  0823               	movf	?___awdiv,w
  2650  0DEB  00CF               	movwf	??_scale+5
  2651  0DEC  3001               	movlw	1
  2652  0DED                     u6215:
  2653  0DED  1003               	clrc
  2654  0DEE  0DCF               	rlf	??_scale+5,f
  2655  0DEF  3EFF               	addlw	-1
  2656  0DF0  1D03               	skipz
  2657  0DF1  2DED               	goto	u6215
  2658  0DF2  1003               	clrc
  2659  0DF3  0D4F               	rlf	??_scale+5,w
  2660  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2661  0DF5  0084               	movwf	4
  2662  0DF6  120A  118A  270A  120A  158A  	fcall	stringdir
  2663  0DFB  00D0               	movwf	??_scale+6
  2664  0DFC  120A  118A  270A  120A  158A  	fcall	stringdir
  2665  0E01  00D1               	movwf	??_scale+7
  2666  0E02  120A  118A  270A  120A  158A  	fcall	stringdir
  2667  0E07  00D2               	movwf	??_scale+8
  2668  0E08  120A  118A  270A  120A  158A  	fcall	stringdir
  2669  0E0D  00D3               	movwf	??_scale+9
  2670  0E0E  0853               	movf	??_scale+9,w
  2671  0E0F  00B3               	movwf	___flmul@a+3
  2672  0E10  0852               	movf	??_scale+8,w
  2673  0E11  00B2               	movwf	___flmul@a+2
  2674  0E12  0851               	movf	??_scale+7,w
  2675  0E13  00B1               	movwf	___flmul@a+1
  2676  0E14  0850               	movf	??_scale+6,w
  2677  0E15  00B0               	movwf	___flmul@a
  2678  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2679  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0E1D  082F               	movf	?___flmul+3,w
  2682  0E1E  00C9               	movwf	?_scale+3
  2683  0E1F  082E               	movf	?___flmul+2,w
  2684  0E20  00C8               	movwf	?_scale+2
  2685  0E21  082D               	movf	?___flmul+1,w
  2686  0E22  00C7               	movwf	?_scale+1
  2687  0E23  082C               	movf	?___flmul,w
  2688  0E24  00C6               	movwf	?_scale
  2689  0E25  2FFF               	goto	l225
  2690  0E26                     l3602:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2693  0E26  0858               	movf	scale@scl,w
  2694  0E27  00CA               	movwf	??_scale
  2695  0E28  3001               	movlw	1
  2696  0E29                     u6225:
  2697  0E29  1003               	clrc
  2698  0E2A  0DCA               	rlf	??_scale,f
  2699  0E2B  3EFF               	addlw	-1
  2700  0E2C  1D03               	skipz
  2701  0E2D  2E29               	goto	u6225
  2702  0E2E  1003               	clrc
  2703  0E2F  0D4A               	rlf	??_scale,w
  2704  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2705  0E31  0084               	movwf	4
  2706  0E32  120A  118A  270A  120A  158A  	fcall	stringdir
  2707  0E37  00CB               	movwf	??_scale+1
  2708  0E38  120A  118A  270A  120A  158A  	fcall	stringdir
  2709  0E3D  00CC               	movwf	??_scale+2
  2710  0E3E  120A  118A  270A  120A  158A  	fcall	stringdir
  2711  0E43  00CD               	movwf	??_scale+3
  2712  0E44  120A  118A  270A  120A  158A  	fcall	stringdir
  2713  0E49  00CE               	movwf	??_scale+4
  2714  0E4A  084E               	movf	??_scale+4,w
  2715  0E4B  00C9               	movwf	?_scale+3
  2716  0E4C  084D               	movf	??_scale+3,w
  2717  0E4D  00C8               	movwf	?_scale+2
  2718  0E4E  084C               	movf	??_scale+2,w
  2719  0E4F  00C7               	movwf	?_scale+1
  2720  0E50  084B               	movf	??_scale+1,w
  2721  0E51  00C6               	movwf	?_scale
  2722  0E52  2FFF               	goto	l225
  2723  0E53                     l3606:
  2724                           
  2725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2726  0E53  0858               	movf	scale@scl,w
  2727  0E54  3A80               	xorlw	128
  2728  0E55  3E12               	addlw	-238
  2729  0E56  1C03               	skipc
  2730  0E57  2E59               	goto	u6231
  2731  0E58  2E5A               	goto	u6230
  2732  0E59                     u6231:
  2733  0E59  2F44               	goto	l3614
  2734  0E5A                     u6230:
  2735  0E5A                     l3608:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2738  0E5A  300A               	movlw	10
  2739  0E5B  00A3               	movwf	___awdiv@divisor
  2740  0E5C  3000               	movlw	0
  2741  0E5D  00A4               	movwf	___awdiv@divisor+1
  2742  0E5E  0858               	movf	scale@scl,w
  2743  0E5F  00F6               	movwf	___awmod@dividend
  2744  0E60  01F7               	clrf	___awmod@dividend+1
  2745  0E61  1BF6               	btfsc	___awmod@dividend,7
  2746  0E62  03F7               	decf	___awmod@dividend+1,f
  2747  0E63  3064               	movlw	100
  2748  0E64  00F4               	movwf	___awmod@divisor
  2749  0E65  3000               	movlw	0
  2750  0E66  00F5               	movwf	___awmod@divisor+1
  2751  0E67  160A  118A  2006  120A  158A  	fcall	___awmod
  2752  0E6C  0875               	movf	?___awmod+1,w
  2753  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0E6F  00A6               	movwf	___awdiv@dividend+1
  2756  0E70  0874               	movf	?___awmod,w
  2757  0E71  00A5               	movwf	___awdiv@dividend
  2758  0E72  120A  158A  2012  120A  158A  	fcall	___awdiv
  2759  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0E79  0823               	movf	?___awdiv,w
  2762  0E7A  00CA               	movwf	??_scale
  2763  0E7B  3001               	movlw	1
  2764  0E7C                     u6245:
  2765  0E7C  1003               	clrc
  2766  0E7D  0DCA               	rlf	??_scale,f
  2767  0E7E  3EFF               	addlw	-1
  2768  0E7F  1D03               	skipz
  2769  0E80  2E7C               	goto	u6245
  2770  0E81  1003               	clrc
  2771  0E82  0D4A               	rlf	??_scale,w
  2772  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2773  0E84  0084               	movwf	4
  2774  0E85  120A  118A  270A  120A  158A  	fcall	stringdir
  2775  0E8A  00CB               	movwf	??_scale+1
  2776  0E8B  120A  118A  270A  120A  158A  	fcall	stringdir
  2777  0E90  00CC               	movwf	??_scale+2
  2778  0E91  120A  118A  270A  120A  158A  	fcall	stringdir
  2779  0E96  00CD               	movwf	??_scale+3
  2780  0E97  120A  118A  270A  120A  158A  	fcall	stringdir
  2781  0E9C  00CE               	movwf	??_scale+4
  2782  0E9D  084E               	movf	??_scale+4,w
  2783  0E9E  00AF               	movwf	___flmul@b+3
  2784  0E9F  084D               	movf	??_scale+3,w
  2785  0EA0  00AE               	movwf	___flmul@b+2
  2786  0EA1  084C               	movf	??_scale+2,w
  2787  0EA2  00AD               	movwf	___flmul@b+1
  2788  0EA3  084B               	movf	??_scale+1,w
  2789  0EA4  00AC               	movwf	___flmul@b
  2790  0EA5  3064               	movlw	100
  2791  0EA6  00A3               	movwf	___awdiv@divisor
  2792  0EA7  3000               	movlw	0
  2793  0EA8  00A4               	movwf	___awdiv@divisor+1
  2794  0EA9  0858               	movf	scale@scl,w
  2795  0EAA  00A5               	movwf	___awdiv@dividend
  2796  0EAB  01A6               	clrf	___awdiv@dividend+1
  2797  0EAC  1BA5               	btfsc	___awdiv@dividend,7
  2798  0EAD  03A6               	decf	___awdiv@dividend+1,f
  2799  0EAE  120A  158A  2012  120A  158A  	fcall	___awdiv
  2800  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0EB5  0823               	movf	?___awdiv,w
  2803  0EB6  00CF               	movwf	??_scale+5
  2804  0EB7  3001               	movlw	1
  2805  0EB8                     u6255:
  2806  0EB8  1003               	clrc
  2807  0EB9  0DCF               	rlf	??_scale+5,f
  2808  0EBA  3EFF               	addlw	-1
  2809  0EBB  1D03               	skipz
  2810  0EBC  2EB8               	goto	u6255
  2811  0EBD  1003               	clrc
  2812  0EBE  0D4F               	rlf	??_scale+5,w
  2813  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2814  0EC0  0084               	movwf	4
  2815  0EC1  120A  118A  270A  120A  158A  	fcall	stringdir
  2816  0EC6  00D0               	movwf	??_scale+6
  2817  0EC7  120A  118A  270A  120A  158A  	fcall	stringdir
  2818  0ECC  00D1               	movwf	??_scale+7
  2819  0ECD  120A  118A  270A  120A  158A  	fcall	stringdir
  2820  0ED2  00D2               	movwf	??_scale+8
  2821  0ED3  120A  118A  270A  120A  158A  	fcall	stringdir
  2822  0ED8  00D3               	movwf	??_scale+9
  2823  0ED9  0853               	movf	??_scale+9,w
  2824  0EDA  00B3               	movwf	___flmul@a+3
  2825  0EDB  0852               	movf	??_scale+8,w
  2826  0EDC  00B2               	movwf	___flmul@a+2
  2827  0EDD  0851               	movf	??_scale+7,w
  2828  0EDE  00B1               	movwf	___flmul@a+1
  2829  0EDF  0850               	movf	??_scale+6,w
  2830  0EE0  00B0               	movwf	___flmul@a
  2831  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2832  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0EE8  082F               	movf	?___flmul+3,w
  2835  0EE9  00D7               	movwf	_scale$889+3
  2836  0EEA  082E               	movf	?___flmul+2,w
  2837  0EEB  00D6               	movwf	_scale$889+2
  2838  0EEC  082D               	movf	?___flmul+1,w
  2839  0EED  00D5               	movwf	_scale$889+1
  2840  0EEE  082C               	movf	?___flmul,w
  2841  0EEF  00D4               	movwf	_scale$889
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2844  0EF0  300A               	movlw	10
  2845  0EF1  00F4               	movwf	___awmod@divisor
  2846  0EF2  3000               	movlw	0
  2847  0EF3  00F5               	movwf	___awmod@divisor+1
  2848  0EF4  0858               	movf	scale@scl,w
  2849  0EF5  00F6               	movwf	___awmod@dividend
  2850  0EF6  01F7               	clrf	___awmod@dividend+1
  2851  0EF7  1BF6               	btfsc	___awmod@dividend,7
  2852  0EF8  03F7               	decf	___awmod@dividend+1,f
  2853  0EF9  160A  118A  2006  120A  158A  	fcall	___awmod
  2854  0EFE  0874               	movf	?___awmod,w
  2855  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2857  0F01  00CA               	movwf	??_scale
  2858  0F02  3001               	movlw	1
  2859  0F03                     u6265:
  2860  0F03  1003               	clrc
  2861  0F04  0DCA               	rlf	??_scale,f
  2862  0F05  3EFF               	addlw	-1
  2863  0F06  1D03               	skipz
  2864  0F07  2F03               	goto	u6265
  2865  0F08  1003               	clrc
  2866  0F09  0D4A               	rlf	??_scale,w
  2867  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2868  0F0B  0084               	movwf	4
  2869  0F0C  120A  118A  270A  120A  158A  	fcall	stringdir
  2870  0F11  00CB               	movwf	??_scale+1
  2871  0F12  120A  118A  270A  120A  158A  	fcall	stringdir
  2872  0F17  00CC               	movwf	??_scale+2
  2873  0F18  120A  118A  270A  120A  158A  	fcall	stringdir
  2874  0F1D  00CD               	movwf	??_scale+3
  2875  0F1E  120A  118A  270A  120A  158A  	fcall	stringdir
  2876  0F23  00CE               	movwf	??_scale+4
  2877  0F24  084E               	movf	??_scale+4,w
  2878  0F25  00AF               	movwf	___flmul@b+3
  2879  0F26  084D               	movf	??_scale+3,w
  2880  0F27  00AE               	movwf	___flmul@b+2
  2881  0F28  084C               	movf	??_scale+2,w
  2882  0F29  00AD               	movwf	___flmul@b+1
  2883  0F2A  084B               	movf	??_scale+1,w
  2884  0F2B  00AC               	movwf	___flmul@b
  2885  0F2C  0857               	movf	_scale$889+3,w
  2886  0F2D  00B3               	movwf	___flmul@a+3
  2887  0F2E  0856               	movf	_scale$889+2,w
  2888  0F2F  00B2               	movwf	___flmul@a+2
  2889  0F30  0855               	movf	_scale$889+1,w
  2890  0F31  00B1               	movwf	___flmul@a+1
  2891  0F32  0854               	movf	_scale$889,w
  2892  0F33  00B0               	movwf	___flmul@a
  2893  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2894  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2895  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2896  0F3B  082F               	movf	?___flmul+3,w
  2897  0F3C  00C9               	movwf	?_scale+3
  2898  0F3D  082E               	movf	?___flmul+2,w
  2899  0F3E  00C8               	movwf	?_scale+2
  2900  0F3F  082D               	movf	?___flmul+1,w
  2901  0F40  00C7               	movwf	?_scale+1
  2902  0F41  082C               	movf	?___flmul,w
  2903  0F42  00C6               	movwf	?_scale
  2904  0F43  2FFF               	goto	l225
  2905  0F44                     l3614:
  2906  0F44  0858               	movf	scale@scl,w
  2907  0F45  3A80               	xorlw	128
  2908  0F46  3E75               	addlw	-139
  2909  0F47  1C03               	skipc
  2910  0F48  2F4A               	goto	u6271
  2911  0F49  2F4B               	goto	u6270
  2912  0F4A                     u6271:
  2913  0F4A  2FD3               	goto	l3620
  2914  0F4B                     u6270:
  2915  0F4B                     l3616:
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2918  0F4B  300A               	movlw	10
  2919  0F4C  00F4               	movwf	___awmod@divisor
  2920  0F4D  3000               	movlw	0
  2921  0F4E  00F5               	movwf	___awmod@divisor+1
  2922  0F4F  0858               	movf	scale@scl,w
  2923  0F50  00F6               	movwf	___awmod@dividend
  2924  0F51  01F7               	clrf	___awmod@dividend+1
  2925  0F52  1BF6               	btfsc	___awmod@dividend,7
  2926  0F53  03F7               	decf	___awmod@dividend+1,f
  2927  0F54  160A  118A  2006  120A  158A  	fcall	___awmod
  2928  0F59  0874               	movf	?___awmod,w
  2929  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0F5C  00CA               	movwf	??_scale
  2932  0F5D  3001               	movlw	1
  2933  0F5E                     u6285:
  2934  0F5E  1003               	clrc
  2935  0F5F  0DCA               	rlf	??_scale,f
  2936  0F60  3EFF               	addlw	-1
  2937  0F61  1D03               	skipz
  2938  0F62  2F5E               	goto	u6285
  2939  0F63  1003               	clrc
  2940  0F64  0D4A               	rlf	??_scale,w
  2941  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2942  0F66  0084               	movwf	4
  2943  0F67  120A  118A  270A  120A  158A  	fcall	stringdir
  2944  0F6C  00CB               	movwf	??_scale+1
  2945  0F6D  120A  118A  270A  120A  158A  	fcall	stringdir
  2946  0F72  00CC               	movwf	??_scale+2
  2947  0F73  120A  118A  270A  120A  158A  	fcall	stringdir
  2948  0F78  00CD               	movwf	??_scale+3
  2949  0F79  120A  118A  270A  120A  158A  	fcall	stringdir
  2950  0F7E  00CE               	movwf	??_scale+4
  2951  0F7F  084E               	movf	??_scale+4,w
  2952  0F80  00AF               	movwf	___flmul@b+3
  2953  0F81  084D               	movf	??_scale+3,w
  2954  0F82  00AE               	movwf	___flmul@b+2
  2955  0F83  084C               	movf	??_scale+2,w
  2956  0F84  00AD               	movwf	___flmul@b+1
  2957  0F85  084B               	movf	??_scale+1,w
  2958  0F86  00AC               	movwf	___flmul@b
  2959  0F87  300A               	movlw	10
  2960  0F88  00A3               	movwf	___awdiv@divisor
  2961  0F89  3000               	movlw	0
  2962  0F8A  00A4               	movwf	___awdiv@divisor+1
  2963  0F8B  0858               	movf	scale@scl,w
  2964  0F8C  00A5               	movwf	___awdiv@dividend
  2965  0F8D  01A6               	clrf	___awdiv@dividend+1
  2966  0F8E  1BA5               	btfsc	___awdiv@dividend,7
  2967  0F8F  03A6               	decf	___awdiv@dividend+1,f
  2968  0F90  120A  158A  2012  120A  158A  	fcall	___awdiv
  2969  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2971  0F97  0823               	movf	?___awdiv,w
  2972  0F98  00CF               	movwf	??_scale+5
  2973  0F99  3001               	movlw	1
  2974  0F9A                     u6295:
  2975  0F9A  1003               	clrc
  2976  0F9B  0DCF               	rlf	??_scale+5,f
  2977  0F9C  3EFF               	addlw	-1
  2978  0F9D  1D03               	skipz
  2979  0F9E  2F9A               	goto	u6295
  2980  0F9F  1003               	clrc
  2981  0FA0  0D4F               	rlf	??_scale+5,w
  2982  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2983  0FA2  0084               	movwf	4
  2984  0FA3  120A  118A  270A  120A  158A  	fcall	stringdir
  2985  0FA8  00D0               	movwf	??_scale+6
  2986  0FA9  120A  118A  270A  120A  158A  	fcall	stringdir
  2987  0FAE  00D1               	movwf	??_scale+7
  2988  0FAF  120A  118A  270A  120A  158A  	fcall	stringdir
  2989  0FB4  00D2               	movwf	??_scale+8
  2990  0FB5  120A  118A  270A  120A  158A  	fcall	stringdir
  2991  0FBA  00D3               	movwf	??_scale+9
  2992  0FBB  0853               	movf	??_scale+9,w
  2993  0FBC  00B3               	movwf	___flmul@a+3
  2994  0FBD  0852               	movf	??_scale+8,w
  2995  0FBE  00B2               	movwf	___flmul@a+2
  2996  0FBF  0851               	movf	??_scale+7,w
  2997  0FC0  00B1               	movwf	___flmul@a+1
  2998  0FC1  0850               	movf	??_scale+6,w
  2999  0FC2  00B0               	movwf	___flmul@a
  3000  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3001  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0FCA  082F               	movf	?___flmul+3,w
  3004  0FCB  00C9               	movwf	?_scale+3
  3005  0FCC  082E               	movf	?___flmul+2,w
  3006  0FCD  00C8               	movwf	?_scale+2
  3007  0FCE  082D               	movf	?___flmul+1,w
  3008  0FCF  00C7               	movwf	?_scale+1
  3009  0FD0  082C               	movf	?___flmul,w
  3010  0FD1  00C6               	movwf	?_scale
  3011  0FD2  2FFF               	goto	l225
  3012  0FD3                     l3620:
  3013                           
  3014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3015  0FD3  0858               	movf	scale@scl,w
  3016  0FD4  00CA               	movwf	??_scale
  3017  0FD5  3001               	movlw	1
  3018  0FD6                     u6305:
  3019  0FD6  1003               	clrc
  3020  0FD7  0DCA               	rlf	??_scale,f
  3021  0FD8  3EFF               	addlw	-1
  3022  0FD9  1D03               	skipz
  3023  0FDA  2FD6               	goto	u6305
  3024  0FDB  1003               	clrc
  3025  0FDC  0D4A               	rlf	??_scale,w
  3026  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3027  0FDE  0084               	movwf	4
  3028  0FDF  120A  118A  270A  120A  158A  	fcall	stringdir
  3029  0FE4  00CB               	movwf	??_scale+1
  3030  0FE5  120A  118A  270A  120A  158A  	fcall	stringdir
  3031  0FEA  00CC               	movwf	??_scale+2
  3032  0FEB  120A  118A  270A  120A  158A  	fcall	stringdir
  3033  0FF0  00CD               	movwf	??_scale+3
  3034  0FF1  120A  118A  270A  120A  158A  	fcall	stringdir
  3035  0FF6  00CE               	movwf	??_scale+4
  3036  0FF7  084E               	movf	??_scale+4,w
  3037  0FF8  00C9               	movwf	?_scale+3
  3038  0FF9  084D               	movf	??_scale+3,w
  3039  0FFA  00C8               	movwf	?_scale+2
  3040  0FFB  084C               	movf	??_scale+2,w
  3041  0FFC  00C7               	movwf	?_scale+1
  3042  0FFD  084B               	movf	??_scale+1,w
  3043  0FFE  00C6               	movwf	?_scale
  3044  0FFF                     l225:
  3045  0FFF  0008               	return
  3046  1000                     __end_of_scale:
  3047                           
  3048                           	psect	text3
  3049  1006                     __ptext3:	
  3050 ;; *************** function ___awmod *****************
  3051 ;; Defined at:
  3052 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  divisor         2    4[COMMON] int 
  3055 ;;  dividend        2    6[COMMON] int 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  sign            1    2[BANK0 ] unsigned char 
  3058 ;;  counter         1    1[BANK0 ] unsigned char 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  2    4[COMMON] int 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         4       0       0       0       0
  3069 ;;      Locals:         0       2       0       0       0
  3070 ;;      Temps:          0       1       0       0       0
  3071 ;;      Totals:         4       3       0       0       0
  3072 ;;Total ram usage:        7 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    1
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_scale
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function ___awmod
  3084  1006                     ___awmod:
  3085  1006                     l3506:	
  3086                           ;incstack = 0
  3087                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3088                           
  3089  1006  1283               	bcf	3,5	;RP0=0, select bank0
  3090  1007  1303               	bcf	3,6	;RP1=0, select bank0
  3091  1008  01A2               	clrf	___awmod@sign
  3092  1009                     l3508:
  3093  1009  1FF7               	btfss	___awmod@dividend+1,7
  3094  100A  280C               	goto	u5911
  3095  100B  280D               	goto	u5910
  3096  100C                     u5911:
  3097  100C  2814               	goto	l3514
  3098  100D                     u5910:
  3099  100D                     l3510:
  3100  100D  09F6               	comf	___awmod@dividend,f
  3101  100E  09F7               	comf	___awmod@dividend+1,f
  3102  100F  0AF6               	incf	___awmod@dividend,f
  3103  1010  1903               	skipnz
  3104  1011  0AF7               	incf	___awmod@dividend+1,f
  3105  1012                     l3512:
  3106  1012  01A2               	clrf	___awmod@sign
  3107  1013  0AA2               	incf	___awmod@sign,f
  3108  1014                     l3514:
  3109  1014  1FF5               	btfss	___awmod@divisor+1,7
  3110  1015  2817               	goto	u5921
  3111  1016  2818               	goto	u5920
  3112  1017                     u5921:
  3113  1017  281D               	goto	l3518
  3114  1018                     u5920:
  3115  1018                     l3516:
  3116  1018  09F4               	comf	___awmod@divisor,f
  3117  1019  09F5               	comf	___awmod@divisor+1,f
  3118  101A  0AF4               	incf	___awmod@divisor,f
  3119  101B  1903               	skipnz
  3120  101C  0AF5               	incf	___awmod@divisor+1,f
  3121  101D                     l3518:
  3122  101D  0874               	movf	___awmod@divisor,w
  3123  101E  0475               	iorwf	___awmod@divisor+1,w
  3124  101F  1903               	btfsc	3,2
  3125  1020  2822               	goto	u5931
  3126  1021  2823               	goto	u5930
  3127  1022                     u5931:
  3128  1022  2852               	goto	l3536
  3129  1023                     u5930:
  3130  1023                     l3520:
  3131  1023  01A1               	clrf	___awmod@counter
  3132  1024  0AA1               	incf	___awmod@counter,f
  3133  1025  2831               	goto	l3526
  3134  1026                     l3522:
  3135  1026  3001               	movlw	1
  3136  1027                     u5945:
  3137  1027  1003               	clrc
  3138  1028  0DF4               	rlf	___awmod@divisor,f
  3139  1029  0DF5               	rlf	___awmod@divisor+1,f
  3140  102A  3EFF               	addlw	-1
  3141  102B  1D03               	skipz
  3142  102C  2827               	goto	u5945
  3143  102D                     l3524:
  3144  102D  3001               	movlw	1
  3145  102E  00A0               	movwf	??___awmod
  3146  102F  0820               	movf	??___awmod,w
  3147  1030  07A1               	addwf	___awmod@counter,f
  3148  1031                     l3526:
  3149  1031  1FF5               	btfss	___awmod@divisor+1,7
  3150  1032  2834               	goto	u5951
  3151  1033  2835               	goto	u5950
  3152  1034                     u5951:
  3153  1034  2826               	goto	l3522
  3154  1035                     u5950:
  3155  1035                     l3528:
  3156  1035  0875               	movf	___awmod@divisor+1,w
  3157  1036  0277               	subwf	___awmod@dividend+1,w
  3158  1037  1D03               	skipz
  3159  1038  283B               	goto	u5965
  3160  1039  0874               	movf	___awmod@divisor,w
  3161  103A  0276               	subwf	___awmod@dividend,w
  3162  103B                     u5965:
  3163  103B  1C03               	skipc
  3164  103C  283E               	goto	u5961
  3165  103D  283F               	goto	u5960
  3166  103E                     u5961:
  3167  103E  2845               	goto	l3532
  3168  103F                     u5960:
  3169  103F                     l3530:
  3170  103F  0874               	movf	___awmod@divisor,w
  3171  1040  02F6               	subwf	___awmod@dividend,f
  3172  1041  0875               	movf	___awmod@divisor+1,w
  3173  1042  1C03               	skipc
  3174  1043  03F7               	decf	___awmod@dividend+1,f
  3175  1044  02F7               	subwf	___awmod@dividend+1,f
  3176  1045                     l3532:
  3177  1045  3001               	movlw	1
  3178  1046                     u5975:
  3179  1046  1003               	clrc
  3180  1047  0CF5               	rrf	___awmod@divisor+1,f
  3181  1048  0CF4               	rrf	___awmod@divisor,f
  3182  1049  3EFF               	addlw	-1
  3183  104A  1D03               	skipz
  3184  104B  2846               	goto	u5975
  3185  104C                     l3534:
  3186  104C  3001               	movlw	1
  3187  104D  02A1               	subwf	___awmod@counter,f
  3188  104E  1D03               	btfss	3,2
  3189  104F  2851               	goto	u5981
  3190  1050  2852               	goto	u5980
  3191  1051                     u5981:
  3192  1051  2835               	goto	l3528
  3193  1052                     u5980:
  3194  1052                     l3536:
  3195  1052  0822               	movf	___awmod@sign,w
  3196  1053  1903               	btfsc	3,2
  3197  1054  2856               	goto	u5991
  3198  1055  2857               	goto	u5990
  3199  1056                     u5991:
  3200  1056  285C               	goto	l3540
  3201  1057                     u5990:
  3202  1057                     l3538:
  3203  1057  09F6               	comf	___awmod@dividend,f
  3204  1058  09F7               	comf	___awmod@dividend+1,f
  3205  1059  0AF6               	incf	___awmod@dividend,f
  3206  105A  1903               	skipnz
  3207  105B  0AF7               	incf	___awmod@dividend+1,f
  3208  105C                     l3540:
  3209  105C  0877               	movf	___awmod@dividend+1,w
  3210  105D  00F5               	movwf	?___awmod+1
  3211  105E  0876               	movf	___awmod@dividend,w
  3212  105F  00F4               	movwf	?___awmod
  3213  1060                     l487:
  3214  1060  0008               	return
  3215  1061                     __end_of___awmod:
  3216                           
  3217                           	psect	text4
  3218  0812                     __ptext4:	
  3219 ;; *************** function ___awdiv *****************
  3220 ;; Defined at:
  3221 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  divisor         2    3[BANK0 ] int 
  3224 ;;  dividend        2    5[BANK0 ] int 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  quotient        2   10[BANK0 ] int 
  3227 ;;  sign            1    9[BANK0 ] unsigned char 
  3228 ;;  counter         1    8[BANK0 ] unsigned char 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  2    3[BANK0 ] int 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3238 ;;      Params:         0       4       0       0       0
  3239 ;;      Locals:         0       4       0       0       0
  3240 ;;      Temps:          0       1       0       0       0
  3241 ;;      Totals:         0       9       0       0       0
  3242 ;;Total ram usage:        9 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    1
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_scale
  3249 ;;		_sprintf
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           
  3254                           ;psect for function ___awdiv
  3255  0812                     ___awdiv:
  3256  0812                     l3462:	
  3257                           ;incstack = 0
  3258                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3259                           
  3260  0812  1283               	bcf	3,5	;RP0=0, select bank0
  3261  0813  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0814  01A9               	clrf	___awdiv@sign
  3263  0815                     l3464:
  3264  0815  1FA4               	btfss	___awdiv@divisor+1,7
  3265  0816  2818               	goto	u5811
  3266  0817  2819               	goto	u5810
  3267  0818                     u5811:
  3268  0818  2820               	goto	l3470
  3269  0819                     u5810:
  3270  0819                     l3466:
  3271  0819  09A3               	comf	___awdiv@divisor,f
  3272  081A  09A4               	comf	___awdiv@divisor+1,f
  3273  081B  0AA3               	incf	___awdiv@divisor,f
  3274  081C  1903               	skipnz
  3275  081D  0AA4               	incf	___awdiv@divisor+1,f
  3276  081E                     l3468:
  3277  081E  01A9               	clrf	___awdiv@sign
  3278  081F  0AA9               	incf	___awdiv@sign,f
  3279  0820                     l3470:
  3280  0820  1FA6               	btfss	___awdiv@dividend+1,7
  3281  0821  2823               	goto	u5821
  3282  0822  2824               	goto	u5820
  3283  0823                     u5821:
  3284  0823  282D               	goto	l3476
  3285  0824                     u5820:
  3286  0824                     l3472:
  3287  0824  09A5               	comf	___awdiv@dividend,f
  3288  0825  09A6               	comf	___awdiv@dividend+1,f
  3289  0826  0AA5               	incf	___awdiv@dividend,f
  3290  0827  1903               	skipnz
  3291  0828  0AA6               	incf	___awdiv@dividend+1,f
  3292  0829                     l3474:
  3293  0829  3001               	movlw	1
  3294  082A  00A7               	movwf	??___awdiv
  3295  082B  0827               	movf	??___awdiv,w
  3296  082C  06A9               	xorwf	___awdiv@sign,f
  3297  082D                     l3476:
  3298  082D  01AA               	clrf	___awdiv@quotient
  3299  082E  01AB               	clrf	___awdiv@quotient+1
  3300  082F                     l3478:
  3301  082F  0823               	movf	___awdiv@divisor,w
  3302  0830  0424               	iorwf	___awdiv@divisor+1,w
  3303  0831  1903               	btfsc	3,2
  3304  0832  2834               	goto	u5831
  3305  0833  2835               	goto	u5830
  3306  0834                     u5831:
  3307  0834  286C               	goto	l3498
  3308  0835                     u5830:
  3309  0835                     l3480:
  3310  0835  01A8               	clrf	___awdiv@counter
  3311  0836  0AA8               	incf	___awdiv@counter,f
  3312  0837  2843               	goto	l3486
  3313  0838                     l3482:
  3314  0838  3001               	movlw	1
  3315  0839                     u5845:
  3316  0839  1003               	clrc
  3317  083A  0DA3               	rlf	___awdiv@divisor,f
  3318  083B  0DA4               	rlf	___awdiv@divisor+1,f
  3319  083C  3EFF               	addlw	-1
  3320  083D  1D03               	skipz
  3321  083E  2839               	goto	u5845
  3322  083F                     l3484:
  3323  083F  3001               	movlw	1
  3324  0840  00A7               	movwf	??___awdiv
  3325  0841  0827               	movf	??___awdiv,w
  3326  0842  07A8               	addwf	___awdiv@counter,f
  3327  0843                     l3486:
  3328  0843  1FA4               	btfss	___awdiv@divisor+1,7
  3329  0844  2846               	goto	u5851
  3330  0845  2847               	goto	u5850
  3331  0846                     u5851:
  3332  0846  2838               	goto	l3482
  3333  0847                     u5850:
  3334  0847                     l3488:
  3335  0847  3001               	movlw	1
  3336  0848                     u5865:
  3337  0848  1003               	clrc
  3338  0849  0DAA               	rlf	___awdiv@quotient,f
  3339  084A  0DAB               	rlf	___awdiv@quotient+1,f
  3340  084B  3EFF               	addlw	-1
  3341  084C  1D03               	skipz
  3342  084D  2848               	goto	u5865
  3343  084E  0824               	movf	___awdiv@divisor+1,w
  3344  084F  0226               	subwf	___awdiv@dividend+1,w
  3345  0850  1D03               	skipz
  3346  0851  2854               	goto	u5875
  3347  0852  0823               	movf	___awdiv@divisor,w
  3348  0853  0225               	subwf	___awdiv@dividend,w
  3349  0854                     u5875:
  3350  0854  1C03               	skipc
  3351  0855  2857               	goto	u5871
  3352  0856  2858               	goto	u5870
  3353  0857                     u5871:
  3354  0857  285F               	goto	l3494
  3355  0858                     u5870:
  3356  0858                     l3490:
  3357  0858  0823               	movf	___awdiv@divisor,w
  3358  0859  02A5               	subwf	___awdiv@dividend,f
  3359  085A  0824               	movf	___awdiv@divisor+1,w
  3360  085B  1C03               	skipc
  3361  085C  03A6               	decf	___awdiv@dividend+1,f
  3362  085D  02A6               	subwf	___awdiv@dividend+1,f
  3363  085E                     l3492:
  3364  085E  142A               	bsf	___awdiv@quotient,0
  3365  085F                     l3494:
  3366  085F  3001               	movlw	1
  3367  0860                     u5885:
  3368  0860  1003               	clrc
  3369  0861  0CA4               	rrf	___awdiv@divisor+1,f
  3370  0862  0CA3               	rrf	___awdiv@divisor,f
  3371  0863  3EFF               	addlw	-1
  3372  0864  1D03               	skipz
  3373  0865  2860               	goto	u5885
  3374  0866                     l3496:
  3375  0866  3001               	movlw	1
  3376  0867  02A8               	subwf	___awdiv@counter,f
  3377  0868  1D03               	btfss	3,2
  3378  0869  286B               	goto	u5891
  3379  086A  286C               	goto	u5890
  3380  086B                     u5891:
  3381  086B  2847               	goto	l3488
  3382  086C                     u5890:
  3383  086C                     l3498:
  3384  086C  0829               	movf	___awdiv@sign,w
  3385  086D  1903               	btfsc	3,2
  3386  086E  2870               	goto	u5901
  3387  086F  2871               	goto	u5900
  3388  0870                     u5901:
  3389  0870  2876               	goto	l3502
  3390  0871                     u5900:
  3391  0871                     l3500:
  3392  0871  09AA               	comf	___awdiv@quotient,f
  3393  0872  09AB               	comf	___awdiv@quotient+1,f
  3394  0873  0AAA               	incf	___awdiv@quotient,f
  3395  0874  1903               	skipnz
  3396  0875  0AAB               	incf	___awdiv@quotient+1,f
  3397  0876                     l3502:
  3398  0876  082B               	movf	___awdiv@quotient+1,w
  3399  0877  00A4               	movwf	?___awdiv+1
  3400  0878  082A               	movf	___awdiv@quotient,w
  3401  0879  00A3               	movwf	?___awdiv
  3402  087A                     l474:
  3403  087A  0008               	return
  3404  087B                     __end_of___awdiv:
  3405                           
  3406                           	psect	text5
  3407  0800                     __ptext5:	
  3408 ;; *************** function _isdigit *****************
  3409 ;; Defined at:
  3410 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  c               1    wreg     unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  c               1    5[COMMON] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;		None               void
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3424 ;;      Params:         0       0       0       0       0
  3425 ;;      Locals:         2       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0
  3427 ;;      Totals:         2       0       0       0       0
  3428 ;;Total ram usage:        2 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    1
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_sprintf
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           
  3439                           ;psect for function _isdigit
  3440  0800                     _isdigit:
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3444                           ;isdigit@c stored from wreg
  3445  0800  00F5               	movwf	isdigit@c
  3446  0801                     l2744:
  3447  0801  01F4               	clrf	_isdigit$714
  3448  0802                     l2746:
  3449  0802  303A               	movlw	58
  3450  0803  0275               	subwf	isdigit@c,w
  3451  0804  1803               	skipnc
  3452  0805  2807               	goto	u4341
  3453  0806  2808               	goto	u4340
  3454  0807                     u4341:
  3455  0807  2810               	goto	l2752
  3456  0808                     u4340:
  3457  0808                     l2748:
  3458  0808  3030               	movlw	48
  3459  0809  0275               	subwf	isdigit@c,w
  3460  080A  1C03               	skipc
  3461  080B  280D               	goto	u4351
  3462  080C  280E               	goto	u4350
  3463  080D                     u4351:
  3464  080D  2810               	goto	l2752
  3465  080E                     u4350:
  3466  080E                     l2750:
  3467  080E  01F4               	clrf	_isdigit$714
  3468  080F  0AF4               	incf	_isdigit$714,f
  3469  0810                     l2752:
  3470  0810  0C74               	rrf	_isdigit$714,w
  3471  0811                     l808:
  3472  0811  0008               	return
  3473  0812                     __end_of_isdigit:
  3474                           
  3475                           	psect	text6
  3476  1061                     __ptext6:	
  3477 ;; *************** function _fround *****************
  3478 ;; Defined at:
  3479 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  prec            1    wreg     unsigned char 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  prec            1   57[BANK0 ] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  4   38[BANK0 ] unsigned char 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3493 ;;      Params:         0       4       0       0       0
  3494 ;;      Locals:         0       9       0       0       0
  3495 ;;      Temps:          0       7       0       0       0
  3496 ;;      Totals:         0      20       0       0       0
  3497 ;;Total ram usage:       20 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    3
  3500 ;; This function calls:
  3501 ;;		___flmul
  3502 ;;		___lwdiv
  3503 ;;		___lwmod
  3504 ;; This function is called by:
  3505 ;;		_sprintf
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           
  3510                           ;psect for function _fround
  3511  1061                     _fround:
  3512                           
  3513                           ;incstack = 0
  3514                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3515                           ;fround@prec stored from wreg
  3516  1061  1283               	bcf	3,5	;RP0=0, select bank0
  3517  1062  1303               	bcf	3,6	;RP1=0, select bank0
  3518  1063  00D9               	movwf	fround@prec
  3519  1064                     l3566:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3522  1064  306E               	movlw	110
  3523  1065  0259               	subwf	fround@prec,w
  3524  1066  1C03               	skipc
  3525  1067  2869               	goto	u6061
  3526  1068  286A               	goto	u6060
  3527  1069                     u6061:
  3528  1069  2979               	goto	l3574
  3529  106A                     u6060:
  3530  106A                     l3568:
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3533  106A  303F               	movlw	63
  3534  106B  00AF               	movwf	___flmul@b+3
  3535  106C  3000               	movlw	0
  3536  106D  00AE               	movwf	___flmul@b+2
  3537  106E  3000               	movlw	0
  3538  106F  00AD               	movwf	___flmul@b+1
  3539  1070  3000               	movlw	0
  3540  1071  00AC               	movwf	___flmul@b
  3541  1072  3064               	movlw	100
  3542  1073  00A2               	movwf	___lwdiv@divisor
  3543  1074  3000               	movlw	0
  3544  1075  00A3               	movwf	___lwdiv@divisor+1
  3545  1076  0859               	movf	fround@prec,w
  3546  1077  00CA               	movwf	??_fround
  3547  1078  01CB               	clrf	??_fround+1
  3548  1079  084A               	movf	??_fround,w
  3549  107A  00A4               	movwf	___lwdiv@dividend
  3550  107B  084B               	movf	??_fround+1,w
  3551  107C  00A5               	movwf	___lwdiv@dividend+1
  3552  107D  160A  158A  228B  160A  118A  	fcall	___lwdiv
  3553  1082  1283               	bcf	3,5	;RP0=0, select bank0
  3554  1083  1303               	bcf	3,6	;RP1=0, select bank0
  3555  1084  0822               	movf	?___lwdiv,w
  3556  1085  00CC               	movwf	??_fround+2
  3557  1086  3001               	movlw	1
  3558  1087                     u6075:
  3559  1087  1003               	clrc
  3560  1088  0DCC               	rlf	??_fround+2,f
  3561  1089  3EFF               	addlw	-1
  3562  108A  1D03               	skipz
  3563  108B  2887               	goto	u6075
  3564  108C  1003               	clrc
  3565  108D  0D4C               	rlf	??_fround+2,w
  3566  108E  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3567  108F  0084               	movwf	4
  3568  1090  120A  118A  270A  160A  118A  	fcall	stringdir
  3569  1095  00CD               	movwf	??_fround+3
  3570  1096  120A  118A  270A  160A  118A  	fcall	stringdir
  3571  109B  00CE               	movwf	??_fround+4
  3572  109C  120A  118A  270A  160A  118A  	fcall	stringdir
  3573  10A1  00CF               	movwf	??_fround+5
  3574  10A2  120A  118A  270A  160A  118A  	fcall	stringdir
  3575  10A7  00D0               	movwf	??_fround+6
  3576  10A8  0850               	movf	??_fround+6,w
  3577  10A9  00B3               	movwf	___flmul@a+3
  3578  10AA  084F               	movf	??_fround+5,w
  3579  10AB  00B2               	movwf	___flmul@a+2
  3580  10AC  084E               	movf	??_fround+4,w
  3581  10AD  00B1               	movwf	___flmul@a+1
  3582  10AE  084D               	movf	??_fround+3,w
  3583  10AF  00B0               	movwf	___flmul@a
  3584  10B0  120A  158A  213C  160A  118A  	fcall	___flmul
  3585  10B5  1283               	bcf	3,5	;RP0=0, select bank0
  3586  10B6  1303               	bcf	3,6	;RP1=0, select bank0
  3587  10B7  082F               	movf	?___flmul+3,w
  3588  10B8  00D8               	movwf	_fround$887+3
  3589  10B9  082E               	movf	?___flmul+2,w
  3590  10BA  00D7               	movwf	_fround$887+2
  3591  10BB  082D               	movf	?___flmul+1,w
  3592  10BC  00D6               	movwf	_fround$887+1
  3593  10BD  082C               	movf	?___flmul,w
  3594  10BE  00D5               	movwf	_fround$887
  3595                           
  3596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3597  10BF  300A               	movlw	10
  3598  10C0  00A2               	movwf	___lwdiv@divisor
  3599  10C1  3000               	movlw	0
  3600  10C2  00A3               	movwf	___lwdiv@divisor+1
  3601  10C3  0859               	movf	fround@prec,w
  3602  10C4  00CA               	movwf	??_fround
  3603  10C5  01CB               	clrf	??_fround+1
  3604  10C6  084A               	movf	??_fround,w
  3605  10C7  00F6               	movwf	___lwmod@dividend
  3606  10C8  084B               	movf	??_fround+1,w
  3607  10C9  00F7               	movwf	___lwmod@dividend+1
  3608  10CA  3064               	movlw	100
  3609  10CB  00F4               	movwf	___lwmod@divisor
  3610  10CC  3000               	movlw	0
  3611  10CD  00F5               	movwf	___lwmod@divisor+1
  3612  10CE  120A  118A  27C4  160A  118A  	fcall	___lwmod
  3613  10D3  0875               	movf	?___lwmod+1,w
  3614  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  3615  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  3616  10D6  00A5               	movwf	___lwdiv@dividend+1
  3617  10D7  0874               	movf	?___lwmod,w
  3618  10D8  00A4               	movwf	___lwdiv@dividend
  3619  10D9  160A  158A  228B  160A  118A  	fcall	___lwdiv
  3620  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  3621  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  3622  10E0  0822               	movf	?___lwdiv,w
  3623  10E1  00CC               	movwf	??_fround+2
  3624  10E2  3001               	movlw	1
  3625  10E3                     u6085:
  3626  10E3  1003               	clrc
  3627  10E4  0DCC               	rlf	??_fround+2,f
  3628  10E5  3EFF               	addlw	-1
  3629  10E6  1D03               	skipz
  3630  10E7  28E3               	goto	u6085
  3631  10E8  1003               	clrc
  3632  10E9  0D4C               	rlf	??_fround+2,w
  3633  10EA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3634  10EB  0084               	movwf	4
  3635  10EC  120A  118A  270A  160A  118A  	fcall	stringdir
  3636  10F1  00CD               	movwf	??_fround+3
  3637  10F2  120A  118A  270A  160A  118A  	fcall	stringdir
  3638  10F7  00CE               	movwf	??_fround+4
  3639  10F8  120A  118A  270A  160A  118A  	fcall	stringdir
  3640  10FD  00CF               	movwf	??_fround+5
  3641  10FE  120A  118A  270A  160A  118A  	fcall	stringdir
  3642  1103  00D0               	movwf	??_fround+6
  3643  1104  0850               	movf	??_fround+6,w
  3644  1105  00AF               	movwf	___flmul@b+3
  3645  1106  084F               	movf	??_fround+5,w
  3646  1107  00AE               	movwf	___flmul@b+2
  3647  1108  084E               	movf	??_fround+4,w
  3648  1109  00AD               	movwf	___flmul@b+1
  3649  110A  084D               	movf	??_fround+3,w
  3650  110B  00AC               	movwf	___flmul@b
  3651  110C  0858               	movf	_fround$887+3,w
  3652  110D  00B3               	movwf	___flmul@a+3
  3653  110E  0857               	movf	_fround$887+2,w
  3654  110F  00B2               	movwf	___flmul@a+2
  3655  1110  0856               	movf	_fround$887+1,w
  3656  1111  00B1               	movwf	___flmul@a+1
  3657  1112  0855               	movf	_fround$887,w
  3658  1113  00B0               	movwf	___flmul@a
  3659  1114  120A  158A  213C  160A  118A  	fcall	___flmul
  3660  1119  1283               	bcf	3,5	;RP0=0, select bank0
  3661  111A  1303               	bcf	3,6	;RP1=0, select bank0
  3662  111B  082F               	movf	?___flmul+3,w
  3663  111C  00D4               	movwf	_fround$888+3
  3664  111D  082E               	movf	?___flmul+2,w
  3665  111E  00D3               	movwf	_fround$888+2
  3666  111F  082D               	movf	?___flmul+1,w
  3667  1120  00D2               	movwf	_fround$888+1
  3668  1121  082C               	movf	?___flmul,w
  3669  1122  00D1               	movwf	_fround$888
  3670                           
  3671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3672  1123  300A               	movlw	10
  3673  1124  00F4               	movwf	___lwmod@divisor
  3674  1125  3000               	movlw	0
  3675  1126  00F5               	movwf	___lwmod@divisor+1
  3676  1127  0859               	movf	fround@prec,w
  3677  1128  00CA               	movwf	??_fround
  3678  1129  01CB               	clrf	??_fround+1
  3679  112A  084A               	movf	??_fround,w
  3680  112B  00F6               	movwf	___lwmod@dividend
  3681  112C  084B               	movf	??_fround+1,w
  3682  112D  00F7               	movwf	___lwmod@dividend+1
  3683  112E  120A  118A  27C4  160A  118A  	fcall	___lwmod
  3684  1133  0874               	movf	?___lwmod,w
  3685  1134  1283               	bcf	3,5	;RP0=0, select bank0
  3686  1135  1303               	bcf	3,6	;RP1=0, select bank0
  3687  1136  00CC               	movwf	??_fround+2
  3688  1137  3001               	movlw	1
  3689  1138                     u6095:
  3690  1138  1003               	clrc
  3691  1139  0DCC               	rlf	??_fround+2,f
  3692  113A  3EFF               	addlw	-1
  3693  113B  1D03               	skipz
  3694  113C  2938               	goto	u6095
  3695  113D  1003               	clrc
  3696  113E  0D4C               	rlf	??_fround+2,w
  3697  113F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3698  1140  0084               	movwf	4
  3699  1141  120A  118A  270A  160A  118A  	fcall	stringdir
  3700  1146  00CD               	movwf	??_fround+3
  3701  1147  120A  118A  270A  160A  118A  	fcall	stringdir
  3702  114C  00CE               	movwf	??_fround+4
  3703  114D  120A  118A  270A  160A  118A  	fcall	stringdir
  3704  1152  00CF               	movwf	??_fround+5
  3705  1153  120A  118A  270A  160A  118A  	fcall	stringdir
  3706  1158  00D0               	movwf	??_fround+6
  3707  1159  0850               	movf	??_fround+6,w
  3708  115A  00AF               	movwf	___flmul@b+3
  3709  115B  084F               	movf	??_fround+5,w
  3710  115C  00AE               	movwf	___flmul@b+2
  3711  115D  084E               	movf	??_fround+4,w
  3712  115E  00AD               	movwf	___flmul@b+1
  3713  115F  084D               	movf	??_fround+3,w
  3714  1160  00AC               	movwf	___flmul@b
  3715  1161  0854               	movf	_fround$888+3,w
  3716  1162  00B3               	movwf	___flmul@a+3
  3717  1163  0853               	movf	_fround$888+2,w
  3718  1164  00B2               	movwf	___flmul@a+2
  3719  1165  0852               	movf	_fround$888+1,w
  3720  1166  00B1               	movwf	___flmul@a+1
  3721  1167  0851               	movf	_fround$888,w
  3722  1168  00B0               	movwf	___flmul@a
  3723  1169  120A  158A  213C  160A  118A  	fcall	___flmul
  3724  116E  1283               	bcf	3,5	;RP0=0, select bank0
  3725  116F  1303               	bcf	3,6	;RP1=0, select bank0
  3726  1170  082F               	movf	?___flmul+3,w
  3727  1171  00C9               	movwf	?_fround+3
  3728  1172  082E               	movf	?___flmul+2,w
  3729  1173  00C8               	movwf	?_fround+2
  3730  1174  082D               	movf	?___flmul+1,w
  3731  1175  00C7               	movwf	?_fround+1
  3732  1176  082C               	movf	?___flmul,w
  3733  1177  00C6               	movwf	?_fround
  3734  1178  2A6D               	goto	l218
  3735  1179                     l3574:
  3736  1179  300B               	movlw	11
  3737  117A  0259               	subwf	fround@prec,w
  3738  117B  1C03               	skipc
  3739  117C  297E               	goto	u6101
  3740  117D  297F               	goto	u6100
  3741  117E                     u6101:
  3742  117E  2A2A               	goto	l3580
  3743  117F                     u6100:
  3744  117F                     l3576:
  3745                           
  3746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3747  117F  303F               	movlw	63
  3748  1180  00AF               	movwf	___flmul@b+3
  3749  1181  3000               	movlw	0
  3750  1182  00AE               	movwf	___flmul@b+2
  3751  1183  3000               	movlw	0
  3752  1184  00AD               	movwf	___flmul@b+1
  3753  1185  3000               	movlw	0
  3754  1186  00AC               	movwf	___flmul@b
  3755  1187  300A               	movlw	10
  3756  1188  00A2               	movwf	___lwdiv@divisor
  3757  1189  3000               	movlw	0
  3758  118A  00A3               	movwf	___lwdiv@divisor+1
  3759  118B  0859               	movf	fround@prec,w
  3760  118C  00CA               	movwf	??_fround
  3761  118D  01CB               	clrf	??_fround+1
  3762  118E  084A               	movf	??_fround,w
  3763  118F  00A4               	movwf	___lwdiv@dividend
  3764  1190  084B               	movf	??_fround+1,w
  3765  1191  00A5               	movwf	___lwdiv@dividend+1
  3766  1192  160A  158A  228B  160A  118A  	fcall	___lwdiv
  3767  1197  1283               	bcf	3,5	;RP0=0, select bank0
  3768  1198  1303               	bcf	3,6	;RP1=0, select bank0
  3769  1199  0822               	movf	?___lwdiv,w
  3770  119A  00CC               	movwf	??_fround+2
  3771  119B  3001               	movlw	1
  3772  119C                     u6115:
  3773  119C  1003               	clrc
  3774  119D  0DCC               	rlf	??_fround+2,f
  3775  119E  3EFF               	addlw	-1
  3776  119F  1D03               	skipz
  3777  11A0  299C               	goto	u6115
  3778  11A1  1003               	clrc
  3779  11A2  0D4C               	rlf	??_fround+2,w
  3780  11A3  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3781  11A4  0084               	movwf	4
  3782  11A5  120A  118A  270A  160A  118A  	fcall	stringdir
  3783  11AA  00CD               	movwf	??_fround+3
  3784  11AB  120A  118A  270A  160A  118A  	fcall	stringdir
  3785  11B0  00CE               	movwf	??_fround+4
  3786  11B1  120A  118A  270A  160A  118A  	fcall	stringdir
  3787  11B6  00CF               	movwf	??_fround+5
  3788  11B7  120A  118A  270A  160A  118A  	fcall	stringdir
  3789  11BC  00D0               	movwf	??_fround+6
  3790  11BD  0850               	movf	??_fround+6,w
  3791  11BE  00B3               	movwf	___flmul@a+3
  3792  11BF  084F               	movf	??_fround+5,w
  3793  11C0  00B2               	movwf	___flmul@a+2
  3794  11C1  084E               	movf	??_fround+4,w
  3795  11C2  00B1               	movwf	___flmul@a+1
  3796  11C3  084D               	movf	??_fround+3,w
  3797  11C4  00B0               	movwf	___flmul@a
  3798  11C5  120A  158A  213C  160A  118A  	fcall	___flmul
  3799  11CA  1283               	bcf	3,5	;RP0=0, select bank0
  3800  11CB  1303               	bcf	3,6	;RP1=0, select bank0
  3801  11CC  082F               	movf	?___flmul+3,w
  3802  11CD  00D8               	movwf	_fround$887+3
  3803  11CE  082E               	movf	?___flmul+2,w
  3804  11CF  00D7               	movwf	_fround$887+2
  3805  11D0  082D               	movf	?___flmul+1,w
  3806  11D1  00D6               	movwf	_fround$887+1
  3807  11D2  082C               	movf	?___flmul,w
  3808  11D3  00D5               	movwf	_fround$887
  3809                           
  3810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3811  11D4  300A               	movlw	10
  3812  11D5  00F4               	movwf	___lwmod@divisor
  3813  11D6  3000               	movlw	0
  3814  11D7  00F5               	movwf	___lwmod@divisor+1
  3815  11D8  0859               	movf	fround@prec,w
  3816  11D9  00CA               	movwf	??_fround
  3817  11DA  01CB               	clrf	??_fround+1
  3818  11DB  084A               	movf	??_fround,w
  3819  11DC  00F6               	movwf	___lwmod@dividend
  3820  11DD  084B               	movf	??_fround+1,w
  3821  11DE  00F7               	movwf	___lwmod@dividend+1
  3822  11DF  120A  118A  27C4  160A  118A  	fcall	___lwmod
  3823  11E4  0874               	movf	?___lwmod,w
  3824  11E5  1283               	bcf	3,5	;RP0=0, select bank0
  3825  11E6  1303               	bcf	3,6	;RP1=0, select bank0
  3826  11E7  00CC               	movwf	??_fround+2
  3827  11E8  3001               	movlw	1
  3828  11E9                     u6125:
  3829  11E9  1003               	clrc
  3830  11EA  0DCC               	rlf	??_fround+2,f
  3831  11EB  3EFF               	addlw	-1
  3832  11EC  1D03               	skipz
  3833  11ED  29E9               	goto	u6125
  3834  11EE  1003               	clrc
  3835  11EF  0D4C               	rlf	??_fround+2,w
  3836  11F0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3837  11F1  0084               	movwf	4
  3838  11F2  120A  118A  270A  160A  118A  	fcall	stringdir
  3839  11F7  00CD               	movwf	??_fround+3
  3840  11F8  120A  118A  270A  160A  118A  	fcall	stringdir
  3841  11FD  00CE               	movwf	??_fround+4
  3842  11FE  120A  118A  270A  160A  118A  	fcall	stringdir
  3843  1203  00CF               	movwf	??_fround+5
  3844  1204  120A  118A  270A  160A  118A  	fcall	stringdir
  3845  1209  00D0               	movwf	??_fround+6
  3846  120A  0850               	movf	??_fround+6,w
  3847  120B  00AF               	movwf	___flmul@b+3
  3848  120C  084F               	movf	??_fround+5,w
  3849  120D  00AE               	movwf	___flmul@b+2
  3850  120E  084E               	movf	??_fround+4,w
  3851  120F  00AD               	movwf	___flmul@b+1
  3852  1210  084D               	movf	??_fround+3,w
  3853  1211  00AC               	movwf	___flmul@b
  3854  1212  0858               	movf	_fround$887+3,w
  3855  1213  00B3               	movwf	___flmul@a+3
  3856  1214  0857               	movf	_fround$887+2,w
  3857  1215  00B2               	movwf	___flmul@a+2
  3858  1216  0856               	movf	_fround$887+1,w
  3859  1217  00B1               	movwf	___flmul@a+1
  3860  1218  0855               	movf	_fround$887,w
  3861  1219  00B0               	movwf	___flmul@a
  3862  121A  120A  158A  213C  160A  118A  	fcall	___flmul
  3863  121F  1283               	bcf	3,5	;RP0=0, select bank0
  3864  1220  1303               	bcf	3,6	;RP1=0, select bank0
  3865  1221  082F               	movf	?___flmul+3,w
  3866  1222  00C9               	movwf	?_fround+3
  3867  1223  082E               	movf	?___flmul+2,w
  3868  1224  00C8               	movwf	?_fround+2
  3869  1225  082D               	movf	?___flmul+1,w
  3870  1226  00C7               	movwf	?_fround+1
  3871  1227  082C               	movf	?___flmul,w
  3872  1228  00C6               	movwf	?_fround
  3873  1229  2A6D               	goto	l218
  3874  122A                     l3580:
  3875                           
  3876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3877  122A  303F               	movlw	63
  3878  122B  00AF               	movwf	___flmul@b+3
  3879  122C  3000               	movlw	0
  3880  122D  00AE               	movwf	___flmul@b+2
  3881  122E  3000               	movlw	0
  3882  122F  00AD               	movwf	___flmul@b+1
  3883  1230  3000               	movlw	0
  3884  1231  00AC               	movwf	___flmul@b
  3885  1232  0859               	movf	fround@prec,w
  3886  1233  00CA               	movwf	??_fround
  3887  1234  3001               	movlw	1
  3888  1235                     u6135:
  3889  1235  1003               	clrc
  3890  1236  0DCA               	rlf	??_fround,f
  3891  1237  3EFF               	addlw	-1
  3892  1238  1D03               	skipz
  3893  1239  2A35               	goto	u6135
  3894  123A  1003               	clrc
  3895  123B  0D4A               	rlf	??_fround,w
  3896  123C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3897  123D  0084               	movwf	4
  3898  123E  120A  118A  270A  160A  118A  	fcall	stringdir
  3899  1243  00CB               	movwf	??_fround+1
  3900  1244  120A  118A  270A  160A  118A  	fcall	stringdir
  3901  1249  00CC               	movwf	??_fround+2
  3902  124A  120A  118A  270A  160A  118A  	fcall	stringdir
  3903  124F  00CD               	movwf	??_fround+3
  3904  1250  120A  118A  270A  160A  118A  	fcall	stringdir
  3905  1255  00CE               	movwf	??_fround+4
  3906  1256  084E               	movf	??_fround+4,w
  3907  1257  00B3               	movwf	___flmul@a+3
  3908  1258  084D               	movf	??_fround+3,w
  3909  1259  00B2               	movwf	___flmul@a+2
  3910  125A  084C               	movf	??_fround+2,w
  3911  125B  00B1               	movwf	___flmul@a+1
  3912  125C  084B               	movf	??_fround+1,w
  3913  125D  00B0               	movwf	___flmul@a
  3914  125E  120A  158A  213C  160A  118A  	fcall	___flmul
  3915  1263  1283               	bcf	3,5	;RP0=0, select bank0
  3916  1264  1303               	bcf	3,6	;RP1=0, select bank0
  3917  1265  082F               	movf	?___flmul+3,w
  3918  1266  00C9               	movwf	?_fround+3
  3919  1267  082E               	movf	?___flmul+2,w
  3920  1268  00C8               	movwf	?_fround+2
  3921  1269  082D               	movf	?___flmul+1,w
  3922  126A  00C7               	movwf	?_fround+1
  3923  126B  082C               	movf	?___flmul,w
  3924  126C  00C6               	movwf	?_fround
  3925  126D                     l218:
  3926  126D  0008               	return
  3927  126E                     __end_of_fround:
  3928                           
  3929                           	psect	text7
  3930  07C4                     __ptext7:	
  3931 ;; *************** function ___lwmod *****************
  3932 ;; Defined at:
  3933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  divisor         2    4[COMMON] unsigned int 
  3936 ;;  dividend        2    6[COMMON] unsigned int 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  counter         1    1[BANK0 ] unsigned char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  2    4[COMMON] unsigned int 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3948 ;;      Params:         4       0       0       0       0
  3949 ;;      Locals:         0       1       0       0       0
  3950 ;;      Temps:          0       1       0       0       0
  3951 ;;      Totals:         4       2       0       0       0
  3952 ;;Total ram usage:        6 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_fround
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function ___lwmod
  3964  07C4                     ___lwmod:
  3965  07C4                     l3544:	
  3966                           ;incstack = 0
  3967                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3968                           
  3969  07C4  0874               	movf	___lwmod@divisor,w
  3970  07C5  0475               	iorwf	___lwmod@divisor+1,w
  3971  07C6  1903               	btfsc	3,2
  3972  07C7  2FC9               	goto	u6001
  3973  07C8  2FCA               	goto	u6000
  3974  07C9                     u6001:
  3975  07C9  2FFB               	goto	l3562
  3976  07CA                     u6000:
  3977  07CA                     l3546:
  3978  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  3979  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  3980  07CC  01A1               	clrf	___lwmod@counter
  3981  07CD  0AA1               	incf	___lwmod@counter,f
  3982  07CE  2FDA               	goto	l3552
  3983  07CF                     l3548:
  3984  07CF  3001               	movlw	1
  3985  07D0                     u6015:
  3986  07D0  1003               	clrc
  3987  07D1  0DF4               	rlf	___lwmod@divisor,f
  3988  07D2  0DF5               	rlf	___lwmod@divisor+1,f
  3989  07D3  3EFF               	addlw	-1
  3990  07D4  1D03               	skipz
  3991  07D5  2FD0               	goto	u6015
  3992  07D6                     l3550:
  3993  07D6  3001               	movlw	1
  3994  07D7  00A0               	movwf	??___lwmod
  3995  07D8  0820               	movf	??___lwmod,w
  3996  07D9  07A1               	addwf	___lwmod@counter,f
  3997  07DA                     l3552:
  3998  07DA  1FF5               	btfss	___lwmod@divisor+1,7
  3999  07DB  2FDD               	goto	u6021
  4000  07DC  2FDE               	goto	u6020
  4001  07DD                     u6021:
  4002  07DD  2FCF               	goto	l3548
  4003  07DE                     u6020:
  4004  07DE                     l3554:
  4005  07DE  0875               	movf	___lwmod@divisor+1,w
  4006  07DF  0277               	subwf	___lwmod@dividend+1,w
  4007  07E0  1D03               	skipz
  4008  07E1  2FE4               	goto	u6035
  4009  07E2  0874               	movf	___lwmod@divisor,w
  4010  07E3  0276               	subwf	___lwmod@dividend,w
  4011  07E4                     u6035:
  4012  07E4  1C03               	skipc
  4013  07E5  2FE7               	goto	u6031
  4014  07E6  2FE8               	goto	u6030
  4015  07E7                     u6031:
  4016  07E7  2FEE               	goto	l3558
  4017  07E8                     u6030:
  4018  07E8                     l3556:
  4019  07E8  0874               	movf	___lwmod@divisor,w
  4020  07E9  02F6               	subwf	___lwmod@dividend,f
  4021  07EA  0875               	movf	___lwmod@divisor+1,w
  4022  07EB  1C03               	skipc
  4023  07EC  03F7               	decf	___lwmod@dividend+1,f
  4024  07ED  02F7               	subwf	___lwmod@dividend+1,f
  4025  07EE                     l3558:
  4026  07EE  3001               	movlw	1
  4027  07EF                     u6045:
  4028  07EF  1003               	clrc
  4029  07F0  0CF5               	rrf	___lwmod@divisor+1,f
  4030  07F1  0CF4               	rrf	___lwmod@divisor,f
  4031  07F2  3EFF               	addlw	-1
  4032  07F3  1D03               	skipz
  4033  07F4  2FEF               	goto	u6045
  4034  07F5                     l3560:
  4035  07F5  3001               	movlw	1
  4036  07F6  02A1               	subwf	___lwmod@counter,f
  4037  07F7  1D03               	btfss	3,2
  4038  07F8  2FFA               	goto	u6051
  4039  07F9  2FFB               	goto	u6050
  4040  07FA                     u6051:
  4041  07FA  2FDE               	goto	l3554
  4042  07FB                     u6050:
  4043  07FB                     l3562:
  4044  07FB  0877               	movf	___lwmod@dividend+1,w
  4045  07FC  00F5               	movwf	?___lwmod+1
  4046  07FD  0876               	movf	___lwmod@dividend,w
  4047  07FE  00F4               	movwf	?___lwmod
  4048  07FF                     l637:
  4049  07FF  0008               	return
  4050  0800                     __end_of___lwmod:
  4051                           
  4052                           	psect	text8
  4053  1A8B                     __ptext8:	
  4054 ;; *************** function ___lwdiv *****************
  4055 ;; Defined at:
  4056 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  divisor         2    2[BANK0 ] unsigned int 
  4059 ;;  dividend        2    4[BANK0 ] unsigned int 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  quotient        2    7[BANK0 ] unsigned int 
  4062 ;;  counter         1    9[BANK0 ] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  2    2[BANK0 ] unsigned int 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4072 ;;      Params:         0       4       0       0       0
  4073 ;;      Locals:         0       3       0       0       0
  4074 ;;      Temps:          0       1       0       0       0
  4075 ;;      Totals:         0       8       0       0       0
  4076 ;;Total ram usage:        8 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    1
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_fround
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           
  4087                           ;psect for function ___lwdiv
  4088  1A8B                     ___lwdiv:
  4089  1A8B                     l2280:	
  4090                           ;incstack = 0
  4091                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4092                           
  4093  1A8B  1283               	bcf	3,5	;RP0=0, select bank0
  4094  1A8C  1303               	bcf	3,6	;RP1=0, select bank0
  4095  1A8D  01A7               	clrf	___lwdiv@quotient
  4096  1A8E  01A8               	clrf	___lwdiv@quotient+1
  4097  1A8F                     l2282:
  4098  1A8F  0822               	movf	___lwdiv@divisor,w
  4099  1A90  0423               	iorwf	___lwdiv@divisor+1,w
  4100  1A91  1903               	btfsc	3,2
  4101  1A92  2A94               	goto	u3131
  4102  1A93  2A95               	goto	u3130
  4103  1A94                     u3131:
  4104  1A94  2ACC               	goto	l2302
  4105  1A95                     u3130:
  4106  1A95                     l2284:
  4107  1A95  01A9               	clrf	___lwdiv@counter
  4108  1A96  0AA9               	incf	___lwdiv@counter,f
  4109  1A97  2AA3               	goto	l2290
  4110  1A98                     l2286:
  4111  1A98  3001               	movlw	1
  4112  1A99                     u3145:
  4113  1A99  1003               	clrc
  4114  1A9A  0DA2               	rlf	___lwdiv@divisor,f
  4115  1A9B  0DA3               	rlf	___lwdiv@divisor+1,f
  4116  1A9C  3EFF               	addlw	-1
  4117  1A9D  1D03               	skipz
  4118  1A9E  2A99               	goto	u3145
  4119  1A9F                     l2288:
  4120  1A9F  3001               	movlw	1
  4121  1AA0  00A6               	movwf	??___lwdiv
  4122  1AA1  0826               	movf	??___lwdiv,w
  4123  1AA2  07A9               	addwf	___lwdiv@counter,f
  4124  1AA3                     l2290:
  4125  1AA3  1FA3               	btfss	___lwdiv@divisor+1,7
  4126  1AA4  2AA6               	goto	u3151
  4127  1AA5  2AA7               	goto	u3150
  4128  1AA6                     u3151:
  4129  1AA6  2A98               	goto	l2286
  4130  1AA7                     u3150:
  4131  1AA7                     l2292:
  4132  1AA7  3001               	movlw	1
  4133  1AA8                     u3165:
  4134  1AA8  1003               	clrc
  4135  1AA9  0DA7               	rlf	___lwdiv@quotient,f
  4136  1AAA  0DA8               	rlf	___lwdiv@quotient+1,f
  4137  1AAB  3EFF               	addlw	-1
  4138  1AAC  1D03               	skipz
  4139  1AAD  2AA8               	goto	u3165
  4140  1AAE  0823               	movf	___lwdiv@divisor+1,w
  4141  1AAF  0225               	subwf	___lwdiv@dividend+1,w
  4142  1AB0  1D03               	skipz
  4143  1AB1  2AB4               	goto	u3175
  4144  1AB2  0822               	movf	___lwdiv@divisor,w
  4145  1AB3  0224               	subwf	___lwdiv@dividend,w
  4146  1AB4                     u3175:
  4147  1AB4  1C03               	skipc
  4148  1AB5  2AB7               	goto	u3171
  4149  1AB6  2AB8               	goto	u3170
  4150  1AB7                     u3171:
  4151  1AB7  2ABF               	goto	l2298
  4152  1AB8                     u3170:
  4153  1AB8                     l2294:
  4154  1AB8  0822               	movf	___lwdiv@divisor,w
  4155  1AB9  02A4               	subwf	___lwdiv@dividend,f
  4156  1ABA  0823               	movf	___lwdiv@divisor+1,w
  4157  1ABB  1C03               	skipc
  4158  1ABC  03A5               	decf	___lwdiv@dividend+1,f
  4159  1ABD  02A5               	subwf	___lwdiv@dividend+1,f
  4160  1ABE                     l2296:
  4161  1ABE  1427               	bsf	___lwdiv@quotient,0
  4162  1ABF                     l2298:
  4163  1ABF  3001               	movlw	1
  4164  1AC0                     u3185:
  4165  1AC0  1003               	clrc
  4166  1AC1  0CA3               	rrf	___lwdiv@divisor+1,f
  4167  1AC2  0CA2               	rrf	___lwdiv@divisor,f
  4168  1AC3  3EFF               	addlw	-1
  4169  1AC4  1D03               	skipz
  4170  1AC5  2AC0               	goto	u3185
  4171  1AC6                     l2300:
  4172  1AC6  3001               	movlw	1
  4173  1AC7  02A9               	subwf	___lwdiv@counter,f
  4174  1AC8  1D03               	btfss	3,2
  4175  1AC9  2ACB               	goto	u3191
  4176  1ACA  2ACC               	goto	u3190
  4177  1ACB                     u3191:
  4178  1ACB  2AA7               	goto	l2292
  4179  1ACC                     u3190:
  4180  1ACC                     l2302:
  4181  1ACC  0828               	movf	___lwdiv@quotient+1,w
  4182  1ACD  00A3               	movwf	?___lwdiv+1
  4183  1ACE  0827               	movf	___lwdiv@quotient,w
  4184  1ACF  00A2               	movwf	?___lwdiv
  4185  1AD0                     l627:
  4186  1AD0  0008               	return
  4187  1AD1                     __end_of___lwdiv:
  4188                           
  4189                           	psect	text9
  4190  093C                     __ptext9:	
  4191 ;; *************** function ___flmul *****************
  4192 ;; Defined at:
  4193 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  b               4   12[BANK0 ] unsigned int 
  4196 ;;  a               4   16[BANK0 ] unsigned int 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  prod            4   32[BANK0 ] struct .
  4199 ;;  grs             4   26[BANK0 ] unsigned long 
  4200 ;;  temp            2   36[BANK0 ] struct .
  4201 ;;  bexp            1   31[BANK0 ] unsigned char 
  4202 ;;  aexp            1   30[BANK0 ] unsigned char 
  4203 ;;  sign            1   25[BANK0 ] unsigned char 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  4   12[BANK0 ] unsigned char 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4213 ;;      Params:         0       8       0       0       0
  4214 ;;      Locals:         0      13       0       0       0
  4215 ;;      Temps:          0       5       0       0       0
  4216 ;;      Totals:         0      26       0       0       0
  4217 ;;Total ram usage:       26 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    2
  4220 ;; This function calls:
  4221 ;;		__Umul8_16
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;;		_fround
  4225 ;;		_scale
  4226 ;;		_sprintf
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           
  4231                           ;psect for function ___flmul
  4232  093C                     ___flmul:
  4233  093C                     l2522:	
  4234                           ;incstack = 0
  4235                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4236                           
  4237  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4238  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4239  093E  082F               	movf	___flmul@b+3,w
  4240  093F  3980               	andlw	128
  4241  0940  00B4               	movwf	??___flmul
  4242  0941  0834               	movf	??___flmul,w
  4243  0942  00B9               	movwf	___flmul@sign
  4244  0943                     l2524:
  4245  0943  082F               	movf	___flmul@b+3,w
  4246  0944  00B4               	movwf	??___flmul
  4247  0945  0734               	addwf	??___flmul,w
  4248  0946  00B5               	movwf	??___flmul+1
  4249  0947  0835               	movf	??___flmul+1,w
  4250  0948  00BF               	movwf	___flmul@bexp
  4251  0949                     l2526:
  4252  0949  1FAE               	btfss	___flmul@b+2,7
  4253  094A  294C               	goto	u3721
  4254  094B  294D               	goto	u3720
  4255  094C                     u3721:
  4256  094C  294E               	goto	l2530
  4257  094D                     u3720:
  4258  094D                     l2528:
  4259  094D  143F               	bsf	___flmul@bexp,0
  4260  094E                     l2530:
  4261  094E  083F               	movf	___flmul@bexp,w
  4262  094F  1903               	btfsc	3,2
  4263  0950  2952               	goto	u3731
  4264  0951  2953               	goto	u3730
  4265  0952                     u3731:
  4266  0952  2962               	goto	l2538
  4267  0953                     u3730:
  4268  0953                     l2532:
  4269  0953  0A3F               	incf	___flmul@bexp,w
  4270  0954  1D03               	btfss	3,2
  4271  0955  2957               	goto	u3741
  4272  0956  2958               	goto	u3740
  4273  0957                     u3741:
  4274  0957  2960               	goto	l2536
  4275  0958                     u3740:
  4276  0958                     l2534:
  4277  0958  3000               	movlw	0
  4278  0959  00AF               	movwf	___flmul@b+3
  4279  095A  3000               	movlw	0
  4280  095B  00AE               	movwf	___flmul@b+2
  4281  095C  3000               	movlw	0
  4282  095D  00AD               	movwf	___flmul@b+1
  4283  095E  3000               	movlw	0
  4284  095F  00AC               	movwf	___flmul@b
  4285  0960                     l2536:
  4286  0960  17AE               	bsf	___flmul@b+2,7
  4287  0961  296A               	goto	l2540
  4288  0962                     l2538:
  4289  0962  3000               	movlw	0
  4290  0963  00AF               	movwf	___flmul@b+3
  4291  0964  3000               	movlw	0
  4292  0965  00AE               	movwf	___flmul@b+2
  4293  0966  3000               	movlw	0
  4294  0967  00AD               	movwf	___flmul@b+1
  4295  0968  3000               	movlw	0
  4296  0969  00AC               	movwf	___flmul@b
  4297  096A                     l2540:
  4298  096A  0833               	movf	___flmul@a+3,w
  4299  096B  3980               	andlw	128
  4300  096C  00B4               	movwf	??___flmul
  4301  096D  0834               	movf	??___flmul,w
  4302  096E  06B9               	xorwf	___flmul@sign,f
  4303  096F                     l2542:
  4304  096F  0833               	movf	___flmul@a+3,w
  4305  0970  00B4               	movwf	??___flmul
  4306  0971  0734               	addwf	??___flmul,w
  4307  0972  00B5               	movwf	??___flmul+1
  4308  0973  0835               	movf	??___flmul+1,w
  4309  0974  00BE               	movwf	___flmul@aexp
  4310  0975                     l2544:
  4311  0975  1FB2               	btfss	___flmul@a+2,7
  4312  0976  2978               	goto	u3751
  4313  0977  2979               	goto	u3750
  4314  0978                     u3751:
  4315  0978  297A               	goto	l2548
  4316  0979                     u3750:
  4317  0979                     l2546:
  4318  0979  143E               	bsf	___flmul@aexp,0
  4319  097A                     l2548:
  4320  097A  083E               	movf	___flmul@aexp,w
  4321  097B  1903               	btfsc	3,2
  4322  097C  297E               	goto	u3761
  4323  097D  297F               	goto	u3760
  4324  097E                     u3761:
  4325  097E  298E               	goto	l2556
  4326  097F                     u3760:
  4327  097F                     l2550:
  4328  097F  0A3E               	incf	___flmul@aexp,w
  4329  0980  1D03               	btfss	3,2
  4330  0981  2983               	goto	u3771
  4331  0982  2984               	goto	u3770
  4332  0983                     u3771:
  4333  0983  298C               	goto	l2554
  4334  0984                     u3770:
  4335  0984                     l2552:
  4336  0984  3000               	movlw	0
  4337  0985  00B3               	movwf	___flmul@a+3
  4338  0986  3000               	movlw	0
  4339  0987  00B2               	movwf	___flmul@a+2
  4340  0988  3000               	movlw	0
  4341  0989  00B1               	movwf	___flmul@a+1
  4342  098A  3000               	movlw	0
  4343  098B  00B0               	movwf	___flmul@a
  4344  098C                     l2554:
  4345  098C  17B2               	bsf	___flmul@a+2,7
  4346  098D  2996               	goto	l2558
  4347  098E                     l2556:
  4348  098E  3000               	movlw	0
  4349  098F  00B3               	movwf	___flmul@a+3
  4350  0990  3000               	movlw	0
  4351  0991  00B2               	movwf	___flmul@a+2
  4352  0992  3000               	movlw	0
  4353  0993  00B1               	movwf	___flmul@a+1
  4354  0994  3000               	movlw	0
  4355  0995  00B0               	movwf	___flmul@a
  4356  0996                     l2558:
  4357  0996  083E               	movf	___flmul@aexp,w
  4358  0997  1903               	btfsc	3,2
  4359  0998  299A               	goto	u3781
  4360  0999  299B               	goto	u3780
  4361  099A                     u3781:
  4362  099A  29A0               	goto	l2562
  4363  099B                     u3780:
  4364  099B                     l2560:
  4365  099B  083F               	movf	___flmul@bexp,w
  4366  099C  1D03               	btfss	3,2
  4367  099D  299F               	goto	u3791
  4368  099E  29A0               	goto	u3790
  4369  099F                     u3791:
  4370  099F  29A9               	goto	l2566
  4371  09A0                     u3790:
  4372  09A0                     l2562:
  4373  09A0  3000               	movlw	0
  4374  09A1  00AF               	movwf	?___flmul+3
  4375  09A2  3000               	movlw	0
  4376  09A3  00AE               	movwf	?___flmul+2
  4377  09A4  3000               	movlw	0
  4378  09A5  00AD               	movwf	?___flmul+1
  4379  09A6  3000               	movlw	0
  4380  09A7  00AC               	movwf	?___flmul
  4381  09A8  2C9C               	goto	l744
  4382  09A9                     l2566:
  4383  09A9  082C               	movf	___flmul@b,w
  4384  09AA  00B4               	movwf	??___flmul
  4385  09AB  0834               	movf	??___flmul,w
  4386  09AC  00F4               	movwf	__Umul8_16@multiplicand
  4387  09AD  0832               	movf	___flmul@a+2,w
  4388  09AE  160A  158A  21F1  120A  158A  	fcall	__Umul8_16
  4389  09B3  0875               	movf	?__Umul8_16+1,w
  4390  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4391  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4392  09B6  00C5               	movwf	___flmul@temp+1
  4393  09B7  0874               	movf	?__Umul8_16,w
  4394  09B8  00C4               	movwf	___flmul@temp
  4395  09B9                     l2568:
  4396  09B9  0844               	movf	___flmul@temp,w
  4397  09BA  00B4               	movwf	??___flmul
  4398  09BB  01B5               	clrf	??___flmul+1
  4399  09BC  01B6               	clrf	??___flmul+2
  4400  09BD  01B7               	clrf	??___flmul+3
  4401  09BE  0837               	movf	??___flmul+3,w
  4402  09BF  00BD               	movwf	___flmul@grs+3
  4403  09C0  0836               	movf	??___flmul+2,w
  4404  09C1  00BC               	movwf	___flmul@grs+2
  4405  09C2  0835               	movf	??___flmul+1,w
  4406  09C3  00BB               	movwf	___flmul@grs+1
  4407  09C4  0834               	movf	??___flmul,w
  4408  09C5  00BA               	movwf	___flmul@grs
  4409  09C6                     l2570:
  4410  09C6  0845               	movf	___flmul@temp+1,w
  4411  09C7  00B4               	movwf	??___flmul
  4412  09C8  01B5               	clrf	??___flmul+1
  4413  09C9  01B6               	clrf	??___flmul+2
  4414  09CA  01B7               	clrf	??___flmul+3
  4415  09CB  0837               	movf	??___flmul+3,w
  4416  09CC  00C3               	movwf	___flmul@prod+3
  4417  09CD  0836               	movf	??___flmul+2,w
  4418  09CE  00C2               	movwf	___flmul@prod+2
  4419  09CF  0835               	movf	??___flmul+1,w
  4420  09D0  00C1               	movwf	___flmul@prod+1
  4421  09D1  0834               	movf	??___flmul,w
  4422  09D2  00C0               	movwf	___flmul@prod
  4423  09D3  082D               	movf	___flmul@b+1,w
  4424  09D4  00B4               	movwf	??___flmul
  4425  09D5  0834               	movf	??___flmul,w
  4426  09D6  00F4               	movwf	__Umul8_16@multiplicand
  4427  09D7  0831               	movf	___flmul@a+1,w
  4428  09D8  160A  158A  21F1  120A  158A  	fcall	__Umul8_16
  4429  09DD  0875               	movf	?__Umul8_16+1,w
  4430  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4431  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4432  09E0  00C5               	movwf	___flmul@temp+1
  4433  09E1  0874               	movf	?__Umul8_16,w
  4434  09E2  00C4               	movwf	___flmul@temp
  4435  09E3                     l2572:
  4436  09E3  0844               	movf	___flmul@temp,w
  4437  09E4  00B4               	movwf	??___flmul
  4438  09E5  01B5               	clrf	??___flmul+1
  4439  09E6  01B6               	clrf	??___flmul+2
  4440  09E7  01B7               	clrf	??___flmul+3
  4441  09E8  0834               	movf	??___flmul,w
  4442  09E9  07BA               	addwf	___flmul@grs,f
  4443  09EA  0835               	movf	??___flmul+1,w
  4444  09EB  1103               	clrz
  4445  09EC  1803               	skipnc
  4446  09ED  3E01               	addlw	1
  4447  09EE  1903               	skipnz
  4448  09EF  29F1               	goto	u3801
  4449  09F0  07BB               	addwf	___flmul@grs+1,f
  4450  09F1                     u3801:
  4451  09F1  0836               	movf	??___flmul+2,w
  4452  09F2  1103               	clrz
  4453  09F3  1803               	skipnc
  4454  09F4  3E01               	addlw	1
  4455  09F5  1903               	skipnz
  4456  09F6  29F8               	goto	u3802
  4457  09F7  07BC               	addwf	___flmul@grs+2,f
  4458  09F8                     u3802:
  4459  09F8  0837               	movf	??___flmul+3,w
  4460  09F9  1103               	clrz
  4461  09FA  1803               	skipnc
  4462  09FB  3E01               	addlw	1
  4463  09FC  1903               	skipnz
  4464  09FD  29FF               	goto	u3803
  4465  09FE  07BD               	addwf	___flmul@grs+3,f
  4466  09FF                     u3803:
  4467  09FF                     l2574:
  4468  09FF  0845               	movf	___flmul@temp+1,w
  4469  0A00  00B4               	movwf	??___flmul
  4470  0A01  01B5               	clrf	??___flmul+1
  4471  0A02  01B6               	clrf	??___flmul+2
  4472  0A03  01B7               	clrf	??___flmul+3
  4473  0A04  0834               	movf	??___flmul,w
  4474  0A05  07C0               	addwf	___flmul@prod,f
  4475  0A06  0835               	movf	??___flmul+1,w
  4476  0A07  1103               	clrz
  4477  0A08  1803               	skipnc
  4478  0A09  3E01               	addlw	1
  4479  0A0A  1903               	skipnz
  4480  0A0B  2A0D               	goto	u3811
  4481  0A0C  07C1               	addwf	___flmul@prod+1,f
  4482  0A0D                     u3811:
  4483  0A0D  0836               	movf	??___flmul+2,w
  4484  0A0E  1103               	clrz
  4485  0A0F  1803               	skipnc
  4486  0A10  3E01               	addlw	1
  4487  0A11  1903               	skipnz
  4488  0A12  2A14               	goto	u3812
  4489  0A13  07C2               	addwf	___flmul@prod+2,f
  4490  0A14                     u3812:
  4491  0A14  0837               	movf	??___flmul+3,w
  4492  0A15  1103               	clrz
  4493  0A16  1803               	skipnc
  4494  0A17  3E01               	addlw	1
  4495  0A18  1903               	skipnz
  4496  0A19  2A1B               	goto	u3813
  4497  0A1A  07C3               	addwf	___flmul@prod+3,f
  4498  0A1B                     u3813:
  4499  0A1B  082E               	movf	___flmul@b+2,w
  4500  0A1C  00B4               	movwf	??___flmul
  4501  0A1D  0834               	movf	??___flmul,w
  4502  0A1E  00F4               	movwf	__Umul8_16@multiplicand
  4503  0A1F  0830               	movf	___flmul@a,w
  4504  0A20  160A  158A  21F1  120A  158A  	fcall	__Umul8_16
  4505  0A25  0875               	movf	?__Umul8_16+1,w
  4506  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4508  0A28  00C5               	movwf	___flmul@temp+1
  4509  0A29  0874               	movf	?__Umul8_16,w
  4510  0A2A  00C4               	movwf	___flmul@temp
  4511  0A2B                     l2576:
  4512  0A2B  0844               	movf	___flmul@temp,w
  4513  0A2C  00B4               	movwf	??___flmul
  4514  0A2D  01B5               	clrf	??___flmul+1
  4515  0A2E  01B6               	clrf	??___flmul+2
  4516  0A2F  01B7               	clrf	??___flmul+3
  4517  0A30  0834               	movf	??___flmul,w
  4518  0A31  07BA               	addwf	___flmul@grs,f
  4519  0A32  0835               	movf	??___flmul+1,w
  4520  0A33  1103               	clrz
  4521  0A34  1803               	skipnc
  4522  0A35  3E01               	addlw	1
  4523  0A36  1903               	skipnz
  4524  0A37  2A39               	goto	u3821
  4525  0A38  07BB               	addwf	___flmul@grs+1,f
  4526  0A39                     u3821:
  4527  0A39  0836               	movf	??___flmul+2,w
  4528  0A3A  1103               	clrz
  4529  0A3B  1803               	skipnc
  4530  0A3C  3E01               	addlw	1
  4531  0A3D  1903               	skipnz
  4532  0A3E  2A40               	goto	u3822
  4533  0A3F  07BC               	addwf	___flmul@grs+2,f
  4534  0A40                     u3822:
  4535  0A40  0837               	movf	??___flmul+3,w
  4536  0A41  1103               	clrz
  4537  0A42  1803               	skipnc
  4538  0A43  3E01               	addlw	1
  4539  0A44  1903               	skipnz
  4540  0A45  2A47               	goto	u3823
  4541  0A46  07BD               	addwf	___flmul@grs+3,f
  4542  0A47                     u3823:
  4543  0A47                     l2578:
  4544  0A47  0845               	movf	___flmul@temp+1,w
  4545  0A48  00B4               	movwf	??___flmul
  4546  0A49  01B5               	clrf	??___flmul+1
  4547  0A4A  01B6               	clrf	??___flmul+2
  4548  0A4B  01B7               	clrf	??___flmul+3
  4549  0A4C  0834               	movf	??___flmul,w
  4550  0A4D  07C0               	addwf	___flmul@prod,f
  4551  0A4E  0835               	movf	??___flmul+1,w
  4552  0A4F  1103               	clrz
  4553  0A50  1803               	skipnc
  4554  0A51  3E01               	addlw	1
  4555  0A52  1903               	skipnz
  4556  0A53  2A55               	goto	u3831
  4557  0A54  07C1               	addwf	___flmul@prod+1,f
  4558  0A55                     u3831:
  4559  0A55  0836               	movf	??___flmul+2,w
  4560  0A56  1103               	clrz
  4561  0A57  1803               	skipnc
  4562  0A58  3E01               	addlw	1
  4563  0A59  1903               	skipnz
  4564  0A5A  2A5C               	goto	u3832
  4565  0A5B  07C2               	addwf	___flmul@prod+2,f
  4566  0A5C                     u3832:
  4567  0A5C  0837               	movf	??___flmul+3,w
  4568  0A5D  1103               	clrz
  4569  0A5E  1803               	skipnc
  4570  0A5F  3E01               	addlw	1
  4571  0A60  1903               	skipnz
  4572  0A61  2A63               	goto	u3833
  4573  0A62  07C3               	addwf	___flmul@prod+3,f
  4574  0A63                     u3833:
  4575  0A63                     l2580:
  4576  0A63  3008               	movlw	8
  4577  0A64  00B4               	movwf	??___flmul
  4578  0A65                     u3845:
  4579  0A65  1003               	clrc
  4580  0A66  0DBA               	rlf	___flmul@grs,f
  4581  0A67  0DBB               	rlf	___flmul@grs+1,f
  4582  0A68  0DBC               	rlf	___flmul@grs+2,f
  4583  0A69  0DBD               	rlf	___flmul@grs+3,f
  4584  0A6A  0BB4               	decfsz	??___flmul,f
  4585  0A6B  2A65               	goto	u3845
  4586  0A6C                     l2582:
  4587  0A6C  082D               	movf	___flmul@b+1,w
  4588  0A6D  00B4               	movwf	??___flmul
  4589  0A6E  0834               	movf	??___flmul,w
  4590  0A6F  00F4               	movwf	__Umul8_16@multiplicand
  4591  0A70  0830               	movf	___flmul@a,w
  4592  0A71  160A  158A  21F1  120A  158A  	fcall	__Umul8_16
  4593  0A76  0875               	movf	?__Umul8_16+1,w
  4594  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4595  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4596  0A79  00C5               	movwf	___flmul@temp+1
  4597  0A7A  0874               	movf	?__Umul8_16,w
  4598  0A7B  00C4               	movwf	___flmul@temp
  4599  0A7C                     l2584:
  4600  0A7C  0844               	movf	___flmul@temp,w
  4601  0A7D  00B4               	movwf	??___flmul
  4602  0A7E  0845               	movf	___flmul@temp+1,w
  4603  0A7F  00B5               	movwf	??___flmul+1
  4604  0A80  01B6               	clrf	??___flmul+2
  4605  0A81  01B7               	clrf	??___flmul+3
  4606  0A82  0834               	movf	??___flmul,w
  4607  0A83  07BA               	addwf	___flmul@grs,f
  4608  0A84  0835               	movf	??___flmul+1,w
  4609  0A85  1103               	clrz
  4610  0A86  1803               	skipnc
  4611  0A87  3E01               	addlw	1
  4612  0A88  1903               	skipnz
  4613  0A89  2A8B               	goto	u3851
  4614  0A8A  07BB               	addwf	___flmul@grs+1,f
  4615  0A8B                     u3851:
  4616  0A8B  0836               	movf	??___flmul+2,w
  4617  0A8C  1103               	clrz
  4618  0A8D  1803               	skipnc
  4619  0A8E  3E01               	addlw	1
  4620  0A8F  1903               	skipnz
  4621  0A90  2A92               	goto	u3852
  4622  0A91  07BC               	addwf	___flmul@grs+2,f
  4623  0A92                     u3852:
  4624  0A92  0837               	movf	??___flmul+3,w
  4625  0A93  1103               	clrz
  4626  0A94  1803               	skipnc
  4627  0A95  3E01               	addlw	1
  4628  0A96  1903               	skipnz
  4629  0A97  2A99               	goto	u3853
  4630  0A98  07BD               	addwf	___flmul@grs+3,f
  4631  0A99                     u3853:
  4632  0A99                     l2586:
  4633  0A99  082C               	movf	___flmul@b,w
  4634  0A9A  00B4               	movwf	??___flmul
  4635  0A9B  0834               	movf	??___flmul,w
  4636  0A9C  00F4               	movwf	__Umul8_16@multiplicand
  4637  0A9D  0831               	movf	___flmul@a+1,w
  4638  0A9E  160A  158A  21F1  120A  158A  	fcall	__Umul8_16
  4639  0AA3  0875               	movf	?__Umul8_16+1,w
  4640  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4641  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4642  0AA6  00C5               	movwf	___flmul@temp+1
  4643  0AA7  0874               	movf	?__Umul8_16,w
  4644  0AA8  00C4               	movwf	___flmul@temp
  4645  0AA9                     l2588:
  4646  0AA9  0844               	movf	___flmul@temp,w
  4647  0AAA  00B4               	movwf	??___flmul
  4648  0AAB  0845               	movf	___flmul@temp+1,w
  4649  0AAC  00B5               	movwf	??___flmul+1
  4650  0AAD  01B6               	clrf	??___flmul+2
  4651  0AAE  01B7               	clrf	??___flmul+3
  4652  0AAF  0834               	movf	??___flmul,w
  4653  0AB0  07BA               	addwf	___flmul@grs,f
  4654  0AB1  0835               	movf	??___flmul+1,w
  4655  0AB2  1103               	clrz
  4656  0AB3  1803               	skipnc
  4657  0AB4  3E01               	addlw	1
  4658  0AB5  1903               	skipnz
  4659  0AB6  2AB8               	goto	u3861
  4660  0AB7  07BB               	addwf	___flmul@grs+1,f
  4661  0AB8                     u3861:
  4662  0AB8  0836               	movf	??___flmul+2,w
  4663  0AB9  1103               	clrz
  4664  0ABA  1803               	skipnc
  4665  0ABB  3E01               	addlw	1
  4666  0ABC  1903               	skipnz
  4667  0ABD  2ABF               	goto	u3862
  4668  0ABE  07BC               	addwf	___flmul@grs+2,f
  4669  0ABF                     u3862:
  4670  0ABF  0837               	movf	??___flmul+3,w
  4671  0AC0  1103               	clrz
  4672  0AC1  1803               	skipnc
  4673  0AC2  3E01               	addlw	1
  4674  0AC3  1903               	skipnz
  4675  0AC4  2AC6               	goto	u3863
  4676  0AC5  07BD               	addwf	___flmul@grs+3,f
  4677  0AC6                     u3863:
  4678  0AC6                     l2590:
  4679  0AC6  3008               	movlw	8
  4680  0AC7  00B4               	movwf	??___flmul
  4681  0AC8                     u3875:
  4682  0AC8  1003               	clrc
  4683  0AC9  0DBA               	rlf	___flmul@grs,f
  4684  0ACA  0DBB               	rlf	___flmul@grs+1,f
  4685  0ACB  0DBC               	rlf	___flmul@grs+2,f
  4686  0ACC  0DBD               	rlf	___flmul@grs+3,f
  4687  0ACD  0BB4               	decfsz	??___flmul,f
  4688  0ACE  2AC8               	goto	u3875
  4689  0ACF  082C               	movf	___flmul@b,w
  4690  0AD0  00B4               	movwf	??___flmul
  4691  0AD1  0834               	movf	??___flmul,w
  4692  0AD2  00F4               	movwf	__Umul8_16@multiplicand
  4693  0AD3  0830               	movf	___flmul@a,w
  4694  0AD4  160A  158A  21F1  120A  158A  	fcall	__Umul8_16
  4695  0AD9  0875               	movf	?__Umul8_16+1,w
  4696  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4697  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4698  0ADC  00C5               	movwf	___flmul@temp+1
  4699  0ADD  0874               	movf	?__Umul8_16,w
  4700  0ADE  00C4               	movwf	___flmul@temp
  4701  0ADF                     l2592:
  4702  0ADF  0844               	movf	___flmul@temp,w
  4703  0AE0  00B4               	movwf	??___flmul
  4704  0AE1  0845               	movf	___flmul@temp+1,w
  4705  0AE2  00B5               	movwf	??___flmul+1
  4706  0AE3  01B6               	clrf	??___flmul+2
  4707  0AE4  01B7               	clrf	??___flmul+3
  4708  0AE5  0834               	movf	??___flmul,w
  4709  0AE6  07BA               	addwf	___flmul@grs,f
  4710  0AE7  0835               	movf	??___flmul+1,w
  4711  0AE8  1103               	clrz
  4712  0AE9  1803               	skipnc
  4713  0AEA  3E01               	addlw	1
  4714  0AEB  1903               	skipnz
  4715  0AEC  2AEE               	goto	u3881
  4716  0AED  07BB               	addwf	___flmul@grs+1,f
  4717  0AEE                     u3881:
  4718  0AEE  0836               	movf	??___flmul+2,w
  4719  0AEF  1103               	clrz
  4720  0AF0  1803               	skipnc
  4721  0AF1  3E01               	addlw	1
  4722  0AF2  1903               	skipnz
  4723  0AF3  2AF5               	goto	u3882
  4724  0AF4  07BC               	addwf	___flmul@grs+2,f
  4725  0AF5                     u3882:
  4726  0AF5  0837               	movf	??___flmul+3,w
  4727  0AF6  1103               	clrz
  4728  0AF7  1803               	skipnc
  4729  0AF8  3E01               	addlw	1
  4730  0AF9  1903               	skipnz
  4731  0AFA  2AFC               	goto	u3883
  4732  0AFB  07BD               	addwf	___flmul@grs+3,f
  4733  0AFC                     u3883:
  4734  0AFC                     l2594:
  4735  0AFC  082D               	movf	___flmul@b+1,w
  4736  0AFD  00B4               	movwf	??___flmul
  4737  0AFE  0834               	movf	??___flmul,w
  4738  0AFF  00F4               	movwf	__Umul8_16@multiplicand
  4739  0B00  0832               	movf	___flmul@a+2,w
  4740  0B01  160A  158A  21F1  120A  158A  	fcall	__Umul8_16
  4741  0B06  0875               	movf	?__Umul8_16+1,w
  4742  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4743  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4744  0B09  00C5               	movwf	___flmul@temp+1
  4745  0B0A  0874               	movf	?__Umul8_16,w
  4746  0B0B  00C4               	movwf	___flmul@temp
  4747  0B0C  0844               	movf	___flmul@temp,w
  4748  0B0D  00B4               	movwf	??___flmul
  4749  0B0E  0845               	movf	___flmul@temp+1,w
  4750  0B0F  00B5               	movwf	??___flmul+1
  4751  0B10  01B6               	clrf	??___flmul+2
  4752  0B11  01B7               	clrf	??___flmul+3
  4753  0B12  0834               	movf	??___flmul,w
  4754  0B13  07C0               	addwf	___flmul@prod,f
  4755  0B14  0835               	movf	??___flmul+1,w
  4756  0B15  1103               	clrz
  4757  0B16  1803               	skipnc
  4758  0B17  3E01               	addlw	1
  4759  0B18  1903               	skipnz
  4760  0B19  2B1B               	goto	u3891
  4761  0B1A  07C1               	addwf	___flmul@prod+1,f
  4762  0B1B                     u3891:
  4763  0B1B  0836               	movf	??___flmul+2,w
  4764  0B1C  1103               	clrz
  4765  0B1D  1803               	skipnc
  4766  0B1E  3E01               	addlw	1
  4767  0B1F  1903               	skipnz
  4768  0B20  2B22               	goto	u3892
  4769  0B21  07C2               	addwf	___flmul@prod+2,f
  4770  0B22                     u3892:
  4771  0B22  0837               	movf	??___flmul+3,w
  4772  0B23  1103               	clrz
  4773  0B24  1803               	skipnc
  4774  0B25  3E01               	addlw	1
  4775  0B26  1903               	skipnz
  4776  0B27  2B29               	goto	u3893
  4777  0B28  07C3               	addwf	___flmul@prod+3,f
  4778  0B29                     u3893:
  4779  0B29                     l2596:
  4780  0B29  082E               	movf	___flmul@b+2,w
  4781  0B2A  00B4               	movwf	??___flmul
  4782  0B2B  0834               	movf	??___flmul,w
  4783  0B2C  00F4               	movwf	__Umul8_16@multiplicand
  4784  0B2D  0831               	movf	___flmul@a+1,w
  4785  0B2E  160A  158A  21F1  120A  158A  	fcall	__Umul8_16
  4786  0B33  0875               	movf	?__Umul8_16+1,w
  4787  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4788  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4789  0B36  00C5               	movwf	___flmul@temp+1
  4790  0B37  0874               	movf	?__Umul8_16,w
  4791  0B38  00C4               	movwf	___flmul@temp
  4792  0B39                     l2598:
  4793  0B39  0844               	movf	___flmul@temp,w
  4794  0B3A  00B4               	movwf	??___flmul
  4795  0B3B  0845               	movf	___flmul@temp+1,w
  4796  0B3C  00B5               	movwf	??___flmul+1
  4797  0B3D  01B6               	clrf	??___flmul+2
  4798  0B3E  01B7               	clrf	??___flmul+3
  4799  0B3F  0834               	movf	??___flmul,w
  4800  0B40  07C0               	addwf	___flmul@prod,f
  4801  0B41  0835               	movf	??___flmul+1,w
  4802  0B42  1103               	clrz
  4803  0B43  1803               	skipnc
  4804  0B44  3E01               	addlw	1
  4805  0B45  1903               	skipnz
  4806  0B46  2B48               	goto	u3901
  4807  0B47  07C1               	addwf	___flmul@prod+1,f
  4808  0B48                     u3901:
  4809  0B48  0836               	movf	??___flmul+2,w
  4810  0B49  1103               	clrz
  4811  0B4A  1803               	skipnc
  4812  0B4B  3E01               	addlw	1
  4813  0B4C  1903               	skipnz
  4814  0B4D  2B4F               	goto	u3902
  4815  0B4E  07C2               	addwf	___flmul@prod+2,f
  4816  0B4F                     u3902:
  4817  0B4F  0837               	movf	??___flmul+3,w
  4818  0B50  1103               	clrz
  4819  0B51  1803               	skipnc
  4820  0B52  3E01               	addlw	1
  4821  0B53  1903               	skipnz
  4822  0B54  2B56               	goto	u3903
  4823  0B55  07C3               	addwf	___flmul@prod+3,f
  4824  0B56                     u3903:
  4825  0B56  082E               	movf	___flmul@b+2,w
  4826  0B57  00B4               	movwf	??___flmul
  4827  0B58  0834               	movf	??___flmul,w
  4828  0B59  00F4               	movwf	__Umul8_16@multiplicand
  4829  0B5A  0832               	movf	___flmul@a+2,w
  4830  0B5B  160A  158A  21F1  120A  158A  	fcall	__Umul8_16
  4831  0B60  0875               	movf	?__Umul8_16+1,w
  4832  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4833  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4834  0B63  00C5               	movwf	___flmul@temp+1
  4835  0B64  0874               	movf	?__Umul8_16,w
  4836  0B65  00C4               	movwf	___flmul@temp
  4837  0B66                     l2600:
  4838  0B66  0844               	movf	___flmul@temp,w
  4839  0B67  00B4               	movwf	??___flmul
  4840  0B68  0845               	movf	___flmul@temp+1,w
  4841  0B69  00B5               	movwf	??___flmul+1
  4842  0B6A  01B6               	clrf	??___flmul+2
  4843  0B6B  01B7               	clrf	??___flmul+3
  4844  0B6C  3008               	movlw	8
  4845  0B6D                     u3915:
  4846  0B6D  1003               	clrc
  4847  0B6E  0DB4               	rlf	??___flmul,f
  4848  0B6F  0DB5               	rlf	??___flmul+1,f
  4849  0B70  0DB6               	rlf	??___flmul+2,f
  4850  0B71  0DB7               	rlf	??___flmul+3,f
  4851  0B72                     u3910:
  4852  0B72  3EFF               	addlw	-1
  4853  0B73  1D03               	skipz
  4854  0B74  2B6D               	goto	u3915
  4855  0B75  0834               	movf	??___flmul,w
  4856  0B76  07C0               	addwf	___flmul@prod,f
  4857  0B77  0835               	movf	??___flmul+1,w
  4858  0B78  1103               	clrz
  4859  0B79  1803               	skipnc
  4860  0B7A  3E01               	addlw	1
  4861  0B7B  1903               	skipnz
  4862  0B7C  2B7E               	goto	u3921
  4863  0B7D  07C1               	addwf	___flmul@prod+1,f
  4864  0B7E                     u3921:
  4865  0B7E  0836               	movf	??___flmul+2,w
  4866  0B7F  1103               	clrz
  4867  0B80  1803               	skipnc
  4868  0B81  3E01               	addlw	1
  4869  0B82  1903               	skipnz
  4870  0B83  2B85               	goto	u3922
  4871  0B84  07C2               	addwf	___flmul@prod+2,f
  4872  0B85                     u3922:
  4873  0B85  0837               	movf	??___flmul+3,w
  4874  0B86  1103               	clrz
  4875  0B87  1803               	skipnc
  4876  0B88  3E01               	addlw	1
  4877  0B89  1903               	skipnz
  4878  0B8A  2B8C               	goto	u3923
  4879  0B8B  07C3               	addwf	___flmul@prod+3,f
  4880  0B8C                     u3923:
  4881  0B8C                     l2602:
  4882  0B8C  083A               	movf	___flmul@grs,w
  4883  0B8D  00B4               	movwf	??___flmul
  4884  0B8E  083B               	movf	___flmul@grs+1,w
  4885  0B8F  00B5               	movwf	??___flmul+1
  4886  0B90  083C               	movf	___flmul@grs+2,w
  4887  0B91  00B6               	movwf	??___flmul+2
  4888  0B92  083D               	movf	___flmul@grs+3,w
  4889  0B93  00B7               	movwf	??___flmul+3
  4890  0B94  3018               	movlw	24
  4891  0B95                     u3935:
  4892  0B95  1003               	clrc
  4893  0B96  0CB7               	rrf	??___flmul+3,f
  4894  0B97  0CB6               	rrf	??___flmul+2,f
  4895  0B98  0CB5               	rrf	??___flmul+1,f
  4896  0B99  0CB4               	rrf	??___flmul,f
  4897  0B9A                     u3930:
  4898  0B9A  3EFF               	addlw	-1
  4899  0B9B  1D03               	skipz
  4900  0B9C  2B95               	goto	u3935
  4901  0B9D  0834               	movf	??___flmul,w
  4902  0B9E  07C0               	addwf	___flmul@prod,f
  4903  0B9F  0835               	movf	??___flmul+1,w
  4904  0BA0  1103               	clrz
  4905  0BA1  1803               	skipnc
  4906  0BA2  3E01               	addlw	1
  4907  0BA3  1903               	skipnz
  4908  0BA4  2BA6               	goto	u3941
  4909  0BA5  07C1               	addwf	___flmul@prod+1,f
  4910  0BA6                     u3941:
  4911  0BA6  0836               	movf	??___flmul+2,w
  4912  0BA7  1103               	clrz
  4913  0BA8  1803               	skipnc
  4914  0BA9  3E01               	addlw	1
  4915  0BAA  1903               	skipnz
  4916  0BAB  2BAD               	goto	u3942
  4917  0BAC  07C2               	addwf	___flmul@prod+2,f
  4918  0BAD                     u3942:
  4919  0BAD  0837               	movf	??___flmul+3,w
  4920  0BAE  1103               	clrz
  4921  0BAF  1803               	skipnc
  4922  0BB0  3E01               	addlw	1
  4923  0BB1  1903               	skipnz
  4924  0BB2  2BB4               	goto	u3943
  4925  0BB3  07C3               	addwf	___flmul@prod+3,f
  4926  0BB4                     u3943:
  4927  0BB4                     l2604:
  4928  0BB4  3008               	movlw	8
  4929  0BB5  00B4               	movwf	??___flmul
  4930  0BB6                     u3955:
  4931  0BB6  1003               	clrc
  4932  0BB7  0DBA               	rlf	___flmul@grs,f
  4933  0BB8  0DBB               	rlf	___flmul@grs+1,f
  4934  0BB9  0DBC               	rlf	___flmul@grs+2,f
  4935  0BBA  0DBD               	rlf	___flmul@grs+3,f
  4936  0BBB  0BB4               	decfsz	??___flmul,f
  4937  0BBC  2BB6               	goto	u3955
  4938  0BBD                     l2606:
  4939  0BBD  083F               	movf	___flmul@bexp,w
  4940  0BBE  073E               	addwf	___flmul@aexp,w
  4941  0BBF  00B4               	movwf	??___flmul
  4942  0BC0  01B5               	clrf	??___flmul+1
  4943  0BC1  0DB5               	rlf	??___flmul+1,f
  4944  0BC2  0834               	movf	??___flmul,w
  4945  0BC3  3E82               	addlw	130
  4946  0BC4  00C4               	movwf	___flmul@temp
  4947  0BC5  0835               	movf	??___flmul+1,w
  4948  0BC6  1803               	skipnc
  4949  0BC7  3E01               	addlw	1
  4950  0BC8  3EFF               	addlw	255
  4951  0BC9  00C5               	movwf	___flmul@temp+1
  4952  0BCA  2BE8               	goto	l2618
  4953  0BCB                     l2608:
  4954  0BCB  3001               	movlw	1
  4955  0BCC  00B4               	movwf	??___flmul
  4956  0BCD                     u3965:
  4957  0BCD  1003               	clrc
  4958  0BCE  0DC0               	rlf	___flmul@prod,f
  4959  0BCF  0DC1               	rlf	___flmul@prod+1,f
  4960  0BD0  0DC2               	rlf	___flmul@prod+2,f
  4961  0BD1  0DC3               	rlf	___flmul@prod+3,f
  4962  0BD2  0BB4               	decfsz	??___flmul,f
  4963  0BD3  2BCD               	goto	u3965
  4964  0BD4                     l2610:
  4965  0BD4  1FBD               	btfss	___flmul@grs+3,7
  4966  0BD5  2BD7               	goto	u3971
  4967  0BD6  2BD8               	goto	u3970
  4968  0BD7                     u3971:
  4969  0BD7  2BD9               	goto	l2614
  4970  0BD8                     u3970:
  4971  0BD8                     l2612:
  4972  0BD8  1440               	bsf	___flmul@prod,0
  4973  0BD9                     l2614:
  4974  0BD9  3001               	movlw	1
  4975  0BDA  00B4               	movwf	??___flmul
  4976  0BDB                     u3985:
  4977  0BDB  1003               	clrc
  4978  0BDC  0DBA               	rlf	___flmul@grs,f
  4979  0BDD  0DBB               	rlf	___flmul@grs+1,f
  4980  0BDE  0DBC               	rlf	___flmul@grs+2,f
  4981  0BDF  0DBD               	rlf	___flmul@grs+3,f
  4982  0BE0  0BB4               	decfsz	??___flmul,f
  4983  0BE1  2BDB               	goto	u3985
  4984  0BE2                     l2616:
  4985  0BE2  30FF               	movlw	255
  4986  0BE3  07C4               	addwf	___flmul@temp,f
  4987  0BE4  1803               	skipnc
  4988  0BE5  0AC5               	incf	___flmul@temp+1,f
  4989  0BE6  30FF               	movlw	255
  4990  0BE7  07C5               	addwf	___flmul@temp+1,f
  4991  0BE8                     l2618:
  4992  0BE8  1FC2               	btfss	___flmul@prod+2,7
  4993  0BE9  2BEB               	goto	u3991
  4994  0BEA  2BEC               	goto	u3990
  4995  0BEB                     u3991:
  4996  0BEB  2BCB               	goto	l2608
  4997  0BEC                     u3990:
  4998  0BEC                     l2620:
  4999  0BEC  01BE               	clrf	___flmul@aexp
  5000  0BED                     l2622:
  5001  0BED  1FBD               	btfss	___flmul@grs+3,7
  5002  0BEE  2BF0               	goto	u4001
  5003  0BEF  2BF1               	goto	u4000
  5004  0BF0                     u4001:
  5005  0BF0  2C0D               	goto	l2630
  5006  0BF1                     u4000:
  5007  0BF1                     l2624:
  5008  0BF1  30FF               	movlw	255
  5009  0BF2  053A               	andwf	___flmul@grs,w
  5010  0BF3  00B4               	movwf	??___flmul
  5011  0BF4  30FF               	movlw	255
  5012  0BF5  053B               	andwf	___flmul@grs+1,w
  5013  0BF6  00B5               	movwf	??___flmul+1
  5014  0BF7  30FF               	movlw	255
  5015  0BF8  053C               	andwf	___flmul@grs+2,w
  5016  0BF9  00B6               	movwf	??___flmul+2
  5017  0BFA  307F               	movlw	127
  5018  0BFB  053D               	andwf	___flmul@grs+3,w
  5019  0BFC  00B7               	movwf	??___flmul+3
  5020  0BFD  0837               	movf	??___flmul+3,w
  5021  0BFE  0436               	iorwf	??___flmul+2,w
  5022  0BFF  0435               	iorwf	??___flmul+1,w
  5023  0C00  0434               	iorwf	??___flmul,w
  5024  0C01  1903               	skipnz
  5025  0C02  2C04               	goto	u4011
  5026  0C03  2C05               	goto	u4010
  5027  0C04                     u4011:
  5028  0C04  2C08               	goto	l750
  5029  0C05                     u4010:
  5030  0C05                     l2626:
  5031  0C05  01BE               	clrf	___flmul@aexp
  5032  0C06  0ABE               	incf	___flmul@aexp,f
  5033  0C07  2C0D               	goto	l2630
  5034  0C08                     l750:
  5035  0C08  1C40               	btfss	___flmul@prod,0
  5036  0C09  2C0B               	goto	u4021
  5037  0C0A  2C0C               	goto	u4020
  5038  0C0B                     u4021:
  5039  0C0B  2C0D               	goto	l2630
  5040  0C0C                     u4020:
  5041  0C0C  2C05               	goto	l2626
  5042  0C0D                     l2630:
  5043  0C0D  083E               	movf	___flmul@aexp,w
  5044  0C0E  1903               	btfsc	3,2
  5045  0C0F  2C11               	goto	u4031
  5046  0C10  2C12               	goto	u4030
  5047  0C11                     u4031:
  5048  0C11  2C43               	goto	l2640
  5049  0C12                     u4030:
  5050  0C12                     l2632:
  5051  0C12  3001               	movlw	1
  5052  0C13  07C0               	addwf	___flmul@prod,f
  5053  0C14  3000               	movlw	0
  5054  0C15  1803               	skipnc
  5055  0C16  3001               	movlw	1
  5056  0C17  07C1               	addwf	___flmul@prod+1,f
  5057  0C18  3000               	movlw	0
  5058  0C19  1803               	skipnc
  5059  0C1A  3001               	movlw	1
  5060  0C1B  07C2               	addwf	___flmul@prod+2,f
  5061  0C1C  3000               	movlw	0
  5062  0C1D  1803               	skipnc
  5063  0C1E  3001               	movlw	1
  5064  0C1F  07C3               	addwf	___flmul@prod+3,f
  5065  0C20                     l2634:
  5066  0C20  1C43               	btfss	___flmul@prod+3,0
  5067  0C21  2C23               	goto	u4041
  5068  0C22  2C24               	goto	u4040
  5069  0C23                     u4041:
  5070  0C23  2C43               	goto	l2640
  5071  0C24                     u4040:
  5072  0C24                     l2636:
  5073  0C24  0840               	movf	___flmul@prod,w
  5074  0C25  00B4               	movwf	??___flmul
  5075  0C26  0841               	movf	___flmul@prod+1,w
  5076  0C27  00B5               	movwf	??___flmul+1
  5077  0C28  0842               	movf	___flmul@prod+2,w
  5078  0C29  00B6               	movwf	??___flmul+2
  5079  0C2A  0843               	movf	___flmul@prod+3,w
  5080  0C2B  00B7               	movwf	??___flmul+3
  5081  0C2C  3001               	movlw	1
  5082  0C2D  00B8               	movwf	??___flmul+4
  5083  0C2E                     u4055:
  5084  0C2E  0D37               	rlf	??___flmul+3,w
  5085  0C2F  0CB7               	rrf	??___flmul+3,f
  5086  0C30  0CB6               	rrf	??___flmul+2,f
  5087  0C31  0CB5               	rrf	??___flmul+1,f
  5088  0C32  0CB4               	rrf	??___flmul,f
  5089  0C33                     u4050:
  5090  0C33  0BB8               	decfsz	??___flmul+4,f
  5091  0C34  2C2E               	goto	u4055
  5092  0C35  0837               	movf	??___flmul+3,w
  5093  0C36  00C3               	movwf	___flmul@prod+3
  5094  0C37  0836               	movf	??___flmul+2,w
  5095  0C38  00C2               	movwf	___flmul@prod+2
  5096  0C39  0835               	movf	??___flmul+1,w
  5097  0C3A  00C1               	movwf	___flmul@prod+1
  5098  0C3B  0834               	movf	??___flmul,w
  5099  0C3C  00C0               	movwf	___flmul@prod
  5100  0C3D                     l2638:
  5101  0C3D  3001               	movlw	1
  5102  0C3E  07C4               	addwf	___flmul@temp,f
  5103  0C3F  1803               	skipnc
  5104  0C40  0AC5               	incf	___flmul@temp+1,f
  5105  0C41  3000               	movlw	0
  5106  0C42  07C5               	addwf	___flmul@temp+1,f
  5107  0C43                     l2640:
  5108  0C43  0845               	movf	___flmul@temp+1,w
  5109  0C44  3A80               	xorlw	128
  5110  0C45  00FF               	movwf	btemp+1
  5111  0C46  3080               	movlw	128
  5112  0C47  027F               	subwf	btemp+1,w
  5113  0C48  1D03               	skipz
  5114  0C49  2C4C               	goto	u4065
  5115  0C4A  30FF               	movlw	255
  5116  0C4B  0244               	subwf	___flmul@temp,w
  5117  0C4C                     u4065:
  5118  0C4C  1C03               	skipc
  5119  0C4D  2C4F               	goto	u4061
  5120  0C4E  2C50               	goto	u4060
  5121  0C4F                     u4061:
  5122  0C4F  2C5B               	goto	l2644
  5123  0C50                     u4060:
  5124  0C50                     l2642:
  5125  0C50  307F               	movlw	127
  5126  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0C53  00C3               	movwf	___flmul@prod+3
  5129  0C54  3080               	movlw	128
  5130  0C55  00C2               	movwf	___flmul@prod+2
  5131  0C56  3000               	movlw	0
  5132  0C57  00C1               	movwf	___flmul@prod+1
  5133  0C58  3000               	movlw	0
  5134  0C59  00C0               	movwf	___flmul@prod
  5135  0C5A  2C90               	goto	l756
  5136  0C5B                     l2644:
  5137  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0C5D  0845               	movf	___flmul@temp+1,w
  5140  0C5E  3A80               	xorlw	128
  5141  0C5F  00FF               	movwf	btemp+1
  5142  0C60  3080               	movlw	128
  5143  0C61  027F               	subwf	btemp+1,w
  5144  0C62  1D03               	skipz
  5145  0C63  2C66               	goto	u4075
  5146  0C64  3001               	movlw	1
  5147  0C65  0244               	subwf	___flmul@temp,w
  5148  0C66                     u4075:
  5149  0C66  1803               	skipnc
  5150  0C67  2C69               	goto	u4071
  5151  0C68  2C6A               	goto	u4070
  5152  0C69                     u4071:
  5153  0C69  2C76               	goto	l2650
  5154  0C6A                     u4070:
  5155  0C6A                     l2646:
  5156  0C6A  3000               	movlw	0
  5157  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5158  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5159  0C6D  00C3               	movwf	___flmul@prod+3
  5160  0C6E  3000               	movlw	0
  5161  0C6F  00C2               	movwf	___flmul@prod+2
  5162  0C70  3000               	movlw	0
  5163  0C71  00C1               	movwf	___flmul@prod+1
  5164  0C72  3000               	movlw	0
  5165  0C73  00C0               	movwf	___flmul@prod
  5166  0C74                     l2648:
  5167  0C74  01B9               	clrf	___flmul@sign
  5168  0C75  2C90               	goto	l756
  5169  0C76                     l2650:
  5170  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0C78  0844               	movf	___flmul@temp,w
  5173  0C79  00B4               	movwf	??___flmul
  5174  0C7A  0834               	movf	??___flmul,w
  5175  0C7B  00BF               	movwf	___flmul@bexp
  5176  0C7C  30FF               	movlw	255
  5177  0C7D  05C0               	andwf	___flmul@prod,f
  5178  0C7E  30FF               	movlw	255
  5179  0C7F  05C1               	andwf	___flmul@prod+1,f
  5180  0C80  307F               	movlw	127
  5181  0C81  05C2               	andwf	___flmul@prod+2,f
  5182  0C82  3000               	movlw	0
  5183  0C83  05C3               	andwf	___flmul@prod+3,f
  5184  0C84                     l2652:
  5185  0C84  1C3F               	btfss	___flmul@bexp,0
  5186  0C85  2C87               	goto	u4081
  5187  0C86  2C88               	goto	u4080
  5188  0C87                     u4081:
  5189  0C87  2C89               	goto	l2656
  5190  0C88                     u4080:
  5191  0C88                     l2654:
  5192  0C88  17C2               	bsf	___flmul@prod+2,7
  5193  0C89                     l2656:
  5194  0C89  083F               	movf	___flmul@bexp,w
  5195  0C8A  00B4               	movwf	??___flmul
  5196  0C8B  1003               	clrc
  5197  0C8C  0C34               	rrf	??___flmul,w
  5198  0C8D  00B5               	movwf	??___flmul+1
  5199  0C8E  0835               	movf	??___flmul+1,w
  5200  0C8F  00C3               	movwf	___flmul@prod+3
  5201  0C90                     l756:
  5202  0C90  0839               	movf	___flmul@sign,w
  5203  0C91  00B4               	movwf	??___flmul
  5204  0C92  0834               	movf	??___flmul,w
  5205  0C93  04C3               	iorwf	___flmul@prod+3,f
  5206  0C94                     l2658:
  5207  0C94  0843               	movf	___flmul@prod+3,w
  5208  0C95  00AF               	movwf	?___flmul+3
  5209  0C96  0842               	movf	___flmul@prod+2,w
  5210  0C97  00AE               	movwf	?___flmul+2
  5211  0C98  0841               	movf	___flmul@prod+1,w
  5212  0C99  00AD               	movwf	?___flmul+1
  5213  0C9A  0840               	movf	___flmul@prod,w
  5214  0C9B  00AC               	movwf	?___flmul
  5215  0C9C                     l744:
  5216  0C9C  0008               	return
  5217  0C9D                     __end_of___flmul:
  5218                           
  5219                           	psect	text10
  5220  19F1                     __ptext10:	
  5221 ;; *************** function __Umul8_16 *****************
  5222 ;; Defined at:
  5223 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  multiplier      1    wreg     unsigned char 
  5226 ;;  multiplicand    1    4[COMMON] unsigned char 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5229 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5230 ;;  product         2    0[BANK0 ] unsigned int 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  2    4[COMMON] unsigned int 
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5240 ;;      Params:         2       0       0       0       0
  5241 ;;      Locals:         0       5       0       0       0
  5242 ;;      Temps:          2       0       0       0       0
  5243 ;;      Totals:         4       5       0       0       0
  5244 ;;Total ram usage:        9 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    1
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		___flmul
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           
  5255                           ;psect for function __Umul8_16
  5256  19F1                     __Umul8_16:
  5257                           
  5258                           ;incstack = 0
  5259                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5260                           ;__Umul8_16@multiplier stored from wreg
  5261  19F1  1283               	bcf	3,5	;RP0=0, select bank0
  5262  19F2  1303               	bcf	3,6	;RP1=0, select bank0
  5263  19F3  00A4               	movwf	__Umul8_16@multiplier
  5264  19F4                     l2182:
  5265  19F4  01A0               	clrf	__Umul8_16@product
  5266  19F5  01A1               	clrf	__Umul8_16@product+1
  5267  19F6                     l2184:
  5268  19F6  0874               	movf	__Umul8_16@multiplicand,w
  5269  19F7  00F6               	movwf	??__Umul8_16
  5270  19F8  01F7               	clrf	??__Umul8_16+1
  5271  19F9  0876               	movf	??__Umul8_16,w
  5272  19FA  00A2               	movwf	__Umul8_16@word_mpld
  5273  19FB  0877               	movf	??__Umul8_16+1,w
  5274  19FC  00A3               	movwf	__Umul8_16@word_mpld+1
  5275  19FD                     l2186:
  5276  19FD  1C24               	btfss	__Umul8_16@multiplier,0
  5277  19FE  2A00               	goto	u2911
  5278  19FF  2A01               	goto	u2910
  5279  1A00                     u2911:
  5280  1A00  2A07               	goto	l763
  5281  1A01                     u2910:
  5282  1A01                     l2188:
  5283  1A01  0822               	movf	__Umul8_16@word_mpld,w
  5284  1A02  07A0               	addwf	__Umul8_16@product,f
  5285  1A03  1803               	skipnc
  5286  1A04  0AA1               	incf	__Umul8_16@product+1,f
  5287  1A05  0823               	movf	__Umul8_16@word_mpld+1,w
  5288  1A06  07A1               	addwf	__Umul8_16@product+1,f
  5289  1A07                     l763:
  5290  1A07  3001               	movlw	1
  5291  1A08                     u2925:
  5292  1A08  1003               	clrc
  5293  1A09  0DA2               	rlf	__Umul8_16@word_mpld,f
  5294  1A0A  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5295  1A0B  3EFF               	addlw	-1
  5296  1A0C  1D03               	skipz
  5297  1A0D  2A08               	goto	u2925
  5298  1A0E  1003               	clrc
  5299  1A0F  0CA4               	rrf	__Umul8_16@multiplier,f
  5300  1A10                     l2190:
  5301  1A10  0824               	movf	__Umul8_16@multiplier,w
  5302  1A11  1D03               	btfss	3,2
  5303  1A12  2A14               	goto	u2931
  5304  1A13  2A15               	goto	u2930
  5305  1A14                     u2931:
  5306  1A14  29FD               	goto	l2186
  5307  1A15                     u2930:
  5308  1A15                     l2192:
  5309  1A15  0821               	movf	__Umul8_16@product+1,w
  5310  1A16  00F5               	movwf	?__Umul8_16+1
  5311  1A17  0820               	movf	__Umul8_16@product,w
  5312  1A18  00F4               	movwf	?__Umul8_16
  5313  1A19                     l765:
  5314  1A19  0008               	return
  5315  1A1A                     __end_of__Umul8_16:
  5316                           
  5317                           	psect	text11
  5318  1E85                     __ptext11:	
  5319 ;; *************** function __tdiv_to_l_ *****************
  5320 ;; Defined at:
  5321 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  f1              4    0[BANK0 ] float 
  5324 ;;  f2              4    4[BANK0 ] float 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  quot            4    8[BANK0 ] unsigned long 
  5327 ;;  exp1            1   13[BANK0 ] unsigned char 
  5328 ;;  cntr            1   12[BANK0 ] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  4    0[BANK0 ] unsigned long 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5338 ;;      Params:         0       8       0       0       0
  5339 ;;      Locals:         0       6       0       0       0
  5340 ;;      Temps:          4       0       0       0       0
  5341 ;;      Totals:         4      14       0       0       0
  5342 ;;Total ram usage:       18 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    1
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_sprintf
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function __tdiv_to_l_
  5354  1E85                     __tdiv_to_l_:
  5355  1E85                     l2756:	
  5356                           ;incstack = 0
  5357                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5358                           
  5359  1E85  1283               	bcf	3,5	;RP0=0, select bank0
  5360  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  5361  1E87  0820               	movf	__tdiv_to_l_@f1,w
  5362  1E88  00F4               	movwf	??__tdiv_to_l_
  5363  1E89  0821               	movf	__tdiv_to_l_@f1+1,w
  5364  1E8A  00F5               	movwf	??__tdiv_to_l_+1
  5365  1E8B  0822               	movf	__tdiv_to_l_@f1+2,w
  5366  1E8C  00F6               	movwf	??__tdiv_to_l_+2
  5367  1E8D  1003               	clrc
  5368  1E8E  0D75               	rlf	??__tdiv_to_l_+1,w
  5369  1E8F  0D76               	rlf	??__tdiv_to_l_+2,w
  5370  1E90  00F7               	movwf	??__tdiv_to_l_+3
  5371  1E91  0877               	movf	??__tdiv_to_l_+3,w
  5372  1E92  00AD               	movwf	__tdiv_to_l_@exp1
  5373  1E93  082D               	movf	__tdiv_to_l_@exp1,w
  5374  1E94  1D03               	btfss	3,2
  5375  1E95  2E97               	goto	u4361
  5376  1E96  2E98               	goto	u4360
  5377  1E97                     u4361:
  5378  1E97  2EA1               	goto	l2762
  5379  1E98                     u4360:
  5380  1E98                     l2758:
  5381  1E98  3000               	movlw	0
  5382  1E99  00A3               	movwf	?__tdiv_to_l_+3
  5383  1E9A  3000               	movlw	0
  5384  1E9B  00A2               	movwf	?__tdiv_to_l_+2
  5385  1E9C  3000               	movlw	0
  5386  1E9D  00A1               	movwf	?__tdiv_to_l_+1
  5387  1E9E  3000               	movlw	0
  5388  1E9F  00A0               	movwf	?__tdiv_to_l_
  5389  1EA0  2F41               	goto	l538
  5390  1EA1                     l2762:
  5391  1EA1  0824               	movf	__tdiv_to_l_@f2,w
  5392  1EA2  00F4               	movwf	??__tdiv_to_l_
  5393  1EA3  0825               	movf	__tdiv_to_l_@f2+1,w
  5394  1EA4  00F5               	movwf	??__tdiv_to_l_+1
  5395  1EA5  0826               	movf	__tdiv_to_l_@f2+2,w
  5396  1EA6  00F6               	movwf	??__tdiv_to_l_+2
  5397  1EA7  1003               	clrc
  5398  1EA8  0D75               	rlf	??__tdiv_to_l_+1,w
  5399  1EA9  0D76               	rlf	??__tdiv_to_l_+2,w
  5400  1EAA  00F7               	movwf	??__tdiv_to_l_+3
  5401  1EAB  0877               	movf	??__tdiv_to_l_+3,w
  5402  1EAC  00AC               	movwf	__tdiv_to_l_@cntr
  5403  1EAD  082C               	movf	__tdiv_to_l_@cntr,w
  5404  1EAE  1D03               	btfss	3,2
  5405  1EAF  2EB1               	goto	u4371
  5406  1EB0  2EB2               	goto	u4370
  5407  1EB1                     u4371:
  5408  1EB1  2EB3               	goto	l539
  5409  1EB2                     u4370:
  5410  1EB2  2E98               	goto	l2758
  5411  1EB3                     l539:
  5412  1EB3  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5413  1EB4                     l2768:
  5414  1EB4  30FF               	movlw	255
  5415  1EB5  05A0               	andwf	__tdiv_to_l_@f1,f
  5416  1EB6  30FF               	movlw	255
  5417  1EB7  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5418  1EB8  3000               	movlw	0
  5419  1EB9  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5420  1EBA                     l2770:
  5421  1EBA  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5422  1EBB  30FF               	movlw	255
  5423  1EBC  05A4               	andwf	__tdiv_to_l_@f2,f
  5424  1EBD  30FF               	movlw	255
  5425  1EBE  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5426  1EBF  3000               	movlw	0
  5427  1EC0  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5428  1EC1  3000               	movlw	0
  5429  1EC2  00AB               	movwf	__tdiv_to_l_@quot+3
  5430  1EC3  3000               	movlw	0
  5431  1EC4  00AA               	movwf	__tdiv_to_l_@quot+2
  5432  1EC5  3000               	movlw	0
  5433  1EC6  00A9               	movwf	__tdiv_to_l_@quot+1
  5434  1EC7  3000               	movlw	0
  5435  1EC8  00A8               	movwf	__tdiv_to_l_@quot
  5436  1EC9                     l2772:
  5437  1EC9  307F               	movlw	127
  5438  1ECA  02AD               	subwf	__tdiv_to_l_@exp1,f
  5439  1ECB                     l2774:
  5440  1ECB  3098               	movlw	152
  5441  1ECC  072C               	addwf	__tdiv_to_l_@cntr,w
  5442  1ECD  00F4               	movwf	??__tdiv_to_l_
  5443  1ECE  0874               	movf	??__tdiv_to_l_,w
  5444  1ECF  02AD               	subwf	__tdiv_to_l_@exp1,f
  5445  1ED0  3018               	movlw	24
  5446  1ED1  00F4               	movwf	??__tdiv_to_l_
  5447  1ED2  0874               	movf	??__tdiv_to_l_,w
  5448  1ED3  00AC               	movwf	__tdiv_to_l_@cntr
  5449  1ED4                     l2776:
  5450  1ED4  3001               	movlw	1
  5451  1ED5  00F4               	movwf	??__tdiv_to_l_
  5452  1ED6                     u4385:
  5453  1ED6  1003               	clrc
  5454  1ED7  0DA8               	rlf	__tdiv_to_l_@quot,f
  5455  1ED8  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5456  1ED9  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5457  1EDA  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5458  1EDB  0BF4               	decfsz	??__tdiv_to_l_,f
  5459  1EDC  2ED6               	goto	u4385
  5460  1EDD                     l2778:
  5461  1EDD  0826               	movf	__tdiv_to_l_@f2+2,w
  5462  1EDE  0222               	subwf	__tdiv_to_l_@f1+2,w
  5463  1EDF  1D03               	skipz
  5464  1EE0  2EE7               	goto	u4395
  5465  1EE1  0825               	movf	__tdiv_to_l_@f2+1,w
  5466  1EE2  0221               	subwf	__tdiv_to_l_@f1+1,w
  5467  1EE3  1D03               	skipz
  5468  1EE4  2EE7               	goto	u4395
  5469  1EE5  0824               	movf	__tdiv_to_l_@f2,w
  5470  1EE6  0220               	subwf	__tdiv_to_l_@f1,w
  5471  1EE7                     u4395:
  5472  1EE7  1C03               	skipc
  5473  1EE8  2EEA               	goto	u4391
  5474  1EE9  2EEB               	goto	u4390
  5475  1EEA                     u4391:
  5476  1EEA  2EF6               	goto	l2784
  5477  1EEB                     u4390:
  5478  1EEB                     l2780:
  5479  1EEB  0824               	movf	__tdiv_to_l_@f2,w
  5480  1EEC  02A0               	subwf	__tdiv_to_l_@f1,f
  5481  1EED  0825               	movf	__tdiv_to_l_@f2+1,w
  5482  1EEE  1C03               	skipc
  5483  1EEF  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  5484  1EF0  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5485  1EF1  0826               	movf	__tdiv_to_l_@f2+2,w
  5486  1EF2  1C03               	skipc
  5487  1EF3  0A26               	incf	__tdiv_to_l_@f2+2,w
  5488  1EF4  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5489  1EF5                     l2782:
  5490  1EF5  1428               	bsf	__tdiv_to_l_@quot,0
  5491  1EF6                     l2784:
  5492  1EF6  3001               	movlw	1
  5493  1EF7                     u4405:
  5494  1EF7  1003               	clrc
  5495  1EF8  0DA0               	rlf	__tdiv_to_l_@f1,f
  5496  1EF9  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5497  1EFA  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5498  1EFB  3EFF               	addlw	-1
  5499  1EFC  1D03               	skipz
  5500  1EFD  2EF7               	goto	u4405
  5501  1EFE                     l2786:
  5502  1EFE  3001               	movlw	1
  5503  1EFF  02AC               	subwf	__tdiv_to_l_@cntr,f
  5504  1F00  1D03               	btfss	3,2
  5505  1F01  2F03               	goto	u4411
  5506  1F02  2F04               	goto	u4410
  5507  1F03                     u4411:
  5508  1F03  2ED4               	goto	l2776
  5509  1F04                     u4410:
  5510  1F04                     l542:
  5511  1F04  1FAD               	btfss	__tdiv_to_l_@exp1,7
  5512  1F05  2F07               	goto	u4421
  5513  1F06  2F08               	goto	u4420
  5514  1F07                     u4421:
  5515  1F07  2F22               	goto	l2796
  5516  1F08                     u4420:
  5517  1F08                     l2788:
  5518  1F08  082D               	movf	__tdiv_to_l_@exp1,w
  5519  1F09  3A80               	xorlw	128
  5520  1F0A  3E97               	addlw	151
  5521  1F0B  1803               	skipnc
  5522  1F0C  2F0E               	goto	u4431
  5523  1F0D  2F0F               	goto	u4430
  5524  1F0E                     u4431:
  5525  1F0E  2F10               	goto	l2794
  5526  1F0F                     u4430:
  5527  1F0F  2E98               	goto	l2758
  5528  1F10                     l2794:
  5529  1F10  3001               	movlw	1
  5530  1F11                     u4445:
  5531  1F11  1003               	clrc
  5532  1F12  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  5533  1F13  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  5534  1F14  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  5535  1F15  0CA8               	rrf	__tdiv_to_l_@quot,f
  5536  1F16  3EFF               	addlw	-1
  5537  1F17  1D03               	skipz
  5538  1F18  2F11               	goto	u4445
  5539  1F19  3001               	movlw	1
  5540  1F1A  00F4               	movwf	??__tdiv_to_l_
  5541  1F1B  0874               	movf	??__tdiv_to_l_,w
  5542  1F1C  07AD               	addwf	__tdiv_to_l_@exp1,f
  5543  1F1D  1D03               	btfss	3,2
  5544  1F1E  2F20               	goto	u4451
  5545  1F1F  2F21               	goto	u4450
  5546  1F20                     u4451:
  5547  1F20  2F10               	goto	l2794
  5548  1F21                     u4450:
  5549  1F21  2F39               	goto	l2804
  5550  1F22                     l2796:
  5551  1F22  3018               	movlw	24
  5552  1F23  022D               	subwf	__tdiv_to_l_@exp1,w
  5553  1F24  1C03               	skipc
  5554  1F25  2F27               	goto	u4461
  5555  1F26  2F28               	goto	u4460
  5556  1F27                     u4461:
  5557  1F27  2F34               	goto	l549
  5558  1F28                     u4460:
  5559  1F28  2E98               	goto	l2758
  5560  1F29                     l2802:
  5561  1F29  3001               	movlw	1
  5562  1F2A  00F4               	movwf	??__tdiv_to_l_
  5563  1F2B                     u4475:
  5564  1F2B  1003               	clrc
  5565  1F2C  0DA8               	rlf	__tdiv_to_l_@quot,f
  5566  1F2D  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5567  1F2E  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5568  1F2F  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5569  1F30  0BF4               	decfsz	??__tdiv_to_l_,f
  5570  1F31  2F2B               	goto	u4475
  5571  1F32  3001               	movlw	1
  5572  1F33  02AD               	subwf	__tdiv_to_l_@exp1,f
  5573  1F34                     l549:
  5574  1F34  082D               	movf	__tdiv_to_l_@exp1,w
  5575  1F35  1D03               	btfss	3,2
  5576  1F36  2F38               	goto	u4481
  5577  1F37  2F39               	goto	u4480
  5578  1F38                     u4481:
  5579  1F38  2F29               	goto	l2802
  5580  1F39                     u4480:
  5581  1F39                     l2804:
  5582  1F39  082B               	movf	__tdiv_to_l_@quot+3,w
  5583  1F3A  00A3               	movwf	?__tdiv_to_l_+3
  5584  1F3B  082A               	movf	__tdiv_to_l_@quot+2,w
  5585  1F3C  00A2               	movwf	?__tdiv_to_l_+2
  5586  1F3D  0829               	movf	__tdiv_to_l_@quot+1,w
  5587  1F3E  00A1               	movwf	?__tdiv_to_l_+1
  5588  1F3F  0828               	movf	__tdiv_to_l_@quot,w
  5589  1F40  00A0               	movwf	?__tdiv_to_l_
  5590  1F41                     l538:
  5591  1F41  0008               	return
  5592  1F42                     __end_of__tdiv_to_l_:
  5593                           
  5594                           	psect	text12
  5595  1F42                     __ptext12:	
  5596 ;; *************** function __div_to_l_ *****************
  5597 ;; Defined at:
  5598 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  f1              4    0[BANK0 ] unsigned long 
  5601 ;;  f2              4    4[BANK0 ] unsigned long 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  quot            4    8[BANK0 ] unsigned long 
  5604 ;;  exp1            1   13[BANK0 ] unsigned char 
  5605 ;;  cntr            1   12[BANK0 ] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  4    0[BANK0 ] unsigned long 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5615 ;;      Params:         0       8       0       0       0
  5616 ;;      Locals:         0       6       0       0       0
  5617 ;;      Temps:          1       0       0       0       0
  5618 ;;      Totals:         1      14       0       0       0
  5619 ;;Total ram usage:       15 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_sprintf
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           
  5630                           ;psect for function __div_to_l_
  5631  1F42                     __div_to_l_:
  5632  1F42                     l2808:	
  5633                           ;incstack = 0
  5634                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5635                           
  5636  1F42  1003               	clrc
  5637  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  5638  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  5639  1F45  0D22               	rlf	__div_to_l_@f1+2,w
  5640  1F46  0D23               	rlf	__div_to_l_@f1+3,w
  5641  1F47  00F4               	movwf	??__div_to_l_
  5642  1F48  0874               	movf	??__div_to_l_,w
  5643  1F49  00AD               	movwf	__div_to_l_@exp1
  5644  1F4A  082D               	movf	__div_to_l_@exp1,w
  5645  1F4B  1D03               	btfss	3,2
  5646  1F4C  2F4E               	goto	u4491
  5647  1F4D  2F4F               	goto	u4490
  5648  1F4E                     u4491:
  5649  1F4E  2F58               	goto	l2814
  5650  1F4F                     u4490:
  5651  1F4F                     l2810:
  5652  1F4F  3000               	movlw	0
  5653  1F50  00A3               	movwf	?__div_to_l_+3
  5654  1F51  3000               	movlw	0
  5655  1F52  00A2               	movwf	?__div_to_l_+2
  5656  1F53  3000               	movlw	0
  5657  1F54  00A1               	movwf	?__div_to_l_+1
  5658  1F55  3000               	movlw	0
  5659  1F56  00A0               	movwf	?__div_to_l_
  5660  1F57  2FFF               	goto	l491
  5661  1F58                     l2814:
  5662  1F58  1003               	clrc
  5663  1F59  0D26               	rlf	__div_to_l_@f2+2,w
  5664  1F5A  0D27               	rlf	__div_to_l_@f2+3,w
  5665  1F5B  00F4               	movwf	??__div_to_l_
  5666  1F5C  0874               	movf	??__div_to_l_,w
  5667  1F5D  00AC               	movwf	__div_to_l_@cntr
  5668  1F5E  082C               	movf	__div_to_l_@cntr,w
  5669  1F5F  1D03               	btfss	3,2
  5670  1F60  2F62               	goto	u4501
  5671  1F61  2F63               	goto	u4500
  5672  1F62                     u4501:
  5673  1F62  2F64               	goto	l492
  5674  1F63                     u4500:
  5675  1F63  2F4F               	goto	l2810
  5676  1F64                     l492:
  5677  1F64  17A2               	bsf	__div_to_l_@f1+2,7
  5678  1F65                     l2820:
  5679  1F65  30FF               	movlw	255
  5680  1F66  05A0               	andwf	__div_to_l_@f1,f
  5681  1F67  30FF               	movlw	255
  5682  1F68  05A1               	andwf	__div_to_l_@f1+1,f
  5683  1F69  30FF               	movlw	255
  5684  1F6A  05A2               	andwf	__div_to_l_@f1+2,f
  5685  1F6B  3000               	movlw	0
  5686  1F6C  05A3               	andwf	__div_to_l_@f1+3,f
  5687  1F6D                     l2822:
  5688  1F6D  17A6               	bsf	__div_to_l_@f2+2,7
  5689  1F6E  30FF               	movlw	255
  5690  1F6F  05A4               	andwf	__div_to_l_@f2,f
  5691  1F70  30FF               	movlw	255
  5692  1F71  05A5               	andwf	__div_to_l_@f2+1,f
  5693  1F72  30FF               	movlw	255
  5694  1F73  05A6               	andwf	__div_to_l_@f2+2,f
  5695  1F74  3000               	movlw	0
  5696  1F75  05A7               	andwf	__div_to_l_@f2+3,f
  5697  1F76  3000               	movlw	0
  5698  1F77  00AB               	movwf	__div_to_l_@quot+3
  5699  1F78  3000               	movlw	0
  5700  1F79  00AA               	movwf	__div_to_l_@quot+2
  5701  1F7A  3000               	movlw	0
  5702  1F7B  00A9               	movwf	__div_to_l_@quot+1
  5703  1F7C  3000               	movlw	0
  5704  1F7D  00A8               	movwf	__div_to_l_@quot
  5705  1F7E                     l2824:
  5706  1F7E  307F               	movlw	127
  5707  1F7F  02AD               	subwf	__div_to_l_@exp1,f
  5708  1F80                     l2826:
  5709  1F80  30A0               	movlw	160
  5710  1F81  072C               	addwf	__div_to_l_@cntr,w
  5711  1F82  00F4               	movwf	??__div_to_l_
  5712  1F83  0874               	movf	??__div_to_l_,w
  5713  1F84  02AD               	subwf	__div_to_l_@exp1,f
  5714  1F85  3020               	movlw	32
  5715  1F86  00F4               	movwf	??__div_to_l_
  5716  1F87  0874               	movf	??__div_to_l_,w
  5717  1F88  00AC               	movwf	__div_to_l_@cntr
  5718  1F89                     l2828:
  5719  1F89  3001               	movlw	1
  5720  1F8A  00F4               	movwf	??__div_to_l_
  5721  1F8B                     u4515:
  5722  1F8B  1003               	clrc
  5723  1F8C  0DA8               	rlf	__div_to_l_@quot,f
  5724  1F8D  0DA9               	rlf	__div_to_l_@quot+1,f
  5725  1F8E  0DAA               	rlf	__div_to_l_@quot+2,f
  5726  1F8F  0DAB               	rlf	__div_to_l_@quot+3,f
  5727  1F90  0BF4               	decfsz	??__div_to_l_,f
  5728  1F91  2F8B               	goto	u4515
  5729  1F92                     l2830:
  5730  1F92  0827               	movf	__div_to_l_@f2+3,w
  5731  1F93  0223               	subwf	__div_to_l_@f1+3,w
  5732  1F94  1D03               	skipz
  5733  1F95  2FA0               	goto	u4525
  5734  1F96  0826               	movf	__div_to_l_@f2+2,w
  5735  1F97  0222               	subwf	__div_to_l_@f1+2,w
  5736  1F98  1D03               	skipz
  5737  1F99  2FA0               	goto	u4525
  5738  1F9A  0825               	movf	__div_to_l_@f2+1,w
  5739  1F9B  0221               	subwf	__div_to_l_@f1+1,w
  5740  1F9C  1D03               	skipz
  5741  1F9D  2FA0               	goto	u4525
  5742  1F9E  0824               	movf	__div_to_l_@f2,w
  5743  1F9F  0220               	subwf	__div_to_l_@f1,w
  5744  1FA0                     u4525:
  5745  1FA0  1C03               	skipc
  5746  1FA1  2FA3               	goto	u4521
  5747  1FA2  2FA4               	goto	u4520
  5748  1FA3                     u4521:
  5749  1FA3  2FB3               	goto	l2836
  5750  1FA4                     u4520:
  5751  1FA4                     l2832:
  5752  1FA4  0824               	movf	__div_to_l_@f2,w
  5753  1FA5  02A0               	subwf	__div_to_l_@f1,f
  5754  1FA6  0825               	movf	__div_to_l_@f2+1,w
  5755  1FA7  1C03               	skipc
  5756  1FA8  0F25               	incfsz	__div_to_l_@f2+1,w
  5757  1FA9  02A1               	subwf	__div_to_l_@f1+1,f
  5758  1FAA  0826               	movf	__div_to_l_@f2+2,w
  5759  1FAB  1C03               	skipc
  5760  1FAC  0F26               	incfsz	__div_to_l_@f2+2,w
  5761  1FAD  02A2               	subwf	__div_to_l_@f1+2,f
  5762  1FAE  0827               	movf	__div_to_l_@f2+3,w
  5763  1FAF  1C03               	skipc
  5764  1FB0  0F27               	incfsz	__div_to_l_@f2+3,w
  5765  1FB1  02A3               	subwf	__div_to_l_@f1+3,f
  5766  1FB2                     l2834:
  5767  1FB2  1428               	bsf	__div_to_l_@quot,0
  5768  1FB3                     l2836:
  5769  1FB3  3001               	movlw	1
  5770  1FB4  00F4               	movwf	??__div_to_l_
  5771  1FB5                     u4535:
  5772  1FB5  1003               	clrc
  5773  1FB6  0DA0               	rlf	__div_to_l_@f1,f
  5774  1FB7  0DA1               	rlf	__div_to_l_@f1+1,f
  5775  1FB8  0DA2               	rlf	__div_to_l_@f1+2,f
  5776  1FB9  0DA3               	rlf	__div_to_l_@f1+3,f
  5777  1FBA  0BF4               	decfsz	??__div_to_l_,f
  5778  1FBB  2FB5               	goto	u4535
  5779  1FBC                     l2838:
  5780  1FBC  3001               	movlw	1
  5781  1FBD  02AC               	subwf	__div_to_l_@cntr,f
  5782  1FBE  1D03               	btfss	3,2
  5783  1FBF  2FC1               	goto	u4541
  5784  1FC0  2FC2               	goto	u4540
  5785  1FC1                     u4541:
  5786  1FC1  2F89               	goto	l2828
  5787  1FC2                     u4540:
  5788  1FC2                     l495:
  5789  1FC2  1FAD               	btfss	__div_to_l_@exp1,7
  5790  1FC3  2FC5               	goto	u4551
  5791  1FC4  2FC6               	goto	u4550
  5792  1FC5                     u4551:
  5793  1FC5  2FE0               	goto	l2848
  5794  1FC6                     u4550:
  5795  1FC6                     l2840:
  5796  1FC6  082D               	movf	__div_to_l_@exp1,w
  5797  1FC7  3A80               	xorlw	128
  5798  1FC8  3E9F               	addlw	159
  5799  1FC9  1803               	skipnc
  5800  1FCA  2FCC               	goto	u4561
  5801  1FCB  2FCD               	goto	u4560
  5802  1FCC                     u4561:
  5803  1FCC  2FCE               	goto	l2846
  5804  1FCD                     u4560:
  5805  1FCD  2F4F               	goto	l2810
  5806  1FCE                     l2846:
  5807  1FCE  3001               	movlw	1
  5808  1FCF                     u4575:
  5809  1FCF  1003               	clrc
  5810  1FD0  0CAB               	rrf	__div_to_l_@quot+3,f
  5811  1FD1  0CAA               	rrf	__div_to_l_@quot+2,f
  5812  1FD2  0CA9               	rrf	__div_to_l_@quot+1,f
  5813  1FD3  0CA8               	rrf	__div_to_l_@quot,f
  5814  1FD4  3EFF               	addlw	-1
  5815  1FD5  1D03               	skipz
  5816  1FD6  2FCF               	goto	u4575
  5817  1FD7  3001               	movlw	1
  5818  1FD8  00F4               	movwf	??__div_to_l_
  5819  1FD9  0874               	movf	??__div_to_l_,w
  5820  1FDA  07AD               	addwf	__div_to_l_@exp1,f
  5821  1FDB  1D03               	btfss	3,2
  5822  1FDC  2FDE               	goto	u4581
  5823  1FDD  2FDF               	goto	u4580
  5824  1FDE                     u4581:
  5825  1FDE  2FCE               	goto	l2846
  5826  1FDF                     u4580:
  5827  1FDF  2FF7               	goto	l2856
  5828  1FE0                     l2848:
  5829  1FE0  3020               	movlw	32
  5830  1FE1  022D               	subwf	__div_to_l_@exp1,w
  5831  1FE2  1C03               	skipc
  5832  1FE3  2FE5               	goto	u4591
  5833  1FE4  2FE6               	goto	u4590
  5834  1FE5                     u4591:
  5835  1FE5  2FF2               	goto	l502
  5836  1FE6                     u4590:
  5837  1FE6  2F4F               	goto	l2810
  5838  1FE7                     l2854:
  5839  1FE7  3001               	movlw	1
  5840  1FE8  00F4               	movwf	??__div_to_l_
  5841  1FE9                     u4605:
  5842  1FE9  1003               	clrc
  5843  1FEA  0DA8               	rlf	__div_to_l_@quot,f
  5844  1FEB  0DA9               	rlf	__div_to_l_@quot+1,f
  5845  1FEC  0DAA               	rlf	__div_to_l_@quot+2,f
  5846  1FED  0DAB               	rlf	__div_to_l_@quot+3,f
  5847  1FEE  0BF4               	decfsz	??__div_to_l_,f
  5848  1FEF  2FE9               	goto	u4605
  5849  1FF0  3001               	movlw	1
  5850  1FF1  02AD               	subwf	__div_to_l_@exp1,f
  5851  1FF2                     l502:
  5852  1FF2  082D               	movf	__div_to_l_@exp1,w
  5853  1FF3  1D03               	btfss	3,2
  5854  1FF4  2FF6               	goto	u4611
  5855  1FF5  2FF7               	goto	u4610
  5856  1FF6                     u4611:
  5857  1FF6  2FE7               	goto	l2854
  5858  1FF7                     u4610:
  5859  1FF7                     l2856:
  5860  1FF7  082B               	movf	__div_to_l_@quot+3,w
  5861  1FF8  00A3               	movwf	?__div_to_l_+3
  5862  1FF9  082A               	movf	__div_to_l_@quot+2,w
  5863  1FFA  00A2               	movwf	?__div_to_l_+2
  5864  1FFB  0829               	movf	__div_to_l_@quot+1,w
  5865  1FFC  00A1               	movwf	?__div_to_l_+1
  5866  1FFD  0828               	movf	__div_to_l_@quot,w
  5867  1FFE  00A0               	movwf	?__div_to_l_
  5868  1FFF                     l491:
  5869  1FFF  0008               	return
  5870  2000                     __end_of__div_to_l_:
  5871                           
  5872                           	psect	text13
  5873  1DC9                     __ptext13:	
  5874 ;; *************** function ___xxtofl *****************
  5875 ;; Defined at:
  5876 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  sign            1    wreg     unsigned char 
  5879 ;;  val             4    4[COMMON] long 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  sign            1    4[BANK0 ] unsigned char 
  5882 ;;  arg             4    6[BANK0 ] unsigned long 
  5883 ;;  exp             1    5[BANK0 ] unsigned char 
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  4    4[COMMON] unsigned char 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5893 ;;      Params:         4       0       0       0       0
  5894 ;;      Locals:         0       6       0       0       0
  5895 ;;      Temps:          0       4       0       0       0
  5896 ;;      Totals:         4      10       0       0       0
  5897 ;;Total ram usage:       14 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    1
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_main
  5904 ;;		_sprintf
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           
  5909                           ;psect for function ___xxtofl
  5910  1DC9                     ___xxtofl:
  5911                           
  5912                           ;incstack = 0
  5913                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5914                           ;___xxtofl@sign stored from wreg
  5915  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  5916  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  5917  1DCB  00A4               	movwf	___xxtofl@sign
  5918  1DCC                     l3000:
  5919  1DCC  0824               	movf	___xxtofl@sign,w
  5920  1DCD  1903               	btfsc	3,2
  5921  1DCE  2DD0               	goto	u5001
  5922  1DCF  2DD1               	goto	u5000
  5923  1DD0                     u5001:
  5924  1DD0  2DE5               	goto	l3006
  5925  1DD1                     u5000:
  5926  1DD1                     l3002:
  5927  1DD1  1FF7               	btfss	___xxtofl@val+3,7
  5928  1DD2  2DD4               	goto	u5011
  5929  1DD3  2DD5               	goto	u5010
  5930  1DD4                     u5011:
  5931  1DD4  2DE5               	goto	l3006
  5932  1DD5                     u5010:
  5933  1DD5                     l3004:
  5934  1DD5  0974               	comf	___xxtofl@val,w
  5935  1DD6  00A6               	movwf	___xxtofl@arg
  5936  1DD7  0975               	comf	___xxtofl@val+1,w
  5937  1DD8  00A7               	movwf	___xxtofl@arg+1
  5938  1DD9  0976               	comf	___xxtofl@val+2,w
  5939  1DDA  00A8               	movwf	___xxtofl@arg+2
  5940  1DDB  0977               	comf	___xxtofl@val+3,w
  5941  1DDC  00A9               	movwf	___xxtofl@arg+3
  5942  1DDD  0AA6               	incf	___xxtofl@arg,f
  5943  1DDE  1903               	skipnz
  5944  1DDF  0AA7               	incf	___xxtofl@arg+1,f
  5945  1DE0  1903               	skipnz
  5946  1DE1  0AA8               	incf	___xxtofl@arg+2,f
  5947  1DE2  1903               	skipnz
  5948  1DE3  0AA9               	incf	___xxtofl@arg+3,f
  5949  1DE4  2DED               	goto	l788
  5950  1DE5                     l3006:
  5951  1DE5  0877               	movf	___xxtofl@val+3,w
  5952  1DE6  00A9               	movwf	___xxtofl@arg+3
  5953  1DE7  0876               	movf	___xxtofl@val+2,w
  5954  1DE8  00A8               	movwf	___xxtofl@arg+2
  5955  1DE9  0875               	movf	___xxtofl@val+1,w
  5956  1DEA  00A7               	movwf	___xxtofl@arg+1
  5957  1DEB  0874               	movf	___xxtofl@val,w
  5958  1DEC  00A6               	movwf	___xxtofl@arg
  5959  1DED                     l788:
  5960  1DED  0877               	movf	___xxtofl@val+3,w
  5961  1DEE  0476               	iorwf	___xxtofl@val+2,w
  5962  1DEF  0475               	iorwf	___xxtofl@val+1,w
  5963  1DF0  0474               	iorwf	___xxtofl@val,w
  5964  1DF1  1D03               	skipz
  5965  1DF2  2DF4               	goto	u5021
  5966  1DF3  2DF5               	goto	u5020
  5967  1DF4                     u5021:
  5968  1DF4  2DFE               	goto	l3012
  5969  1DF5                     u5020:
  5970  1DF5                     l3008:
  5971  1DF5  3000               	movlw	0
  5972  1DF6  00F7               	movwf	?___xxtofl+3
  5973  1DF7  3000               	movlw	0
  5974  1DF8  00F6               	movwf	?___xxtofl+2
  5975  1DF9  3000               	movlw	0
  5976  1DFA  00F5               	movwf	?___xxtofl+1
  5977  1DFB  3000               	movlw	0
  5978  1DFC  00F4               	movwf	?___xxtofl
  5979  1DFD  2E84               	goto	l790
  5980  1DFE                     l3012:
  5981  1DFE  3096               	movlw	150
  5982  1DFF  00A0               	movwf	??___xxtofl
  5983  1E00  0820               	movf	??___xxtofl,w
  5984  1E01  00A5               	movwf	___xxtofl@exp
  5985  1E02  2E10               	goto	l3016
  5986  1E03                     l3014:
  5987  1E03  3001               	movlw	1
  5988  1E04  00A0               	movwf	??___xxtofl
  5989  1E05  0820               	movf	??___xxtofl,w
  5990  1E06  07A5               	addwf	___xxtofl@exp,f
  5991  1E07  3001               	movlw	1
  5992  1E08                     u5035:
  5993  1E08  1003               	clrc
  5994  1E09  0CA9               	rrf	___xxtofl@arg+3,f
  5995  1E0A  0CA8               	rrf	___xxtofl@arg+2,f
  5996  1E0B  0CA7               	rrf	___xxtofl@arg+1,f
  5997  1E0C  0CA6               	rrf	___xxtofl@arg,f
  5998  1E0D  3EFF               	addlw	-1
  5999  1E0E  1D03               	skipz
  6000  1E0F  2E08               	goto	u5035
  6001  1E10                     l3016:
  6002  1E10  30FE               	movlw	254
  6003  1E11  0529               	andwf	___xxtofl@arg+3,w
  6004  1E12  1D03               	btfss	3,2
  6005  1E13  2E15               	goto	u5041
  6006  1E14  2E16               	goto	u5040
  6007  1E15                     u5041:
  6008  1E15  2E03               	goto	l3014
  6009  1E16                     u5040:
  6010  1E16  2E32               	goto	l794
  6011  1E17                     l3018:
  6012  1E17  3001               	movlw	1
  6013  1E18  00A0               	movwf	??___xxtofl
  6014  1E19  0820               	movf	??___xxtofl,w
  6015  1E1A  07A5               	addwf	___xxtofl@exp,f
  6016  1E1B                     l3020:
  6017  1E1B  3001               	movlw	1
  6018  1E1C  07A6               	addwf	___xxtofl@arg,f
  6019  1E1D  3000               	movlw	0
  6020  1E1E  1803               	skipnc
  6021  1E1F  3001               	movlw	1
  6022  1E20  07A7               	addwf	___xxtofl@arg+1,f
  6023  1E21  3000               	movlw	0
  6024  1E22  1803               	skipnc
  6025  1E23  3001               	movlw	1
  6026  1E24  07A8               	addwf	___xxtofl@arg+2,f
  6027  1E25  3000               	movlw	0
  6028  1E26  1803               	skipnc
  6029  1E27  3001               	movlw	1
  6030  1E28  07A9               	addwf	___xxtofl@arg+3,f
  6031  1E29                     l3022:
  6032  1E29  3001               	movlw	1
  6033  1E2A                     u5055:
  6034  1E2A  1003               	clrc
  6035  1E2B  0CA9               	rrf	___xxtofl@arg+3,f
  6036  1E2C  0CA8               	rrf	___xxtofl@arg+2,f
  6037  1E2D  0CA7               	rrf	___xxtofl@arg+1,f
  6038  1E2E  0CA6               	rrf	___xxtofl@arg,f
  6039  1E2F  3EFF               	addlw	-1
  6040  1E30  1D03               	skipz
  6041  1E31  2E2A               	goto	u5055
  6042  1E32                     l794:
  6043  1E32  30FF               	movlw	255
  6044  1E33  0529               	andwf	___xxtofl@arg+3,w
  6045  1E34  1D03               	btfss	3,2
  6046  1E35  2E37               	goto	u5061
  6047  1E36  2E38               	goto	u5060
  6048  1E37                     u5061:
  6049  1E37  2E17               	goto	l3018
  6050  1E38                     u5060:
  6051  1E38  2E44               	goto	l3026
  6052  1E39                     l3024:
  6053  1E39  3001               	movlw	1
  6054  1E3A  02A5               	subwf	___xxtofl@exp,f
  6055  1E3B  3001               	movlw	1
  6056  1E3C  00A0               	movwf	??___xxtofl
  6057  1E3D                     u5075:
  6058  1E3D  1003               	clrc
  6059  1E3E  0DA6               	rlf	___xxtofl@arg,f
  6060  1E3F  0DA7               	rlf	___xxtofl@arg+1,f
  6061  1E40  0DA8               	rlf	___xxtofl@arg+2,f
  6062  1E41  0DA9               	rlf	___xxtofl@arg+3,f
  6063  1E42  0BA0               	decfsz	??___xxtofl,f
  6064  1E43  2E3D               	goto	u5075
  6065  1E44                     l3026:
  6066  1E44  1BA8               	btfsc	___xxtofl@arg+2,7
  6067  1E45  2E47               	goto	u5081
  6068  1E46  2E48               	goto	u5080
  6069  1E47                     u5081:
  6070  1E47  2E4E               	goto	l801
  6071  1E48                     u5080:
  6072  1E48                     l3028:
  6073  1E48  3002               	movlw	2
  6074  1E49  0225               	subwf	___xxtofl@exp,w
  6075  1E4A  1803               	skipnc
  6076  1E4B  2E4D               	goto	u5091
  6077  1E4C  2E4E               	goto	u5090
  6078  1E4D                     u5091:
  6079  1E4D  2E39               	goto	l3024
  6080  1E4E                     u5090:
  6081  1E4E                     l801:
  6082  1E4E  1825               	btfsc	___xxtofl@exp,0
  6083  1E4F  2E51               	goto	u5101
  6084  1E50  2E52               	goto	u5100
  6085  1E51                     u5101:
  6086  1E51  2E5A               	goto	l802
  6087  1E52                     u5100:
  6088  1E52                     l3030:
  6089  1E52  30FF               	movlw	255
  6090  1E53  05A6               	andwf	___xxtofl@arg,f
  6091  1E54  30FF               	movlw	255
  6092  1E55  05A7               	andwf	___xxtofl@arg+1,f
  6093  1E56  307F               	movlw	127
  6094  1E57  05A8               	andwf	___xxtofl@arg+2,f
  6095  1E58  30FF               	movlw	255
  6096  1E59  05A9               	andwf	___xxtofl@arg+3,f
  6097  1E5A                     l802:
  6098  1E5A  1003               	clrc
  6099  1E5B  0CA5               	rrf	___xxtofl@exp,f
  6100  1E5C                     l3032:
  6101  1E5C  0825               	movf	___xxtofl@exp,w
  6102  1E5D  00A0               	movwf	??___xxtofl
  6103  1E5E  01A1               	clrf	??___xxtofl+1
  6104  1E5F  01A2               	clrf	??___xxtofl+2
  6105  1E60  01A3               	clrf	??___xxtofl+3
  6106  1E61  3018               	movlw	24
  6107  1E62                     u5115:
  6108  1E62  1003               	clrc
  6109  1E63  0DA0               	rlf	??___xxtofl,f
  6110  1E64  0DA1               	rlf	??___xxtofl+1,f
  6111  1E65  0DA2               	rlf	??___xxtofl+2,f
  6112  1E66  0DA3               	rlf	??___xxtofl+3,f
  6113  1E67                     u5110:
  6114  1E67  3EFF               	addlw	-1
  6115  1E68  1D03               	skipz
  6116  1E69  2E62               	goto	u5115
  6117  1E6A  0820               	movf	??___xxtofl,w
  6118  1E6B  04A6               	iorwf	___xxtofl@arg,f
  6119  1E6C  0821               	movf	??___xxtofl+1,w
  6120  1E6D  04A7               	iorwf	___xxtofl@arg+1,f
  6121  1E6E  0822               	movf	??___xxtofl+2,w
  6122  1E6F  04A8               	iorwf	___xxtofl@arg+2,f
  6123  1E70  0823               	movf	??___xxtofl+3,w
  6124  1E71  04A9               	iorwf	___xxtofl@arg+3,f
  6125  1E72                     l3034:
  6126  1E72  0824               	movf	___xxtofl@sign,w
  6127  1E73  1903               	btfsc	3,2
  6128  1E74  2E76               	goto	u5121
  6129  1E75  2E77               	goto	u5120
  6130  1E76                     u5121:
  6131  1E76  2E7C               	goto	l3040
  6132  1E77                     u5120:
  6133  1E77                     l3036:
  6134  1E77  1FF7               	btfss	___xxtofl@val+3,7
  6135  1E78  2E7A               	goto	u5131
  6136  1E79  2E7B               	goto	u5130
  6137  1E7A                     u5131:
  6138  1E7A  2E7C               	goto	l3040
  6139  1E7B                     u5130:
  6140  1E7B                     l3038:
  6141  1E7B  17A9               	bsf	___xxtofl@arg+3,7
  6142  1E7C                     l3040:
  6143  1E7C  0829               	movf	___xxtofl@arg+3,w
  6144  1E7D  00F7               	movwf	?___xxtofl+3
  6145  1E7E  0828               	movf	___xxtofl@arg+2,w
  6146  1E7F  00F6               	movwf	?___xxtofl+2
  6147  1E80  0827               	movf	___xxtofl@arg+1,w
  6148  1E81  00F5               	movwf	?___xxtofl+1
  6149  1E82  0826               	movf	___xxtofl@arg,w
  6150  1E83  00F4               	movwf	?___xxtofl
  6151  1E84                     l790:
  6152  1E84  0008               	return
  6153  1E85                     __end_of___xxtofl:
  6154                           
  6155                           	psect	text14
  6156  1A1A                     __ptext14:	
  6157 ;; *************** function ___wmul *****************
  6158 ;; Defined at:
  6159 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  multiplier      2    4[COMMON] unsigned int 
  6162 ;;  multiplicand    2    6[COMMON] unsigned int 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  product         2    0[BANK0 ] unsigned int 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  2    4[COMMON] unsigned int 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6174 ;;      Params:         4       0       0       0       0
  6175 ;;      Locals:         0       2       0       0       0
  6176 ;;      Temps:          0       0       0       0       0
  6177 ;;      Totals:         4       2       0       0       0
  6178 ;;Total ram usage:        6 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    1
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_sprintf
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           
  6189                           ;psect for function ___wmul
  6190  1A1A                     ___wmul:
  6191  1A1A                     l3624:	
  6192                           ;incstack = 0
  6193                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6194                           
  6195  1A1A  1283               	bcf	3,5	;RP0=0, select bank0
  6196  1A1B  1303               	bcf	3,6	;RP1=0, select bank0
  6197  1A1C  01A0               	clrf	___wmul@product
  6198  1A1D  01A1               	clrf	___wmul@product+1
  6199  1A1E                     l3626:
  6200  1A1E  1C74               	btfss	___wmul@multiplier,0
  6201  1A1F  2A21               	goto	u6311
  6202  1A20  2A22               	goto	u6310
  6203  1A21                     u6311:
  6204  1A21  2A2A               	goto	l321
  6205  1A22                     u6310:
  6206  1A22                     l3628:
  6207  1A22  0876               	movf	___wmul@multiplicand,w
  6208  1A23  1283               	bcf	3,5	;RP0=0, select bank0
  6209  1A24  1303               	bcf	3,6	;RP1=0, select bank0
  6210  1A25  07A0               	addwf	___wmul@product,f
  6211  1A26  1803               	skipnc
  6212  1A27  0AA1               	incf	___wmul@product+1,f
  6213  1A28  0877               	movf	___wmul@multiplicand+1,w
  6214  1A29  07A1               	addwf	___wmul@product+1,f
  6215  1A2A                     l321:
  6216  1A2A  3001               	movlw	1
  6217  1A2B                     u6325:
  6218  1A2B  1003               	clrc
  6219  1A2C  0DF6               	rlf	___wmul@multiplicand,f
  6220  1A2D  0DF7               	rlf	___wmul@multiplicand+1,f
  6221  1A2E  3EFF               	addlw	-1
  6222  1A2F  1D03               	skipz
  6223  1A30  2A2B               	goto	u6325
  6224  1A31                     l3630:
  6225  1A31  3001               	movlw	1
  6226  1A32                     u6335:
  6227  1A32  1003               	clrc
  6228  1A33  0CF5               	rrf	___wmul@multiplier+1,f
  6229  1A34  0CF4               	rrf	___wmul@multiplier,f
  6230  1A35  3EFF               	addlw	-1
  6231  1A36  1D03               	skipz
  6232  1A37  2A32               	goto	u6335
  6233  1A38                     l3632:
  6234  1A38  0874               	movf	___wmul@multiplier,w
  6235  1A39  0475               	iorwf	___wmul@multiplier+1,w
  6236  1A3A  1D03               	btfss	3,2
  6237  1A3B  2A3D               	goto	u6341
  6238  1A3C  2A3E               	goto	u6340
  6239  1A3D                     u6341:
  6240  1A3D  2A1E               	goto	l3626
  6241  1A3E                     u6340:
  6242  1A3E                     l3634:
  6243  1A3E  1283               	bcf	3,5	;RP0=0, select bank0
  6244  1A3F  1303               	bcf	3,6	;RP1=0, select bank0
  6245  1A40  0821               	movf	___wmul@product+1,w
  6246  1A41  00F5               	movwf	?___wmul+1
  6247  1A42  0820               	movf	___wmul@product,w
  6248  1A43  00F4               	movwf	?___wmul
  6249  1A44                     l323:
  6250  1A44  0008               	return
  6251  1A45                     __end_of___wmul:
  6252                           
  6253                           	psect	text15
  6254  06A9                     __ptext15:	
  6255 ;; *************** function ___llmod *****************
  6256 ;; Defined at:
  6257 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  divisor         4   13[BANK0 ] unsigned long 
  6260 ;;  dividend        4   17[BANK0 ] unsigned long 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  counter         1    6[COMMON] unsigned char 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  4   13[BANK0 ] unsigned long 
  6265 ;; Registers used:
  6266 ;;		wreg, status,2, status,0
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6272 ;;      Params:         0       8       0       0       0
  6273 ;;      Locals:         1       0       0       0       0
  6274 ;;      Temps:          1       0       0       0       0
  6275 ;;      Totals:         2       8       0       0       0
  6276 ;;Total ram usage:       10 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    1
  6279 ;; This function calls:
  6280 ;;		Nothing
  6281 ;; This function is called by:
  6282 ;;		_sprintf
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           
  6287                           ;psect for function ___llmod
  6288  06A9                     ___llmod:
  6289  06A9                     l3662:	
  6290                           ;incstack = 0
  6291                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6292                           
  6293  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  6294  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  6295  06AB  0830               	movf	___llmod@divisor+3,w
  6296  06AC  042F               	iorwf	___llmod@divisor+2,w
  6297  06AD  042E               	iorwf	___llmod@divisor+1,w
  6298  06AE  042D               	iorwf	___llmod@divisor,w
  6299  06AF  1903               	skipnz
  6300  06B0  2EB2               	goto	u6421
  6301  06B1  2EB3               	goto	u6420
  6302  06B2                     u6421:
  6303  06B2  2EF6               	goto	l3678
  6304  06B3                     u6420:
  6305  06B3                     l3664:
  6306  06B3  01F6               	clrf	___llmod@counter
  6307  06B4  0AF6               	incf	___llmod@counter,f
  6308  06B5  2EC3               	goto	l3668
  6309  06B6                     l3666:
  6310  06B6  3001               	movlw	1
  6311  06B7  00F5               	movwf	??___llmod
  6312  06B8                     u6435:
  6313  06B8  1003               	clrc
  6314  06B9  0DAD               	rlf	___llmod@divisor,f
  6315  06BA  0DAE               	rlf	___llmod@divisor+1,f
  6316  06BB  0DAF               	rlf	___llmod@divisor+2,f
  6317  06BC  0DB0               	rlf	___llmod@divisor+3,f
  6318  06BD  0BF5               	decfsz	??___llmod,f
  6319  06BE  2EB8               	goto	u6435
  6320  06BF  3001               	movlw	1
  6321  06C0  00F5               	movwf	??___llmod
  6322  06C1  0875               	movf	??___llmod,w
  6323  06C2  07F6               	addwf	___llmod@counter,f
  6324  06C3                     l3668:
  6325  06C3  1FB0               	btfss	___llmod@divisor+3,7
  6326  06C4  2EC6               	goto	u6441
  6327  06C5  2EC7               	goto	u6440
  6328  06C6                     u6441:
  6329  06C6  2EB6               	goto	l3666
  6330  06C7                     u6440:
  6331  06C7                     l3670:
  6332  06C7  0830               	movf	___llmod@divisor+3,w
  6333  06C8  0234               	subwf	___llmod@dividend+3,w
  6334  06C9  1D03               	skipz
  6335  06CA  2ED5               	goto	u6455
  6336  06CB  082F               	movf	___llmod@divisor+2,w
  6337  06CC  0233               	subwf	___llmod@dividend+2,w
  6338  06CD  1D03               	skipz
  6339  06CE  2ED5               	goto	u6455
  6340  06CF  082E               	movf	___llmod@divisor+1,w
  6341  06D0  0232               	subwf	___llmod@dividend+1,w
  6342  06D1  1D03               	skipz
  6343  06D2  2ED5               	goto	u6455
  6344  06D3  082D               	movf	___llmod@divisor,w
  6345  06D4  0231               	subwf	___llmod@dividend,w
  6346  06D5                     u6455:
  6347  06D5  1C03               	skipc
  6348  06D6  2ED8               	goto	u6451
  6349  06D7  2ED9               	goto	u6450
  6350  06D8                     u6451:
  6351  06D8  2EE7               	goto	l3674
  6352  06D9                     u6450:
  6353  06D9                     l3672:
  6354  06D9  082D               	movf	___llmod@divisor,w
  6355  06DA  02B1               	subwf	___llmod@dividend,f
  6356  06DB  082E               	movf	___llmod@divisor+1,w
  6357  06DC  1C03               	skipc
  6358  06DD  0F2E               	incfsz	___llmod@divisor+1,w
  6359  06DE  02B2               	subwf	___llmod@dividend+1,f
  6360  06DF  082F               	movf	___llmod@divisor+2,w
  6361  06E0  1C03               	skipc
  6362  06E1  0F2F               	incfsz	___llmod@divisor+2,w
  6363  06E2  02B3               	subwf	___llmod@dividend+2,f
  6364  06E3  0830               	movf	___llmod@divisor+3,w
  6365  06E4  1C03               	skipc
  6366  06E5  0F30               	incfsz	___llmod@divisor+3,w
  6367  06E6  02B4               	subwf	___llmod@dividend+3,f
  6368  06E7                     l3674:
  6369  06E7  3001               	movlw	1
  6370  06E8                     u6465:
  6371  06E8  1003               	clrc
  6372  06E9  0CB0               	rrf	___llmod@divisor+3,f
  6373  06EA  0CAF               	rrf	___llmod@divisor+2,f
  6374  06EB  0CAE               	rrf	___llmod@divisor+1,f
  6375  06EC  0CAD               	rrf	___llmod@divisor,f
  6376  06ED  3EFF               	addlw	-1
  6377  06EE  1D03               	skipz
  6378  06EF  2EE8               	goto	u6465
  6379  06F0                     l3676:
  6380  06F0  3001               	movlw	1
  6381  06F1  02F6               	subwf	___llmod@counter,f
  6382  06F2  1D03               	btfss	3,2
  6383  06F3  2EF5               	goto	u6471
  6384  06F4  2EF6               	goto	u6470
  6385  06F5                     u6471:
  6386  06F5  2EC7               	goto	l3670
  6387  06F6                     u6470:
  6388  06F6                     l3678:
  6389  06F6  0834               	movf	___llmod@dividend+3,w
  6390  06F7  00B0               	movwf	?___llmod+3
  6391  06F8  0833               	movf	___llmod@dividend+2,w
  6392  06F9  00AF               	movwf	?___llmod+2
  6393  06FA  0832               	movf	___llmod@dividend+1,w
  6394  06FB  00AE               	movwf	?___llmod+1
  6395  06FC  0831               	movf	___llmod@dividend,w
  6396  06FD  00AD               	movwf	?___llmod
  6397  06FE                     l577:
  6398  06FE  0008               	return
  6399  06FF                     __end_of___llmod:
  6400                           
  6401                           	psect	text16
  6402  1BC5                     __ptext16:	
  6403 ;; *************** function ___lldiv *****************
  6404 ;; Defined at:
  6405 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  divisor         4    0[BANK0 ] unsigned long 
  6408 ;;  dividend        4    4[BANK0 ] unsigned long 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  quotient        4    8[BANK0 ] unsigned long 
  6411 ;;  counter         1   12[BANK0 ] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  4    0[BANK0 ] unsigned long 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6421 ;;      Params:         0       8       0       0       0
  6422 ;;      Locals:         0       5       0       0       0
  6423 ;;      Temps:          1       0       0       0       0
  6424 ;;      Totals:         1      13       0       0       0
  6425 ;;Total ram usage:       14 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    1
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_sprintf
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           
  6436                           ;psect for function ___lldiv
  6437  1BC5                     ___lldiv:
  6438  1BC5                     l3638:	
  6439                           ;incstack = 0
  6440                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6441                           
  6442  1BC5  3000               	movlw	0
  6443  1BC6  1283               	bcf	3,5	;RP0=0, select bank0
  6444  1BC7  1303               	bcf	3,6	;RP1=0, select bank0
  6445  1BC8  00AB               	movwf	___lldiv@quotient+3
  6446  1BC9  3000               	movlw	0
  6447  1BCA  00AA               	movwf	___lldiv@quotient+2
  6448  1BCB  3000               	movlw	0
  6449  1BCC  00A9               	movwf	___lldiv@quotient+1
  6450  1BCD  3000               	movlw	0
  6451  1BCE  00A8               	movwf	___lldiv@quotient
  6452  1BCF  0823               	movf	___lldiv@divisor+3,w
  6453  1BD0  0422               	iorwf	___lldiv@divisor+2,w
  6454  1BD1  0421               	iorwf	___lldiv@divisor+1,w
  6455  1BD2  0420               	iorwf	___lldiv@divisor,w
  6456  1BD3  1903               	skipnz
  6457  1BD4  2BD6               	goto	u6351
  6458  1BD5  2BD7               	goto	u6350
  6459  1BD6                     u6351:
  6460  1BD6  2C24               	goto	l3658
  6461  1BD7                     u6350:
  6462  1BD7                     l3640:
  6463  1BD7  01AC               	clrf	___lldiv@counter
  6464  1BD8  0AAC               	incf	___lldiv@counter,f
  6465  1BD9  2BE7               	goto	l3644
  6466  1BDA                     l3642:
  6467  1BDA  3001               	movlw	1
  6468  1BDB  00F4               	movwf	??___lldiv
  6469  1BDC                     u6365:
  6470  1BDC  1003               	clrc
  6471  1BDD  0DA0               	rlf	___lldiv@divisor,f
  6472  1BDE  0DA1               	rlf	___lldiv@divisor+1,f
  6473  1BDF  0DA2               	rlf	___lldiv@divisor+2,f
  6474  1BE0  0DA3               	rlf	___lldiv@divisor+3,f
  6475  1BE1  0BF4               	decfsz	??___lldiv,f
  6476  1BE2  2BDC               	goto	u6365
  6477  1BE3  3001               	movlw	1
  6478  1BE4  00F4               	movwf	??___lldiv
  6479  1BE5  0874               	movf	??___lldiv,w
  6480  1BE6  07AC               	addwf	___lldiv@counter,f
  6481  1BE7                     l3644:
  6482  1BE7  1FA3               	btfss	___lldiv@divisor+3,7
  6483  1BE8  2BEA               	goto	u6371
  6484  1BE9  2BEB               	goto	u6370
  6485  1BEA                     u6371:
  6486  1BEA  2BDA               	goto	l3642
  6487  1BEB                     u6370:
  6488  1BEB                     l3646:
  6489  1BEB  3001               	movlw	1
  6490  1BEC  00F4               	movwf	??___lldiv
  6491  1BED                     u6385:
  6492  1BED  1003               	clrc
  6493  1BEE  0DA8               	rlf	___lldiv@quotient,f
  6494  1BEF  0DA9               	rlf	___lldiv@quotient+1,f
  6495  1BF0  0DAA               	rlf	___lldiv@quotient+2,f
  6496  1BF1  0DAB               	rlf	___lldiv@quotient+3,f
  6497  1BF2  0BF4               	decfsz	??___lldiv,f
  6498  1BF3  2BED               	goto	u6385
  6499  1BF4                     l3648:
  6500  1BF4  0823               	movf	___lldiv@divisor+3,w
  6501  1BF5  0227               	subwf	___lldiv@dividend+3,w
  6502  1BF6  1D03               	skipz
  6503  1BF7  2C02               	goto	u6395
  6504  1BF8  0822               	movf	___lldiv@divisor+2,w
  6505  1BF9  0226               	subwf	___lldiv@dividend+2,w
  6506  1BFA  1D03               	skipz
  6507  1BFB  2C02               	goto	u6395
  6508  1BFC  0821               	movf	___lldiv@divisor+1,w
  6509  1BFD  0225               	subwf	___lldiv@dividend+1,w
  6510  1BFE  1D03               	skipz
  6511  1BFF  2C02               	goto	u6395
  6512  1C00  0820               	movf	___lldiv@divisor,w
  6513  1C01  0224               	subwf	___lldiv@dividend,w
  6514  1C02                     u6395:
  6515  1C02  1C03               	skipc
  6516  1C03  2C05               	goto	u6391
  6517  1C04  2C06               	goto	u6390
  6518  1C05                     u6391:
  6519  1C05  2C15               	goto	l3654
  6520  1C06                     u6390:
  6521  1C06                     l3650:
  6522  1C06  0820               	movf	___lldiv@divisor,w
  6523  1C07  02A4               	subwf	___lldiv@dividend,f
  6524  1C08  0821               	movf	___lldiv@divisor+1,w
  6525  1C09  1C03               	skipc
  6526  1C0A  0F21               	incfsz	___lldiv@divisor+1,w
  6527  1C0B  02A5               	subwf	___lldiv@dividend+1,f
  6528  1C0C  0822               	movf	___lldiv@divisor+2,w
  6529  1C0D  1C03               	skipc
  6530  1C0E  0F22               	incfsz	___lldiv@divisor+2,w
  6531  1C0F  02A6               	subwf	___lldiv@dividend+2,f
  6532  1C10  0823               	movf	___lldiv@divisor+3,w
  6533  1C11  1C03               	skipc
  6534  1C12  0F23               	incfsz	___lldiv@divisor+3,w
  6535  1C13  02A7               	subwf	___lldiv@dividend+3,f
  6536  1C14                     l3652:
  6537  1C14  1428               	bsf	___lldiv@quotient,0
  6538  1C15                     l3654:
  6539  1C15  3001               	movlw	1
  6540  1C16                     u6405:
  6541  1C16  1003               	clrc
  6542  1C17  0CA3               	rrf	___lldiv@divisor+3,f
  6543  1C18  0CA2               	rrf	___lldiv@divisor+2,f
  6544  1C19  0CA1               	rrf	___lldiv@divisor+1,f
  6545  1C1A  0CA0               	rrf	___lldiv@divisor,f
  6546  1C1B  3EFF               	addlw	-1
  6547  1C1C  1D03               	skipz
  6548  1C1D  2C16               	goto	u6405
  6549  1C1E                     l3656:
  6550  1C1E  3001               	movlw	1
  6551  1C1F  02AC               	subwf	___lldiv@counter,f
  6552  1C20  1D03               	btfss	3,2
  6553  1C21  2C23               	goto	u6411
  6554  1C22  2C24               	goto	u6410
  6555  1C23                     u6411:
  6556  1C23  2BEB               	goto	l3646
  6557  1C24                     u6410:
  6558  1C24                     l3658:
  6559  1C24  082B               	movf	___lldiv@quotient+3,w
  6560  1C25  00A3               	movwf	?___lldiv+3
  6561  1C26  082A               	movf	___lldiv@quotient+2,w
  6562  1C27  00A2               	movwf	?___lldiv+2
  6563  1C28  0829               	movf	___lldiv@quotient+1,w
  6564  1C29  00A1               	movwf	?___lldiv+1
  6565  1C2A  0828               	movf	___lldiv@quotient,w
  6566  1C2B  00A0               	movwf	?___lldiv
  6567  1C2C                     l357:
  6568  1C2C  0008               	return
  6569  1C2D                     __end_of___lldiv:
  6570                           
  6571                           	psect	text17
  6572  1CA9                     __ptext17:	
  6573 ;; *************** function ___fltol *****************
  6574 ;; Defined at:
  6575 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  f1              4   57[BANK0 ] unsigned long 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  exp1            1   67[BANK0 ] unsigned char 
  6580 ;;  sign1           1   66[BANK0 ] unsigned char 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  4   57[BANK0 ] long 
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, status,0
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6590 ;;      Params:         0       4       0       0       0
  6591 ;;      Locals:         0       2       0       0       0
  6592 ;;      Temps:          0       5       0       0       0
  6593 ;;      Totals:         0      11       0       0       0
  6594 ;;Total ram usage:       11 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    1
  6597 ;; This function calls:
  6598 ;;		Nothing
  6599 ;; This function is called by:
  6600 ;;		_sprintf
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           
  6605                           ;psect for function ___fltol
  6606  1CA9                     ___fltol:
  6607  1CA9                     l2938:	
  6608                           ;incstack = 0
  6609                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6610                           
  6611  1CA9  1003               	clrc
  6612  1CAA  1283               	bcf	3,5	;RP0=0, select bank0
  6613  1CAB  1303               	bcf	3,6	;RP1=0, select bank0
  6614  1CAC  0D5B               	rlf	___fltol@f1+2,w
  6615  1CAD  0D5C               	rlf	___fltol@f1+3,w
  6616  1CAE  00DD               	movwf	??___fltol
  6617  1CAF  085D               	movf	??___fltol,w
  6618  1CB0  00E3               	movwf	___fltol@exp1
  6619  1CB1  0863               	movf	___fltol@exp1,w
  6620  1CB2  1D03               	btfss	3,2
  6621  1CB3  2CB5               	goto	u4841
  6622  1CB4  2CB6               	goto	u4840
  6623  1CB5                     u4841:
  6624  1CB5  2CBF               	goto	l2944
  6625  1CB6                     u4840:
  6626  1CB6                     l2940:
  6627  1CB6  3000               	movlw	0
  6628  1CB7  00DC               	movwf	?___fltol+3
  6629  1CB8  3000               	movlw	0
  6630  1CB9  00DB               	movwf	?___fltol+2
  6631  1CBA  3000               	movlw	0
  6632  1CBB  00DA               	movwf	?___fltol+1
  6633  1CBC  3000               	movlw	0
  6634  1CBD  00D9               	movwf	?___fltol
  6635  1CBE  2D24               	goto	l524
  6636  1CBF                     l2944:
  6637  1CBF  0859               	movf	___fltol@f1,w
  6638  1CC0  00DD               	movwf	??___fltol
  6639  1CC1  085A               	movf	___fltol@f1+1,w
  6640  1CC2  00DE               	movwf	??___fltol+1
  6641  1CC3  085B               	movf	___fltol@f1+2,w
  6642  1CC4  00DF               	movwf	??___fltol+2
  6643  1CC5  085C               	movf	___fltol@f1+3,w
  6644  1CC6  00E0               	movwf	??___fltol+3
  6645  1CC7  301F               	movlw	31
  6646  1CC8                     u4855:
  6647  1CC8  1003               	clrc
  6648  1CC9  0CE0               	rrf	??___fltol+3,f
  6649  1CCA  0CDF               	rrf	??___fltol+2,f
  6650  1CCB  0CDE               	rrf	??___fltol+1,f
  6651  1CCC  0CDD               	rrf	??___fltol,f
  6652  1CCD                     u4850:
  6653  1CCD  3EFF               	addlw	-1
  6654  1CCE  1D03               	skipz
  6655  1CCF  2CC8               	goto	u4855
  6656  1CD0  085D               	movf	??___fltol,w
  6657  1CD1  00E1               	movwf	??___fltol+4
  6658  1CD2  0861               	movf	??___fltol+4,w
  6659  1CD3  00E2               	movwf	___fltol@sign1
  6660  1CD4                     l2946:
  6661  1CD4  17DB               	bsf	___fltol@f1+2,7
  6662  1CD5                     l2948:
  6663  1CD5  30FF               	movlw	255
  6664  1CD6  05D9               	andwf	___fltol@f1,f
  6665  1CD7  30FF               	movlw	255
  6666  1CD8  05DA               	andwf	___fltol@f1+1,f
  6667  1CD9  30FF               	movlw	255
  6668  1CDA  05DB               	andwf	___fltol@f1+2,f
  6669  1CDB  3000               	movlw	0
  6670  1CDC  05DC               	andwf	___fltol@f1+3,f
  6671  1CDD                     l2950:
  6672  1CDD  3096               	movlw	150
  6673  1CDE  02E3               	subwf	___fltol@exp1,f
  6674  1CDF                     l2952:
  6675  1CDF  1FE3               	btfss	___fltol@exp1,7
  6676  1CE0  2CE2               	goto	u4861
  6677  1CE1  2CE3               	goto	u4860
  6678  1CE2                     u4861:
  6679  1CE2  2CFD               	goto	l2962
  6680  1CE3                     u4860:
  6681  1CE3                     l2954:
  6682  1CE3  0863               	movf	___fltol@exp1,w
  6683  1CE4  3A80               	xorlw	128
  6684  1CE5  3E97               	addlw	151
  6685  1CE6  1803               	skipnc
  6686  1CE7  2CE9               	goto	u4871
  6687  1CE8  2CEA               	goto	u4870
  6688  1CE9                     u4871:
  6689  1CE9  2CEB               	goto	l2960
  6690  1CEA                     u4870:
  6691  1CEA  2CB6               	goto	l2940
  6692  1CEB                     l2960:
  6693  1CEB  3001               	movlw	1
  6694  1CEC                     u4885:
  6695  1CEC  1003               	clrc
  6696  1CED  0CDC               	rrf	___fltol@f1+3,f
  6697  1CEE  0CDB               	rrf	___fltol@f1+2,f
  6698  1CEF  0CDA               	rrf	___fltol@f1+1,f
  6699  1CF0  0CD9               	rrf	___fltol@f1,f
  6700  1CF1  3EFF               	addlw	-1
  6701  1CF2  1D03               	skipz
  6702  1CF3  2CEC               	goto	u4885
  6703  1CF4  3001               	movlw	1
  6704  1CF5  00DD               	movwf	??___fltol
  6705  1CF6  085D               	movf	??___fltol,w
  6706  1CF7  07E3               	addwf	___fltol@exp1,f
  6707  1CF8  1D03               	btfss	3,2
  6708  1CF9  2CFB               	goto	u4891
  6709  1CFA  2CFC               	goto	u4890
  6710  1CFB                     u4891:
  6711  1CFB  2CEB               	goto	l2960
  6712  1CFC                     u4890:
  6713  1CFC  2D14               	goto	l2970
  6714  1CFD                     l2962:
  6715  1CFD  3020               	movlw	32
  6716  1CFE  0263               	subwf	___fltol@exp1,w
  6717  1CFF  1C03               	skipc
  6718  1D00  2D02               	goto	u4901
  6719  1D01  2D03               	goto	u4900
  6720  1D02                     u4901:
  6721  1D02  2D0F               	goto	l531
  6722  1D03                     u4900:
  6723  1D03  2CB6               	goto	l2940
  6724  1D04                     l2968:
  6725  1D04  3001               	movlw	1
  6726  1D05  00DD               	movwf	??___fltol
  6727  1D06                     u4915:
  6728  1D06  1003               	clrc
  6729  1D07  0DD9               	rlf	___fltol@f1,f
  6730  1D08  0DDA               	rlf	___fltol@f1+1,f
  6731  1D09  0DDB               	rlf	___fltol@f1+2,f
  6732  1D0A  0DDC               	rlf	___fltol@f1+3,f
  6733  1D0B  0BDD               	decfsz	??___fltol,f
  6734  1D0C  2D06               	goto	u4915
  6735  1D0D  3001               	movlw	1
  6736  1D0E  02E3               	subwf	___fltol@exp1,f
  6737  1D0F                     l531:
  6738  1D0F  0863               	movf	___fltol@exp1,w
  6739  1D10  1D03               	btfss	3,2
  6740  1D11  2D13               	goto	u4921
  6741  1D12  2D14               	goto	u4920
  6742  1D13                     u4921:
  6743  1D13  2D04               	goto	l2968
  6744  1D14                     u4920:
  6745  1D14                     l2970:
  6746  1D14  0862               	movf	___fltol@sign1,w
  6747  1D15  1903               	btfsc	3,2
  6748  1D16  2D18               	goto	u4931
  6749  1D17  2D19               	goto	u4930
  6750  1D18                     u4931:
  6751  1D18  2D24               	goto	l534
  6752  1D19                     u4930:
  6753  1D19                     l2972:
  6754  1D19  09D9               	comf	___fltol@f1,f
  6755  1D1A  09DA               	comf	___fltol@f1+1,f
  6756  1D1B  09DB               	comf	___fltol@f1+2,f
  6757  1D1C  09DC               	comf	___fltol@f1+3,f
  6758  1D1D  0AD9               	incf	___fltol@f1,f
  6759  1D1E  1903               	skipnz
  6760  1D1F  0ADA               	incf	___fltol@f1+1,f
  6761  1D20  1903               	skipnz
  6762  1D21  0ADB               	incf	___fltol@f1+2,f
  6763  1D22  1903               	skipnz
  6764  1D23  0ADC               	incf	___fltol@f1+3,f
  6765  1D24                     l534:
  6766  1D24                     l524:
  6767  1D24  0008               	return
  6768  1D25                     __end_of___fltol:
  6769                           
  6770                           	psect	text18
  6771  1B21                     __ptext18:	
  6772 ;; *************** function ___flsub *****************
  6773 ;; Defined at:
  6774 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  a               4    0[BANK1 ] long 
  6777 ;;  b               4    4[BANK1 ] long 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;		None
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  4    0[BANK1 ] long 
  6782 ;; Registers used:
  6783 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6789 ;;      Params:         0       0       8       0       0
  6790 ;;      Locals:         0       0       0       0       0
  6791 ;;      Temps:          0       0       0       0       0
  6792 ;;      Totals:         0       0       8       0       0
  6793 ;;Total ram usage:        8 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; Hardware stack levels required when called:    2
  6796 ;; This function calls:
  6797 ;;		___fladd
  6798 ;; This function is called by:
  6799 ;;		_sprintf
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           
  6804                           ;psect for function ___flsub
  6805  1B21                     ___flsub:
  6806  1B21                     l2994:	
  6807                           ;incstack = 0
  6808                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6809                           
  6810  1B21  3080               	movlw	128
  6811  1B22  1683               	bsf	3,5	;RP0=1, select bank1
  6812  1B23  1303               	bcf	3,6	;RP1=0, select bank1
  6813  1B24  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6814  1B25                     l2996:
  6815  1B25  0827               	movf	(___flsub@b+3)^(0+128),w
  6816  1B26  1283               	bcf	3,5	;RP0=0, select bank0
  6817  1B27  1303               	bcf	3,6	;RP1=0, select bank0
  6818  1B28  00DD               	movwf	___fladd@b+3
  6819  1B29  1683               	bsf	3,5	;RP0=1, select bank1
  6820  1B2A  1303               	bcf	3,6	;RP1=0, select bank1
  6821  1B2B  0826               	movf	(___flsub@b+2)^(0+128),w
  6822  1B2C  1283               	bcf	3,5	;RP0=0, select bank0
  6823  1B2D  1303               	bcf	3,6	;RP1=0, select bank0
  6824  1B2E  00DC               	movwf	___fladd@b+2
  6825  1B2F  1683               	bsf	3,5	;RP0=1, select bank1
  6826  1B30  1303               	bcf	3,6	;RP1=0, select bank1
  6827  1B31  0825               	movf	(___flsub@b+1)^(0+128),w
  6828  1B32  1283               	bcf	3,5	;RP0=0, select bank0
  6829  1B33  1303               	bcf	3,6	;RP1=0, select bank0
  6830  1B34  00DB               	movwf	___fladd@b+1
  6831  1B35  1683               	bsf	3,5	;RP0=1, select bank1
  6832  1B36  1303               	bcf	3,6	;RP1=0, select bank1
  6833  1B37  0824               	movf	___flsub@b^(0+128),w
  6834  1B38  1283               	bcf	3,5	;RP0=0, select bank0
  6835  1B39  1303               	bcf	3,6	;RP1=0, select bank0
  6836  1B3A  00DA               	movwf	___fladd@b
  6837  1B3B  1683               	bsf	3,5	;RP0=1, select bank1
  6838  1B3C  1303               	bcf	3,6	;RP1=0, select bank1
  6839  1B3D  0823               	movf	(___flsub@a+3)^(0+128),w
  6840  1B3E  1283               	bcf	3,5	;RP0=0, select bank0
  6841  1B3F  1303               	bcf	3,6	;RP1=0, select bank0
  6842  1B40  00E1               	movwf	___fladd@a+3
  6843  1B41  1683               	bsf	3,5	;RP0=1, select bank1
  6844  1B42  1303               	bcf	3,6	;RP1=0, select bank1
  6845  1B43  0822               	movf	(___flsub@a+2)^(0+128),w
  6846  1B44  1283               	bcf	3,5	;RP0=0, select bank0
  6847  1B45  1303               	bcf	3,6	;RP1=0, select bank0
  6848  1B46  00E0               	movwf	___fladd@a+2
  6849  1B47  1683               	bsf	3,5	;RP0=1, select bank1
  6850  1B48  1303               	bcf	3,6	;RP1=0, select bank1
  6851  1B49  0821               	movf	(___flsub@a+1)^(0+128),w
  6852  1B4A  1283               	bcf	3,5	;RP0=0, select bank0
  6853  1B4B  1303               	bcf	3,6	;RP1=0, select bank0
  6854  1B4C  00DF               	movwf	___fladd@a+1
  6855  1B4D  1683               	bsf	3,5	;RP0=1, select bank1
  6856  1B4E  1303               	bcf	3,6	;RP1=0, select bank1
  6857  1B4F  0820               	movf	___flsub@a^(0+128),w
  6858  1B50  1283               	bcf	3,5	;RP0=0, select bank0
  6859  1B51  1303               	bcf	3,6	;RP1=0, select bank0
  6860  1B52  00DE               	movwf	___fladd@a
  6861  1B53  160A  118A  226E  160A  158A  	fcall	___fladd
  6862  1B58  1283               	bcf	3,5	;RP0=0, select bank0
  6863  1B59  1303               	bcf	3,6	;RP1=0, select bank0
  6864  1B5A  085D               	movf	?___fladd+3,w
  6865  1B5B  1683               	bsf	3,5	;RP0=1, select bank1
  6866  1B5C  1303               	bcf	3,6	;RP1=0, select bank1
  6867  1B5D  00A3               	movwf	(?___flsub+3)^(0+128)
  6868  1B5E  1283               	bcf	3,5	;RP0=0, select bank0
  6869  1B5F  1303               	bcf	3,6	;RP1=0, select bank0
  6870  1B60  085C               	movf	?___fladd+2,w
  6871  1B61  1683               	bsf	3,5	;RP0=1, select bank1
  6872  1B62  1303               	bcf	3,6	;RP1=0, select bank1
  6873  1B63  00A2               	movwf	(?___flsub+2)^(0+128)
  6874  1B64  1283               	bcf	3,5	;RP0=0, select bank0
  6875  1B65  1303               	bcf	3,6	;RP1=0, select bank0
  6876  1B66  085B               	movf	?___fladd+1,w
  6877  1B67  1683               	bsf	3,5	;RP0=1, select bank1
  6878  1B68  1303               	bcf	3,6	;RP1=0, select bank1
  6879  1B69  00A1               	movwf	(?___flsub+1)^(0+128)
  6880  1B6A  1283               	bcf	3,5	;RP0=0, select bank0
  6881  1B6B  1303               	bcf	3,6	;RP1=0, select bank0
  6882  1B6C  085A               	movf	?___fladd,w
  6883  1B6D  1683               	bsf	3,5	;RP0=1, select bank1
  6884  1B6E  1303               	bcf	3,6	;RP1=0, select bank1
  6885  1B6F  00A0               	movwf	?___flsub^(0+128)
  6886  1B70                     l694:
  6887  1B70  0008               	return
  6888  1B71                     __end_of___flsub:
  6889                           
  6890                           	psect	text19
  6891  126E                     __ptext19:	
  6892 ;; *************** function ___fladd *****************
  6893 ;; Defined at:
  6894 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  b               4   58[BANK0 ] long 
  6897 ;;  a               4   62[BANK0 ] long 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  grs             1   77[BANK0 ] unsigned char 
  6900 ;;  bexp            1   76[BANK0 ] unsigned char 
  6901 ;;  aexp            1   75[BANK0 ] unsigned char 
  6902 ;;  signs           1   74[BANK0 ] unsigned char 
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  4   58[BANK0 ] unsigned char 
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0, btemp+1
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6912 ;;      Params:         0       8       0       0       0
  6913 ;;      Locals:         0       4       0       0       0
  6914 ;;      Temps:          0       8       0       0       0
  6915 ;;      Totals:         0      20       0       0       0
  6916 ;;Total ram usage:       20 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    1
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_sprintf
  6923 ;;		___flsub
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           
  6928                           ;psect for function ___fladd
  6929  126E                     ___fladd:
  6930  126E                     l2328:	
  6931                           ;incstack = 0
  6932                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6933                           
  6934  126E  1283               	bcf	3,5	;RP0=0, select bank0
  6935  126F  1303               	bcf	3,6	;RP1=0, select bank0
  6936  1270  085D               	movf	___fladd@b+3,w
  6937  1271  3980               	andlw	128
  6938  1272  00E2               	movwf	??___fladd
  6939  1273  0862               	movf	??___fladd,w
  6940  1274  00EA               	movwf	___fladd@signs
  6941  1275                     l2330:
  6942  1275  085D               	movf	___fladd@b+3,w
  6943  1276  00E2               	movwf	??___fladd
  6944  1277  0762               	addwf	??___fladd,w
  6945  1278  00E3               	movwf	??___fladd+1
  6946  1279  0863               	movf	??___fladd+1,w
  6947  127A  00EC               	movwf	___fladd@bexp
  6948  127B                     l2332:
  6949  127B  1FDC               	btfss	___fladd@b+2,7
  6950  127C  2A7E               	goto	u3261
  6951  127D  2A7F               	goto	u3260
  6952  127E                     u3261:
  6953  127E  2A80               	goto	l2336
  6954  127F                     u3260:
  6955  127F                     l2334:
  6956  127F  146C               	bsf	___fladd@bexp,0
  6957  1280                     l2336:
  6958  1280  086C               	movf	___fladd@bexp,w
  6959  1281  1903               	btfsc	3,2
  6960  1282  2A84               	goto	u3271
  6961  1283  2A85               	goto	u3270
  6962  1284                     u3271:
  6963  1284  2A95               	goto	l2346
  6964  1285                     u3270:
  6965  1285                     l2338:
  6966  1285  0A6C               	incf	___fladd@bexp,w
  6967  1286  1D03               	btfss	3,2
  6968  1287  2A89               	goto	u3281
  6969  1288  2A8A               	goto	u3280
  6970  1289                     u3281:
  6971  1289  2A92               	goto	l2342
  6972  128A                     u3280:
  6973  128A                     l2340:
  6974  128A  3000               	movlw	0
  6975  128B  00DD               	movwf	___fladd@b+3
  6976  128C  3000               	movlw	0
  6977  128D  00DC               	movwf	___fladd@b+2
  6978  128E  3000               	movlw	0
  6979  128F  00DB               	movwf	___fladd@b+1
  6980  1290  3000               	movlw	0
  6981  1291  00DA               	movwf	___fladd@b
  6982  1292                     l2342:
  6983  1292  17DC               	bsf	___fladd@b+2,7
  6984  1293                     l2344:
  6985  1293  01DD               	clrf	___fladd@b+3
  6986  1294  2A9D               	goto	l2348
  6987  1295                     l2346:
  6988  1295  3000               	movlw	0
  6989  1296  00DD               	movwf	___fladd@b+3
  6990  1297  3000               	movlw	0
  6991  1298  00DC               	movwf	___fladd@b+2
  6992  1299  3000               	movlw	0
  6993  129A  00DB               	movwf	___fladd@b+1
  6994  129B  3000               	movlw	0
  6995  129C  00DA               	movwf	___fladd@b
  6996  129D                     l2348:
  6997  129D  0861               	movf	___fladd@a+3,w
  6998  129E  3980               	andlw	128
  6999  129F  00E2               	movwf	??___fladd
  7000  12A0  0862               	movf	??___fladd,w
  7001  12A1  00EB               	movwf	___fladd@aexp
  7002  12A2                     l2350:
  7003  12A2  086B               	movf	___fladd@aexp,w
  7004  12A3  066A               	xorwf	___fladd@signs,w
  7005  12A4  1903               	skipnz
  7006  12A5  2AA7               	goto	u3291
  7007  12A6  2AA8               	goto	u3290
  7008  12A7                     u3291:
  7009  12A7  2AA9               	goto	l2354
  7010  12A8                     u3290:
  7011  12A8                     l2352:
  7012  12A8  176A               	bsf	___fladd@signs,6
  7013  12A9                     l2354:
  7014  12A9  0861               	movf	___fladd@a+3,w
  7015  12AA  00E2               	movwf	??___fladd
  7016  12AB  0762               	addwf	??___fladd,w
  7017  12AC  00E3               	movwf	??___fladd+1
  7018  12AD  0863               	movf	??___fladd+1,w
  7019  12AE  00EB               	movwf	___fladd@aexp
  7020  12AF                     l2356:
  7021  12AF  1FE0               	btfss	___fladd@a+2,7
  7022  12B0  2AB2               	goto	u3301
  7023  12B1  2AB3               	goto	u3300
  7024  12B2                     u3301:
  7025  12B2  2AB4               	goto	l2360
  7026  12B3                     u3300:
  7027  12B3                     l2358:
  7028  12B3  146B               	bsf	___fladd@aexp,0
  7029  12B4                     l2360:
  7030  12B4  086B               	movf	___fladd@aexp,w
  7031  12B5  1903               	btfsc	3,2
  7032  12B6  2AB8               	goto	u3311
  7033  12B7  2AB9               	goto	u3310
  7034  12B8                     u3311:
  7035  12B8  2AC9               	goto	l2370
  7036  12B9                     u3310:
  7037  12B9                     l2362:
  7038  12B9  0A6B               	incf	___fladd@aexp,w
  7039  12BA  1D03               	btfss	3,2
  7040  12BB  2ABD               	goto	u3321
  7041  12BC  2ABE               	goto	u3320
  7042  12BD                     u3321:
  7043  12BD  2AC6               	goto	l2366
  7044  12BE                     u3320:
  7045  12BE                     l2364:
  7046  12BE  3000               	movlw	0
  7047  12BF  00E1               	movwf	___fladd@a+3
  7048  12C0  3000               	movlw	0
  7049  12C1  00E0               	movwf	___fladd@a+2
  7050  12C2  3000               	movlw	0
  7051  12C3  00DF               	movwf	___fladd@a+1
  7052  12C4  3000               	movlw	0
  7053  12C5  00DE               	movwf	___fladd@a
  7054  12C6                     l2366:
  7055  12C6  17E0               	bsf	___fladd@a+2,7
  7056  12C7                     l2368:
  7057  12C7  01E1               	clrf	___fladd@a+3
  7058  12C8  2AD1               	goto	l648
  7059  12C9                     l2370:
  7060  12C9  3000               	movlw	0
  7061  12CA  00E1               	movwf	___fladd@a+3
  7062  12CB  3000               	movlw	0
  7063  12CC  00E0               	movwf	___fladd@a+2
  7064  12CD  3000               	movlw	0
  7065  12CE  00DF               	movwf	___fladd@a+1
  7066  12CF  3000               	movlw	0
  7067  12D0  00DE               	movwf	___fladd@a
  7068  12D1                     l648:
  7069  12D1  086C               	movf	___fladd@bexp,w
  7070  12D2  026B               	subwf	___fladd@aexp,w
  7071  12D3  1803               	skipnc
  7072  12D4  2AD6               	goto	u3331
  7073  12D5  2AD7               	goto	u3330
  7074  12D6                     u3331:
  7075  12D6  2B1B               	goto	l2406
  7076  12D7                     u3330:
  7077  12D7                     l2372:
  7078  12D7  1F6A               	btfss	___fladd@signs,6
  7079  12D8  2ADA               	goto	u3341
  7080  12D9  2ADB               	goto	u3340
  7081  12DA                     u3341:
  7082  12DA  2ADF               	goto	l2376
  7083  12DB                     u3340:
  7084  12DB                     l2374:
  7085  12DB  3080               	movlw	128
  7086  12DC  00E2               	movwf	??___fladd
  7087  12DD  0862               	movf	??___fladd,w
  7088  12DE  06EA               	xorwf	___fladd@signs,f
  7089  12DF                     l2376:
  7090  12DF  086C               	movf	___fladd@bexp,w
  7091  12E0  00E2               	movwf	??___fladd
  7092  12E1  0862               	movf	??___fladd,w
  7093  12E2  00ED               	movwf	___fladd@grs
  7094  12E3                     l2378:
  7095  12E3  086B               	movf	___fladd@aexp,w
  7096  12E4  00E2               	movwf	??___fladd
  7097  12E5  0862               	movf	??___fladd,w
  7098  12E6  00EC               	movwf	___fladd@bexp
  7099  12E7                     l2380:
  7100  12E7  086D               	movf	___fladd@grs,w
  7101  12E8  00E2               	movwf	??___fladd
  7102  12E9  0862               	movf	??___fladd,w
  7103  12EA  00EB               	movwf	___fladd@aexp
  7104  12EB                     l2382:
  7105  12EB  085A               	movf	___fladd@b,w
  7106  12EC  00E2               	movwf	??___fladd
  7107  12ED  0862               	movf	??___fladd,w
  7108  12EE  00ED               	movwf	___fladd@grs
  7109  12EF                     l2384:
  7110  12EF  085E               	movf	___fladd@a,w
  7111  12F0  00E2               	movwf	??___fladd
  7112  12F1  0862               	movf	??___fladd,w
  7113  12F2  00DA               	movwf	___fladd@b
  7114  12F3                     l2386:
  7115  12F3  086D               	movf	___fladd@grs,w
  7116  12F4  00E2               	movwf	??___fladd
  7117  12F5  0862               	movf	??___fladd,w
  7118  12F6  00DE               	movwf	___fladd@a
  7119  12F7                     l2388:
  7120  12F7  085B               	movf	___fladd@b+1,w
  7121  12F8  00E2               	movwf	??___fladd
  7122  12F9  0862               	movf	??___fladd,w
  7123  12FA  00ED               	movwf	___fladd@grs
  7124  12FB                     l2390:
  7125  12FB  085F               	movf	___fladd@a+1,w
  7126  12FC  00E2               	movwf	??___fladd
  7127  12FD  0862               	movf	??___fladd,w
  7128  12FE  00DB               	movwf	___fladd@b+1
  7129  12FF                     l2392:
  7130  12FF  086D               	movf	___fladd@grs,w
  7131  1300  00E2               	movwf	??___fladd
  7132  1301  0862               	movf	??___fladd,w
  7133  1302  00DF               	movwf	___fladd@a+1
  7134  1303                     l2394:
  7135  1303  085C               	movf	___fladd@b+2,w
  7136  1304  00E2               	movwf	??___fladd
  7137  1305  0862               	movf	??___fladd,w
  7138  1306  00ED               	movwf	___fladd@grs
  7139  1307                     l2396:
  7140  1307  0860               	movf	___fladd@a+2,w
  7141  1308  00E2               	movwf	??___fladd
  7142  1309  0862               	movf	??___fladd,w
  7143  130A  00DC               	movwf	___fladd@b+2
  7144  130B                     l2398:
  7145  130B  086D               	movf	___fladd@grs,w
  7146  130C  00E2               	movwf	??___fladd
  7147  130D  0862               	movf	??___fladd,w
  7148  130E  00E0               	movwf	___fladd@a+2
  7149  130F                     l2400:
  7150  130F  085D               	movf	___fladd@b+3,w
  7151  1310  00E2               	movwf	??___fladd
  7152  1311  0862               	movf	??___fladd,w
  7153  1312  00ED               	movwf	___fladd@grs
  7154  1313                     l2402:
  7155  1313  0861               	movf	___fladd@a+3,w
  7156  1314  00E2               	movwf	??___fladd
  7157  1315  0862               	movf	??___fladd,w
  7158  1316  00DD               	movwf	___fladd@b+3
  7159  1317                     l2404:
  7160  1317  086D               	movf	___fladd@grs,w
  7161  1318  00E2               	movwf	??___fladd
  7162  1319  0862               	movf	??___fladd,w
  7163  131A  00E1               	movwf	___fladd@a+3
  7164  131B                     l2406:
  7165  131B  01ED               	clrf	___fladd@grs
  7166  131C                     l2408:
  7167  131C  086B               	movf	___fladd@aexp,w
  7168  131D  00E2               	movwf	??___fladd
  7169  131E  01E3               	clrf	??___fladd+1
  7170  131F  0863               	movf	??___fladd+1,w
  7171  1320  00E5               	movwf	??___fladd+3
  7172  1321  086C               	movf	___fladd@bexp,w
  7173  1322  0262               	subwf	??___fladd,w
  7174  1323  00E4               	movwf	??___fladd+2
  7175  1324  1C03               	skipc
  7176  1325  03E5               	decf	??___fladd+3,f
  7177  1326  0865               	movf	??___fladd+3,w
  7178  1327  3A80               	xorlw	128
  7179  1328  00FF               	movwf	btemp+1
  7180  1329  3080               	movlw	128
  7181  132A  027F               	subwf	btemp+1,w
  7182  132B  1D03               	skipz
  7183  132C  2B2F               	goto	u3355
  7184  132D  301A               	movlw	26
  7185  132E  0264               	subwf	??___fladd+2,w
  7186  132F                     u3355:
  7187  132F  1C03               	skipc
  7188  1330  2B32               	goto	u3351
  7189  1331  2B33               	goto	u3350
  7190  1332                     u3351:
  7191  1332  2B70               	goto	l2424
  7192  1333                     u3350:
  7193  1333                     l2410:
  7194  1333  1283               	bcf	3,5	;RP0=0, select bank0
  7195  1334  1303               	bcf	3,6	;RP1=0, select bank0
  7196  1335  085D               	movf	___fladd@b+3,w
  7197  1336  045C               	iorwf	___fladd@b+2,w
  7198  1337  045B               	iorwf	___fladd@b+1,w
  7199  1338  045A               	iorwf	___fladd@b,w
  7200  1339  1D03               	skipz
  7201  133A  2B3C               	goto	u3361
  7202  133B  2B3E               	goto	u3360
  7203  133C                     u3361:
  7204  133C  3001               	movlw	1
  7205  133D  2B3F               	goto	u3370
  7206  133E                     u3360:
  7207  133E  3000               	movlw	0
  7208  133F                     u3370:
  7209  133F  00E2               	movwf	??___fladd
  7210  1340  0862               	movf	??___fladd,w
  7211  1341  00ED               	movwf	___fladd@grs
  7212  1342  3000               	movlw	0
  7213  1343  00DD               	movwf	___fladd@b+3
  7214  1344  3000               	movlw	0
  7215  1345  00DC               	movwf	___fladd@b+2
  7216  1346  3000               	movlw	0
  7217  1347  00DB               	movwf	___fladd@b+1
  7218  1348  3000               	movlw	0
  7219  1349  00DA               	movwf	___fladd@b
  7220  134A  086B               	movf	___fladd@aexp,w
  7221  134B  00E2               	movwf	??___fladd
  7222  134C  0862               	movf	??___fladd,w
  7223  134D  00EC               	movwf	___fladd@bexp
  7224  134E  2B78               	goto	l652
  7225  134F                     l654:
  7226  134F  1C6D               	btfss	___fladd@grs,0
  7227  1350  2B52               	goto	u3381
  7228  1351  2B53               	goto	u3380
  7229  1352                     u3381:
  7230  1352  2B5C               	goto	l2414
  7231  1353                     u3380:
  7232  1353                     l2412:
  7233  1353  086D               	movf	___fladd@grs,w
  7234  1354  00E2               	movwf	??___fladd
  7235  1355  1003               	clrc
  7236  1356  0C62               	rrf	??___fladd,w
  7237  1357  3801               	iorlw	1
  7238  1358  00E3               	movwf	??___fladd+1
  7239  1359  0863               	movf	??___fladd+1,w
  7240  135A  00ED               	movwf	___fladd@grs
  7241  135B  2B5E               	goto	l2416
  7242  135C                     l2414:
  7243  135C  1003               	clrc
  7244  135D  0CED               	rrf	___fladd@grs,f
  7245  135E                     l2416:
  7246  135E  1C5A               	btfss	___fladd@b,0
  7247  135F  2B61               	goto	u3391
  7248  1360  2B62               	goto	u3390
  7249  1361                     u3391:
  7250  1361  2B63               	goto	l2420
  7251  1362                     u3390:
  7252  1362                     l2418:
  7253  1362  17ED               	bsf	___fladd@grs,7
  7254  1363                     l2420:
  7255  1363  3001               	movlw	1
  7256  1364  00E2               	movwf	??___fladd
  7257  1365                     u3405:
  7258  1365  0D5D               	rlf	___fladd@b+3,w
  7259  1366  0CDD               	rrf	___fladd@b+3,f
  7260  1367  0CDC               	rrf	___fladd@b+2,f
  7261  1368  0CDB               	rrf	___fladd@b+1,f
  7262  1369  0CDA               	rrf	___fladd@b,f
  7263  136A  0BE2               	decfsz	??___fladd& (0+127),f
  7264  136B  2B65               	goto	u3405
  7265  136C                     l2422:
  7266  136C  3001               	movlw	1
  7267  136D  00E2               	movwf	??___fladd
  7268  136E  0862               	movf	??___fladd,w
  7269  136F  07EC               	addwf	___fladd@bexp,f
  7270  1370                     l2424:
  7271  1370  1283               	bcf	3,5	;RP0=0, select bank0
  7272  1371  1303               	bcf	3,6	;RP1=0, select bank0
  7273  1372  086B               	movf	___fladd@aexp,w
  7274  1373  026C               	subwf	___fladd@bexp,w
  7275  1374  1C03               	skipc
  7276  1375  2B77               	goto	u3411
  7277  1376  2B78               	goto	u3410
  7278  1377                     u3411:
  7279  1377  2B4F               	goto	l654
  7280  1378                     u3410:
  7281  1378                     l652:
  7282  1378  1B6A               	btfsc	___fladd@signs,6
  7283  1379  2B7B               	goto	u3421
  7284  137A  2B7C               	goto	u3420
  7285  137B                     u3421:
  7286  137B  2BC7               	goto	l2450
  7287  137C                     u3420:
  7288  137C                     l2426:
  7289  137C  086C               	movf	___fladd@bexp,w
  7290  137D  1D03               	btfss	3,2
  7291  137E  2B80               	goto	u3431
  7292  137F  2B81               	goto	u3430
  7293  1380                     u3431:
  7294  1380  2B8A               	goto	l2432
  7295  1381                     u3430:
  7296  1381                     l2428:
  7297  1381  3000               	movlw	0
  7298  1382  00DD               	movwf	?___fladd+3
  7299  1383  3000               	movlw	0
  7300  1384  00DC               	movwf	?___fladd+2
  7301  1385  3000               	movlw	0
  7302  1386  00DB               	movwf	?___fladd+1
  7303  1387  3000               	movlw	0
  7304  1388  00DA               	movwf	?___fladd
  7305  1389  2CF5               	goto	l661
  7306  138A                     l2432:
  7307  138A  085E               	movf	___fladd@a,w
  7308  138B  07DA               	addwf	___fladd@b,f
  7309  138C  085F               	movf	___fladd@a+1,w
  7310  138D  1103               	clrz
  7311  138E  1803               	skipnc
  7312  138F  3E01               	addlw	1
  7313  1390  1903               	skipnz
  7314  1391  2B93               	goto	u3441
  7315  1392  07DB               	addwf	___fladd@b+1,f
  7316  1393                     u3441:
  7317  1393  0860               	movf	___fladd@a+2,w
  7318  1394  1103               	clrz
  7319  1395  1803               	skipnc
  7320  1396  3E01               	addlw	1
  7321  1397  1903               	skipnz
  7322  1398  2B9A               	goto	u3442
  7323  1399  07DC               	addwf	___fladd@b+2,f
  7324  139A                     u3442:
  7325  139A  0861               	movf	___fladd@a+3,w
  7326  139B  1103               	clrz
  7327  139C  1803               	skipnc
  7328  139D  3E01               	addlw	1
  7329  139E  1903               	skipnz
  7330  139F  2BA1               	goto	u3443
  7331  13A0  07DD               	addwf	___fladd@b+3,f
  7332  13A1                     u3443:
  7333  13A1                     l2434:
  7334  13A1  1C5D               	btfss	___fladd@b+3,0
  7335  13A2  2BA4               	goto	u3451
  7336  13A3  2BA5               	goto	u3450
  7337  13A4                     u3451:
  7338  13A4  2C7B               	goto	l2484
  7339  13A5                     u3450:
  7340  13A5                     l2436:
  7341  13A5  1C6D               	btfss	___fladd@grs,0
  7342  13A6  2BA8               	goto	u3461
  7343  13A7  2BA9               	goto	u3460
  7344  13A8                     u3461:
  7345  13A8  2BB2               	goto	l2440
  7346  13A9                     u3460:
  7347  13A9                     l2438:
  7348  13A9  086D               	movf	___fladd@grs,w
  7349  13AA  00E2               	movwf	??___fladd
  7350  13AB  1003               	clrc
  7351  13AC  0C62               	rrf	??___fladd,w
  7352  13AD  3801               	iorlw	1
  7353  13AE  00E3               	movwf	??___fladd+1
  7354  13AF  0863               	movf	??___fladd+1,w
  7355  13B0  00ED               	movwf	___fladd@grs
  7356  13B1  2BB4               	goto	l2442
  7357  13B2                     l2440:
  7358  13B2  1003               	clrc
  7359  13B3  0CED               	rrf	___fladd@grs,f
  7360  13B4                     l2442:
  7361  13B4  1C5A               	btfss	___fladd@b,0
  7362  13B5  2BB7               	goto	u3471
  7363  13B6  2BB8               	goto	u3470
  7364  13B7                     u3471:
  7365  13B7  2BB9               	goto	l2446
  7366  13B8                     u3470:
  7367  13B8                     l2444:
  7368  13B8  17ED               	bsf	___fladd@grs,7
  7369  13B9                     l2446:
  7370  13B9  3001               	movlw	1
  7371  13BA  00E2               	movwf	??___fladd
  7372  13BB                     u3485:
  7373  13BB  0D5D               	rlf	___fladd@b+3,w
  7374  13BC  0CDD               	rrf	___fladd@b+3,f
  7375  13BD  0CDC               	rrf	___fladd@b+2,f
  7376  13BE  0CDB               	rrf	___fladd@b+1,f
  7377  13BF  0CDA               	rrf	___fladd@b,f
  7378  13C0  0BE2               	decfsz	??___fladd& (0+127),f
  7379  13C1  2BBB               	goto	u3485
  7380  13C2                     l2448:
  7381  13C2  3001               	movlw	1
  7382  13C3  00E2               	movwf	??___fladd
  7383  13C4  0862               	movf	??___fladd,w
  7384  13C5  07EC               	addwf	___fladd@bexp,f
  7385  13C6  2C7B               	goto	l2484
  7386  13C7                     l2450:
  7387  13C7  085D               	movf	___fladd@b+3,w
  7388  13C8  3A80               	xorlw	128
  7389  13C9  00FF               	movwf	btemp+1
  7390  13CA  0861               	movf	___fladd@a+3,w
  7391  13CB  3A80               	xorlw	128
  7392  13CC  027F               	subwf	btemp+1,w
  7393  13CD  1D03               	skipz
  7394  13CE  2BD9               	goto	u3493
  7395  13CF  0860               	movf	___fladd@a+2,w
  7396  13D0  025C               	subwf	___fladd@b+2,w
  7397  13D1  1D03               	skipz
  7398  13D2  2BD9               	goto	u3493
  7399  13D3  085F               	movf	___fladd@a+1,w
  7400  13D4  025B               	subwf	___fladd@b+1,w
  7401  13D5  1D03               	skipz
  7402  13D6  2BD9               	goto	u3493
  7403  13D7  085E               	movf	___fladd@a,w
  7404  13D8  025A               	subwf	___fladd@b,w
  7405  13D9                     u3493:
  7406  13D9  1803               	skipnc
  7407  13DA  2BDC               	goto	u3491
  7408  13DB  2BDD               	goto	u3490
  7409  13DC                     u3491:
  7410  13DC  2C35               	goto	l2460
  7411  13DD                     u3490:
  7412  13DD                     l2452:
  7413  13DD  30FF               	movlw	255
  7414  13DE  00E2               	movwf	??___fladd
  7415  13DF  30FF               	movlw	255
  7416  13E0  00E3               	movwf	??___fladd+1
  7417  13E1  30FF               	movlw	255
  7418  13E2  00E4               	movwf	??___fladd+2
  7419  13E3  30FF               	movlw	255
  7420  13E4  00E5               	movwf	??___fladd+3
  7421  13E5  085E               	movf	___fladd@a,w
  7422  13E6  00E6               	movwf	??___fladd+4
  7423  13E7  085F               	movf	___fladd@a+1,w
  7424  13E8  00E7               	movwf	??___fladd+5
  7425  13E9  0860               	movf	___fladd@a+2,w
  7426  13EA  00E8               	movwf	??___fladd+6
  7427  13EB  0861               	movf	___fladd@a+3,w
  7428  13EC  00E9               	movwf	??___fladd+7
  7429  13ED  085A               	movf	___fladd@b,w
  7430  13EE  02E6               	subwf	??___fladd+4,f
  7431  13EF  085B               	movf	___fladd@b+1,w
  7432  13F0  1C03               	skipc
  7433  13F1  0F5B               	incfsz	___fladd@b+1,w
  7434  13F2  2BF4               	goto	u3501
  7435  13F3  2BF5               	goto	u3502
  7436  13F4                     u3501:
  7437  13F4  02E7               	subwf	??___fladd+5,f
  7438  13F5                     u3502:
  7439  13F5  085C               	movf	___fladd@b+2,w
  7440  13F6  1C03               	skipc
  7441  13F7  0F5C               	incfsz	___fladd@b+2,w
  7442  13F8  2BFA               	goto	u3503
  7443  13F9  2BFB               	goto	u3504
  7444  13FA                     u3503:
  7445  13FA  02E8               	subwf	??___fladd+6,f
  7446  13FB                     u3504:
  7447  13FB  085D               	movf	___fladd@b+3,w
  7448  13FC  1C03               	skipc
  7449  13FD  0F5D               	incfsz	___fladd@b+3,w
  7450  13FE  2C00               	goto	u3505
  7451  13FF  2C01               	goto	u3506
  7452  1400                     u3505:
  7453  1400  02E9               	subwf	??___fladd+7,f
  7454  1401                     u3506:
  7455  1401  0866               	movf	??___fladd+4,w
  7456  1402  07E2               	addwf	??___fladd,f
  7457  1403  0867               	movf	??___fladd+5,w
  7458  1404  1803               	skipnc
  7459  1405  0F67               	incfsz	??___fladd+5,w
  7460  1406  2C08               	goto	u3510
  7461  1407  2C09               	goto	u3511
  7462  1408                     u3510:
  7463  1408  07E3               	addwf	??___fladd+1,f
  7464  1409                     u3511:
  7465  1409  0868               	movf	??___fladd+6,w
  7466  140A  1803               	skipnc
  7467  140B  0F68               	incfsz	??___fladd+6,w
  7468  140C  2C0E               	goto	u3512
  7469  140D  2C0F               	goto	u3513
  7470  140E                     u3512:
  7471  140E  07E4               	addwf	??___fladd+2,f
  7472  140F                     u3513:
  7473  140F  0869               	movf	??___fladd+7,w
  7474  1410  1803               	skipnc
  7475  1411  0A69               	incf	??___fladd+7,w
  7476  1412  07E5               	addwf	??___fladd+3,f
  7477  1413  0865               	movf	??___fladd+3,w
  7478  1414  00DD               	movwf	___fladd@b+3
  7479  1415  0864               	movf	??___fladd+2,w
  7480  1416  00DC               	movwf	___fladd@b+2
  7481  1417  0863               	movf	??___fladd+1,w
  7482  1418  00DB               	movwf	___fladd@b+1
  7483  1419  0862               	movf	??___fladd,w
  7484  141A  00DA               	movwf	___fladd@b
  7485  141B                     l2454:
  7486  141B  3080               	movlw	128
  7487  141C  00E2               	movwf	??___fladd
  7488  141D  0862               	movf	??___fladd,w
  7489  141E  06EA               	xorwf	___fladd@signs,f
  7490  141F  09ED               	comf	___fladd@grs,f
  7491  1420  0AED               	incf	___fladd@grs,f
  7492  1421                     l2456:
  7493  1421  086D               	movf	___fladd@grs,w
  7494  1422  1D03               	btfss	3,2
  7495  1423  2C25               	goto	u3521
  7496  1424  2C26               	goto	u3520
  7497  1425                     u3521:
  7498  1425  2C43               	goto	l669
  7499  1426                     u3520:
  7500  1426                     l2458:
  7501  1426  3001               	movlw	1
  7502  1427  07DA               	addwf	___fladd@b,f
  7503  1428  3000               	movlw	0
  7504  1429  1803               	skipnc
  7505  142A  3001               	movlw	1
  7506  142B  07DB               	addwf	___fladd@b+1,f
  7507  142C  3000               	movlw	0
  7508  142D  1803               	skipnc
  7509  142E  3001               	movlw	1
  7510  142F  07DC               	addwf	___fladd@b+2,f
  7511  1430  3000               	movlw	0
  7512  1431  1803               	skipnc
  7513  1432  3001               	movlw	1
  7514  1433  07DD               	addwf	___fladd@b+3,f
  7515  1434  2C43               	goto	l669
  7516  1435                     l2460:
  7517  1435  085E               	movf	___fladd@a,w
  7518  1436  02DA               	subwf	___fladd@b,f
  7519  1437  085F               	movf	___fladd@a+1,w
  7520  1438  1C03               	skipc
  7521  1439  0F5F               	incfsz	___fladd@a+1,w
  7522  143A  02DB               	subwf	___fladd@b+1,f
  7523  143B  0860               	movf	___fladd@a+2,w
  7524  143C  1C03               	skipc
  7525  143D  0F60               	incfsz	___fladd@a+2,w
  7526  143E  02DC               	subwf	___fladd@b+2,f
  7527  143F  0861               	movf	___fladd@a+3,w
  7528  1440  1C03               	skipc
  7529  1441  0F61               	incfsz	___fladd@a+3,w
  7530  1442  02DD               	subwf	___fladd@b+3,f
  7531  1443                     l669:
  7532  1443  085D               	movf	___fladd@b+3,w
  7533  1444  045C               	iorwf	___fladd@b+2,w
  7534  1445  045B               	iorwf	___fladd@b+1,w
  7535  1446  045A               	iorwf	___fladd@b,w
  7536  1447  1D03               	skipz
  7537  1448  2C4A               	goto	u3531
  7538  1449  2C4B               	goto	u3530
  7539  144A                     u3531:
  7540  144A  2C77               	goto	l2482
  7541  144B                     u3530:
  7542  144B                     l2462:
  7543  144B  086D               	movf	___fladd@grs,w
  7544  144C  1D03               	btfss	3,2
  7545  144D  2C4F               	goto	u3541
  7546  144E  2C50               	goto	u3540
  7547  144F                     u3541:
  7548  144F  2C77               	goto	l2482
  7549  1450                     u3540:
  7550  1450                     l2464:
  7551  1450  3000               	movlw	0
  7552  1451  00DD               	movwf	?___fladd+3
  7553  1452  3000               	movlw	0
  7554  1453  00DC               	movwf	?___fladd+2
  7555  1454  3000               	movlw	0
  7556  1455  00DB               	movwf	?___fladd+1
  7557  1456  3000               	movlw	0
  7558  1457  00DA               	movwf	?___fladd
  7559  1458  2CF5               	goto	l661
  7560  1459                     l2468:
  7561  1459  3001               	movlw	1
  7562  145A  00E2               	movwf	??___fladd
  7563  145B                     u3555:
  7564  145B  1003               	clrc
  7565  145C  0DDA               	rlf	___fladd@b,f
  7566  145D  0DDB               	rlf	___fladd@b+1,f
  7567  145E  0DDC               	rlf	___fladd@b+2,f
  7568  145F  0DDD               	rlf	___fladd@b+3,f
  7569  1460  0BE2               	decfsz	??___fladd,f
  7570  1461  2C5B               	goto	u3555
  7571  1462                     l2470:
  7572  1462  1FED               	btfss	___fladd@grs,7
  7573  1463  2C65               	goto	u3561
  7574  1464  2C66               	goto	u3560
  7575  1465                     u3561:
  7576  1465  2C67               	goto	l673
  7577  1466                     u3560:
  7578  1466                     l2472:
  7579  1466  145A               	bsf	___fladd@b,0
  7580  1467                     l673:
  7581  1467  1C6D               	btfss	___fladd@grs,0
  7582  1468  2C6A               	goto	u3571
  7583  1469  2C6B               	goto	u3570
  7584  146A                     u3571:
  7585  146A  2C6E               	goto	l2476
  7586  146B                     u3570:
  7587  146B                     l2474:
  7588  146B  1403               	setc
  7589  146C  0DED               	rlf	___fladd@grs,f
  7590  146D  2C70               	goto	l2478
  7591  146E                     l2476:
  7592  146E  1003               	clrc
  7593  146F  0DED               	rlf	___fladd@grs,f
  7594  1470                     l2478:
  7595  1470  086C               	movf	___fladd@bexp,w
  7596  1471  1903               	btfsc	3,2
  7597  1472  2C74               	goto	u3581
  7598  1473  2C75               	goto	u3580
  7599  1474                     u3581:
  7600  1474  2C77               	goto	l2482
  7601  1475                     u3580:
  7602  1475                     l2480:
  7603  1475  3001               	movlw	1
  7604  1476  02EC               	subwf	___fladd@bexp,f
  7605  1477                     l2482:
  7606  1477  1FDC               	btfss	___fladd@b+2,7
  7607  1478  2C7A               	goto	u3591
  7608  1479  2C7B               	goto	u3590
  7609  147A                     u3591:
  7610  147A  2C59               	goto	l2468
  7611  147B                     u3590:
  7612  147B                     l2484:
  7613  147B  01EB               	clrf	___fladd@aexp
  7614  147C                     l2486:
  7615  147C  1FED               	btfss	___fladd@grs,7
  7616  147D  2C7F               	goto	u3601
  7617  147E  2C80               	goto	u3600
  7618  147F                     u3601:
  7619  147F  2C8E               	goto	l2494
  7620  1480                     u3600:
  7621  1480                     l2488:
  7622  1480  086D               	movf	___fladd@grs,w
  7623  1481  397F               	andlw	127
  7624  1482  1903               	btfsc	3,2
  7625  1483  2C85               	goto	u3611
  7626  1484  2C86               	goto	u3610
  7627  1485                     u3611:
  7628  1485  2C89               	goto	l679
  7629  1486                     u3610:
  7630  1486                     l2490:
  7631  1486  01EB               	clrf	___fladd@aexp
  7632  1487  0AEB               	incf	___fladd@aexp,f
  7633  1488  2C8E               	goto	l2494
  7634  1489                     l679:
  7635  1489  1C5A               	btfss	___fladd@b,0
  7636  148A  2C8C               	goto	u3621
  7637  148B  2C8D               	goto	u3620
  7638  148C                     u3621:
  7639  148C  2C8E               	goto	l2494
  7640  148D                     u3620:
  7641  148D  2C86               	goto	l2490
  7642  148E                     l2494:
  7643  148E  086B               	movf	___fladd@aexp,w
  7644  148F  1903               	btfsc	3,2
  7645  1490  2C92               	goto	u3631
  7646  1491  2C93               	goto	u3630
  7647  1492                     u3631:
  7648  1492  2CC7               	goto	l682
  7649  1493                     u3630:
  7650  1493                     l2496:
  7651  1493  3001               	movlw	1
  7652  1494  07DA               	addwf	___fladd@b,f
  7653  1495  3000               	movlw	0
  7654  1496  1803               	skipnc
  7655  1497  3001               	movlw	1
  7656  1498  07DB               	addwf	___fladd@b+1,f
  7657  1499  3000               	movlw	0
  7658  149A  1803               	skipnc
  7659  149B  3001               	movlw	1
  7660  149C  07DC               	addwf	___fladd@b+2,f
  7661  149D  3000               	movlw	0
  7662  149E  1803               	skipnc
  7663  149F  3001               	movlw	1
  7664  14A0  07DD               	addwf	___fladd@b+3,f
  7665  14A1                     l2498:
  7666  14A1  1C5D               	btfss	___fladd@b+3,0
  7667  14A2  2CA4               	goto	u3641
  7668  14A3  2CA5               	goto	u3640
  7669  14A4                     u3641:
  7670  14A4  2CC7               	goto	l682
  7671  14A5                     u3640:
  7672  14A5                     l2500:
  7673  14A5  085A               	movf	___fladd@b,w
  7674  14A6  00E2               	movwf	??___fladd
  7675  14A7  085B               	movf	___fladd@b+1,w
  7676  14A8  00E3               	movwf	??___fladd+1
  7677  14A9  085C               	movf	___fladd@b+2,w
  7678  14AA  00E4               	movwf	??___fladd+2
  7679  14AB  085D               	movf	___fladd@b+3,w
  7680  14AC  00E5               	movwf	??___fladd+3
  7681  14AD  3001               	movlw	1
  7682  14AE  00E6               	movwf	??___fladd+4
  7683  14AF                     u3655:
  7684  14AF  0D65               	rlf	??___fladd+3,w
  7685  14B0  0CE5               	rrf	??___fladd+3,f
  7686  14B1  0CE4               	rrf	??___fladd+2,f
  7687  14B2  0CE3               	rrf	??___fladd+1,f
  7688  14B3  0CE2               	rrf	??___fladd,f
  7689  14B4                     u3650:
  7690  14B4  0BE6               	decfsz	??___fladd+4,f
  7691  14B5  2CAF               	goto	u3655
  7692  14B6  0865               	movf	??___fladd+3,w
  7693  14B7  00DD               	movwf	___fladd@b+3
  7694  14B8  0864               	movf	??___fladd+2,w
  7695  14B9  00DC               	movwf	___fladd@b+2
  7696  14BA  0863               	movf	??___fladd+1,w
  7697  14BB  00DB               	movwf	___fladd@b+1
  7698  14BC  0862               	movf	??___fladd,w
  7699  14BD  00DA               	movwf	___fladd@b
  7700  14BE  0A6C               	incf	___fladd@bexp,w
  7701  14BF  1903               	btfsc	3,2
  7702  14C0  2CC2               	goto	u3661
  7703  14C1  2CC3               	goto	u3660
  7704  14C2                     u3661:
  7705  14C2  2CC7               	goto	l682
  7706  14C3                     u3660:
  7707  14C3                     l2502:
  7708  14C3  3001               	movlw	1
  7709  14C4  00E2               	movwf	??___fladd
  7710  14C5  0862               	movf	??___fladd,w
  7711  14C6  07EC               	addwf	___fladd@bexp,f
  7712  14C7                     l682:
  7713  14C7  0A6C               	incf	___fladd@bexp,w
  7714  14C8  1903               	btfsc	3,2
  7715  14C9  2CCB               	goto	u3671
  7716  14CA  2CCC               	goto	u3670
  7717  14CB                     u3671:
  7718  14CB  2CD1               	goto	l2506
  7719  14CC                     u3670:
  7720  14CC                     l2504:
  7721  14CC  086C               	movf	___fladd@bexp,w
  7722  14CD  1D03               	btfss	3,2
  7723  14CE  2CD0               	goto	u3681
  7724  14CF  2CD1               	goto	u3680
  7725  14D0                     u3681:
  7726  14D0  2CDF               	goto	l2512
  7727  14D1                     u3680:
  7728  14D1                     l2506:
  7729  14D1  3000               	movlw	0
  7730  14D2  00DD               	movwf	___fladd@b+3
  7731  14D3  3000               	movlw	0
  7732  14D4  00DC               	movwf	___fladd@b+2
  7733  14D5  3000               	movlw	0
  7734  14D6  00DB               	movwf	___fladd@b+1
  7735  14D7  3000               	movlw	0
  7736  14D8  00DA               	movwf	___fladd@b
  7737  14D9                     l2508:
  7738  14D9  086C               	movf	___fladd@bexp,w
  7739  14DA  1D03               	btfss	3,2
  7740  14DB  2CDD               	goto	u3691
  7741  14DC  2CDE               	goto	u3690
  7742  14DD                     u3691:
  7743  14DD  2CDF               	goto	l2512
  7744  14DE                     u3690:
  7745  14DE                     l2510:
  7746  14DE  01EA               	clrf	___fladd@signs
  7747  14DF                     l2512:
  7748  14DF  1C6C               	btfss	___fladd@bexp,0
  7749  14E0  2CE2               	goto	u3701
  7750  14E1  2CE3               	goto	u3700
  7751  14E2                     u3701:
  7752  14E2  2CE5               	goto	l2516
  7753  14E3                     u3700:
  7754  14E3                     l2514:
  7755  14E3  17DC               	bsf	___fladd@b+2,7
  7756  14E4  2CE9               	goto	l690
  7757  14E5                     l2516:
  7758  14E5  307F               	movlw	127
  7759  14E6  00E2               	movwf	??___fladd
  7760  14E7  0862               	movf	??___fladd,w
  7761  14E8  05DC               	andwf	___fladd@b+2,f
  7762  14E9                     l690:
  7763  14E9  086C               	movf	___fladd@bexp,w
  7764  14EA  00E2               	movwf	??___fladd
  7765  14EB  1003               	clrc
  7766  14EC  0C62               	rrf	??___fladd,w
  7767  14ED  00E3               	movwf	??___fladd+1
  7768  14EE  0863               	movf	??___fladd+1,w
  7769  14EF  00DD               	movwf	___fladd@b+3
  7770  14F0                     l2518:
  7771  14F0  1FEA               	btfss	___fladd@signs,7
  7772  14F1  2CF3               	goto	u3711
  7773  14F2  2CF4               	goto	u3710
  7774  14F3                     u3711:
  7775  14F3  2CF5               	goto	l691
  7776  14F4                     u3710:
  7777  14F4                     l2520:
  7778  14F4  17DD               	bsf	___fladd@b+3,7
  7779  14F5                     l691:
  7780  14F5                     l661:
  7781  14F5  0008               	return
  7782  14F6                     __end_of___fladd:
  7783                           
  7784                           	psect	text20
  7785  1954                     __ptext20:	
  7786 ;; *************** function ___flneg *****************
  7787 ;; Defined at:
  7788 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  f1              4    4[COMMON] unsigned char 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;		None
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  4    4[COMMON] unsigned char 
  7795 ;; Registers used:
  7796 ;;		wreg
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7802 ;;      Params:         4       0       0       0       0
  7803 ;;      Locals:         0       0       0       0       0
  7804 ;;      Temps:          0       0       0       0       0
  7805 ;;      Totals:         4       0       0       0       0
  7806 ;;Total ram usage:        4 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:    1
  7809 ;; This function calls:
  7810 ;;		Nothing
  7811 ;; This function is called by:
  7812 ;;		_sprintf
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816                           
  7817                           ;psect for function ___flneg
  7818  1954                     ___flneg:
  7819  1954                     l2930:	
  7820                           ;incstack = 0
  7821                           ; Regs used in ___flneg: [wreg]
  7822                           
  7823  1954  0877               	movf	___flneg@f1+3,w
  7824  1955  0476               	iorwf	___flneg@f1+2,w
  7825  1956  0475               	iorwf	___flneg@f1+1,w
  7826  1957  0474               	iorwf	___flneg@f1,w
  7827  1958  1903               	skipnz
  7828  1959  295B               	goto	u4831
  7829  195A  295C               	goto	u4830
  7830  195B                     u4831:
  7831  195B  295E               	goto	l2934
  7832  195C                     u4830:
  7833  195C                     l2932:
  7834  195C  3080               	movlw	128
  7835  195D  06F7               	xorwf	___flneg@f1+3,f
  7836  195E                     l2934:
  7837  195E                     l520:
  7838  195E  0008               	return
  7839  195F                     __end_of___flneg:
  7840                           
  7841                           	psect	text21
  7842  1D25                     __ptext21:	
  7843 ;; *************** function ___flge *****************
  7844 ;; Defined at:
  7845 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  ff1             4    0[BANK0 ] unsigned char 
  7848 ;;  ff2             4    4[BANK0 ] unsigned char 
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;		None
  7851 ;; Return value:  Size  Location     Type
  7852 ;;		None               void
  7853 ;; Registers used:
  7854 ;;		wreg, status,2, status,0
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7860 ;;      Params:         0       8       0       0       0
  7861 ;;      Locals:         0       0       0       0       0
  7862 ;;      Temps:          4       0       0       0       0
  7863 ;;      Totals:         4       8       0       0       0
  7864 ;;Total ram usage:       12 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:    1
  7867 ;; This function calls:
  7868 ;;		Nothing
  7869 ;; This function is called by:
  7870 ;;		_sprintf
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           
  7875                           ;psect for function ___flge
  7876  1D25                     ___flge:
  7877  1D25                     l2910:	
  7878                           ;incstack = 0
  7879                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7880                           
  7881  1D25  3000               	movlw	0
  7882  1D26  1283               	bcf	3,5	;RP0=0, select bank0
  7883  1D27  1303               	bcf	3,6	;RP1=0, select bank0
  7884  1D28  0520               	andwf	___flge@ff1,w
  7885  1D29  00F4               	movwf	??___flge
  7886  1D2A  3000               	movlw	0
  7887  1D2B  0521               	andwf	___flge@ff1+1,w
  7888  1D2C  00F5               	movwf	??___flge+1
  7889  1D2D  3080               	movlw	128
  7890  1D2E  0522               	andwf	___flge@ff1+2,w
  7891  1D2F  00F6               	movwf	??___flge+2
  7892  1D30  307F               	movlw	127
  7893  1D31  0523               	andwf	___flge@ff1+3,w
  7894  1D32  00F7               	movwf	??___flge+3
  7895  1D33  0877               	movf	??___flge+3,w
  7896  1D34  0476               	iorwf	??___flge+2,w
  7897  1D35  0475               	iorwf	??___flge+1,w
  7898  1D36  0474               	iorwf	??___flge,w
  7899  1D37  1D03               	skipz
  7900  1D38  2D3A               	goto	u4761
  7901  1D39  2D3B               	goto	u4760
  7902  1D3A                     u4761:
  7903  1D3A  2D43               	goto	l512
  7904  1D3B                     u4760:
  7905  1D3B                     l2912:
  7906  1D3B  3000               	movlw	0
  7907  1D3C  00A3               	movwf	___flge@ff1+3
  7908  1D3D  3000               	movlw	0
  7909  1D3E  00A2               	movwf	___flge@ff1+2
  7910  1D3F  3000               	movlw	0
  7911  1D40  00A1               	movwf	___flge@ff1+1
  7912  1D41  3000               	movlw	0
  7913  1D42  00A0               	movwf	___flge@ff1
  7914  1D43                     l512:
  7915  1D43  3000               	movlw	0
  7916  1D44  0524               	andwf	___flge@ff2,w
  7917  1D45  00F4               	movwf	??___flge
  7918  1D46  3000               	movlw	0
  7919  1D47  0525               	andwf	___flge@ff2+1,w
  7920  1D48  00F5               	movwf	??___flge+1
  7921  1D49  3080               	movlw	128
  7922  1D4A  0526               	andwf	___flge@ff2+2,w
  7923  1D4B  00F6               	movwf	??___flge+2
  7924  1D4C  307F               	movlw	127
  7925  1D4D  0527               	andwf	___flge@ff2+3,w
  7926  1D4E  00F7               	movwf	??___flge+3
  7927  1D4F  0877               	movf	??___flge+3,w
  7928  1D50  0476               	iorwf	??___flge+2,w
  7929  1D51  0475               	iorwf	??___flge+1,w
  7930  1D52  0474               	iorwf	??___flge,w
  7931  1D53  1D03               	skipz
  7932  1D54  2D56               	goto	u4771
  7933  1D55  2D57               	goto	u4770
  7934  1D56                     u4771:
  7935  1D56  2D5F               	goto	l2916
  7936  1D57                     u4770:
  7937  1D57                     l2914:
  7938  1D57  3000               	movlw	0
  7939  1D58  00A7               	movwf	___flge@ff2+3
  7940  1D59  3000               	movlw	0
  7941  1D5A  00A6               	movwf	___flge@ff2+2
  7942  1D5B  3000               	movlw	0
  7943  1D5C  00A5               	movwf	___flge@ff2+1
  7944  1D5D  3000               	movlw	0
  7945  1D5E  00A4               	movwf	___flge@ff2
  7946  1D5F                     l2916:
  7947  1D5F  1FA3               	btfss	___flge@ff1+3,7
  7948  1D60  2D62               	goto	u4781
  7949  1D61  2D63               	goto	u4780
  7950  1D62                     u4781:
  7951  1D62  2D87               	goto	l2920
  7952  1D63                     u4780:
  7953  1D63                     l2918:
  7954  1D63  3000               	movlw	0
  7955  1D64  00F4               	movwf	??___flge
  7956  1D65  3000               	movlw	0
  7957  1D66  00F5               	movwf	??___flge+1
  7958  1D67  3000               	movlw	0
  7959  1D68  00F6               	movwf	??___flge+2
  7960  1D69  3080               	movlw	128
  7961  1D6A  00F7               	movwf	??___flge+3
  7962  1D6B  0820               	movf	___flge@ff1,w
  7963  1D6C  02F4               	subwf	??___flge,f
  7964  1D6D  0821               	movf	___flge@ff1+1,w
  7965  1D6E  1C03               	skipc
  7966  1D6F  0F21               	incfsz	___flge@ff1+1,w
  7967  1D70  2D72               	goto	u4791
  7968  1D71  2D73               	goto	u4792
  7969  1D72                     u4791:
  7970  1D72  02F5               	subwf	??___flge+1,f
  7971  1D73                     u4792:
  7972  1D73  0822               	movf	___flge@ff1+2,w
  7973  1D74  1C03               	skipc
  7974  1D75  0F22               	incfsz	___flge@ff1+2,w
  7975  1D76  2D78               	goto	u4793
  7976  1D77  2D79               	goto	u4794
  7977  1D78                     u4793:
  7978  1D78  02F6               	subwf	??___flge+2,f
  7979  1D79                     u4794:
  7980  1D79  0823               	movf	___flge@ff1+3,w
  7981  1D7A  1C03               	skipc
  7982  1D7B  0F23               	incfsz	___flge@ff1+3,w
  7983  1D7C  2D7E               	goto	u4795
  7984  1D7D  2D7F               	goto	u4796
  7985  1D7E                     u4795:
  7986  1D7E  02F7               	subwf	??___flge+3,f
  7987  1D7F                     u4796:
  7988  1D7F  0877               	movf	??___flge+3,w
  7989  1D80  00A3               	movwf	___flge@ff1+3
  7990  1D81  0876               	movf	??___flge+2,w
  7991  1D82  00A2               	movwf	___flge@ff1+2
  7992  1D83  0875               	movf	??___flge+1,w
  7993  1D84  00A1               	movwf	___flge@ff1+1
  7994  1D85  0874               	movf	??___flge,w
  7995  1D86  00A0               	movwf	___flge@ff1
  7996  1D87                     l2920:
  7997  1D87  1FA7               	btfss	___flge@ff2+3,7
  7998  1D88  2D8A               	goto	u4801
  7999  1D89  2D8B               	goto	u4800
  8000  1D8A                     u4801:
  8001  1D8A  2DAF               	goto	l515
  8002  1D8B                     u4800:
  8003  1D8B                     l2922:
  8004  1D8B  3000               	movlw	0
  8005  1D8C  00F4               	movwf	??___flge
  8006  1D8D  3000               	movlw	0
  8007  1D8E  00F5               	movwf	??___flge+1
  8008  1D8F  3000               	movlw	0
  8009  1D90  00F6               	movwf	??___flge+2
  8010  1D91  3080               	movlw	128
  8011  1D92  00F7               	movwf	??___flge+3
  8012  1D93  0824               	movf	___flge@ff2,w
  8013  1D94  02F4               	subwf	??___flge,f
  8014  1D95  0825               	movf	___flge@ff2+1,w
  8015  1D96  1C03               	skipc
  8016  1D97  0F25               	incfsz	___flge@ff2+1,w
  8017  1D98  2D9A               	goto	u4811
  8018  1D99  2D9B               	goto	u4812
  8019  1D9A                     u4811:
  8020  1D9A  02F5               	subwf	??___flge+1,f
  8021  1D9B                     u4812:
  8022  1D9B  0826               	movf	___flge@ff2+2,w
  8023  1D9C  1C03               	skipc
  8024  1D9D  0F26               	incfsz	___flge@ff2+2,w
  8025  1D9E  2DA0               	goto	u4813
  8026  1D9F  2DA1               	goto	u4814
  8027  1DA0                     u4813:
  8028  1DA0  02F6               	subwf	??___flge+2,f
  8029  1DA1                     u4814:
  8030  1DA1  0827               	movf	___flge@ff2+3,w
  8031  1DA2  1C03               	skipc
  8032  1DA3  0F27               	incfsz	___flge@ff2+3,w
  8033  1DA4  2DA6               	goto	u4815
  8034  1DA5  2DA7               	goto	u4816
  8035  1DA6                     u4815:
  8036  1DA6  02F7               	subwf	??___flge+3,f
  8037  1DA7                     u4816:
  8038  1DA7  0877               	movf	??___flge+3,w
  8039  1DA8  00A7               	movwf	___flge@ff2+3
  8040  1DA9  0876               	movf	??___flge+2,w
  8041  1DAA  00A6               	movwf	___flge@ff2+2
  8042  1DAB  0875               	movf	??___flge+1,w
  8043  1DAC  00A5               	movwf	___flge@ff2+1
  8044  1DAD  0874               	movf	??___flge,w
  8045  1DAE  00A4               	movwf	___flge@ff2
  8046  1DAF                     l515:
  8047  1DAF  3080               	movlw	128
  8048  1DB0  06A3               	xorwf	___flge@ff1+3,f
  8049  1DB1  3080               	movlw	128
  8050  1DB2  06A7               	xorwf	___flge@ff2+3,f
  8051  1DB3  0827               	movf	___flge@ff2+3,w
  8052  1DB4  0223               	subwf	___flge@ff1+3,w
  8053  1DB5  1D03               	skipz
  8054  1DB6  2DC1               	goto	u4825
  8055  1DB7  0826               	movf	___flge@ff2+2,w
  8056  1DB8  0222               	subwf	___flge@ff1+2,w
  8057  1DB9  1D03               	skipz
  8058  1DBA  2DC1               	goto	u4825
  8059  1DBB  0825               	movf	___flge@ff2+1,w
  8060  1DBC  0221               	subwf	___flge@ff1+1,w
  8061  1DBD  1D03               	skipz
  8062  1DBE  2DC1               	goto	u4825
  8063  1DBF  0824               	movf	___flge@ff2,w
  8064  1DC0  0220               	subwf	___flge@ff1,w
  8065  1DC1                     u4825:
  8066  1DC1  1803               	skipnc
  8067  1DC2  2DC4               	goto	u4821
  8068  1DC3  2DC5               	goto	u4820
  8069  1DC4                     u4821:
  8070  1DC4  2DC7               	goto	l2926
  8071  1DC5                     u4820:
  8072  1DC5                     l2924:
  8073  1DC5  1003               	clrc
  8074  1DC6  2DC8               	goto	l516
  8075  1DC7                     l2926:
  8076  1DC7  1403               	setc
  8077  1DC8                     l516:
  8078  1DC8  0008               	return
  8079  1DC9                     __end_of___flge:
  8080                           
  8081                           	psect	text22
  8082  1AD1                     __ptext22:	
  8083 ;; *************** function ___fleq *****************
  8084 ;; Defined at:
  8085 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  ff1             4    0[BANK0 ] unsigned char 
  8088 ;;  ff2             4    4[BANK0 ] unsigned char 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;		None               void
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, status,0
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8100 ;;      Params:         0       8       0       0       0
  8101 ;;      Locals:         0       0       0       0       0
  8102 ;;      Temps:          4       0       0       0       0
  8103 ;;      Totals:         4       8       0       0       0
  8104 ;;Total ram usage:       12 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:    1
  8107 ;; This function calls:
  8108 ;;		Nothing
  8109 ;; This function is called by:
  8110 ;;		_sprintf
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           
  8115                           ;psect for function ___fleq
  8116  1AD1                     ___fleq:
  8117  1AD1                     l2898:	
  8118                           ;incstack = 0
  8119                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8120                           
  8121  1AD1  3000               	movlw	0
  8122  1AD2  1283               	bcf	3,5	;RP0=0, select bank0
  8123  1AD3  1303               	bcf	3,6	;RP1=0, select bank0
  8124  1AD4  0520               	andwf	___fleq@ff1,w
  8125  1AD5  00F4               	movwf	??___fleq
  8126  1AD6  3000               	movlw	0
  8127  1AD7  0521               	andwf	___fleq@ff1+1,w
  8128  1AD8  00F5               	movwf	??___fleq+1
  8129  1AD9  3080               	movlw	128
  8130  1ADA  0522               	andwf	___fleq@ff1+2,w
  8131  1ADB  00F6               	movwf	??___fleq+2
  8132  1ADC  307F               	movlw	127
  8133  1ADD  0523               	andwf	___fleq@ff1+3,w
  8134  1ADE  00F7               	movwf	??___fleq+3
  8135  1ADF  0877               	movf	??___fleq+3,w
  8136  1AE0  0476               	iorwf	??___fleq+2,w
  8137  1AE1  0475               	iorwf	??___fleq+1,w
  8138  1AE2  0474               	iorwf	??___fleq,w
  8139  1AE3  1D03               	skipz
  8140  1AE4  2AE6               	goto	u4731
  8141  1AE5  2AE7               	goto	u4730
  8142  1AE6                     u4731:
  8143  1AE6  2AEF               	goto	l507
  8144  1AE7                     u4730:
  8145  1AE7                     l2900:
  8146  1AE7  3000               	movlw	0
  8147  1AE8  00A3               	movwf	___fleq@ff1+3
  8148  1AE9  3000               	movlw	0
  8149  1AEA  00A2               	movwf	___fleq@ff1+2
  8150  1AEB  3000               	movlw	0
  8151  1AEC  00A1               	movwf	___fleq@ff1+1
  8152  1AED  3000               	movlw	0
  8153  1AEE  00A0               	movwf	___fleq@ff1
  8154  1AEF                     l507:
  8155  1AEF  3000               	movlw	0
  8156  1AF0  0524               	andwf	___fleq@ff2,w
  8157  1AF1  00F4               	movwf	??___fleq
  8158  1AF2  3000               	movlw	0
  8159  1AF3  0525               	andwf	___fleq@ff2+1,w
  8160  1AF4  00F5               	movwf	??___fleq+1
  8161  1AF5  3080               	movlw	128
  8162  1AF6  0526               	andwf	___fleq@ff2+2,w
  8163  1AF7  00F6               	movwf	??___fleq+2
  8164  1AF8  307F               	movlw	127
  8165  1AF9  0527               	andwf	___fleq@ff2+3,w
  8166  1AFA  00F7               	movwf	??___fleq+3
  8167  1AFB  0877               	movf	??___fleq+3,w
  8168  1AFC  0476               	iorwf	??___fleq+2,w
  8169  1AFD  0475               	iorwf	??___fleq+1,w
  8170  1AFE  0474               	iorwf	??___fleq,w
  8171  1AFF  1D03               	skipz
  8172  1B00  2B02               	goto	u4741
  8173  1B01  2B03               	goto	u4740
  8174  1B02                     u4741:
  8175  1B02  2B0B               	goto	l508
  8176  1B03                     u4740:
  8177  1B03                     l2902:
  8178  1B03  3000               	movlw	0
  8179  1B04  00A7               	movwf	___fleq@ff2+3
  8180  1B05  3000               	movlw	0
  8181  1B06  00A6               	movwf	___fleq@ff2+2
  8182  1B07  3000               	movlw	0
  8183  1B08  00A5               	movwf	___fleq@ff2+1
  8184  1B09  3000               	movlw	0
  8185  1B0A  00A4               	movwf	___fleq@ff2
  8186  1B0B                     l508:
  8187  1B0B  0827               	movf	___fleq@ff2+3,w
  8188  1B0C  0623               	xorwf	___fleq@ff1+3,w
  8189  1B0D  1D03               	skipz
  8190  1B0E  2B19               	goto	u4755
  8191  1B0F  0826               	movf	___fleq@ff2+2,w
  8192  1B10  0622               	xorwf	___fleq@ff1+2,w
  8193  1B11  1D03               	skipz
  8194  1B12  2B19               	goto	u4755
  8195  1B13  0825               	movf	___fleq@ff2+1,w
  8196  1B14  0621               	xorwf	___fleq@ff1+1,w
  8197  1B15  1D03               	skipz
  8198  1B16  2B19               	goto	u4755
  8199  1B17  0824               	movf	___fleq@ff2,w
  8200  1B18  0620               	xorwf	___fleq@ff1,w
  8201  1B19                     u4755:
  8202  1B19  1903               	skipnz
  8203  1B1A  2B1C               	goto	u4751
  8204  1B1B  2B1D               	goto	u4750
  8205  1B1C                     u4751:
  8206  1B1C  2B1F               	goto	l2906
  8207  1B1D                     u4750:
  8208  1B1D                     l2904:
  8209  1B1D  1003               	clrc
  8210  1B1E  2B20               	goto	l509
  8211  1B1F                     l2906:
  8212  1B1F  1403               	setc
  8213  1B20                     l509:
  8214  1B20  0008               	return
  8215  1B21                     __end_of___fleq:
  8216                           
  8217                           	psect	text23
  8218  1987                     __ptext23:	
  8219 ;; *************** function _Setup *****************
  8220 ;; Defined at:
  8221 ;;		line 64 in file "Master_main.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;		None
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;		None
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8235 ;;      Params:         0       0       0       0       0
  8236 ;;      Locals:         0       0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0
  8238 ;;      Totals:         0       0       0       0       0
  8239 ;;Total ram usage:        0 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; Hardware stack levels required when called:    1
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_main
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249                           
  8250                           ;psect for function _Setup
  8251  1987                     _Setup:
  8252  1987                     l3044:	
  8253                           ;incstack = 0
  8254                           ; Regs used in _Setup: [wreg+status,2+status,0]
  8255                           
  8256                           
  8257                           ;Master_main.c: 66:     ANSEL = 0b00000011;
  8258  1987  3003               	movlw	3
  8259  1988  1683               	bsf	3,5	;RP0=1, select bank3
  8260  1989  1703               	bsf	3,6	;RP1=1, select bank3
  8261  198A  0088               	movwf	8	;volatile
  8262  198B                     l3046:
  8263                           
  8264                           ;Master_main.c: 67:     ANSELH = 0;
  8265  198B  0189               	clrf	9	;volatile
  8266  198C                     l3048:
  8267                           
  8268                           ;Master_main.c: 69:     TRISA = 0b00000011;
  8269  198C  3003               	movlw	3
  8270  198D  1683               	bsf	3,5	;RP0=1, select bank1
  8271  198E  1303               	bcf	3,6	;RP1=0, select bank1
  8272  198F  0085               	movwf	5	;volatile
  8273                           
  8274                           ;Master_main.c: 70:     PORTA = 0;
  8275  1990  1283               	bcf	3,5	;RP0=0, select bank0
  8276  1991  1303               	bcf	3,6	;RP1=0, select bank0
  8277  1992  0185               	clrf	5	;volatile
  8278                           
  8279                           ;Master_main.c: 73:     TRISC = 0b0000000;
  8280  1993  1683               	bsf	3,5	;RP0=1, select bank1
  8281  1994  1303               	bcf	3,6	;RP1=0, select bank1
  8282  1995  0187               	clrf	7	;volatile
  8283                           
  8284                           ;Master_main.c: 74:     PORTC = 0;
  8285  1996  1283               	bcf	3,5	;RP0=0, select bank0
  8286  1997  1303               	bcf	3,6	;RP1=0, select bank0
  8287  1998  0187               	clrf	7	;volatile
  8288                           
  8289                           ;Master_main.c: 76:     TRISD = 0;
  8290  1999  1683               	bsf	3,5	;RP0=1, select bank1
  8291  199A  1303               	bcf	3,6	;RP1=0, select bank1
  8292  199B  0188               	clrf	8	;volatile
  8293                           
  8294                           ;Master_main.c: 77:     PORTD = 0;
  8295  199C  1283               	bcf	3,5	;RP0=0, select bank0
  8296  199D  1303               	bcf	3,6	;RP1=0, select bank0
  8297  199E  0188               	clrf	8	;volatile
  8298                           
  8299                           ;Master_main.c: 79:     TRISE = 0;
  8300  199F  1683               	bsf	3,5	;RP0=1, select bank1
  8301  19A0  1303               	bcf	3,6	;RP1=0, select bank1
  8302  19A1  0189               	clrf	9	;volatile
  8303                           
  8304                           ;Master_main.c: 80:     PORTE = 0;
  8305  19A2  1283               	bcf	3,5	;RP0=0, select bank0
  8306  19A3  1303               	bcf	3,6	;RP1=0, select bank0
  8307  19A4  0189               	clrf	9	;volatile
  8308  19A5                     l3050:
  8309                           
  8310                           ;Master_main.c: 82:     ADCON0bits.CHS=0;
  8311  19A5  30C3               	movlw	-61
  8312  19A6  059F               	andwf	31,f	;volatile
  8313  19A7                     l59:
  8314  19A7  0008               	return
  8315  19A8                     __end_of_Setup:
  8316                           
  8317                           	psect	text24
  8318  1A45                     __ptext24:	
  8319 ;; *************** function _LCD_Write_String *****************
  8320 ;; Defined at:
  8321 ;;		line 67 in file "LCD.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  a               2    0[BANK0 ] PTR unsigned char 
  8324 ;;		 -> STR_2(19), Lcdvar(20), 
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;  i               2    5[BANK0 ] int 
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      void 
  8329 ;; Registers used:
  8330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8336 ;;      Params:         0       2       0       0       0
  8337 ;;      Locals:         0       2       0       0       0
  8338 ;;      Temps:          0       3       0       0       0
  8339 ;;      Totals:         0       7       0       0       0
  8340 ;;Total ram usage:        7 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; Hardware stack levels required when called:    3
  8343 ;; This function calls:
  8344 ;;		_LCD_Write_Char
  8345 ;; This function is called by:
  8346 ;;		_main
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           
  8351                           ;psect for function _LCD_Write_String
  8352  1A45                     _LCD_Write_String:
  8353  1A45                     l4000:	
  8354                           ;incstack = 0
  8355                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8356                           
  8357                           
  8358                           ;LCD.c: 68:  int i;;LCD.c: 69:  for(i=0;a[i]!='\0';i++)
  8359  1A45  1283               	bcf	3,5	;RP0=0, select bank0
  8360  1A46  1303               	bcf	3,6	;RP1=0, select bank0
  8361  1A47  01A5               	clrf	LCD_Write_String@i
  8362  1A48  01A6               	clrf	LCD_Write_String@i+1
  8363  1A49  2A6E               	goto	l4006
  8364  1A4A                     l4002:
  8365                           
  8366                           ;LCD.c: 70:     LCD_Write_Char(a[i]);
  8367  1A4A  0825               	movf	LCD_Write_String@i,w
  8368  1A4B  0720               	addwf	LCD_Write_String@a,w
  8369  1A4C  00A3               	movwf	??_LCD_Write_String+1
  8370  1A4D  0821               	movf	LCD_Write_String@a+1,w
  8371  1A4E  00A2               	movwf	??_LCD_Write_String
  8372  1A4F  1803               	skipnc
  8373  1A50  0AA2               	incf	??_LCD_Write_String,f
  8374  1A51  1FA5               	btfss	LCD_Write_String@i,7
  8375  1A52  2A54               	goto	u7030
  8376  1A53  03A2               	decf	??_LCD_Write_String,f
  8377  1A54                     u7030:
  8378  1A54  1283               	bcf	3,5	;RP0=0, select bank0
  8379  1A55  1303               	bcf	3,6	;RP1=0, select bank0
  8380  1A56  0822               	movf	??_LCD_Write_String,w
  8381  1A57  00A4               	movwf	??_LCD_Write_String+2
  8382  1A58  0824               	movf	??_LCD_Write_String+2,w
  8383  1A59  00FF               	movwf	btemp+1
  8384  1A5A  0823               	movf	??_LCD_Write_String+1,w
  8385  1A5B  0084               	movwf	4
  8386  1A5C  120A  118A  2700  160A  158A  	fcall	stringtab
  8387  1A61  160A  158A  216C  160A  158A  	fcall	_LCD_Write_Char
  8388  1A66                     l4004:
  8389  1A66  3001               	movlw	1
  8390  1A67  1283               	bcf	3,5	;RP0=0, select bank0
  8391  1A68  1303               	bcf	3,6	;RP1=0, select bank0
  8392  1A69  07A5               	addwf	LCD_Write_String@i,f
  8393  1A6A  1803               	skipnc
  8394  1A6B  0AA6               	incf	LCD_Write_String@i+1,f
  8395  1A6C  3000               	movlw	0
  8396  1A6D  07A6               	addwf	LCD_Write_String@i+1,f
  8397  1A6E                     l4006:
  8398  1A6E  0825               	movf	LCD_Write_String@i,w
  8399  1A6F  0720               	addwf	LCD_Write_String@a,w
  8400  1A70  00A3               	movwf	??_LCD_Write_String+1
  8401  1A71  0821               	movf	LCD_Write_String@a+1,w
  8402  1A72  00A2               	movwf	??_LCD_Write_String
  8403  1A73  1803               	skipnc
  8404  1A74  0AA2               	incf	??_LCD_Write_String,f
  8405  1A75  1FA5               	btfss	LCD_Write_String@i,7
  8406  1A76  2A78               	goto	u7040
  8407  1A77  03A2               	decf	??_LCD_Write_String,f
  8408  1A78                     u7040:
  8409  1A78  1283               	bcf	3,5	;RP0=0, select bank0
  8410  1A79  1303               	bcf	3,6	;RP1=0, select bank0
  8411  1A7A  0822               	movf	??_LCD_Write_String,w
  8412  1A7B  00A4               	movwf	??_LCD_Write_String+2
  8413  1A7C  0824               	movf	??_LCD_Write_String+2,w
  8414  1A7D  00FF               	movwf	btemp+1
  8415  1A7E  0823               	movf	??_LCD_Write_String+1,w
  8416  1A7F  0084               	movwf	4
  8417  1A80  120A  118A  2700  160A  158A  	fcall	stringtab
  8418  1A85  3A00               	xorlw	0
  8419  1A86  1D03               	skipz
  8420  1A87  2A89               	goto	u7051
  8421  1A88  2A8A               	goto	u7050
  8422  1A89                     u7051:
  8423  1A89  2A4A               	goto	l4002
  8424  1A8A                     u7050:
  8425  1A8A                     l116:
  8426  1A8A  0008               	return
  8427  1A8B                     __end_of_LCD_Write_String:
  8428                           
  8429                           	psect	text25
  8430  196C                     __ptext25:	
  8431 ;; *************** function _LCD_Write_Char *****************
  8432 ;; Defined at:
  8433 ;;		line 30 in file "LCD.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  a               1    wreg     unsigned char 
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;  a               1    6[COMMON] unsigned char 
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  1    wreg      void 
  8440 ;; Registers used:
  8441 ;;		wreg, status,2, status,0, pclath, cstack
  8442 ;; Tracked objects:
  8443 ;;		On entry : 0/0
  8444 ;;		On exit  : 0/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8447 ;;      Params:         0       0       0       0       0
  8448 ;;      Locals:         1       0       0       0       0
  8449 ;;      Temps:          1       0       0       0       0
  8450 ;;      Totals:         2       0       0       0       0
  8451 ;;Total ram usage:        2 bytes
  8452 ;; Hardware stack levels used:    1
  8453 ;; Hardware stack levels required when called:    2
  8454 ;; This function calls:
  8455 ;;		_LCD_Port
  8456 ;; This function is called by:
  8457 ;;		_LCD_Write_String
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           
  8462                           ;psect for function _LCD_Write_Char
  8463  196C                     _LCD_Write_Char:
  8464                           
  8465                           ;incstack = 0
  8466                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8467                           ;LCD_Write_Char@a stored from wreg
  8468  196C  00F6               	movwf	LCD_Write_Char@a
  8469  196D                     l2674:
  8470                           
  8471                           ;LCD.c: 31:     RE0 = 1;
  8472  196D  1283               	bcf	3,5	;RP0=0, select bank0
  8473  196E  1303               	bcf	3,6	;RP1=0, select bank0
  8474  196F  1409               	bsf	9,0	;volatile
  8475  1970                     l2676:
  8476                           
  8477                           ;LCD.c: 32:     LCD_Port(a);
  8478  1970  0876               	movf	LCD_Write_Char@a,w
  8479  1971  160A  118A  2000  160A  158A  	fcall	_LCD_Port
  8480  1976                     l2678:
  8481                           
  8482                           ;LCD.c: 33:     RE1 = 1;
  8483  1976  1283               	bcf	3,5	;RP0=0, select bank0
  8484  1977  1303               	bcf	3,6	;RP1=0, select bank0
  8485  1978  1489               	bsf	9,1	;volatile
  8486  1979                     l2680:
  8487                           
  8488                           ;LCD.c: 34:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  8489  1979  301A               	movlw	26
  8490  197A  00F5               	movwf	??_LCD_Write_Char
  8491  197B                     u7087:
  8492  197B  0BF5               	decfsz	??_LCD_Write_Char,f
  8493  197C  297B               	goto	u7087
  8494  197D  0000               	nop
  8495  197E                     l2682:
  8496                           
  8497                           ;LCD.c: 35:     RE1 = 0;
  8498  197E  1283               	bcf	3,5	;RP0=0, select bank0
  8499  197F  1303               	bcf	3,6	;RP1=0, select bank0
  8500  1980  1089               	bcf	9,1	;volatile
  8501  1981                     l2684:
  8502                           
  8503                           ;LCD.c: 36:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  8504  1981  3006               	movlw	6
  8505  1982  00F5               	movwf	??_LCD_Write_Char
  8506  1983                     u7097:
  8507  1983  0BF5               	decfsz	??_LCD_Write_Char,f
  8508  1984  2983               	goto	u7097
  8509  1985  0000               	nop
  8510  1986                     l98:
  8511  1986  0008               	return
  8512  1987                     __end_of_LCD_Write_Char:
  8513                           
  8514                           	psect	text26
  8515  19CB                     __ptext26:	
  8516 ;; *************** function _LCD_Set_Cursor *****************
  8517 ;; Defined at:
  8518 ;;		line 53 in file "LCD.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;  x               1    wreg     unsigned char 
  8521 ;;  y               1    0[BANK0 ] unsigned char 
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;  x               1    2[BANK0 ] unsigned char 
  8524 ;;  a               1    3[BANK0 ] unsigned char 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0, pclath, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8534 ;;      Params:         0       1       0       0       0
  8535 ;;      Locals:         0       2       0       0       0
  8536 ;;      Temps:          0       1       0       0       0
  8537 ;;      Totals:         0       4       0       0       0
  8538 ;;Total ram usage:        4 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    3
  8541 ;; This function calls:
  8542 ;;		_LCD_Cmd
  8543 ;; This function is called by:
  8544 ;;		_main
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           
  8549                           ;psect for function _LCD_Set_Cursor
  8550  19CB                     _LCD_Set_Cursor:
  8551                           
  8552                           ;incstack = 0
  8553                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8554                           ;LCD_Set_Cursor@x stored from wreg
  8555  19CB  1283               	bcf	3,5	;RP0=0, select bank0
  8556  19CC  1303               	bcf	3,6	;RP1=0, select bank0
  8557  19CD  00A2               	movwf	LCD_Set_Cursor@x
  8558  19CE                     l3988:
  8559                           
  8560                           ;LCD.c: 54:  uint8_t a;;LCD.c: 55:  if(x == 1)
  8561  19CE  0322               	decf	LCD_Set_Cursor@x,w
  8562  19CF  1D03               	btfss	3,2
  8563  19D0  29D2               	goto	u7011
  8564  19D1  29D3               	goto	u7010
  8565  19D2                     u7011:
  8566  19D2  29DF               	goto	l3994
  8567  19D3                     u7010:
  8568  19D3                     l3990:
  8569                           
  8570                           ;LCD.c: 56:  {;LCD.c: 57:         a = 0x80 + y;
  8571  19D3  0820               	movf	LCD_Set_Cursor@y,w
  8572  19D4  3E80               	addlw	128
  8573  19D5  00A1               	movwf	??_LCD_Set_Cursor
  8574  19D6  0821               	movf	??_LCD_Set_Cursor,w
  8575  19D7  00A3               	movwf	LCD_Set_Cursor@a
  8576  19D8                     l3992:
  8577                           
  8578                           ;LCD.c: 58:   LCD_Cmd(a);
  8579  19D8  0823               	movf	LCD_Set_Cursor@a,w
  8580  19D9  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8581                           
  8582                           ;LCD.c: 59:  }
  8583  19DE  29F0               	goto	l110
  8584  19DF                     l3994:
  8585  19DF  3002               	movlw	2
  8586  19E0  0622               	xorwf	LCD_Set_Cursor@x,w
  8587  19E1  1D03               	btfss	3,2
  8588  19E2  29E4               	goto	u7021
  8589  19E3  29E5               	goto	u7020
  8590  19E4                     u7021:
  8591  19E4  29F0               	goto	l110
  8592  19E5                     u7020:
  8593  19E5                     l3996:
  8594                           
  8595                           ;LCD.c: 61:  {;LCD.c: 62:   a = 0xC0 + y;
  8596  19E5  0820               	movf	LCD_Set_Cursor@y,w
  8597  19E6  3EC0               	addlw	192
  8598  19E7  00A1               	movwf	??_LCD_Set_Cursor
  8599  19E8  0821               	movf	??_LCD_Set_Cursor,w
  8600  19E9  00A3               	movwf	LCD_Set_Cursor@a
  8601  19EA                     l3998:
  8602                           
  8603                           ;LCD.c: 63:   LCD_Cmd(a);
  8604  19EA  0823               	movf	LCD_Set_Cursor@a,w
  8605  19EB  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8606  19F0                     l110:
  8607  19F0  0008               	return
  8608  19F1                     __end_of_LCD_Set_Cursor:
  8609                           
  8610                           	psect	text27
  8611  1B71                     __ptext27:	
  8612 ;; *************** function _LCD_Init *****************
  8613 ;; Defined at:
  8614 ;;		line 10 in file "LCD.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;		None
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1    wreg      void 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2, status,0, pclath, cstack
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8628 ;;      Params:         0       0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0
  8630 ;;      Temps:          0       2       0       0       0
  8631 ;;      Totals:         0       2       0       0       0
  8632 ;;Total ram usage:        2 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:    3
  8635 ;; This function calls:
  8636 ;;		_LCD_Cmd
  8637 ;;		_LCD_Port
  8638 ;; This function is called by:
  8639 ;;		_main
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           
  8644                           ;psect for function _LCD_Init
  8645  1B71                     _LCD_Init:
  8646  1B71                     l3682:	
  8647                           ;incstack = 0
  8648                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8649                           
  8650                           
  8651                           ;LCD.c: 11:     RE0=0;
  8652  1B71  1283               	bcf	3,5	;RP0=0, select bank0
  8653  1B72  1303               	bcf	3,6	;RP1=0, select bank0
  8654  1B73  1009               	bcf	9,0	;volatile
  8655                           
  8656                           ;LCD.c: 12:     RE1=0;
  8657  1B74  1089               	bcf	9,1	;volatile
  8658  1B75                     l3684:
  8659                           
  8660                           ;LCD.c: 13:     LCD_Port(0x00);
  8661  1B75  3000               	movlw	0
  8662  1B76  160A  118A  2000  160A  158A  	fcall	_LCD_Port
  8663  1B7B                     l3686:
  8664                           
  8665                           ;LCD.c: 14:     _delay((unsigned long)((20)*(8000000/4000.0)));
  8666  1B7B  3034               	movlw	52
  8667  1B7C  1283               	bcf	3,5	;RP0=0, select bank0
  8668  1B7D  1303               	bcf	3,6	;RP1=0, select bank0
  8669  1B7E  00A1               	movwf	??_LCD_Init+1
  8670  1B7F  30F1               	movlw	241
  8671  1B80  00A0               	movwf	??_LCD_Init
  8672  1B81                     u7107:
  8673  1B81  0BA0               	decfsz	??_LCD_Init,f
  8674  1B82  2B81               	goto	u7107
  8675  1B83  0BA1               	decfsz	??_LCD_Init+1,f
  8676  1B84  2B81               	goto	u7107
  8677  1B85                     l3688:
  8678                           
  8679                           ;LCD.c: 15:     LCD_Cmd(0x30);
  8680  1B85  3030               	movlw	48
  8681  1B86  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8682                           
  8683                           ;LCD.c: 16:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8684  1B8B  300D               	movlw	13
  8685  1B8C  1283               	bcf	3,5	;RP0=0, select bank0
  8686  1B8D  1303               	bcf	3,6	;RP1=0, select bank0
  8687  1B8E  00A1               	movwf	??_LCD_Init+1
  8688  1B8F  30FB               	movlw	251
  8689  1B90  00A0               	movwf	??_LCD_Init
  8690  1B91                     u7117:
  8691  1B91  0BA0               	decfsz	??_LCD_Init,f
  8692  1B92  2B91               	goto	u7117
  8693  1B93  0BA1               	decfsz	??_LCD_Init+1,f
  8694  1B94  2B91               	goto	u7117
  8695  1B95                     l3690:
  8696                           
  8697                           ;LCD.c: 17:     LCD_Cmd(0x30);
  8698  1B95  3030               	movlw	48
  8699  1B96  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8700  1B9B                     l3692:
  8701                           
  8702                           ;LCD.c: 18:     _delay((unsigned long)((11)*(8000000/4000.0)));
  8703  1B9B  301D               	movlw	29
  8704  1B9C  1283               	bcf	3,5	;RP0=0, select bank0
  8705  1B9D  1303               	bcf	3,6	;RP1=0, select bank0
  8706  1B9E  00A1               	movwf	??_LCD_Init+1
  8707  1B9F  3090               	movlw	144
  8708  1BA0  00A0               	movwf	??_LCD_Init
  8709  1BA1                     u7127:
  8710  1BA1  0BA0               	decfsz	??_LCD_Init,f
  8711  1BA2  2BA1               	goto	u7127
  8712  1BA3  0BA1               	decfsz	??_LCD_Init+1,f
  8713  1BA4  2BA1               	goto	u7127
  8714  1BA5  0000               	nop
  8715                           
  8716                           ;LCD.c: 19:     LCD_Cmd(0x30);
  8717  1BA6  3030               	movlw	48
  8718  1BA7  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8719                           
  8720                           ;LCD.c: 20:     LCD_Cmd(0x38);
  8721  1BAC  3038               	movlw	56
  8722  1BAD  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8723                           
  8724                           ;LCD.c: 21:     LCD_Cmd(0x0C);
  8725  1BB2  300C               	movlw	12
  8726  1BB3  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8727                           
  8728                           ;LCD.c: 22:     LCD_Cmd(0x01);
  8729  1BB8  3001               	movlw	1
  8730  1BB9  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8731                           
  8732                           ;LCD.c: 23:     LCD_Cmd(0x06);
  8733  1BBE  3006               	movlw	6
  8734  1BBF  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8735  1BC4                     l92:
  8736  1BC4  0008               	return
  8737  1BC5                     __end_of_LCD_Init:
  8738                           
  8739                           	psect	text28
  8740  195F                     __ptext28:	
  8741 ;; *************** function _LCD_Clear *****************
  8742 ;; Defined at:
  8743 ;;		line 48 in file "LCD.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;		None
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;		None
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  1    wreg      void 
  8750 ;; Registers used:
  8751 ;;		wreg, status,2, status,0, pclath, cstack
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8757 ;;      Params:         0       0       0       0       0
  8758 ;;      Locals:         0       0       0       0       0
  8759 ;;      Temps:          0       0       0       0       0
  8760 ;;      Totals:         0       0       0       0       0
  8761 ;;Total ram usage:        0 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:    3
  8764 ;; This function calls:
  8765 ;;		_LCD_Cmd
  8766 ;; This function is called by:
  8767 ;;		_main
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           
  8772                           ;psect for function _LCD_Clear
  8773  195F                     _LCD_Clear:
  8774  195F                     l3064:	
  8775                           ;incstack = 0
  8776                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  8777                           
  8778                           
  8779                           ;LCD.c: 49:     LCD_Cmd(0);
  8780  195F  3000               	movlw	0
  8781  1960  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8782                           
  8783                           ;LCD.c: 50:     LCD_Cmd(1);
  8784  1965  3001               	movlw	1
  8785  1966  160A  158A  21A8  160A  158A  	fcall	_LCD_Cmd
  8786  196B                     l104:
  8787  196B  0008               	return
  8788  196C                     __end_of_LCD_Clear:
  8789                           
  8790                           	psect	text29
  8791  19A8                     __ptext29:	
  8792 ;; *************** function _LCD_Cmd *****************
  8793 ;; Defined at:
  8794 ;;		line 39 in file "LCD.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  a               1    wreg     unsigned char 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  a               1    7[COMMON] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0, pclath, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8808 ;;      Params:         0       0       0       0       0
  8809 ;;      Locals:         1       0       0       0       0
  8810 ;;      Temps:          2       0       0       0       0
  8811 ;;      Totals:         3       0       0       0       0
  8812 ;;Total ram usage:        3 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    2
  8815 ;; This function calls:
  8816 ;;		_LCD_Port
  8817 ;; This function is called by:
  8818 ;;		_LCD_Init
  8819 ;;		_LCD_Clear
  8820 ;;		_LCD_Set_Cursor
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           
  8825                           ;psect for function _LCD_Cmd
  8826  19A8                     _LCD_Cmd:
  8827                           
  8828                           ;incstack = 0
  8829                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8830                           ;LCD_Cmd@a stored from wreg
  8831  19A8  00F7               	movwf	LCD_Cmd@a
  8832  19A9                     l2662:
  8833                           
  8834                           ;LCD.c: 40:     RE0=0;
  8835  19A9  1283               	bcf	3,5	;RP0=0, select bank0
  8836  19AA  1303               	bcf	3,6	;RP1=0, select bank0
  8837  19AB  1009               	bcf	9,0	;volatile
  8838  19AC                     l2664:
  8839                           
  8840                           ;LCD.c: 41:     LCD_Port(a);
  8841  19AC  0877               	movf	LCD_Cmd@a,w
  8842  19AD  160A  118A  2000  160A  158A  	fcall	_LCD_Port
  8843  19B2                     l2666:
  8844                           
  8845                           ;LCD.c: 42:     RE1=1;
  8846  19B2  1283               	bcf	3,5	;RP0=0, select bank0
  8847  19B3  1303               	bcf	3,6	;RP1=0, select bank0
  8848  19B4  1489               	bsf	9,1	;volatile
  8849  19B5                     l2668:
  8850                           
  8851                           ;LCD.c: 43:     _delay((unsigned long)((4)*(8000000/4000.0)));
  8852  19B5  300B               	movlw	11
  8853  19B6  00F6               	movwf	??_LCD_Cmd+1
  8854  19B7  3062               	movlw	98
  8855  19B8  00F5               	movwf	??_LCD_Cmd
  8856  19B9                     u7137:
  8857  19B9  0BF5               	decfsz	??_LCD_Cmd,f
  8858  19BA  29B9               	goto	u7137
  8859  19BB  0BF6               	decfsz	??_LCD_Cmd+1,f
  8860  19BC  29B9               	goto	u7137
  8861  19BD  0000               	nop
  8862  19BE                     l2670:
  8863                           
  8864                           ;LCD.c: 44:     RE1=0;
  8865  19BE  1283               	bcf	3,5	;RP0=0, select bank0
  8866  19BF  1303               	bcf	3,6	;RP1=0, select bank0
  8867  19C0  1089               	bcf	9,1	;volatile
  8868  19C1                     l2672:
  8869                           
  8870                           ;LCD.c: 45:     _delay((unsigned long)((2)*(8000000/4000.0)));
  8871  19C1  3006               	movlw	6
  8872  19C2  00F6               	movwf	??_LCD_Cmd+1
  8873  19C3  3030               	movlw	48
  8874  19C4  00F5               	movwf	??_LCD_Cmd
  8875  19C5                     u7147:
  8876  19C5  0BF5               	decfsz	??_LCD_Cmd,f
  8877  19C6  29C5               	goto	u7147
  8878  19C7  0BF6               	decfsz	??_LCD_Cmd+1,f
  8879  19C8  29C5               	goto	u7147
  8880  19C9  0000               	nop
  8881  19CA                     l101:
  8882  19CA  0008               	return
  8883  19CB                     __end_of_LCD_Cmd:
  8884                           
  8885                           	psect	text30
  8886  1000                     __ptext30:	
  8887 ;; *************** function _LCD_Port *****************
  8888 ;; Defined at:
  8889 ;;		line 26 in file "LCD.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  a               1    wreg     unsigned char 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;  a               1    4[COMMON] unsigned char 
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  1    wreg      void 
  8896 ;; Registers used:
  8897 ;;		wreg
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8903 ;;      Params:         0       0       0       0       0
  8904 ;;      Locals:         1       0       0       0       0
  8905 ;;      Temps:          0       0       0       0       0
  8906 ;;      Totals:         1       0       0       0       0
  8907 ;;Total ram usage:        1 bytes
  8908 ;; Hardware stack levels used:    1
  8909 ;; Hardware stack levels required when called:    1
  8910 ;; This function calls:
  8911 ;;		Nothing
  8912 ;; This function is called by:
  8913 ;;		_LCD_Init
  8914 ;;		_LCD_Write_Char
  8915 ;;		_LCD_Cmd
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           
  8920                           ;psect for function _LCD_Port
  8921  1000                     _LCD_Port:
  8922                           
  8923                           ;incstack = 0
  8924                           ; Regs used in _LCD_Port: [wreg]
  8925                           ;LCD_Port@a stored from wreg
  8926  1000  00F4               	movwf	LCD_Port@a
  8927  1001                     l2196:
  8928                           
  8929                           ;LCD.c: 27:     PORTD = a;
  8930  1001  0874               	movf	LCD_Port@a,w
  8931  1002  1283               	bcf	3,5	;RP0=0, select bank0
  8932  1003  1303               	bcf	3,6	;RP1=0, select bank0
  8933  1004  0088               	movwf	8	;volatile
  8934  1005                     l95:
  8935  1005  0008               	return
  8936  1006                     __end_of_LCD_Port:
  8937                           
  8938                           	psect	text31
  8939  1C2D                     __ptext31:	
  8940 ;; *************** function _ISR *****************
  8941 ;; Defined at:
  8942 ;;		line 89 in file "Master_main.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;		None
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;		None
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  1    wreg      void 
  8949 ;; Registers used:
  8950 ;;		wreg, status,2, status,0
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8956 ;;      Params:         0       0       0       0       0
  8957 ;;      Locals:         0       0       0       0       0
  8958 ;;      Temps:          4       0       0       0       0
  8959 ;;      Totals:         4       0       0       0       0
  8960 ;;Total ram usage:        4 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		Interrupt level 1
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           
  8970                           ;psect for function _ISR
  8971  1C2D                     _ISR:
  8972  1C2D                     i1l3380:
  8973                           
  8974                           ;Master_main.c: 91:     if(RCIF==1){
  8975  1C2D  1283               	bcf	3,5	;RP0=0, select bank0
  8976  1C2E  1303               	bcf	3,6	;RP1=0, select bank0
  8977  1C2F  1E8C               	btfss	12,5	;volatile
  8978  1C30  2C32               	goto	u572_21
  8979  1C31  2C33               	goto	u572_20
  8980  1C32                     u572_21:
  8981  1C32  2C4D               	goto	i1l64
  8982  1C33                     u572_20:
  8983  1C33                     i1l3382:
  8984                           
  8985                           ;Master_main.c: 93:         receive = RCREG;
  8986  1C33  081A               	movf	26,w	;volatile
  8987  1C34  00F0               	movwf	??_ISR
  8988  1C35  0870               	movf	??_ISR,w
  8989  1C36  00F8               	movwf	_receive
  8990  1C37                     i1l3384:
  8991                           
  8992                           ;Master_main.c: 94:         if(receive == '+'){
  8993  1C37  302B               	movlw	43
  8994  1C38  0678               	xorwf	_receive,w
  8995  1C39  1D03               	btfss	3,2
  8996  1C3A  2C3C               	goto	u573_21
  8997  1C3B  2C3D               	goto	u573_20
  8998  1C3C                     u573_21:
  8999  1C3C  2C43               	goto	i1l65
  9000  1C3D                     u573_20:
  9001  1C3D                     i1l3386:
  9002                           
  9003                           ;Master_main.c: 95:             contador++;
  9004  1C3D  3001               	movlw	1
  9005  1C3E  00F0               	movwf	??_ISR
  9006  1C3F  0870               	movf	??_ISR,w
  9007  1C40  1683               	bsf	3,5	;RP0=1, select bank1
  9008  1C41  1303               	bcf	3,6	;RP1=0, select bank1
  9009  1C42  07DF               	addwf	_contador^(0+128),f
  9010  1C43                     i1l65:	
  9011                           ;Master_main.c: 96:         }
  9012                           
  9013                           
  9014                           ;Master_main.c: 97:         if(receive == '-'){
  9015  1C43  302D               	movlw	45
  9016  1C44  0678               	xorwf	_receive,w
  9017  1C45  1D03               	btfss	3,2
  9018  1C46  2C48               	goto	u574_21
  9019  1C47  2C49               	goto	u574_20
  9020  1C48                     u574_21:
  9021  1C48  2C4D               	goto	i1l64
  9022  1C49                     u574_20:
  9023  1C49                     i1l3388:
  9024                           
  9025                           ;Master_main.c: 98:             contador--;
  9026  1C49  3001               	movlw	1
  9027  1C4A  1683               	bsf	3,5	;RP0=1, select bank1
  9028  1C4B  1303               	bcf	3,6	;RP1=0, select bank1
  9029  1C4C  02DF               	subwf	_contador^(0+128),f
  9030  1C4D                     i1l64:	
  9031                           ;Master_main.c: 100:     }
  9032                           
  9033                           
  9034                           ;Master_main.c: 102:     if (ADCON0bits.GO == 0 & ADCON0bits.CHS == 0){
  9035  1C4D  1283               	bcf	3,5	;RP0=0, select bank0
  9036  1C4E  1C9F               	btfss	31,1	;volatile
  9037  1C4F  2C51               	goto	u575_21
  9038  1C50  2C53               	goto	u575_20
  9039  1C51                     u575_21:
  9040  1C51  3001               	movlw	1
  9041  1C52  2C54               	goto	u575_22
  9042  1C53                     u575_20:
  9043  1C53  3000               	movlw	0
  9044  1C54                     u575_22:
  9045  1C54  00F0               	movwf	??_ISR
  9046  1C55  0C1F               	rrf	31,w	;volatile
  9047  1C56  00F1               	movwf	??_ISR+1
  9048  1C57  0C71               	rrf	??_ISR+1,w
  9049  1C58  390F               	andlw	15
  9050  1C59  3A00               	xorlw	0
  9051  1C5A  1903               	skipnz
  9052  1C5B  2C5D               	goto	u576_21
  9053  1C5C  2C5F               	goto	u576_20
  9054  1C5D                     u576_21:
  9055  1C5D  3001               	movlw	1
  9056  1C5E  2C60               	goto	u576_22
  9057  1C5F                     u576_20:
  9058  1C5F  3000               	movlw	0
  9059  1C60                     u576_22:
  9060  1C60  0570               	andwf	??_ISR,w
  9061  1C61  3800               	iorlw	0
  9062  1C62  1903               	skipnz
  9063  1C63  2C65               	goto	u577_21
  9064  1C64  2C66               	goto	u577_20
  9065  1C65                     u577_21:
  9066  1C65  2C7B               	goto	i1l67
  9067  1C66                     u577_20:
  9068  1C66                     i1l3390:
  9069                           
  9070                           ;Master_main.c: 103:         adcvar = ADRESH;
  9071  1C66  081E               	movf	30,w	;volatile
  9072  1C67  00F0               	movwf	??_ISR
  9073  1C68  0870               	movf	??_ISR,w
  9074  1C69  1683               	bsf	3,5	;RP0=1, select bank1
  9075  1C6A  1303               	bcf	3,6	;RP1=0, select bank1
  9076  1C6B  00E0               	movwf	_adcvar^(0+128)
  9077  1C6C                     i1l3392:
  9078                           
  9079                           ;Master_main.c: 104:         ADCON0bits.CHS = 1;
  9080  1C6C  1283               	bcf	3,5	;RP0=0, select bank0
  9081  1C6D  1303               	bcf	3,6	;RP1=0, select bank0
  9082  1C6E  081F               	movf	31,w	;volatile
  9083  1C6F  39C3               	andlw	-61
  9084  1C70  3804               	iorlw	4
  9085  1C71  009F               	movwf	31	;volatile
  9086  1C72                     i1l3394:
  9087                           
  9088                           ;Master_main.c: 105:         _delay((unsigned long)((25)*(8000000/4000000.0)));
  9089  1C72  3010               	movlw	16
  9090  1C73  00F0               	movwf	??_ISR
  9091  1C74                     u715_27:
  9092  1C74  0BF0               	decfsz	??_ISR,f
  9093  1C75  2C74               	goto	u715_27
  9094  1C76  0000               	nop
  9095  1C77                     i1l3396:
  9096                           
  9097                           ;Master_main.c: 106:         ADCON0bits.GO_DONE = 1;
  9098  1C77  1283               	bcf	3,5	;RP0=0, select bank0
  9099  1C78  1303               	bcf	3,6	;RP1=0, select bank0
  9100  1C79  149F               	bsf	31,1	;volatile
  9101  1C7A                     i1l3398:
  9102                           
  9103                           ;Master_main.c: 107:         PIR1bits.ADIF = 0;
  9104  1C7A  130C               	bcf	12,6	;volatile
  9105  1C7B                     i1l67:	
  9106                           ;Master_main.c: 108:     }
  9107                           
  9108                           
  9109                           ;Master_main.c: 110:     if (ADCON0bits.GO == 0 & ADCON0bits.CHS == 1){
  9110  1C7B  1C9F               	btfss	31,1	;volatile
  9111  1C7C  2C7E               	goto	u578_21
  9112  1C7D  2C80               	goto	u578_20
  9113  1C7E                     u578_21:
  9114  1C7E  3001               	movlw	1
  9115  1C7F  2C81               	goto	u578_22
  9116  1C80                     u578_20:
  9117  1C80  3000               	movlw	0
  9118  1C81                     u578_22:
  9119  1C81  00F0               	movwf	??_ISR
  9120  1C82  0C1F               	rrf	31,w	;volatile
  9121  1C83  00F1               	movwf	??_ISR+1
  9122  1C84  0C71               	rrf	??_ISR+1,w
  9123  1C85  390F               	andlw	15
  9124  1C86  3A01               	xorlw	1
  9125  1C87  1903               	skipnz
  9126  1C88  2C8A               	goto	u579_21
  9127  1C89  2C8C               	goto	u579_20
  9128  1C8A                     u579_21:
  9129  1C8A  3001               	movlw	1
  9130  1C8B  2C8D               	goto	u579_22
  9131  1C8C                     u579_20:
  9132  1C8C  3000               	movlw	0
  9133  1C8D                     u579_22:
  9134  1C8D  0570               	andwf	??_ISR,w
  9135  1C8E  3800               	iorlw	0
  9136  1C8F  1903               	skipnz
  9137  1C90  2C92               	goto	u580_21
  9138  1C91  2C93               	goto	u580_20
  9139  1C92                     u580_21:
  9140  1C92  2CA2               	goto	i1l69
  9141  1C93                     u580_20:
  9142  1C93                     i1l3400:
  9143                           
  9144                           ;Master_main.c: 111:         adcvar1 = ADRESH;
  9145  1C93  081E               	movf	30,w	;volatile
  9146  1C94  00F0               	movwf	??_ISR
  9147  1C95  0870               	movf	??_ISR,w
  9148  1C96  00F9               	movwf	_adcvar1
  9149  1C97                     i1l3402:
  9150                           
  9151                           ;Master_main.c: 112:         ADCON0bits.CHS = 0;
  9152  1C97  30C3               	movlw	-61
  9153  1C98  059F               	andwf	31,f	;volatile
  9154  1C99                     i1l3404:
  9155                           
  9156                           ;Master_main.c: 113:         _delay((unsigned long)((25)*(8000000/4000000.0)));
  9157  1C99  3010               	movlw	16
  9158  1C9A  00F0               	movwf	??_ISR
  9159  1C9B                     u716_27:
  9160  1C9B  0BF0               	decfsz	??_ISR,f
  9161  1C9C  2C9B               	goto	u716_27
  9162  1C9D  0000               	nop
  9163  1C9E                     i1l3406:
  9164                           
  9165                           ;Master_main.c: 114:         ADCON0bits.GO_DONE = 1;
  9166  1C9E  1283               	bcf	3,5	;RP0=0, select bank0
  9167  1C9F  1303               	bcf	3,6	;RP1=0, select bank0
  9168  1CA0  149F               	bsf	31,1	;volatile
  9169  1CA1                     i1l3408:
  9170                           
  9171                           ;Master_main.c: 115:         PIR1bits.ADIF = 0;
  9172  1CA1  130C               	bcf	12,6	;volatile
  9173  1CA2                     i1l69:
  9174  1CA2  0873               	movf	??_ISR+3,w
  9175  1CA3  008A               	movwf	10
  9176  1CA4  0E72               	swapf	??_ISR+2,w
  9177  1CA5  0083               	movwf	3
  9178  1CA6  0EFE               	swapf	btemp,f
  9179  1CA7  0E7E               	swapf	btemp,w
  9180  1CA8  0009               	retfie
  9181  1CA9                     __end_of_ISR:
  9182  007E                     btemp	set	126	;btemp
  9183  007E                     wtemp0	set	126
  9184                           
  9185                           	psect	intentry
  9186  0004                     __pintentry:	
  9187                           ;incstack = 0
  9188                           ; Regs used in _ISR: [wreg+status,2+status,0]
  9189                           
  9190  0004                     interrupt_function:
  9191  007E                     saved_w	set	btemp
  9192  0004  00FE               	movwf	btemp
  9193  0005  0E03               	swapf	3,w
  9194  0006  00F2               	movwf	??_ISR+2
  9195  0007  080A               	movf	10,w
  9196  0008  00F3               	movwf	??_ISR+3
  9197  0009  160A  158A  2C2D   	ljmp	_ISR
  9198                           
  9199                           	psect	config
  9200                           
  9201                           ;Config register CONFIG1 @ 0x2007
  9202                           ;	Oscillator Selection bits
  9203                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  9204                           ;	Watchdog Timer Enable bit
  9205                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9206                           ;	Power-up Timer Enable bit
  9207                           ;	PWRTE = OFF, PWRT disabled
  9208                           ;	RE3/MCLR pin function select bit
  9209                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9210                           ;	Code Protection bit
  9211                           ;	CP = OFF, Program memory code protection is disabled
  9212                           ;	Data Code Protection bit
  9213                           ;	CPD = OFF, Data memory code protection is disabled
  9214                           ;	Brown Out Reset Selection bits
  9215                           ;	BOREN = OFF, BOR disabled
  9216                           ;	Internal External Switchover bit
  9217                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9218                           ;	Fail-Safe Clock Monitor Enabled bit
  9219                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9220                           ;	Low Voltage Programming Enable bit
  9221                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9222                           ;	In-Circuit Debugger Mode bit
  9223                           ;	DEBUG = 0x1, unprogrammed default
  9224  2007                     	org	8199
  9225  2007  20D1               	dw	8401
  9226                           
  9227                           ;Config register CONFIG2 @ 0x2008
  9228                           ;	Brown-out Reset Selection bit
  9229                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9230                           ;	Flash Program Memory Self Write Enable bits
  9231                           ;	WRT = OFF, Write protection off
  9232  2008                     	org	8200
  9233  2008  3FFF               	dw	16383
  9234                           
  9235                           	psect	text1_split_1
  9236  0027                     u6610:
  9237  0027                     l3790:
  9238  0027  1683               	bsf	3,5	;RP0=1, select bank1
  9239  0028  1303               	bcf	3,6	;RP1=0, select bank1
  9240  0029  084E               	movf	(sprintf@fval+3)^(0+128),w
  9241  002A  1283               	bcf	3,5	;RP0=0, select bank0
  9242  002B  1303               	bcf	3,6	;RP1=0, select bank0
  9243  002C  00A3               	movwf	___fleq@ff1+3
  9244  002D  1683               	bsf	3,5	;RP0=1, select bank1
  9245  002E  1303               	bcf	3,6	;RP1=0, select bank1
  9246  002F  084D               	movf	(sprintf@fval+2)^(0+128),w
  9247  0030  1283               	bcf	3,5	;RP0=0, select bank0
  9248  0031  1303               	bcf	3,6	;RP1=0, select bank0
  9249  0032  00A2               	movwf	___fleq@ff1+2
  9250  0033  1683               	bsf	3,5	;RP0=1, select bank1
  9251  0034  1303               	bcf	3,6	;RP1=0, select bank1
  9252  0035  084C               	movf	(sprintf@fval+1)^(0+128),w
  9253  0036  1283               	bcf	3,5	;RP0=0, select bank0
  9254  0037  1303               	bcf	3,6	;RP1=0, select bank0
  9255  0038  00A1               	movwf	___fleq@ff1+1
  9256  0039  1683               	bsf	3,5	;RP0=1, select bank1
  9257  003A  1303               	bcf	3,6	;RP1=0, select bank1
  9258  003B  084B               	movf	sprintf@fval^(0+128),w
  9259  003C  1283               	bcf	3,5	;RP0=0, select bank0
  9260  003D  1303               	bcf	3,6	;RP1=0, select bank0
  9261  003E  00A0               	movwf	___fleq@ff1
  9262  003F  3000               	movlw	0
  9263  0040  00A7               	movwf	___fleq@ff2+3
  9264  0041  3000               	movlw	0
  9265  0042  00A6               	movwf	___fleq@ff2+2
  9266  0043  3000               	movlw	0
  9267  0044  00A5               	movwf	___fleq@ff2+1
  9268  0045  3000               	movlw	0
  9269  0046  00A4               	movwf	___fleq@ff2
  9270  0047  160A  158A  22D1  120A  118A  	fcall	___fleq
  9271  004C  1803               	btfsc	3,0
  9272  004D  284F               	goto	u6621
  9273  004E  2850               	goto	u6620
  9274  004F                     u6621:
  9275  004F  2932               	goto	l3810
  9276  0050                     u6620:
  9277  0050                     l3792:
  9278  0050  1683               	bsf	3,5	;RP0=1, select bank1
  9279  0051  1303               	bcf	3,6	;RP1=0, select bank1
  9280  0052  084E               	movf	(sprintf@fval+3)^(0+128),w
  9281  0053  1283               	bcf	3,5	;RP0=0, select bank0
  9282  0054  1303               	bcf	3,6	;RP1=0, select bank0
  9283  0055  00DC               	movwf	___fltol@f1+3
  9284  0056  1683               	bsf	3,5	;RP0=1, select bank1
  9285  0057  1303               	bcf	3,6	;RP1=0, select bank1
  9286  0058  084D               	movf	(sprintf@fval+2)^(0+128),w
  9287  0059  1283               	bcf	3,5	;RP0=0, select bank0
  9288  005A  1303               	bcf	3,6	;RP1=0, select bank0
  9289  005B  00DB               	movwf	___fltol@f1+2
  9290  005C  1683               	bsf	3,5	;RP0=1, select bank1
  9291  005D  1303               	bcf	3,6	;RP1=0, select bank1
  9292  005E  084C               	movf	(sprintf@fval+1)^(0+128),w
  9293  005F  1283               	bcf	3,5	;RP0=0, select bank0
  9294  0060  1303               	bcf	3,6	;RP1=0, select bank0
  9295  0061  00DA               	movwf	___fltol@f1+1
  9296  0062  1683               	bsf	3,5	;RP0=1, select bank1
  9297  0063  1303               	bcf	3,6	;RP1=0, select bank1
  9298  0064  084B               	movf	sprintf@fval^(0+128),w
  9299  0065  1283               	bcf	3,5	;RP0=0, select bank0
  9300  0066  1303               	bcf	3,6	;RP1=0, select bank0
  9301  0067  00D9               	movwf	___fltol@f1
  9302  0068  160A  158A  24A9  120A  118A  	fcall	___fltol
  9303  006D  1283               	bcf	3,5	;RP0=0, select bank0
  9304  006E  1303               	bcf	3,6	;RP1=0, select bank0
  9305  006F  085C               	movf	?___fltol+3,w
  9306  0070  045B               	iorwf	?___fltol+2,w
  9307  0071  045A               	iorwf	?___fltol+1,w
  9308  0072  0459               	iorwf	?___fltol,w
  9309  0073  1D03               	skipz
  9310  0074  2876               	goto	u6631
  9311  0075  2877               	goto	u6630
  9312  0076                     u6631:
  9313  0076  2932               	goto	l3810
  9314  0077                     u6630:
  9315  0077                     l3794:
  9316  0077  1683               	bsf	3,5	;RP0=1, select bank1
  9317  0078  1303               	bcf	3,6	;RP1=0, select bank1
  9318  0079  084A               	movf	(sprintf@eexp+1)^(0+128),w
  9319  007A  3A80               	xorlw	128
  9320  007B  00FF               	movwf	btemp+1
  9321  007C  3080               	movlw	128
  9322  007D  027F               	subwf	btemp+1,w
  9323  007E  1D03               	skipz
  9324  007F  2882               	goto	u6645
  9325  0080  3002               	movlw	2
  9326  0081  0249               	subwf	sprintf@eexp^(0+128),w
  9327  0082                     u6645:
  9328  0082  1C03               	skipc
  9329  0083  2885               	goto	u6641
  9330  0084  2886               	goto	u6640
  9331  0085                     u6641:
  9332  0085  2932               	goto	l3810
  9333  0086                     u6640:
  9334  0086                     l3796:
  9335                           
  9336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9337  0086  1683               	bsf	3,5	;RP0=1, select bank1
  9338  0087  1303               	bcf	3,6	;RP1=0, select bank1
  9339  0088  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  9340  0089  1283               	bcf	3,5	;RP0=0, select bank0
  9341  008A  1303               	bcf	3,6	;RP1=0, select bank0
  9342  008B  00A3               	movwf	___flge@ff1+3
  9343  008C  1683               	bsf	3,5	;RP0=1, select bank1
  9344  008D  1303               	bcf	3,6	;RP1=0, select bank1
  9345  008E  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  9346  008F  1283               	bcf	3,5	;RP0=0, select bank0
  9347  0090  1303               	bcf	3,6	;RP1=0, select bank0
  9348  0091  00A2               	movwf	___flge@ff1+2
  9349  0092  1683               	bsf	3,5	;RP0=1, select bank1
  9350  0093  1303               	bcf	3,6	;RP1=0, select bank1
  9351  0094  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  9352  0095  1283               	bcf	3,5	;RP0=0, select bank0
  9353  0096  1303               	bcf	3,6	;RP1=0, select bank0
  9354  0097  00A1               	movwf	___flge@ff1+1
  9355  0098  1683               	bsf	3,5	;RP0=1, select bank1
  9356  0099  1303               	bcf	3,6	;RP1=0, select bank1
  9357  009A  0841               	movf	sprintf@tmpval^(0+128),w
  9358  009B  1283               	bcf	3,5	;RP0=0, select bank0
  9359  009C  1303               	bcf	3,6	;RP1=0, select bank0
  9360  009D  00A0               	movwf	___flge@ff1
  9361  009E  3040               	movlw	64
  9362  009F  00A7               	movwf	___flge@ff2+3
  9363  00A0  3089               	movlw	137
  9364  00A1  00A6               	movwf	___flge@ff2+2
  9365  00A2  3070               	movlw	112
  9366  00A3  00A5               	movwf	___flge@ff2+1
  9367  00A4  305F               	movlw	95
  9368  00A5  00A4               	movwf	___flge@ff2
  9369  00A6  160A  158A  2525  120A  118A  	fcall	___flge
  9370  00AB  1803               	btfsc	3,0
  9371  00AC  28AE               	goto	u6651
  9372  00AD  28AF               	goto	u6650
  9373  00AE                     u6651:
  9374  00AE  28B8               	goto	l3800
  9375  00AF                     u6650:
  9376  00AF                     l3798:
  9377                           
  9378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9379  00AF  30F7               	movlw	247
  9380  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  9381  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  9382  00B2  07C9               	addwf	sprintf@eexp^(0+128),f
  9383  00B3  1803               	skipnc
  9384  00B4  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  9385  00B5  30FF               	movlw	255
  9386  00B6  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  9387                           
  9388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9389  00B7  28C0               	goto	l3802
  9390  00B8                     l3800:
  9391                           
  9392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9393  00B8  30F8               	movlw	248
  9394  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  9395  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  9396  00BB  07C9               	addwf	sprintf@eexp^(0+128),f
  9397  00BC  1803               	skipnc
  9398  00BD  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
  9399  00BE  30FF               	movlw	255
  9400  00BF  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
  9401  00C0                     l3802:
  9402                           
  9403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9404  00C0  0849               	movf	sprintf@eexp^(0+128),w
  9405  00C1  120A  158A  249D  120A  118A  	fcall	_scale
  9406  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  9407  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  9408  00C8  0849               	movf	?_scale+3,w
  9409  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  9410  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  9411  00CB  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  9412  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  9413  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  9414  00CE  0848               	movf	?_scale+2,w
  9415  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  9416  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  9417  00D1  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  9418  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  9419  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  9420  00D4  0847               	movf	?_scale+1,w
  9421  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  9422  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  9423  00D7  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  9424  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  9425  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  9426  00DA  0846               	movf	?_scale,w
  9427  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  9428  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  9429  00DD  00C1               	movwf	sprintf@tmpval^(0+128)
  9430  00DE                     l3804:
  9431  00DE  084E               	movf	(sprintf@fval+3)^(0+128),w
  9432  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  9433  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  9434  00E1  00A3               	movwf	__div_to_l_@f1+3
  9435  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  9436  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  9437  00E4  084D               	movf	(sprintf@fval+2)^(0+128),w
  9438  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  9439  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  9440  00E7  00A2               	movwf	__div_to_l_@f1+2
  9441  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  9442  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  9443  00EA  084C               	movf	(sprintf@fval+1)^(0+128),w
  9444  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  9445  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  9446  00ED  00A1               	movwf	__div_to_l_@f1+1
  9447  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  9448  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  9449  00F0  084B               	movf	sprintf@fval^(0+128),w
  9450  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  9451  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  9452  00F3  00A0               	movwf	__div_to_l_@f1
  9453  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  9454  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  9455  00F6  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  9456  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  9457  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  9458  00F9  00A7               	movwf	__div_to_l_@f2+3
  9459  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  9460  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  9461  00FC  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  9462  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  9463  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  9464  00FF  00A6               	movwf	__div_to_l_@f2+2
  9465  0100  1683               	bsf	3,5	;RP0=1, select bank1
  9466  0101  1303               	bcf	3,6	;RP1=0, select bank1
  9467  0102  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  9468  0103  1283               	bcf	3,5	;RP0=0, select bank0
  9469  0104  1303               	bcf	3,6	;RP1=0, select bank0
  9470  0105  00A5               	movwf	__div_to_l_@f2+1
  9471  0106  1683               	bsf	3,5	;RP0=1, select bank1
  9472  0107  1303               	bcf	3,6	;RP1=0, select bank1
  9473  0108  0841               	movf	sprintf@tmpval^(0+128),w
  9474  0109  1283               	bcf	3,5	;RP0=0, select bank0
  9475  010A  1303               	bcf	3,6	;RP1=0, select bank0
  9476  010B  00A4               	movwf	__div_to_l_@f2
  9477  010C  160A  158A  2742  120A  118A  	fcall	__div_to_l_
  9478  0111  1283               	bcf	3,5	;RP0=0, select bank0
  9479  0112  1303               	bcf	3,6	;RP1=0, select bank0
  9480  0113  0823               	movf	?__div_to_l_+3,w
  9481  0114  1683               	bsf	3,5	;RP0=1, select bank1
  9482  0115  1303               	bcf	3,6	;RP1=0, select bank1
  9483  0116  00C8               	movwf	(sprintf@val+3)^(0+128)
  9484  0117  1283               	bcf	3,5	;RP0=0, select bank0
  9485  0118  1303               	bcf	3,6	;RP1=0, select bank0
  9486  0119  0822               	movf	?__div_to_l_+2,w
  9487  011A  1683               	bsf	3,5	;RP0=1, select bank1
  9488  011B  1303               	bcf	3,6	;RP1=0, select bank1
  9489  011C  00C7               	movwf	(sprintf@val+2)^(0+128)
  9490  011D  1283               	bcf	3,5	;RP0=0, select bank0
  9491  011E  1303               	bcf	3,6	;RP1=0, select bank0
  9492  011F  0821               	movf	?__div_to_l_+1,w
  9493  0120  1683               	bsf	3,5	;RP0=1, select bank1
  9494  0121  1303               	bcf	3,6	;RP1=0, select bank1
  9495  0122  00C6               	movwf	(sprintf@val+1)^(0+128)
  9496  0123  1283               	bcf	3,5	;RP0=0, select bank0
  9497  0124  1303               	bcf	3,6	;RP1=0, select bank0
  9498  0125  0820               	movf	?__div_to_l_,w
  9499  0126  1683               	bsf	3,5	;RP0=1, select bank1
  9500  0127  1303               	bcf	3,6	;RP1=0, select bank1
  9501  0128  00C5               	movwf	sprintf@val^(0+128)
  9502  0129                     l3808:
  9503                           
  9504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9505  0129  3000               	movlw	0
  9506  012A  00CE               	movwf	(sprintf@fval+3)^(0+128)
  9507  012B  3000               	movlw	0
  9508  012C  00CD               	movwf	(sprintf@fval+2)^(0+128)
  9509  012D  3000               	movlw	0
  9510  012E  00CC               	movwf	(sprintf@fval+1)^(0+128)
  9511  012F  3000               	movlw	0
  9512  0130  00CB               	movwf	sprintf@fval^(0+128)
  9513                           
  9514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9515  0131  2998               	goto	l3816
  9516  0132                     l3810:
  9517                           
  9518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9519  0132  1683               	bsf	3,5	;RP0=1, select bank1
  9520  0133  1303               	bcf	3,6	;RP1=0, select bank1
  9521  0134  084E               	movf	(sprintf@fval+3)^(0+128),w
  9522  0135  1283               	bcf	3,5	;RP0=0, select bank0
  9523  0136  1303               	bcf	3,6	;RP1=0, select bank0
  9524  0137  00DC               	movwf	___fltol@f1+3
  9525  0138  1683               	bsf	3,5	;RP0=1, select bank1
  9526  0139  1303               	bcf	3,6	;RP1=0, select bank1
  9527  013A  084D               	movf	(sprintf@fval+2)^(0+128),w
  9528  013B  1283               	bcf	3,5	;RP0=0, select bank0
  9529  013C  1303               	bcf	3,6	;RP1=0, select bank0
  9530  013D  00DB               	movwf	___fltol@f1+2
  9531  013E  1683               	bsf	3,5	;RP0=1, select bank1
  9532  013F  1303               	bcf	3,6	;RP1=0, select bank1
  9533  0140  084C               	movf	(sprintf@fval+1)^(0+128),w
  9534  0141  1283               	bcf	3,5	;RP0=0, select bank0
  9535  0142  1303               	bcf	3,6	;RP1=0, select bank0
  9536  0143  00DA               	movwf	___fltol@f1+1
  9537  0144  1683               	bsf	3,5	;RP0=1, select bank1
  9538  0145  1303               	bcf	3,6	;RP1=0, select bank1
  9539  0146  084B               	movf	sprintf@fval^(0+128),w
  9540  0147  1283               	bcf	3,5	;RP0=0, select bank0
  9541  0148  1303               	bcf	3,6	;RP1=0, select bank0
  9542  0149  00D9               	movwf	___fltol@f1
  9543  014A  160A  158A  24A9  120A  118A  	fcall	___fltol
  9544  014F  1283               	bcf	3,5	;RP0=0, select bank0
  9545  0150  1303               	bcf	3,6	;RP1=0, select bank0
  9546  0151  085C               	movf	?___fltol+3,w
  9547  0152  1683               	bsf	3,5	;RP0=1, select bank1
  9548  0153  1303               	bcf	3,6	;RP1=0, select bank1
  9549  0154  00C8               	movwf	(sprintf@val+3)^(0+128)
  9550  0155  1283               	bcf	3,5	;RP0=0, select bank0
  9551  0156  1303               	bcf	3,6	;RP1=0, select bank0
  9552  0157  085B               	movf	?___fltol+2,w
  9553  0158  1683               	bsf	3,5	;RP0=1, select bank1
  9554  0159  1303               	bcf	3,6	;RP1=0, select bank1
  9555  015A  00C7               	movwf	(sprintf@val+2)^(0+128)
  9556  015B  1283               	bcf	3,5	;RP0=0, select bank0
  9557  015C  1303               	bcf	3,6	;RP1=0, select bank0
  9558  015D  085A               	movf	?___fltol+1,w
  9559  015E  1683               	bsf	3,5	;RP0=1, select bank1
  9560  015F  1303               	bcf	3,6	;RP1=0, select bank1
  9561  0160  00C6               	movwf	(sprintf@val+1)^(0+128)
  9562  0161  1283               	bcf	3,5	;RP0=0, select bank0
  9563  0162  1303               	bcf	3,6	;RP1=0, select bank0
  9564  0163  0859               	movf	?___fltol,w
  9565  0164  1683               	bsf	3,5	;RP0=1, select bank1
  9566  0165  1303               	bcf	3,6	;RP1=0, select bank1
  9567  0166  00C5               	movwf	sprintf@val^(0+128)
  9568  0167                     l3812:
  9569                           
  9570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9571  0167  0848               	movf	(sprintf@val+3)^(0+128),w
  9572  0168  00F7               	movwf	___xxtofl@val+3
  9573  0169  0847               	movf	(sprintf@val+2)^(0+128),w
  9574  016A  00F6               	movwf	___xxtofl@val+2
  9575  016B  0846               	movf	(sprintf@val+1)^(0+128),w
  9576  016C  00F5               	movwf	___xxtofl@val+1
  9577  016D  0845               	movf	sprintf@val^(0+128),w
  9578  016E  00F4               	movwf	___xxtofl@val
  9579  016F  3000               	movlw	0
  9580  0170  160A  158A  25C9  120A  118A  	fcall	___xxtofl
  9581  0175  0877               	movf	?___xxtofl+3,w
  9582  0176  1683               	bsf	3,5	;RP0=1, select bank1
  9583  0177  1303               	bcf	3,6	;RP1=0, select bank1
  9584  0178  00A3               	movwf	(___flsub@a+3)^(0+128)
  9585  0179  0876               	movf	?___xxtofl+2,w
  9586  017A  00A2               	movwf	(___flsub@a+2)^(0+128)
  9587  017B  0875               	movf	?___xxtofl+1,w
  9588  017C  00A1               	movwf	(___flsub@a+1)^(0+128)
  9589  017D  0874               	movf	?___xxtofl,w
  9590  017E  00A0               	movwf	___flsub@a^(0+128)
  9591  017F  084E               	movf	(sprintf@fval+3)^(0+128),w
  9592  0180  00A7               	movwf	(___flsub@b+3)^(0+128)
  9593  0181  084D               	movf	(sprintf@fval+2)^(0+128),w
  9594  0182  00A6               	movwf	(___flsub@b+2)^(0+128)
  9595  0183  084C               	movf	(sprintf@fval+1)^(0+128),w
  9596  0184  00A5               	movwf	(___flsub@b+1)^(0+128)
  9597  0185  084B               	movf	sprintf@fval^(0+128),w
  9598  0186  00A4               	movwf	___flsub@b^(0+128)
  9599  0187  160A  158A  2321  120A  118A  	fcall	___flsub
  9600  018C  1683               	bsf	3,5	;RP0=1, select bank1
  9601  018D  1303               	bcf	3,6	;RP1=0, select bank1
  9602  018E  0823               	movf	(?___flsub+3)^(0+128),w
  9603  018F  00CE               	movwf	(sprintf@fval+3)^(0+128)
  9604  0190  0822               	movf	(?___flsub+2)^(0+128),w
  9605  0191  00CD               	movwf	(sprintf@fval+2)^(0+128)
  9606  0192  0821               	movf	(?___flsub+1)^(0+128),w
  9607  0193  00CC               	movwf	(sprintf@fval+1)^(0+128)
  9608  0194  0820               	movf	?___flsub^(0+128),w
  9609  0195  00CB               	movwf	sprintf@fval^(0+128)
  9610  0196                     l3814:
  9611                           
  9612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9613  0196  01C9               	clrf	sprintf@eexp^(0+128)
  9614  0197  01CA               	clrf	(sprintf@eexp+1)^(0+128)
  9615  0198                     l3816:
  9616                           
  9617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9618  0198  01D2               	clrf	sprintf@c^(0+128)
  9619  0199  0AD2               	incf	sprintf@c^(0+128),f
  9620  019A                     l3822:
  9621                           
  9622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9623  019A  0852               	movf	sprintf@c^(0+128),w
  9624  019B  00B3               	movwf	??_sprintf^(0+128)
  9625  019C  3001               	movlw	1
  9626  019D                     u6665:
  9627  019D  1003               	clrc
  9628  019E  0DB3               	rlf	??_sprintf^(0+128),f
  9629  019F  3EFF               	addlw	-1
  9630  01A0  1D03               	skipz
  9631  01A1  299D               	goto	u6665
  9632  01A2  1003               	clrc
  9633  01A3  0D33               	rlf	??_sprintf^(0+128),w
  9634  01A4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9635  01A5  0084               	movwf	4
  9636  01A6  120A  118A  270A  120A  118A  	fcall	stringdir
  9637  01AB  00B4               	movwf	(??_sprintf+1)^(0+128)
  9638  01AC  120A  118A  270A  120A  118A  	fcall	stringdir
  9639  01B1  00B5               	movwf	((??_sprintf+1)^(0+128)+1)
  9640  01B2  120A  118A  270A  120A  118A  	fcall	stringdir
  9641  01B7  00B6               	movwf	((??_sprintf+1)^(0+128)+2)
  9642  01B8  120A  118A  270A  120A  118A  	fcall	stringdir
  9643  01BD  00B7               	movwf	((??_sprintf+1)^(0+128)+3)
  9644  01BE  0837               	movf	(??_sprintf+4)^(0+128),w
  9645  01BF  0248               	subwf	(sprintf@val+3)^(0+128),w
  9646  01C0  1D03               	skipz
  9647  01C1  29CC               	goto	u6675
  9648  01C2  0836               	movf	(??_sprintf+3)^(0+128),w
  9649  01C3  0247               	subwf	(sprintf@val+2)^(0+128),w
  9650  01C4  1D03               	skipz
  9651  01C5  29CC               	goto	u6675
  9652  01C6  0835               	movf	(??_sprintf+2)^(0+128),w
  9653  01C7  0246               	subwf	(sprintf@val+1)^(0+128),w
  9654  01C8  1D03               	skipz
  9655  01C9  29CC               	goto	u6675
  9656  01CA  0834               	movf	(??_sprintf+1)^(0+128),w
  9657  01CB  0245               	subwf	sprintf@val^(0+128),w
  9658  01CC                     u6675:
  9659  01CC  1803               	skipnc
  9660  01CD  29CF               	goto	u6671
  9661  01CE  29D0               	goto	u6670
  9662  01CF                     u6671:
  9663  01CF  29D1               	goto	l3826
  9664  01D0                     u6670:
  9665  01D0  29DB               	goto	l3828
  9666  01D1                     l3826:
  9667  01D1  3001               	movlw	1
  9668  01D2  00B3               	movwf	??_sprintf^(0+128)
  9669  01D3  0833               	movf	??_sprintf^(0+128),w
  9670  01D4  07D2               	addwf	sprintf@c^(0+128),f
  9671  01D5  300A               	movlw	10
  9672  01D6  0652               	xorwf	sprintf@c^(0+128),w
  9673  01D7  1D03               	btfss	3,2
  9674  01D8  29DA               	goto	u6681
  9675  01D9  29DB               	goto	u6680
  9676  01DA                     u6681:
  9677  01DA  299A               	goto	l3822
  9678  01DB                     u6680:
  9679  01DB                     l3828:
  9680                           
  9681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9682  01DB  0852               	movf	sprintf@c^(0+128),w
  9683  01DC  0750               	addwf	sprintf@prec^(0+128),w
  9684  01DD  00B3               	movwf	??_sprintf^(0+128)
  9685  01DE  0851               	movf	(sprintf@prec+1)^(0+128),w
  9686  01DF  1803               	skipnc
  9687  01E0  0A51               	incf	(sprintf@prec+1)^(0+128),w
  9688  01E1  00B4               	movwf	(??_sprintf^(0+128)+1)
  9689  01E2  0849               	movf	sprintf@eexp^(0+128),w
  9690  01E3  0733               	addwf	??_sprintf^(0+128),w
  9691  01E4  00B5               	movwf	(??_sprintf+2)^(0+128)
  9692  01E5  084A               	movf	(sprintf@eexp+1)^(0+128),w
  9693  01E6  1803               	skipnc
  9694  01E7  0A4A               	incf	(sprintf@eexp+1)^(0+128),w
  9695  01E8  0734               	addwf	(??_sprintf+1)^(0+128),w
  9696  01E9  00B6               	movwf	(??_sprintf+3)^(0+128)
  9697  01EA  0835               	movf	(??_sprintf+2)^(0+128),w
  9698  01EB  02BF               	subwf	sprintf@width^(0+128),f
  9699  01EC  0836               	movf	(??_sprintf+3)^(0+128),w
  9700  01ED  1C03               	skipc
  9701  01EE  03C0               	decf	(sprintf@width+1)^(0+128),f
  9702  01EF  02C0               	subwf	(sprintf@width+1)^(0+128),f
  9703                           
  9704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9705  01F0  0850               	movf	sprintf@prec^(0+128),w
  9706  01F1  0451               	iorwf	(sprintf@prec+1)^(0+128),w
  9707  01F2  1903               	btfsc	3,2
  9708  01F3  29F5               	goto	u6691
  9709  01F4  29F6               	goto	u6690
  9710  01F5                     u6691:
  9711  01F5  29FC               	goto	l3832
  9712  01F6                     u6690:
  9713  01F6                     l3830:
  9714                           
  9715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9716  01F6  30FF               	movlw	255
  9717  01F7  07BF               	addwf	sprintf@width^(0+128),f
  9718  01F8  1803               	skipnc
  9719  01F9  0AC0               	incf	(sprintf@width+1)^(0+128),f
  9720  01FA  30FF               	movlw	255
  9721  01FB  07C0               	addwf	(sprintf@width+1)^(0+128),f
  9722  01FC                     l3832:
  9723                           
  9724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9725  01FC  3003               	movlw	3
  9726  01FD  053D               	andwf	sprintf@flag^(0+128),w
  9727  01FE  00B3               	movwf	??_sprintf^(0+128)
  9728  01FF  3000               	movlw	0
  9729  0200  053E               	andwf	(sprintf@flag+1)^(0+128),w
  9730  0201  00B4               	movwf	(??_sprintf+1)^(0+128)
  9731  0202  0833               	movf	??_sprintf^(0+128),w
  9732  0203  0434               	iorwf	(??_sprintf^(0+128)+1),w
  9733  0204  1903               	btfsc	3,2
  9734  0205  2A07               	goto	u6701
  9735  0206  2A08               	goto	u6700
  9736  0207                     u6701:
  9737  0207  2A1D               	goto	l3842
  9738  0208                     u6700:
  9739  0208                     l3834:
  9740                           
  9741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9742  0208  30FF               	movlw	255
  9743  0209  07BF               	addwf	sprintf@width^(0+128),f
  9744  020A  1803               	skipnc
  9745  020B  0AC0               	incf	(sprintf@width+1)^(0+128),f
  9746  020C  30FF               	movlw	255
  9747  020D  07C0               	addwf	(sprintf@width+1)^(0+128),f
  9748  020E  2A1D               	goto	l3842
  9749  020F                     l3836:
  9750                           
  9751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9752  020F  3020               	movlw	32
  9753  0210  1683               	bsf	3,5	;RP0=1, select bank1
  9754  0211  1303               	bcf	3,6	;RP1=0, select bank1
  9755  0212  00B3               	movwf	??_sprintf^(0+128)
  9756  0213  084F               	movf	sprintf@sp^(0+128),w
  9757  0214  0084               	movwf	4
  9758  0215  0833               	movf	??_sprintf^(0+128),w
  9759  0216  1783               	bsf	3,7	;select IRP bank2
  9760  0217  0080               	movwf	0
  9761  0218                     l3838:
  9762  0218  3001               	movlw	1
  9763  0219  00B3               	movwf	??_sprintf^(0+128)
  9764  021A  0833               	movf	??_sprintf^(0+128),w
  9765  021B  07CF               	addwf	sprintf@sp^(0+128),f
  9766  021C  2A08               	goto	l3834
  9767  021D                     l3842:
  9768                           
  9769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9770  021D  0840               	movf	(sprintf@width+1)^(0+128),w
  9771  021E  3A80               	xorlw	128
  9772  021F  00FF               	movwf	btemp+1
  9773  0220  3080               	movlw	128
  9774  0221  027F               	subwf	btemp+1,w
  9775  0222  1D03               	skipz
  9776  0223  2A26               	goto	u6715
  9777  0224  3001               	movlw	1
  9778  0225  023F               	subwf	sprintf@width^(0+128),w
  9779  0226                     u6715:
  9780  0226  1803               	skipnc
  9781  0227  2A29               	goto	u6711
  9782  0228  2A2A               	goto	u6710
  9783  0229                     u6711:
  9784  0229  2A0F               	goto	l3836
  9785  022A                     u6710:
  9786  022A                     l3844:
  9787                           
  9788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9789  022A  3003               	movlw	3
  9790  022B  1683               	bsf	3,5	;RP0=1, select bank1
  9791  022C  1303               	bcf	3,6	;RP1=0, select bank1
  9792  022D  053D               	andwf	sprintf@flag^(0+128),w
  9793  022E  00B3               	movwf	??_sprintf^(0+128)
  9794  022F  3000               	movlw	0
  9795  0230  053E               	andwf	(sprintf@flag+1)^(0+128),w
  9796  0231  00B4               	movwf	(??_sprintf+1)^(0+128)
  9797  0232  0833               	movf	??_sprintf^(0+128),w
  9798  0233  0434               	iorwf	(??_sprintf^(0+128)+1),w
  9799  0234  1903               	btfsc	3,2
  9800  0235  2A37               	goto	u6721
  9801  0236  2A38               	goto	u6720
  9802  0237                     u6721:
  9803  0237  2AEA               	goto	l280
  9804  0238                     u6720:
  9805  0238                     l3846:
  9806                           
  9807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9808  0238  302D               	movlw	45
  9809  0239  00B3               	movwf	??_sprintf^(0+128)
  9810  023A  084F               	movf	sprintf@sp^(0+128),w
  9811  023B  0084               	movwf	4
  9812  023C  0833               	movf	??_sprintf^(0+128),w
  9813  023D  1783               	bsf	3,7	;select IRP bank2
  9814  023E  0080               	movwf	0
  9815  023F                     l3848:
  9816  023F  3001               	movlw	1
  9817  0240  00B3               	movwf	??_sprintf^(0+128)
  9818  0241  0833               	movf	??_sprintf^(0+128),w
  9819  0242  07CF               	addwf	sprintf@sp^(0+128),f
  9820  0243  2AEA               	goto	l280
  9821  0244                     l3850:
  9822                           
  9823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9824  0244  0852               	movf	sprintf@c^(0+128),w
  9825  0245  00B3               	movwf	??_sprintf^(0+128)
  9826  0246  3001               	movlw	1
  9827  0247                     u6735:
  9828  0247  1003               	clrc
  9829  0248  0DB3               	rlf	??_sprintf^(0+128),f
  9830  0249  3EFF               	addlw	-1
  9831  024A  1D03               	skipz
  9832  024B  2A47               	goto	u6735
  9833  024C  1003               	clrc
  9834  024D  0D33               	rlf	??_sprintf^(0+128),w
  9835  024E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9836  024F  0084               	movwf	4
  9837  0250  120A  118A  270A  120A  118A  	fcall	stringdir
  9838  0255  1283               	bcf	3,5	;RP0=0, select bank0
  9839  0256  1303               	bcf	3,6	;RP1=0, select bank0
  9840  0257  00A0               	movwf	___lldiv@divisor
  9841  0258  120A  118A  270A  120A  118A  	fcall	stringdir
  9842  025D  00A1               	movwf	___lldiv@divisor+1
  9843  025E  120A  118A  270A  120A  118A  	fcall	stringdir
  9844  0263  00A2               	movwf	___lldiv@divisor+2
  9845  0264  120A  118A  270A  120A  118A  	fcall	stringdir
  9846  0269  00A3               	movwf	___lldiv@divisor+3
  9847  026A  1683               	bsf	3,5	;RP0=1, select bank1
  9848  026B  1303               	bcf	3,6	;RP1=0, select bank1
  9849  026C  0848               	movf	(sprintf@val+3)^(0+128),w
  9850  026D  1283               	bcf	3,5	;RP0=0, select bank0
  9851  026E  1303               	bcf	3,6	;RP1=0, select bank0
  9852  026F  00A7               	movwf	___lldiv@dividend+3
  9853  0270  1683               	bsf	3,5	;RP0=1, select bank1
  9854  0271  1303               	bcf	3,6	;RP1=0, select bank1
  9855  0272  0847               	movf	(sprintf@val+2)^(0+128),w
  9856  0273  1283               	bcf	3,5	;RP0=0, select bank0
  9857  0274  1303               	bcf	3,6	;RP1=0, select bank0
  9858  0275  00A6               	movwf	___lldiv@dividend+2
  9859  0276  1683               	bsf	3,5	;RP0=1, select bank1
  9860  0277  1303               	bcf	3,6	;RP1=0, select bank1
  9861  0278  0846               	movf	(sprintf@val+1)^(0+128),w
  9862  0279  1283               	bcf	3,5	;RP0=0, select bank0
  9863  027A  1303               	bcf	3,6	;RP1=0, select bank0
  9864  027B  00A5               	movwf	___lldiv@dividend+1
  9865  027C  1683               	bsf	3,5	;RP0=1, select bank1
  9866  027D  1303               	bcf	3,6	;RP1=0, select bank1
  9867  027E  0845               	movf	sprintf@val^(0+128),w
  9868  027F  1283               	bcf	3,5	;RP0=0, select bank0
  9869  0280  1303               	bcf	3,6	;RP1=0, select bank0
  9870  0281  00A4               	movwf	___lldiv@dividend
  9871  0282  160A  158A  23C5  120A  118A  	fcall	___lldiv
  9872  0287  1283               	bcf	3,5	;RP0=0, select bank0
  9873  0288  1303               	bcf	3,6	;RP1=0, select bank0
  9874  0289  0823               	movf	?___lldiv+3,w
  9875  028A  1683               	bsf	3,5	;RP0=1, select bank1
  9876  028B  1303               	bcf	3,6	;RP1=0, select bank1
  9877  028C  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  9878  028D  1283               	bcf	3,5	;RP0=0, select bank0
  9879  028E  1303               	bcf	3,6	;RP1=0, select bank0
  9880  028F  0822               	movf	?___lldiv+2,w
  9881  0290  1683               	bsf	3,5	;RP0=1, select bank1
  9882  0291  1303               	bcf	3,6	;RP1=0, select bank1
  9883  0292  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  9884  0293  1283               	bcf	3,5	;RP0=0, select bank0
  9885  0294  1303               	bcf	3,6	;RP1=0, select bank0
  9886  0295  0821               	movf	?___lldiv+1,w
  9887  0296  1683               	bsf	3,5	;RP0=1, select bank1
  9888  0297  1303               	bcf	3,6	;RP1=0, select bank1
  9889  0298  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  9890  0299  1283               	bcf	3,5	;RP0=0, select bank0
  9891  029A  1303               	bcf	3,6	;RP1=0, select bank0
  9892  029B  0820               	movf	?___lldiv,w
  9893  029C  1683               	bsf	3,5	;RP0=1, select bank1
  9894  029D  1303               	bcf	3,6	;RP1=0, select bank1
  9895  029E  00C1               	movwf	sprintf@tmpval^(0+128)
  9896  029F                     l3852:
  9897                           
  9898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9899  029F  3000               	movlw	0
  9900  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  9901  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  9902  02A2  00B0               	movwf	___llmod@divisor+3
  9903  02A3  3000               	movlw	0
  9904  02A4  00AF               	movwf	___llmod@divisor+2
  9905  02A5  3000               	movlw	0
  9906  02A6  00AE               	movwf	___llmod@divisor+1
  9907  02A7  300A               	movlw	10
  9908  02A8  00AD               	movwf	___llmod@divisor
  9909  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  9910  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  9911  02AB  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  9912  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  9913  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  9914  02AE  00B4               	movwf	___llmod@dividend+3
  9915  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  9916  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  9917  02B1  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  9918  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  9919  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  9920  02B4  00B3               	movwf	___llmod@dividend+2
  9921  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  9922  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  9923  02B7  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  9924  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  9925  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  9926  02BA  00B2               	movwf	___llmod@dividend+1
  9927  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  9928  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  9929  02BD  0841               	movf	sprintf@tmpval^(0+128),w
  9930  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  9931  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  9932  02C0  00B1               	movwf	___llmod@dividend
  9933  02C1  120A  118A  26A9  120A  118A  	fcall	___llmod
  9934  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  9935  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  9936  02C8  0830               	movf	?___llmod+3,w
  9937  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  9938  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  9939  02CB  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  9940  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  9941  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  9942  02CE  082F               	movf	?___llmod+2,w
  9943  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  9944  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  9945  02D1  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  9946  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  9947  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  9948  02D4  082E               	movf	?___llmod+1,w
  9949  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  9950  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  9951  02D7  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  9952  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  9953  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  9954  02DA  082D               	movf	?___llmod,w
  9955  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  9956  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  9957  02DD  00C1               	movwf	sprintf@tmpval^(0+128)
  9958  02DE                     l3854:
  9959                           
  9960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9961  02DE  0841               	movf	sprintf@tmpval^(0+128),w
  9962  02DF  3E30               	addlw	48
  9963  02E0  00B3               	movwf	??_sprintf^(0+128)
  9964  02E1  084F               	movf	sprintf@sp^(0+128),w
  9965  02E2  0084               	movwf	4
  9966  02E3  0833               	movf	??_sprintf^(0+128),w
  9967  02E4  1783               	bsf	3,7	;select IRP bank2
  9968  02E5  0080               	movwf	0
  9969  02E6  3001               	movlw	1
  9970  02E7  00B3               	movwf	??_sprintf^(0+128)
  9971  02E8  0833               	movf	??_sprintf^(0+128),w
  9972  02E9  07CF               	addwf	sprintf@sp^(0+128),f
  9973  02EA                     l280:	
  9974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9975                           
  9976                           
  9977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9978  02EA  3001               	movlw	1
  9979  02EB  02D2               	subwf	sprintf@c^(0+128),f
  9980  02EC  0A52               	incf	sprintf@c^(0+128),w
  9981  02ED  1D03               	btfss	3,2
  9982  02EE  2AF0               	goto	u6741
  9983  02EF  2AF1               	goto	u6740
  9984  02F0                     u6741:
  9985  02F0  2A44               	goto	l3850
  9986  02F1                     u6740:
  9987  02F1  2B05               	goto	l3862
  9988  02F2                     l3856:
  9989                           
  9990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9991  02F2  3030               	movlw	48
  9992  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  9993  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  9994  02F5  00B3               	movwf	??_sprintf^(0+128)
  9995  02F6  084F               	movf	sprintf@sp^(0+128),w
  9996  02F7  0084               	movwf	4
  9997  02F8  0833               	movf	??_sprintf^(0+128),w
  9998  02F9  1783               	bsf	3,7	;select IRP bank2
  9999  02FA  0080               	movwf	0
 10000  02FB                     l3858:
 10001  02FB  3001               	movlw	1
 10002  02FC  00B3               	movwf	??_sprintf^(0+128)
 10003  02FD  0833               	movf	??_sprintf^(0+128),w
 10004  02FE  07CF               	addwf	sprintf@sp^(0+128),f
 10005  02FF                     l3860:
 10006                           
 10007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10008  02FF  30FF               	movlw	255
 10009  0300  07C9               	addwf	sprintf@eexp^(0+128),f
 10010  0301  1803               	skipnc
 10011  0302  0ACA               	incf	(sprintf@eexp+1)^(0+128),f
 10012  0303  30FF               	movlw	255
 10013  0304  07CA               	addwf	(sprintf@eexp+1)^(0+128),f
 10014  0305                     l3862:
 10015                           
 10016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10017  0305  084A               	movf	(sprintf@eexp+1)^(0+128),w
 10018  0306  3A80               	xorlw	128
 10019  0307  00FF               	movwf	btemp+1
 10020  0308  3080               	movlw	128
 10021  0309  027F               	subwf	btemp+1,w
 10022  030A  1D03               	skipz
 10023  030B  2B0E               	goto	u6755
 10024  030C  3001               	movlw	1
 10025  030D  0249               	subwf	sprintf@eexp^(0+128),w
 10026  030E                     u6755:
 10027  030E  1803               	skipnc
 10028  030F  2B11               	goto	u6751
 10029  0310  2B12               	goto	u6750
 10030  0311                     u6751:
 10031  0311  2AF2               	goto	l3856
 10032  0312                     u6750:
 10033  0312                     l3864:
 10034                           
 10035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10036  0312  1683               	bsf	3,5	;RP0=1, select bank1
 10037  0313  1303               	bcf	3,6	;RP1=0, select bank1
 10038  0314  0851               	movf	(sprintf@prec+1)^(0+128),w
 10039  0315  3A80               	xorlw	128
 10040  0316  00FF               	movwf	btemp+1
 10041  0317  3080               	movlw	128
 10042  0318  027F               	subwf	btemp+1,w
 10043  0319  1D03               	skipz
 10044  031A  2B1D               	goto	u6765
 10045  031B  3009               	movlw	9
 10046  031C  0250               	subwf	sprintf@prec^(0+128),w
 10047  031D                     u6765:
 10048  031D  1C03               	skipc
 10049  031E  2B20               	goto	u6761
 10050  031F  2B21               	goto	u6760
 10051  0320                     u6761:
 10052  0320  2B28               	goto	l3868
 10053  0321                     u6760:
 10054  0321                     l3866:
 10055                           
 10056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10057  0321  3008               	movlw	8
 10058  0322  1683               	bsf	3,5	;RP0=1, select bank1
 10059  0323  1303               	bcf	3,6	;RP1=0, select bank1
 10060  0324  00B3               	movwf	??_sprintf^(0+128)
 10061  0325  0833               	movf	??_sprintf^(0+128),w
 10062  0326  00D2               	movwf	sprintf@c^(0+128)
 10063  0327  2B2E               	goto	l287
 10064  0328                     l3868:
 10065                           
 10066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10067  0328  1683               	bsf	3,5	;RP0=1, select bank1
 10068  0329  1303               	bcf	3,6	;RP1=0, select bank1
 10069  032A  0850               	movf	sprintf@prec^(0+128),w
 10070  032B  00B3               	movwf	??_sprintf^(0+128)
 10071  032C  0833               	movf	??_sprintf^(0+128),w
 10072  032D  00D2               	movwf	sprintf@c^(0+128)
 10073  032E                     l287:
 10074                           
 10075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10076  032E  0852               	movf	sprintf@c^(0+128),w
 10077  032F  00B3               	movwf	??_sprintf^(0+128)
 10078  0330  01B4               	clrf	(??_sprintf^(0+128)+1)
 10079  0331  0833               	movf	??_sprintf^(0+128),w
 10080  0332  02D0               	subwf	sprintf@prec^(0+128),f
 10081  0333  0834               	movf	(??_sprintf+1)^(0+128),w
 10082  0334  1C03               	skipc
 10083  0335  03D1               	decf	(sprintf@prec+1)^(0+128),f
 10084  0336  02D1               	subwf	(sprintf@prec+1)^(0+128),f
 10085  0337                     l3870:
 10086                           
 10087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10088  0337  0852               	movf	sprintf@c^(0+128),w
 10089  0338  1903               	btfsc	3,2
 10090  0339  2B3B               	goto	u6771
 10091  033A  2B3C               	goto	u6770
 10092  033B                     u6771:
 10093  033B  2B47               	goto	l3876
 10094  033C                     u6770:
 10095  033C                     l3872:
 10096                           
 10097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10098  033C  302E               	movlw	46
 10099  033D  00B3               	movwf	??_sprintf^(0+128)
 10100  033E  084F               	movf	sprintf@sp^(0+128),w
 10101  033F  0084               	movwf	4
 10102  0340  0833               	movf	??_sprintf^(0+128),w
 10103  0341  1783               	bsf	3,7	;select IRP bank2
 10104  0342  0080               	movwf	0
 10105  0343                     l3874:
 10106  0343  3001               	movlw	1
 10107  0344  00B3               	movwf	??_sprintf^(0+128)
 10108  0345  0833               	movf	??_sprintf^(0+128),w
 10109  0346  07CF               	addwf	sprintf@sp^(0+128),f
 10110  0347                     l3876:
 10111                           
 10112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10113  0347  0852               	movf	sprintf@c^(0+128),w
 10114  0348  120A  158A  249D  120A  118A  	fcall	_scale
 10115  034D  1283               	bcf	3,5	;RP0=0, select bank0
 10116  034E  1303               	bcf	3,6	;RP1=0, select bank0
 10117  034F  0849               	movf	?_scale+3,w
 10118  0350  1683               	bsf	3,5	;RP0=1, select bank1
 10119  0351  1303               	bcf	3,6	;RP1=0, select bank1
 10120  0352  00BB               	movwf	(_sprintf$890+3)^(0+128)
 10121  0353  1283               	bcf	3,5	;RP0=0, select bank0
 10122  0354  1303               	bcf	3,6	;RP1=0, select bank0
 10123  0355  0848               	movf	?_scale+2,w
 10124  0356  1683               	bsf	3,5	;RP0=1, select bank1
 10125  0357  1303               	bcf	3,6	;RP1=0, select bank1
 10126  0358  00BA               	movwf	(_sprintf$890+2)^(0+128)
 10127  0359  1283               	bcf	3,5	;RP0=0, select bank0
 10128  035A  1303               	bcf	3,6	;RP1=0, select bank0
 10129  035B  0847               	movf	?_scale+1,w
 10130  035C  1683               	bsf	3,5	;RP0=1, select bank1
 10131  035D  1303               	bcf	3,6	;RP1=0, select bank1
 10132  035E  00B9               	movwf	(_sprintf$890+1)^(0+128)
 10133  035F  1283               	bcf	3,5	;RP0=0, select bank0
 10134  0360  1303               	bcf	3,6	;RP1=0, select bank0
 10135  0361  0846               	movf	?_scale,w
 10136  0362  1683               	bsf	3,5	;RP0=1, select bank1
 10137  0363  1303               	bcf	3,6	;RP1=0, select bank1
 10138  0364  00B8               	movwf	_sprintf$890^(0+128)
 10139  0365                     l3878:
 10140                           
 10141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10142  0365  083B               	movf	(_sprintf$890+3)^(0+128),w
 10143  0366  1283               	bcf	3,5	;RP0=0, select bank0
 10144  0367  1303               	bcf	3,6	;RP1=0, select bank0
 10145  0368  00B3               	movwf	___flmul@a+3
 10146  0369  1683               	bsf	3,5	;RP0=1, select bank1
 10147  036A  1303               	bcf	3,6	;RP1=0, select bank1
 10148  036B  083A               	movf	(_sprintf$890+2)^(0+128),w
 10149  036C  1283               	bcf	3,5	;RP0=0, select bank0
 10150  036D  1303               	bcf	3,6	;RP1=0, select bank0
 10151  036E  00B2               	movwf	___flmul@a+2
 10152  036F  1683               	bsf	3,5	;RP0=1, select bank1
 10153  0370  1303               	bcf	3,6	;RP1=0, select bank1
 10154  0371  0839               	movf	(_sprintf$890+1)^(0+128),w
 10155  0372  1283               	bcf	3,5	;RP0=0, select bank0
 10156  0373  1303               	bcf	3,6	;RP1=0, select bank0
 10157  0374  00B1               	movwf	___flmul@a+1
 10158  0375  1683               	bsf	3,5	;RP0=1, select bank1
 10159  0376  1303               	bcf	3,6	;RP1=0, select bank1
 10160  0377  0838               	movf	_sprintf$890^(0+128),w
 10161  0378  1283               	bcf	3,5	;RP0=0, select bank0
 10162  0379  1303               	bcf	3,6	;RP1=0, select bank0
 10163  037A  00B0               	movwf	___flmul@a
 10164  037B  1683               	bsf	3,5	;RP0=1, select bank1
 10165  037C  1303               	bcf	3,6	;RP1=0, select bank1
 10166  037D  084E               	movf	(sprintf@fval+3)^(0+128),w
 10167  037E  1283               	bcf	3,5	;RP0=0, select bank0
 10168  037F  1303               	bcf	3,6	;RP1=0, select bank0
 10169  0380  00AF               	movwf	___flmul@b+3
 10170  0381  1683               	bsf	3,5	;RP0=1, select bank1
 10171  0382  1303               	bcf	3,6	;RP1=0, select bank1
 10172  0383  084D               	movf	(sprintf@fval+2)^(0+128),w
 10173  0384  1283               	bcf	3,5	;RP0=0, select bank0
 10174  0385  1303               	bcf	3,6	;RP1=0, select bank0
 10175  0386  00AE               	movwf	___flmul@b+2
 10176  0387  1683               	bsf	3,5	;RP0=1, select bank1
 10177  0388  1303               	bcf	3,6	;RP1=0, select bank1
 10178  0389  084C               	movf	(sprintf@fval+1)^(0+128),w
 10179  038A  1283               	bcf	3,5	;RP0=0, select bank0
 10180  038B  1303               	bcf	3,6	;RP1=0, select bank0
 10181  038C  00AD               	movwf	___flmul@b+1
 10182  038D  1683               	bsf	3,5	;RP0=1, select bank1
 10183  038E  1303               	bcf	3,6	;RP1=0, select bank1
 10184  038F  084B               	movf	sprintf@fval^(0+128),w
 10185  0390  1283               	bcf	3,5	;RP0=0, select bank0
 10186  0391  1303               	bcf	3,6	;RP1=0, select bank0
 10187  0392  00AC               	movwf	___flmul@b
 10188  0393  120A  158A  213C  120A  118A  	fcall	___flmul
 10189  0398  1283               	bcf	3,5	;RP0=0, select bank0
 10190  0399  1303               	bcf	3,6	;RP1=0, select bank0
 10191  039A  082F               	movf	?___flmul+3,w
 10192  039B  00DC               	movwf	___fltol@f1+3
 10193  039C  082E               	movf	?___flmul+2,w
 10194  039D  00DB               	movwf	___fltol@f1+2
 10195  039E  082D               	movf	?___flmul+1,w
 10196  039F  00DA               	movwf	___fltol@f1+1
 10197  03A0  082C               	movf	?___flmul,w
 10198  03A1  00D9               	movwf	___fltol@f1
 10199  03A2  160A  158A  24A9  120A  118A  	fcall	___fltol
 10200  03A7  1283               	bcf	3,5	;RP0=0, select bank0
 10201  03A8  1303               	bcf	3,6	;RP1=0, select bank0
 10202  03A9  085C               	movf	?___fltol+3,w
 10203  03AA  1683               	bsf	3,5	;RP0=1, select bank1
 10204  03AB  1303               	bcf	3,6	;RP1=0, select bank1
 10205  03AC  00C8               	movwf	(sprintf@val+3)^(0+128)
 10206  03AD  1283               	bcf	3,5	;RP0=0, select bank0
 10207  03AE  1303               	bcf	3,6	;RP1=0, select bank0
 10208  03AF  085B               	movf	?___fltol+2,w
 10209  03B0  1683               	bsf	3,5	;RP0=1, select bank1
 10210  03B1  1303               	bcf	3,6	;RP1=0, select bank1
 10211  03B2  00C7               	movwf	(sprintf@val+2)^(0+128)
 10212  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 10213  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 10214  03B5  085A               	movf	?___fltol+1,w
 10215  03B6  1683               	bsf	3,5	;RP0=1, select bank1
 10216  03B7  1303               	bcf	3,6	;RP1=0, select bank1
 10217  03B8  00C6               	movwf	(sprintf@val+1)^(0+128)
 10218  03B9  1283               	bcf	3,5	;RP0=0, select bank0
 10219  03BA  1303               	bcf	3,6	;RP1=0, select bank0
 10220  03BB  0859               	movf	?___fltol,w
 10221  03BC  1683               	bsf	3,5	;RP0=1, select bank1
 10222  03BD  1303               	bcf	3,6	;RP1=0, select bank1
 10223  03BE  00C5               	movwf	sprintf@val^(0+128)
 10224                           
 10225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10226  03BF  2CC1               	goto	l3888
 10227  03C0                     l3880:
 10228                           
 10229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10230  03C0  0852               	movf	sprintf@c^(0+128),w
 10231  03C1  00B3               	movwf	??_sprintf^(0+128)
 10232  03C2  3001               	movlw	1
 10233  03C3                     u6785:
 10234  03C3  1003               	clrc
 10235  03C4  0DB3               	rlf	??_sprintf^(0+128),f
 10236  03C5  3EFF               	addlw	-1
 10237  03C6  1D03               	skipz
 10238  03C7  2BC3               	goto	u6785
 10239  03C8  1003               	clrc
 10240  03C9  0D33               	rlf	??_sprintf^(0+128),w
 10241  03CA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10242  03CB  0084               	movwf	4
 10243  03CC  120A  118A  270A  120A  118A  	fcall	stringdir
 10244  03D1  1283               	bcf	3,5	;RP0=0, select bank0
 10245  03D2  1303               	bcf	3,6	;RP1=0, select bank0
 10246  03D3  00A0               	movwf	___lldiv@divisor
 10247  03D4  120A  118A  270A  120A  118A  	fcall	stringdir
 10248  03D9  00A1               	movwf	___lldiv@divisor+1
 10249  03DA  120A  118A  270A  120A  118A  	fcall	stringdir
 10250  03DF  00A2               	movwf	___lldiv@divisor+2
 10251  03E0  120A  118A  270A  120A  118A  	fcall	stringdir
 10252  03E5  00A3               	movwf	___lldiv@divisor+3
 10253  03E6  1683               	bsf	3,5	;RP0=1, select bank1
 10254  03E7  1303               	bcf	3,6	;RP1=0, select bank1
 10255  03E8  0848               	movf	(sprintf@val+3)^(0+128),w
 10256  03E9  1283               	bcf	3,5	;RP0=0, select bank0
 10257  03EA  1303               	bcf	3,6	;RP1=0, select bank0
 10258  03EB  00A7               	movwf	___lldiv@dividend+3
 10259  03EC  1683               	bsf	3,5	;RP0=1, select bank1
 10260  03ED  1303               	bcf	3,6	;RP1=0, select bank1
 10261  03EE  0847               	movf	(sprintf@val+2)^(0+128),w
 10262  03EF  1283               	bcf	3,5	;RP0=0, select bank0
 10263  03F0  1303               	bcf	3,6	;RP1=0, select bank0
 10264  03F1  00A6               	movwf	___lldiv@dividend+2
 10265  03F2  1683               	bsf	3,5	;RP0=1, select bank1
 10266  03F3  1303               	bcf	3,6	;RP1=0, select bank1
 10267  03F4  0846               	movf	(sprintf@val+1)^(0+128),w
 10268  03F5  1283               	bcf	3,5	;RP0=0, select bank0
 10269  03F6  1303               	bcf	3,6	;RP1=0, select bank0
 10270  03F7  00A5               	movwf	___lldiv@dividend+1
 10271  03F8  1683               	bsf	3,5	;RP0=1, select bank1
 10272  03F9  1303               	bcf	3,6	;RP1=0, select bank1
 10273  03FA  0845               	movf	sprintf@val^(0+128),w
 10274  03FB  1283               	bcf	3,5	;RP0=0, select bank0
 10275  03FC  1303               	bcf	3,6	;RP1=0, select bank0
 10276  03FD  00A4               	movwf	___lldiv@dividend
 10277  03FE  160A  158A  23C5  120A  118A  	fcall	___lldiv
 10278  0403  1283               	bcf	3,5	;RP0=0, select bank0
 10279  0404  1303               	bcf	3,6	;RP1=0, select bank0
 10280  0405  0823               	movf	?___lldiv+3,w
 10281  0406  1683               	bsf	3,5	;RP0=1, select bank1
 10282  0407  1303               	bcf	3,6	;RP1=0, select bank1
 10283  0408  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 10284  0409  1283               	bcf	3,5	;RP0=0, select bank0
 10285  040A  1303               	bcf	3,6	;RP1=0, select bank0
 10286  040B  0822               	movf	?___lldiv+2,w
 10287  040C  1683               	bsf	3,5	;RP0=1, select bank1
 10288  040D  1303               	bcf	3,6	;RP1=0, select bank1
 10289  040E  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 10290  040F  1283               	bcf	3,5	;RP0=0, select bank0
 10291  0410  1303               	bcf	3,6	;RP1=0, select bank0
 10292  0411  0821               	movf	?___lldiv+1,w
 10293  0412  1683               	bsf	3,5	;RP0=1, select bank1
 10294  0413  1303               	bcf	3,6	;RP1=0, select bank1
 10295  0414  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 10296  0415  1283               	bcf	3,5	;RP0=0, select bank0
 10297  0416  1303               	bcf	3,6	;RP1=0, select bank0
 10298  0417  0820               	movf	?___lldiv,w
 10299  0418  1683               	bsf	3,5	;RP0=1, select bank1
 10300  0419  1303               	bcf	3,6	;RP1=0, select bank1
 10301  041A  00C1               	movwf	sprintf@tmpval^(0+128)
 10302  041B                     l3882:
 10303                           
 10304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10305  041B  3000               	movlw	0
 10306  041C  1283               	bcf	3,5	;RP0=0, select bank0
 10307  041D  1303               	bcf	3,6	;RP1=0, select bank0
 10308  041E  00B0               	movwf	___llmod@divisor+3
 10309  041F  3000               	movlw	0
 10310  0420  00AF               	movwf	___llmod@divisor+2
 10311  0421  3000               	movlw	0
 10312  0422  00AE               	movwf	___llmod@divisor+1
 10313  0423  300A               	movlw	10
 10314  0424  00AD               	movwf	___llmod@divisor
 10315  0425  1683               	bsf	3,5	;RP0=1, select bank1
 10316  0426  1303               	bcf	3,6	;RP1=0, select bank1
 10317  0427  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 10318  0428  1283               	bcf	3,5	;RP0=0, select bank0
 10319  0429  1303               	bcf	3,6	;RP1=0, select bank0
 10320  042A  00B4               	movwf	___llmod@dividend+3
 10321  042B  1683               	bsf	3,5	;RP0=1, select bank1
 10322  042C  1303               	bcf	3,6	;RP1=0, select bank1
 10323  042D  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 10324  042E  1283               	bcf	3,5	;RP0=0, select bank0
 10325  042F  1303               	bcf	3,6	;RP1=0, select bank0
 10326  0430  00B3               	movwf	___llmod@dividend+2
 10327  0431  1683               	bsf	3,5	;RP0=1, select bank1
 10328  0432  1303               	bcf	3,6	;RP1=0, select bank1
 10329  0433  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 10330  0434  1283               	bcf	3,5	;RP0=0, select bank0
 10331  0435  1303               	bcf	3,6	;RP1=0, select bank0
 10332  0436  00B2               	movwf	___llmod@dividend+1
 10333  0437  1683               	bsf	3,5	;RP0=1, select bank1
 10334  0438  1303               	bcf	3,6	;RP1=0, select bank1
 10335  0439  0841               	movf	sprintf@tmpval^(0+128),w
 10336  043A  1283               	bcf	3,5	;RP0=0, select bank0
 10337  043B  1303               	bcf	3,6	;RP1=0, select bank0
 10338  043C  00B1               	movwf	___llmod@dividend
 10339  043D  120A  118A  26A9  120A  118A  	fcall	___llmod
 10340  0442  1283               	bcf	3,5	;RP0=0, select bank0
 10341  0443  1303               	bcf	3,6	;RP1=0, select bank0
 10342  0444  0830               	movf	?___llmod+3,w
 10343  0445  1683               	bsf	3,5	;RP0=1, select bank1
 10344  0446  1303               	bcf	3,6	;RP1=0, select bank1
 10345  0447  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 10346  0448  1283               	bcf	3,5	;RP0=0, select bank0
 10347  0449  1303               	bcf	3,6	;RP1=0, select bank0
 10348  044A  082F               	movf	?___llmod+2,w
 10349  044B  1683               	bsf	3,5	;RP0=1, select bank1
 10350  044C  1303               	bcf	3,6	;RP1=0, select bank1
 10351  044D  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 10352  044E  1283               	bcf	3,5	;RP0=0, select bank0
 10353  044F  1303               	bcf	3,6	;RP1=0, select bank0
 10354  0450  082E               	movf	?___llmod+1,w
 10355  0451  1683               	bsf	3,5	;RP0=1, select bank1
 10356  0452  1303               	bcf	3,6	;RP1=0, select bank1
 10357  0453  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 10358  0454  1283               	bcf	3,5	;RP0=0, select bank0
 10359  0455  1303               	bcf	3,6	;RP1=0, select bank0
 10360  0456  082D               	movf	?___llmod,w
 10361  0457  1683               	bsf	3,5	;RP0=1, select bank1
 10362  0458  1303               	bcf	3,6	;RP1=0, select bank1
 10363  0459  00C1               	movwf	sprintf@tmpval^(0+128)
 10364  045A                     l3884:
 10365                           
 10366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10367  045A  0841               	movf	sprintf@tmpval^(0+128),w
 10368  045B  3E30               	addlw	48
 10369  045C  00B3               	movwf	??_sprintf^(0+128)
 10370  045D  084F               	movf	sprintf@sp^(0+128),w
 10371  045E  0084               	movwf	4
 10372  045F  0833               	movf	??_sprintf^(0+128),w
 10373  0460  1783               	bsf	3,7	;select IRP bank2
 10374  0461  0080               	movwf	0
 10375  0462  3001               	movlw	1
 10376  0463  00B3               	movwf	??_sprintf^(0+128)
 10377  0464  0833               	movf	??_sprintf^(0+128),w
 10378  0465  07CF               	addwf	sprintf@sp^(0+128),f
 10379  0466                     l3886:
 10380                           
 10381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10382  0466  0852               	movf	sprintf@c^(0+128),w
 10383  0467  00B3               	movwf	??_sprintf^(0+128)
 10384  0468  3001               	movlw	1
 10385  0469                     u6795:
 10386  0469  1003               	clrc
 10387  046A  0DB3               	rlf	??_sprintf^(0+128),f
 10388  046B  3EFF               	addlw	-1
 10389  046C  1D03               	skipz
 10390  046D  2C69               	goto	u6795
 10391  046E  1003               	clrc
 10392  046F  0D33               	rlf	??_sprintf^(0+128),w
 10393  0470  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10394  0471  0084               	movwf	4
 10395  0472  120A  118A  270A  120A  118A  	fcall	stringdir
 10396  0477  1283               	bcf	3,5	;RP0=0, select bank0
 10397  0478  1303               	bcf	3,6	;RP1=0, select bank0
 10398  0479  00AD               	movwf	___llmod@divisor
 10399  047A  120A  118A  270A  120A  118A  	fcall	stringdir
 10400  047F  00AE               	movwf	___llmod@divisor+1
 10401  0480  120A  118A  270A  120A  118A  	fcall	stringdir
 10402  0485  00AF               	movwf	___llmod@divisor+2
 10403  0486  120A  118A  270A  120A  118A  	fcall	stringdir
 10404  048B  00B0               	movwf	___llmod@divisor+3
 10405  048C  1683               	bsf	3,5	;RP0=1, select bank1
 10406  048D  1303               	bcf	3,6	;RP1=0, select bank1
 10407  048E  0848               	movf	(sprintf@val+3)^(0+128),w
 10408  048F  1283               	bcf	3,5	;RP0=0, select bank0
 10409  0490  1303               	bcf	3,6	;RP1=0, select bank0
 10410  0491  00B4               	movwf	___llmod@dividend+3
 10411  0492  1683               	bsf	3,5	;RP0=1, select bank1
 10412  0493  1303               	bcf	3,6	;RP1=0, select bank1
 10413  0494  0847               	movf	(sprintf@val+2)^(0+128),w
 10414  0495  1283               	bcf	3,5	;RP0=0, select bank0
 10415  0496  1303               	bcf	3,6	;RP1=0, select bank0
 10416  0497  00B3               	movwf	___llmod@dividend+2
 10417  0498  1683               	bsf	3,5	;RP0=1, select bank1
 10418  0499  1303               	bcf	3,6	;RP1=0, select bank1
 10419  049A  0846               	movf	(sprintf@val+1)^(0+128),w
 10420  049B  1283               	bcf	3,5	;RP0=0, select bank0
 10421  049C  1303               	bcf	3,6	;RP1=0, select bank0
 10422  049D  00B2               	movwf	___llmod@dividend+1
 10423  049E  1683               	bsf	3,5	;RP0=1, select bank1
 10424  049F  1303               	bcf	3,6	;RP1=0, select bank1
 10425  04A0  0845               	movf	sprintf@val^(0+128),w
 10426  04A1  1283               	bcf	3,5	;RP0=0, select bank0
 10427  04A2  1303               	bcf	3,6	;RP1=0, select bank0
 10428  04A3  00B1               	movwf	___llmod@dividend
 10429  04A4  120A  118A  26A9  120A  118A  	fcall	___llmod
 10430  04A9  1283               	bcf	3,5	;RP0=0, select bank0
 10431  04AA  1303               	bcf	3,6	;RP1=0, select bank0
 10432  04AB  0830               	movf	?___llmod+3,w
 10433  04AC  1683               	bsf	3,5	;RP0=1, select bank1
 10434  04AD  1303               	bcf	3,6	;RP1=0, select bank1
 10435  04AE  00C8               	movwf	(sprintf@val+3)^(0+128)
 10436  04AF  1283               	bcf	3,5	;RP0=0, select bank0
 10437  04B0  1303               	bcf	3,6	;RP1=0, select bank0
 10438  04B1  082F               	movf	?___llmod+2,w
 10439  04B2  1683               	bsf	3,5	;RP0=1, select bank1
 10440  04B3  1303               	bcf	3,6	;RP1=0, select bank1
 10441  04B4  00C7               	movwf	(sprintf@val+2)^(0+128)
 10442  04B5  1283               	bcf	3,5	;RP0=0, select bank0
 10443  04B6  1303               	bcf	3,6	;RP1=0, select bank0
 10444  04B7  082E               	movf	?___llmod+1,w
 10445  04B8  1683               	bsf	3,5	;RP0=1, select bank1
 10446  04B9  1303               	bcf	3,6	;RP1=0, select bank1
 10447  04BA  00C6               	movwf	(sprintf@val+1)^(0+128)
 10448  04BB  1283               	bcf	3,5	;RP0=0, select bank0
 10449  04BC  1303               	bcf	3,6	;RP1=0, select bank0
 10450  04BD  082D               	movf	?___llmod,w
 10451  04BE  1683               	bsf	3,5	;RP0=1, select bank1
 10452  04BF  1303               	bcf	3,6	;RP1=0, select bank1
 10453  04C0  00C5               	movwf	sprintf@val^(0+128)
 10454  04C1                     l3888:
 10455                           
 10456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10457  04C1  3001               	movlw	1
 10458  04C2  02D2               	subwf	sprintf@c^(0+128),f
 10459  04C3  0A52               	incf	sprintf@c^(0+128),w
 10460  04C4  1D03               	btfss	3,2
 10461  04C5  2CC7               	goto	u6801
 10462  04C6  2CC8               	goto	u6800
 10463  04C7                     u6801:
 10464  04C7  2BC0               	goto	l3880
 10465  04C8                     u6800:
 10466  04C8  2CDA               	goto	l3896
 10467  04C9                     l3890:
 10468                           
 10469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10470  04C9  3030               	movlw	48
 10471  04CA  00B3               	movwf	??_sprintf^(0+128)
 10472  04CB  084F               	movf	sprintf@sp^(0+128),w
 10473  04CC  0084               	movwf	4
 10474  04CD  0833               	movf	??_sprintf^(0+128),w
 10475  04CE  1783               	bsf	3,7	;select IRP bank2
 10476  04CF  0080               	movwf	0
 10477  04D0                     l3892:
 10478  04D0  3001               	movlw	1
 10479  04D1  00B3               	movwf	??_sprintf^(0+128)
 10480  04D2  0833               	movf	??_sprintf^(0+128),w
 10481  04D3  07CF               	addwf	sprintf@sp^(0+128),f
 10482  04D4                     l3894:
 10483                           
 10484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10485  04D4  30FF               	movlw	255
 10486  04D5  07D0               	addwf	sprintf@prec^(0+128),f
 10487  04D6  1803               	skipnc
 10488  04D7  0AD1               	incf	(sprintf@prec+1)^(0+128),f
 10489  04D8  30FF               	movlw	255
 10490  04D9  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 10491  04DA                     l3896:
 10492                           
 10493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10494  04DA  0850               	movf	sprintf@prec^(0+128),w
 10495  04DB  0451               	iorwf	(sprintf@prec+1)^(0+128),w
 10496  04DC  1D03               	btfss	3,2
 10497  04DD  2CDF               	goto	u6811
 10498  04DE  2CE0               	goto	u6810
 10499  04DF                     u6811:
 10500  04DF  2CC9               	goto	l3890
 10501  04E0                     u6810:
 10502  04E0  2E90               	goto	l3976
 10503  04E1                     l3898:
 10504                           
 10505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10506  04E1  083C               	movf	sprintf@ap^(0+128),w
 10507  04E2  0084               	movwf	4
 10508  04E3  1383               	bcf	3,7	;select IRP bank0
 10509  04E4  0800               	movf	0,w
 10510  04E5  00B3               	movwf	??_sprintf^(0+128)
 10511  04E6  0A84               	incf	4,f
 10512  04E7  0800               	movf	0,w
 10513  04E8  00B4               	movwf	(??_sprintf^(0+128)+1)
 10514  04E9  0833               	movf	??_sprintf^(0+128),w
 10515  04EA  00C5               	movwf	sprintf@val^(0+128)
 10516  04EB  0834               	movf	(??_sprintf+1)^(0+128),w
 10517  04EC  00C6               	movwf	(sprintf@val+1)^(0+128)
 10518  04ED  3000               	movlw	0
 10519  04EE  1BC6               	btfsc	(sprintf@val+1)^(0+128),7
 10520  04EF  30FF               	movlw	255
 10521  04F0  00C7               	movwf	(sprintf@val+2)^(0+128)
 10522  04F1  00C8               	movwf	(sprintf@val+3)^(0+128)
 10523  04F2                     l3900:
 10524  04F2  3002               	movlw	2
 10525  04F3  00B3               	movwf	??_sprintf^(0+128)
 10526  04F4  0833               	movf	??_sprintf^(0+128),w
 10527  04F5  07BC               	addwf	sprintf@ap^(0+128),f
 10528  04F6                     l3902:
 10529                           
 10530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 10531  04F6  1FC8               	btfss	(sprintf@val+3)^(0+128),7
 10532  04F7  2CF9               	goto	u6821
 10533  04F8  2CFA               	goto	u6820
 10534  04F9                     u6821:
 10535  04F9  2D09               	goto	l3908
 10536  04FA                     u6820:
 10537  04FA                     l3904:
 10538                           
 10539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 10540  04FA  3003               	movlw	3
 10541  04FB  04BD               	iorwf	sprintf@flag^(0+128),f
 10542  04FC  3000               	movlw	0
 10543  04FD  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
 10544  04FE                     l3906:
 10545                           
 10546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 10547  04FE  09C5               	comf	sprintf@val^(0+128),f
 10548  04FF  09C6               	comf	(sprintf@val+1)^(0+128),f
 10549  0500  09C7               	comf	(sprintf@val+2)^(0+128),f
 10550  0501  09C8               	comf	(sprintf@val+3)^(0+128),f
 10551  0502  0AC5               	incf	sprintf@val^(0+128),f
 10552  0503  1903               	skipnz
 10553  0504  0AC6               	incf	(sprintf@val+1)^(0+128),f
 10554  0505  1903               	skipnz
 10555  0506  0AC7               	incf	(sprintf@val+2)^(0+128),f
 10556  0507  1903               	skipnz
 10557  0508  0AC8               	incf	(sprintf@val+3)^(0+128),f
 10558  0509                     l3908:
 10559                           
 10560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 10561  0509  0850               	movf	sprintf@prec^(0+128),w
 10562  050A  0451               	iorwf	(sprintf@prec+1)^(0+128),w
 10563  050B  1D03               	btfss	3,2
 10564  050C  2D0E               	goto	u6831
 10565  050D  2D0F               	goto	u6830
 10566  050E                     u6831:
 10567  050E  2D1D               	goto	l3914
 10568  050F                     u6830:
 10569  050F                     l3910:
 10570  050F  0848               	movf	(sprintf@val+3)^(0+128),w
 10571  0510  0447               	iorwf	(sprintf@val+2)^(0+128),w
 10572  0511  0446               	iorwf	(sprintf@val+1)^(0+128),w
 10573  0512  0445               	iorwf	sprintf@val^(0+128),w
 10574  0513  1D03               	skipz
 10575  0514  2D16               	goto	u6841
 10576  0515  2D17               	goto	u6840
 10577  0516                     u6841:
 10578  0516  2D1D               	goto	l3914
 10579  0517                     u6840:
 10580  0517                     l3912:
 10581                           
 10582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10583  0517  3001               	movlw	1
 10584  0518  07D0               	addwf	sprintf@prec^(0+128),f
 10585  0519  1803               	skipnc
 10586  051A  0AD1               	incf	(sprintf@prec+1)^(0+128),f
 10587  051B  3000               	movlw	0
 10588  051C  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 10589  051D                     l3914:
 10590                           
 10591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10592  051D  01D2               	clrf	sprintf@c^(0+128)
 10593  051E  0AD2               	incf	sprintf@c^(0+128),f
 10594  051F                     l3920:
 10595                           
 10596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10597  051F  0852               	movf	sprintf@c^(0+128),w
 10598  0520  00B3               	movwf	??_sprintf^(0+128)
 10599  0521  3001               	movlw	1
 10600  0522                     u6855:
 10601  0522  1003               	clrc
 10602  0523  0DB3               	rlf	??_sprintf^(0+128),f
 10603  0524  3EFF               	addlw	-1
 10604  0525  1D03               	skipz
 10605  0526  2D22               	goto	u6855
 10606  0527  1003               	clrc
 10607  0528  0D33               	rlf	??_sprintf^(0+128),w
 10608  0529  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10609  052A  0084               	movwf	4
 10610  052B  120A  118A  270A  120A  118A  	fcall	stringdir
 10611  0530  00B4               	movwf	(??_sprintf+1)^(0+128)
 10612  0531  120A  118A  270A  120A  118A  	fcall	stringdir
 10613  0536  00B5               	movwf	((??_sprintf+1)^(0+128)+1)
 10614  0537  120A  118A  270A  120A  118A  	fcall	stringdir
 10615  053C  00B6               	movwf	((??_sprintf+1)^(0+128)+2)
 10616  053D  120A  118A  270A  120A  118A  	fcall	stringdir
 10617  0542  00B7               	movwf	((??_sprintf+1)^(0+128)+3)
 10618  0543  0837               	movf	(??_sprintf+4)^(0+128),w
 10619  0544  0248               	subwf	(sprintf@val+3)^(0+128),w
 10620  0545  1D03               	skipz
 10621  0546  2D51               	goto	u6865
 10622  0547  0836               	movf	(??_sprintf+3)^(0+128),w
 10623  0548  0247               	subwf	(sprintf@val+2)^(0+128),w
 10624  0549  1D03               	skipz
 10625  054A  2D51               	goto	u6865
 10626  054B  0835               	movf	(??_sprintf+2)^(0+128),w
 10627  054C  0246               	subwf	(sprintf@val+1)^(0+128),w
 10628  054D  1D03               	skipz
 10629  054E  2D51               	goto	u6865
 10630  054F  0834               	movf	(??_sprintf+1)^(0+128),w
 10631  0550  0245               	subwf	sprintf@val^(0+128),w
 10632  0551                     u6865:
 10633  0551  1803               	skipnc
 10634  0552  2D54               	goto	u6861
 10635  0553  2D55               	goto	u6860
 10636  0554                     u6861:
 10637  0554  2D56               	goto	l3924
 10638  0555                     u6860:
 10639  0555  2D60               	goto	l3926
 10640  0556                     l3924:
 10641  0556  3001               	movlw	1
 10642  0557  00B3               	movwf	??_sprintf^(0+128)
 10643  0558  0833               	movf	??_sprintf^(0+128),w
 10644  0559  07D2               	addwf	sprintf@c^(0+128),f
 10645  055A  300A               	movlw	10
 10646  055B  0652               	xorwf	sprintf@c^(0+128),w
 10647  055C  1D03               	btfss	3,2
 10648  055D  2D5F               	goto	u6871
 10649  055E  2D60               	goto	u6870
 10650  055F                     u6871:
 10651  055F  2D1F               	goto	l3920
 10652  0560                     u6870:
 10653  0560                     l3926:
 10654                           
 10655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10656  0560  0851               	movf	(sprintf@prec+1)^(0+128),w
 10657  0561  3A80               	xorlw	128
 10658  0562  3C80               	sublw	128
 10659  0563  1D03               	skipz
 10660  0564  2D67               	goto	u6885
 10661  0565  0850               	movf	sprintf@prec^(0+128),w
 10662  0566  0252               	subwf	sprintf@c^(0+128),w
 10663  0567                     u6885:
 10664  0567  1803               	skipnc
 10665  0568  2D6A               	goto	u6881
 10666  0569  2D6B               	goto	u6880
 10667  056A                     u6881:
 10668  056A  2D72               	goto	l3930
 10669  056B                     u6880:
 10670  056B                     l3928:
 10671                           
 10672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10673  056B  1683               	bsf	3,5	;RP0=1, select bank1
 10674  056C  1303               	bcf	3,6	;RP1=0, select bank1
 10675  056D  0850               	movf	sprintf@prec^(0+128),w
 10676  056E  00B3               	movwf	??_sprintf^(0+128)
 10677  056F  0833               	movf	??_sprintf^(0+128),w
 10678  0570  00D2               	movwf	sprintf@c^(0+128)
 10679  0571  2D8A               	goto	l3934
 10680  0572                     l3930:
 10681  0572  1683               	bsf	3,5	;RP0=1, select bank1
 10682  0573  1303               	bcf	3,6	;RP1=0, select bank1
 10683  0574  0851               	movf	(sprintf@prec+1)^(0+128),w
 10684  0575  3A80               	xorlw	128
 10685  0576  00B3               	movwf	??_sprintf^(0+128)
 10686  0577  3080               	movlw	128
 10687  0578  0233               	subwf	??_sprintf^(0+128),w
 10688  0579  1D03               	skipz
 10689  057A  2D7D               	goto	u6895
 10690  057B  0852               	movf	sprintf@c^(0+128),w
 10691  057C  0250               	subwf	sprintf@prec^(0+128),w
 10692  057D                     u6895:
 10693  057D  1803               	skipnc
 10694  057E  2D80               	goto	u6891
 10695  057F  2D81               	goto	u6890
 10696  0580                     u6891:
 10697  0580  2D8A               	goto	l3934
 10698  0581                     u6890:
 10699  0581                     l3932:
 10700                           
 10701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10702  0581  1683               	bsf	3,5	;RP0=1, select bank1
 10703  0582  1303               	bcf	3,6	;RP1=0, select bank1
 10704  0583  0852               	movf	sprintf@c^(0+128),w
 10705  0584  00B3               	movwf	??_sprintf^(0+128)
 10706  0585  01B4               	clrf	(??_sprintf^(0+128)+1)
 10707  0586  0833               	movf	??_sprintf^(0+128),w
 10708  0587  00D0               	movwf	sprintf@prec^(0+128)
 10709  0588  0834               	movf	(??_sprintf+1)^(0+128),w
 10710  0589  00D1               	movwf	(sprintf@prec+1)^(0+128)
 10711  058A                     l3934:
 10712                           
 10713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10714  058A  1683               	bsf	3,5	;RP0=1, select bank1
 10715  058B  1303               	bcf	3,6	;RP1=0, select bank1
 10716  058C  083F               	movf	sprintf@width^(0+128),w
 10717  058D  0440               	iorwf	(sprintf@width+1)^(0+128),w
 10718  058E  1903               	btfsc	3,2
 10719  058F  2D91               	goto	u6901
 10720  0590  2D92               	goto	u6900
 10721  0591                     u6901:
 10722  0591  2DA4               	goto	l3940
 10723  0592                     u6900:
 10724  0592                     l3936:
 10725  0592  3003               	movlw	3
 10726  0593  053D               	andwf	sprintf@flag^(0+128),w
 10727  0594  00B3               	movwf	??_sprintf^(0+128)
 10728  0595  3000               	movlw	0
 10729  0596  053E               	andwf	(sprintf@flag+1)^(0+128),w
 10730  0597  00B4               	movwf	(??_sprintf+1)^(0+128)
 10731  0598  0833               	movf	??_sprintf^(0+128),w
 10732  0599  0434               	iorwf	(??_sprintf^(0+128)+1),w
 10733  059A  1903               	btfsc	3,2
 10734  059B  2D9D               	goto	u6911
 10735  059C  2D9E               	goto	u6910
 10736  059D                     u6911:
 10737  059D  2DA4               	goto	l3940
 10738  059E                     u6910:
 10739  059E                     l3938:
 10740                           
 10741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10742  059E  30FF               	movlw	255
 10743  059F  07BF               	addwf	sprintf@width^(0+128),f
 10744  05A0  1803               	skipnc
 10745  05A1  0AC0               	incf	(sprintf@width+1)^(0+128),f
 10746  05A2  30FF               	movlw	255
 10747  05A3  07C0               	addwf	(sprintf@width+1)^(0+128),f
 10748  05A4                     l3940:
 10749                           
 10750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10751  05A4  1F3E               	btfss	(sprintf@flag+1)^(0+128),6
 10752  05A5  2DA7               	goto	u6921
 10753  05A6  2DA8               	goto	u6920
 10754  05A7                     u6921:
 10755  05A7  2DC3               	goto	l3948
 10756  05A8                     u6920:
 10757  05A8                     l3942:
 10758                           
 10759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10760  05A8  0851               	movf	(sprintf@prec+1)^(0+128),w
 10761  05A9  3A80               	xorlw	128
 10762  05AA  00B3               	movwf	??_sprintf^(0+128)
 10763  05AB  0840               	movf	(sprintf@width+1)^(0+128),w
 10764  05AC  3A80               	xorlw	128
 10765  05AD  0233               	subwf	??_sprintf^(0+128),w
 10766  05AE  1D03               	skipz
 10767  05AF  2DB2               	goto	u6935
 10768  05B0  083F               	movf	sprintf@width^(0+128),w
 10769  05B1  0250               	subwf	sprintf@prec^(0+128),w
 10770  05B2                     u6935:
 10771  05B2  1803               	skipnc
 10772  05B3  2DB5               	goto	u6931
 10773  05B4  2DB6               	goto	u6930
 10774  05B5                     u6931:
 10775  05B5  2DBF               	goto	l3946
 10776  05B6                     u6930:
 10777  05B6                     l3944:
 10778                           
 10779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10780  05B6  1683               	bsf	3,5	;RP0=1, select bank1
 10781  05B7  1303               	bcf	3,6	;RP1=0, select bank1
 10782  05B8  0850               	movf	sprintf@prec^(0+128),w
 10783  05B9  02BF               	subwf	sprintf@width^(0+128),f
 10784  05BA  0851               	movf	(sprintf@prec+1)^(0+128),w
 10785  05BB  1C03               	skipc
 10786  05BC  03C0               	decf	(sprintf@width+1)^(0+128),f
 10787  05BD  02C0               	subwf	(sprintf@width+1)^(0+128),f
 10788  05BE  2DC3               	goto	l3948
 10789  05BF                     l3946:
 10790                           
 10791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10792  05BF  1683               	bsf	3,5	;RP0=1, select bank1
 10793  05C0  1303               	bcf	3,6	;RP1=0, select bank1
 10794  05C1  01BF               	clrf	sprintf@width^(0+128)
 10795  05C2  01C0               	clrf	(sprintf@width+1)^(0+128)
 10796  05C3                     l3948:
 10797                           
 10798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10799  05C3  0840               	movf	(sprintf@width+1)^(0+128),w
 10800  05C4  3A80               	xorlw	128
 10801  05C5  3C80               	sublw	128
 10802  05C6  1D03               	skipz
 10803  05C7  2DCA               	goto	u6945
 10804  05C8  083F               	movf	sprintf@width^(0+128),w
 10805  05C9  0252               	subwf	sprintf@c^(0+128),w
 10806  05CA                     u6945:
 10807  05CA  1803               	skipnc
 10808  05CB  2DCD               	goto	u6941
 10809  05CC  2DCE               	goto	u6940
 10810  05CD                     u6941:
 10811  05CD  2DDA               	goto	l3952
 10812  05CE                     u6940:
 10813  05CE                     l3950:
 10814                           
 10815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10816  05CE  1683               	bsf	3,5	;RP0=1, select bank1
 10817  05CF  1303               	bcf	3,6	;RP1=0, select bank1
 10818  05D0  0852               	movf	sprintf@c^(0+128),w
 10819  05D1  00B3               	movwf	??_sprintf^(0+128)
 10820  05D2  01B4               	clrf	(??_sprintf^(0+128)+1)
 10821  05D3  0833               	movf	??_sprintf^(0+128),w
 10822  05D4  02BF               	subwf	sprintf@width^(0+128),f
 10823  05D5  0834               	movf	(??_sprintf+1)^(0+128),w
 10824  05D6  1C03               	skipc
 10825  05D7  03C0               	decf	(sprintf@width+1)^(0+128),f
 10826  05D8  02C0               	subwf	(sprintf@width+1)^(0+128),f
 10827  05D9  2DDE               	goto	l3954
 10828  05DA                     l3952:
 10829                           
 10830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10831  05DA  1683               	bsf	3,5	;RP0=1, select bank1
 10832  05DB  1303               	bcf	3,6	;RP1=0, select bank1
 10833  05DC  01BF               	clrf	sprintf@width^(0+128)
 10834  05DD  01C0               	clrf	(sprintf@width+1)^(0+128)
 10835  05DE                     l3954:
 10836                           
 10837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10838  05DE  083F               	movf	sprintf@width^(0+128),w
 10839  05DF  0440               	iorwf	(sprintf@width+1)^(0+128),w
 10840  05E0  1903               	btfsc	3,2
 10841  05E1  2DE3               	goto	u6951
 10842  05E2  2DE4               	goto	u6950
 10843  05E3                     u6951:
 10844  05E3  2DFB               	goto	l3962
 10845  05E4                     u6950:
 10846  05E4                     l3956:
 10847                           
 10848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10849  05E4  3020               	movlw	32
 10850  05E5  00B3               	movwf	??_sprintf^(0+128)
 10851  05E6  084F               	movf	sprintf@sp^(0+128),w
 10852  05E7  0084               	movwf	4
 10853  05E8  0833               	movf	??_sprintf^(0+128),w
 10854  05E9  1783               	bsf	3,7	;select IRP bank2
 10855  05EA  0080               	movwf	0
 10856  05EB                     l3958:
 10857  05EB  3001               	movlw	1
 10858  05EC  00B3               	movwf	??_sprintf^(0+128)
 10859  05ED  0833               	movf	??_sprintf^(0+128),w
 10860  05EE  07CF               	addwf	sprintf@sp^(0+128),f
 10861  05EF                     l3960:
 10862  05EF  30FF               	movlw	255
 10863  05F0  07BF               	addwf	sprintf@width^(0+128),f
 10864  05F1  1803               	skipnc
 10865  05F2  0AC0               	incf	(sprintf@width+1)^(0+128),f
 10866  05F3  30FF               	movlw	255
 10867  05F4  07C0               	addwf	(sprintf@width+1)^(0+128),f
 10868  05F5  083F               	movf	sprintf@width^(0+128),w
 10869  05F6  0440               	iorwf	(sprintf@width+1)^(0+128),w
 10870  05F7  1D03               	btfss	3,2
 10871  05F8  2DFA               	goto	u6961
 10872  05F9  2DFB               	goto	u6960
 10873  05FA                     u6961:
 10874  05FA  2DE4               	goto	l3956
 10875  05FB                     u6960:
 10876  05FB                     l3962:
 10877                           
 10878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10879  05FB  3003               	movlw	3
 10880  05FC  053D               	andwf	sprintf@flag^(0+128),w
 10881  05FD  00B3               	movwf	??_sprintf^(0+128)
 10882  05FE  3000               	movlw	0
 10883  05FF  053E               	andwf	(sprintf@flag+1)^(0+128),w
 10884  0600  00B4               	movwf	(??_sprintf+1)^(0+128)
 10885  0601  0833               	movf	??_sprintf^(0+128),w
 10886  0602  0434               	iorwf	(??_sprintf^(0+128)+1),w
 10887  0603  1903               	btfsc	3,2
 10888  0604  2E06               	goto	u6971
 10889  0605  2E07               	goto	u6970
 10890  0606                     u6971:
 10891  0606  2E82               	goto	l3974
 10892  0607                     u6970:
 10893  0607                     l3964:
 10894                           
 10895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10896  0607  302D               	movlw	45
 10897  0608  00B3               	movwf	??_sprintf^(0+128)
 10898  0609  084F               	movf	sprintf@sp^(0+128),w
 10899  060A  0084               	movwf	4
 10900  060B  0833               	movf	??_sprintf^(0+128),w
 10901  060C  1783               	bsf	3,7	;select IRP bank2
 10902  060D  0080               	movwf	0
 10903  060E                     l3966:
 10904  060E  3001               	movlw	1
 10905  060F  00B3               	movwf	??_sprintf^(0+128)
 10906  0610  0833               	movf	??_sprintf^(0+128),w
 10907  0611  07CF               	addwf	sprintf@sp^(0+128),f
 10908  0612  2E82               	goto	l3974
 10909  0613                     l3968:
 10910                           
 10911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 10912  0613  3000               	movlw	0
 10913  0614  1283               	bcf	3,5	;RP0=0, select bank0
 10914  0615  1303               	bcf	3,6	;RP1=0, select bank0
 10915  0616  00B0               	movwf	___llmod@divisor+3
 10916  0617  3000               	movlw	0
 10917  0618  00AF               	movwf	___llmod@divisor+2
 10918  0619  3000               	movlw	0
 10919  061A  00AE               	movwf	___llmod@divisor+1
 10920  061B  300A               	movlw	10
 10921  061C  00AD               	movwf	___llmod@divisor
 10922  061D  1683               	bsf	3,5	;RP0=1, select bank1
 10923  061E  1303               	bcf	3,6	;RP1=0, select bank1
 10924  061F  0850               	movf	sprintf@prec^(0+128),w
 10925  0620  00B3               	movwf	??_sprintf^(0+128)
 10926  0621  3001               	movlw	1
 10927  0622                     u6985:
 10928  0622  1003               	clrc
 10929  0623  0DB3               	rlf	??_sprintf^(0+128),f
 10930  0624  3EFF               	addlw	-1
 10931  0625  1D03               	skipz
 10932  0626  2E22               	goto	u6985
 10933  0627  1003               	clrc
 10934  0628  0D33               	rlf	??_sprintf^(0+128),w
 10935  0629  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10936  062A  0084               	movwf	4
 10937  062B  120A  118A  270A  120A  118A  	fcall	stringdir
 10938  0630  1283               	bcf	3,5	;RP0=0, select bank0
 10939  0631  1303               	bcf	3,6	;RP1=0, select bank0
 10940  0632  00A0               	movwf	___lldiv@divisor
 10941  0633  120A  118A  270A  120A  118A  	fcall	stringdir
 10942  0638  00A1               	movwf	___lldiv@divisor+1
 10943  0639  120A  118A  270A  120A  118A  	fcall	stringdir
 10944  063E  00A2               	movwf	___lldiv@divisor+2
 10945  063F  120A  118A  270A  120A  118A  	fcall	stringdir
 10946  0644  00A3               	movwf	___lldiv@divisor+3
 10947  0645  1683               	bsf	3,5	;RP0=1, select bank1
 10948  0646  1303               	bcf	3,6	;RP1=0, select bank1
 10949  0647  0848               	movf	(sprintf@val+3)^(0+128),w
 10950  0648  1283               	bcf	3,5	;RP0=0, select bank0
 10951  0649  1303               	bcf	3,6	;RP1=0, select bank0
 10952  064A  00A7               	movwf	___lldiv@dividend+3
 10953  064B  1683               	bsf	3,5	;RP0=1, select bank1
 10954  064C  1303               	bcf	3,6	;RP1=0, select bank1
 10955  064D  0847               	movf	(sprintf@val+2)^(0+128),w
 10956  064E  1283               	bcf	3,5	;RP0=0, select bank0
 10957  064F  1303               	bcf	3,6	;RP1=0, select bank0
 10958  0650  00A6               	movwf	___lldiv@dividend+2
 10959  0651  1683               	bsf	3,5	;RP0=1, select bank1
 10960  0652  1303               	bcf	3,6	;RP1=0, select bank1
 10961  0653  0846               	movf	(sprintf@val+1)^(0+128),w
 10962  0654  1283               	bcf	3,5	;RP0=0, select bank0
 10963  0655  1303               	bcf	3,6	;RP1=0, select bank0
 10964  0656  00A5               	movwf	___lldiv@dividend+1
 10965  0657  1683               	bsf	3,5	;RP0=1, select bank1
 10966  0658  1303               	bcf	3,6	;RP1=0, select bank1
 10967  0659  0845               	movf	sprintf@val^(0+128),w
 10968  065A  1283               	bcf	3,5	;RP0=0, select bank0
 10969  065B  1303               	bcf	3,6	;RP1=0, select bank0
 10970  065C  00A4               	movwf	___lldiv@dividend
 10971  065D  160A  158A  23C5  120A  118A  	fcall	___lldiv
 10972  0662  1283               	bcf	3,5	;RP0=0, select bank0
 10973  0663  1303               	bcf	3,6	;RP1=0, select bank0
 10974  0664  0823               	movf	?___lldiv+3,w
 10975  0665  00B4               	movwf	___llmod@dividend+3
 10976  0666  0822               	movf	?___lldiv+2,w
 10977  0667  00B3               	movwf	___llmod@dividend+2
 10978  0668  0821               	movf	?___lldiv+1,w
 10979  0669  00B2               	movwf	___llmod@dividend+1
 10980  066A  0820               	movf	?___lldiv,w
 10981  066B  00B1               	movwf	___llmod@dividend
 10982  066C  120A  118A  26A9  120A  118A  	fcall	___llmod
 10983  0671  1283               	bcf	3,5	;RP0=0, select bank0
 10984  0672  1303               	bcf	3,6	;RP1=0, select bank0
 10985  0673  082D               	movf	?___llmod,w
 10986  0674  3E30               	addlw	48
 10987  0675  1683               	bsf	3,5	;RP0=1, select bank1
 10988  0676  1303               	bcf	3,6	;RP1=0, select bank1
 10989  0677  00B4               	movwf	(??_sprintf+1)^(0+128)
 10990  0678  0834               	movf	(??_sprintf+1)^(0+128),w
 10991  0679  00D2               	movwf	sprintf@c^(0+128)
 10992  067A                     l3970:
 10993                           
 10994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 10995  067A  0852               	movf	sprintf@c^(0+128),w
 10996  067B  00B3               	movwf	??_sprintf^(0+128)
 10997  067C  084F               	movf	sprintf@sp^(0+128),w
 10998  067D  0084               	movwf	4
 10999  067E  0833               	movf	??_sprintf^(0+128),w
 11000  067F  1783               	bsf	3,7	;select IRP bank2
 11001  0680  0080               	movwf	0
 11002  0681  2E0E               	goto	l3966
 11003  0682                     l3974:
 11004                           
 11005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11006  0682  30FF               	movlw	255
 11007  0683  07D0               	addwf	sprintf@prec^(0+128),f
 11008  0684  1803               	skipnc
 11009  0685  0AD1               	incf	(sprintf@prec+1)^(0+128),f
 11010  0686  30FF               	movlw	255
 11011  0687  07D1               	addwf	(sprintf@prec+1)^(0+128),f
 11012  0688  0A50               	incf	sprintf@prec^(0+128),w
 11013  0689  1D03               	skipz
 11014  068A  2E8F               	goto	u6991
 11015  068B  0A51               	incf	(sprintf@prec+1)^(0+128),w
 11016  068C  1D03               	btfss	3,2
 11017  068D  2E8F               	goto	u6991
 11018  068E  2E90               	goto	u6990
 11019  068F                     u6991:
 11020  068F  2E13               	goto	l3968
 11021  0690                     u6990:
 11022  0690                     l3976:
 11023                           
 11024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11025  0690  3001               	movlw	1
 11026  0691  07A8               	addwf	sprintf@f^(0+128),f
 11027  0692  30FF               	movlw	-1
 11028  0693  0728               	addwf	sprintf@f^(0+128),w
 11029  0694  0084               	movwf	4
 11030  0695  120A  118A  270A  120A  118A  	fcall	stringdir
 11031  069A  00B3               	movwf	??_sprintf^(0+128)
 11032  069B  0833               	movf	??_sprintf^(0+128),w
 11033  069C  00D2               	movwf	sprintf@c^(0+128)
 11034  069D  0852               	movf	sprintf@c^(0+128),w
 11035  069E  1D03               	btfss	3,2
 11036  069F  2EA1               	goto	u7001
 11037  06A0  2EA4               	goto	u7000
 11038  06A1                     u7001:
 11039  06A1  160A  118A  2D00   	goto	l3696
 11040  06A4                     u7000:
 11041  06A4                     l3978:
 11042                           
 11043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11044  06A4  084F               	movf	sprintf@sp^(0+128),w
 11045  06A5  0084               	movwf	4
 11046  06A6  1783               	bsf	3,7	;select IRP bank2
 11047  06A7  0180               	clrf	0
 11048  06A8                     l317:
 11049  06A8  0008               	return
 11050  06A9                     __end_of_sprintf:

Data Sizes:
    Strings     36
    Constant    144
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     78      78
    BANK1            80     55      65
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> Lcdvar(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[19]), Lcdvar(BANK3[20]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___flneg
    _sprintf->___wmul
    _sprintf->___xxtofl
    _sprintf->__tdiv_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___flmul->___awmod
    ___flmul->___lwmod
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   41267
                                             51 BANK1      4     4      0
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                              _Setup
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   35368
                                              8 BANK1     43    32     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8392
                                             38 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              4 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              3 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6285
                                             38 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              2 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             12 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              4 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              4 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              4 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              5 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             57 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             58 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              4 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              4 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              4 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     354
                                              0 BANK0      7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      44
                                              5 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     416
                                              0 BANK0      4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      66
                                              0 BANK0      2     2      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      44
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      44
                                              5 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Init
     _LCD_Cmd
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _Setup
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AD       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     37      41       7       81.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      14       9       20.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AD      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 20:29:57 2021

                        pc 0002                         l59 19A7                         l92 1BC4  
                       l95 1005                         l98 1986               ___awdiv@sign 0029  
                       fsr 0004        ___wmul@multiplicand 0076        __Umul8_16@word_mpld 0022  
                      l101 19CA                        l110 19F0                        l104 196B  
                      l116 1A8A                        l321 1A2A                        l225 0FFF  
                      l218 126D                        l323 1A44                        l317 06A8  
                      l502 1FF2                        l247 15BD                        l512 1D43  
                      l520 195E                        l280 02EA                        l507 1AEF  
                      l515 1DAF                        l531 1D0F                        l508 1B0B  
                      l516 1DC8                        l524 1D24                        l509 1B20  
                      l357 1C2C                        l534 1D24                        l542 1F04  
                      l287 032E                        l801 1E4E                        l802 1E5A  
                      l538 1F41                        l474 087A                        l491 1FFF  
                      l539 1EB3                        l627 1AD0                        l652 1378  
                      l492 1F64                        l661 14F5                        l549 1F34  
                      l637 07FF                        l654 134F                        l750 0C08  
                      l495 1FC2                        l487 1060                        l648 12D1  
                      l744 0C9C                        l808 0811                        l673 1467  
                      l577 06FE                        l690 14E9                        l682 14C7  
                      l691 14F5                        l763 1A07                        l756 0C90  
                      l669 1443                        l765 1A19                        l694 1B70  
                      l790 1E84                        l679 1489                        l794 1E32  
                      l788 1DED                        _RE0 0048                        _RE1 0049  
                      _ISR 1C2D                        fsr0 0004                        indf 0000  
             ___awmod@sign 0022               ___flmul@aexp 003E               ___flmul@bexp 003F  
              _sprintf$890 00B8               ___flmul@sign 0039               ___flmul@temp 0044  
             ___flmul@prod 0040            __end_of_LCD_Cmd 19CB                       ?_ISR 0070  
           _LCD_Set_Cursor 19CB               ___fltol@exp1 0063                       l3000 1DCC  
                     l3002 1DD1                       l3020 1E1B                       l3012 1DFE  
                     l3004 1DD5                       l2300 1AC6                       l3030 1E52  
                     l3022 1E29                       l3014 1E03                       l3006 1DE5  
                     l2302 1ACC                       l4000 1A45                       l2400 130F  
                     l3040 1E7C                       l3032 1E5C                       l3024 1E39  
                     l3016 1E10                       l3008 1DF5                       l4002 1A4A  
                     l3050 19A5                       l2410 1333                       l2402 1313  
                     l2330 1275                       l3034 1E72                       l3026 1E44  
                     l3018 1E17                       l4010 088A                       l4004 1A66  
                     l3044 1987                       l2500 14A5                       l2420 1363  
                     l2412 1353                       l2404 1317                       l2340 128A  
                     l2332 127B                       l3036 1E77                       l3028 1E48  
                     l4020 0900                       l4012 0891                       l4006 1A6E  
                     l3046 198B                       l2510 14DE                       l2502 14C3  
                     l2422 136C                       l2414 135C                       l2406 131B  
                     l2350 12A2                       l2342 1292                       l2334 127F  
                     l3038 1E7B                       l2190 1A10                       l2182 19F4  
                     l4022 090A                       l4014 0894                       l3064 195F  
                     l3048 198C                       l2520 14F4                       l2512 14DF  
                     l2504 14CC                       l2440 13B2                       l2432 138A  
                     l2416 135E                       l2424 1370                       l2408 131C  
                     l2360 12B4                       l2352 12A8                       l2344 1293  
                     l2336 1280                       l2328 126E                       l2192 1A15  
                     l2184 19F6                       l2600 0B66                       l2280 1A8B  
                     l4024 0915                       l4016 08DA                       l4008 087B  
                     l2514 14E3                       l2506 14D1                       l2442 13B4  
                     l2434 13A1                       l2426 137C                       l2450 13C7  
                     l2418 1362                       l2362 12B9                       l2370 12C9  
                     l2354 12A9                       l2338 1285                       l2346 1295  
                     l2186 19FD                       l2610 0BD4                       l2602 0B8C  
                     l2530 094E                       l2522 093C                       l2290 1AA3  
                     l2282 1A8F                       l4026 091F                       l4018 08FB  
                     l2196 1001                       l2516 14E5                       l2508 14D9  
                     l2452 13DD                       l2460 1435                       l2444 13B8  
                     l2436 13A5                       l2428 1381                       l2380 12E7  
                     l2372 12D7                       l2364 12BE                       l2356 12AF  
                     l2348 129D                       l2188 1A01                       l2620 0BEC  
                     l2612 0BD8                       l2604 0BB4                       l2540 096A  
                     l2532 0953                       l2524 0943                       l2292 1AA7  
                     l2284 1A95                       l3500 0871                       l4060 15D3  
                     l4028 092A                       l2518 14F0                       l2470 1462  
                     l2462 144B                       l2454 141B                       l2446 13B9  
                     l2438 13A9                       l2390 12FB                       l2382 12EB  
                     l2374 12DB                       l2366 12C6                       l2358 12B3  
                     l2630 0C0D                       l2622 0BED                       l2614 0BD9  
                     l2606 0BBD                       l2550 097F                       l2542 096F  
                     l2534 0958                       l2526 0949                       l2294 1AB8  
                     l2286 1A98                       l3502 0876                       l3510 100D  
                     l2480 1475                       l2472 1466                       l2464 1450  
                     l2456 1421                       l2448 13C2                       l2392 12FF  
                     l2384 12EF                       l2376 12DF                       l2368 12C7  
                     l2632 0C12                       l2640 0C43                       l2624 0BF1  
                     l2616 0BE2                       l2608 0BCB                       l2560 099B  
                     l2552 0984                       l2544 0975                       l2536 0960  
                     l2528 094D                       l2296 1ABE                       l2288 1A9F  
                     l3520 1023                       l3512 1012                       l2490 1486  
                     l2474 146B                       l2482 1477                       l2458 1426  
                     l2394 1303                       l2386 12F3                       l2378 12E3  
                     l2810 1F4F                       l2802 1F29                       l2650 0C76  
                     l2642 0C50                       l2634 0C20                       l2626 0C05  
                     l2618 0BE8                       l2570 09C6                       l2562 09A0  
                     l2554 098C                       l2546 0979                       l2538 0962  
                     l2298 1ABF                       l3530 103F                       l3522 1026  
                     l3514 1014                       l3506 1006                       l3602 0E26  
                     l2900 1AE7                       l2476 146E                       l2468 1459  
                     l2484 147B                       l2396 1307                       l2388 12F7  
                     l2820 1F65                       l2804 1F39                       l2652 0C84  
                     l2644 0C5B                       l2636 0C24                       l2580 0A63  
                     l2572 09E3                       l2556 098E                       l2548 097A  
                     l3540 105C                       l3532 1045                       l3524 102D  
                     l3516 1018                       l3508 1009                       l3620 0FD3  
                     l3700 150D                       l2670 19BE                       l2662 19A9  
                     l2902 1B03                       l2910 1D25                       l2494 148E  
                     l2486 147C                       l2478 1470                       l2398 130B  
                     l3630 1A31                       l2830 1F92                       l2822 1F6D  
                     l2814 1F58                       l2654 0C88                       l2646 0C6A  
                     l2638 0C3D                       l2590 0AC6                       l2582 0A6C  
                     l2574 09FF                       l2566 09A9                       l2558 0996  
                     l3550 07D6                       l2750 080E                       l3470 0820  
                     l3462 0812                       l3534 104C                       l3526 1031  
                     l3518 101D                       l3614 0F44                       l3606 0E53  
                     l3710 153F                       l3702 1512                       l2672 19C1  
                     l2664 19AC                       l2680 1979                       l2904 1B1D  
                     l2920 1D87                       l2912 1D3B                       l2496 1493  
                     l2488 1480                       l3640 1BD7                       l3632 1A38  
                     l3624 1A1A                       l2840 1FC6                       l2832 1FA4  
                     l2824 1F7E                       l2808 1F42                       l2656 0C89  
                     l2648 0C74                       l2592 0ADF                       l2584 0A7C  
                     l2576 0A2B                       l2568 09B9                       l3560 07F5  
                     l3552 07DA                       l3544 07C4                       l2752 0810  
                     l2744 0801                       l3480 0835                       l3472 0824  
                     l3464 0815                       l3528 1035                       l3536 1052  
                     l3616 0F4B                       l3608 0E5A                       l3800 00B8  
                     l3720 1575                       l3712 1552                       l3704 1516  
                     l2666 19B2                       l2682 197E                       l2674 196D  
                     l2906 1B1F                       l2922 1D8B                       l2914 1D57  
                     l2930 1954                       l2498 14A1                       l3650 1C06  
                     l3642 1BDA                       l3634 1A3E                       l3626 1A1E  
                     l2834 1FB2                       l2826 1F80                       l2770 1EBA  
                     l2762 1EA1                       l2658 0C94                       l2594 0AFC  
                     l2586 0A99                       l2578 0A47                       l3554 07DE  
                     l3546 07CA                       l3562 07FB                       l2746 0802  
                     l3490 0858                       l3482 0838                       l3474 0829  
                     l3466 0819                       l3538 1057                       l3802 00C0  
                     l3810 0132                       l3730 15A8                       l3722 1579  
                     l3714 1556                       l3706 1526                       l2668 19B5  
                     l2684 1981                       l2676 1970                       l2924 1DC5  
                     l2916 1D5F                       l2932 195C                       l2940 1CB6  
                     l3652 1C14                       l3644 1BE7                       l3628 1A22  
                     l2836 1FB3                       l2828 1F89                       l2780 1EEB  
                     l2772 1EC9                       l2756 1E85                       l2596 0B29  
                     l2588 0AA9                       l3556 07E8                       l3548 07CF  
                     l3580 122A                       l2748 0808                       l3492 085E  
                     l3484 083F                       l3476 082D                       l3468 081E  
                     l3900 04F2                       l3812 0167                       l3804 00DE  
                     l3740 15E1                       l3724 157C                       l3732 15B9  
                     l3708 152A                       l3716 1566                       l2678 1976  
                     l2926 1DC7                       l2918 1D63                       l2934 195E  
                     l2950 1CDD                       l3654 1C15                       l3646 1BEB  
                     l3638 1BC5                       l3670 06C7                       l3662 06A9  
                     l2854 1FE7                       l2846 1FCE                       l2838 1FBC  
                     l2782 1EF5                       l2774 1ECB                       l2758 1E98  
                     l2598 0B39                       l3558 07EE                       l3574 1179  
                     l3566 1064                       l3494 085F                       l3486 0843  
                     l3478 082F                       l3590 0CAD                       l3910 050F  
                     l3902 04F6                       l3830 01F6                       l3822 019A  
                     l3814 0196                       l3750 1609                       l3742 15EF  
                     l3734 15BB                       l3726 1591                       l3718 1574  
                     l2960 1CEB                       l2952 1CDF                       l2944 1CBF  
                     l3656 1C1E                       l3648 1BF4                       l3672 06D9  
                     l3664 06B3                       l2856 1FF7                       l2848 1FE0  
                     l2784 1EF6                       l2776 1ED4                       l2768 1EB4  
                     l3576 117F                       l3568 106A                       l3496 0866  
                     l3488 0847                       l3584 0CA0                       l3920 051F  
                     l3912 0517                       l3904 04FA                       l3832 01FC  
                     l3816 0198                       l3808 0129                       l3760 1678  
                     l3752 1630                       l3744 15F3                       l3728 15A4  
                     l3690 1B95                       l3682 1B71                       l2970 1D14  
                     l2954 1CE3                       l2962 1CFD                       l2946 1CD4  
                     l2938 1CA9                       l3658 1C24                       l3674 06E7  
                     l3666 06B6                       l2794 1F10                       l2786 1EFE  
                     l2778 1EDD                       l3498 086C                       l3586 0CA4  
                     l3930 0572                       l3914 051D                       l3906 04FE  
                     l3850 0244                       l3834 0208                       l3842 021D  
                     l3826 01D1                       l3770 16C3                       l3762 1683  
                     l3754 1649                       l3746 15F7                       l3738 15BF  
                     l3692 1B9B                       l3684 1B75                       l2972 1D19  
                     l2948 1CD5                       l3676 06F0                       l3668 06C3  
                     l2788 1F08                       l2796 1F22                       l3596 0D97  
                     l3588 0CA6                       l3940 05A4                       l3932 0581  
                     l3924 0556                       l3908 0509                       l3860 02FF  
                     l3852 029F                       l3844 022A                       l3836 020F  
                     l3828 01DB                       l3780 1763                       l3772 16C9  
                     l3764 1689                       l3756 164D                       l3748 1605  
                     l3686 1B7B                       l3678 06F6                       l3598 0D9E  
                     l3950 05CE                       l3942 05A8                       l3934 058A  
                     l3926 0560                       l3870 0337                       l3862 0305  
                     l3854 02DE                       l3846 0238                       l3838 0218  
                     l3790 0027                       l3782 178C                       l3774 16E8  
                     l3766 169C                       l3758 1651                       l3694 14F9  
                     l3688 1B85                       l2968 1D04                       l3960 05EF  
                     l3952 05DA                       l3944 05B6                       l3936 0592  
                     l3928 056B                       l3880 03C0                       l3872 033C  
                     l3864 0312                       l3856 02F2                       l3848 023F  
                     l3792 0050                       l3776 1733                       l3768 16BF  
                     l3784 1794                       l3696 1500                       l2898 1AD1  
                     l2994 1B21                       l3970 067A                       l3962 05FB  
                     l3954 05DE                       l3946 05BF                       l3938 059E  
                     l3890 04C9                       l3882 041B                       l3874 0343  
                     l3866 0321                       l3858 02FB                       l3794 0077  
                     l3786 17A3                       l3778 175A                       l3698 1506  
                     l2996 1B25                       l3964 0607                       l3956 05E4  
                     l3948 05C3                       l3892 04D0                       l3884 045A  
                     l3876 0347                       l3868 0328                       l3796 0086  
                     l3788 17EA                       l3990 19D3                       l3966 060E  
                     l3974 0682                       l3958 05EB                       l3894 04D4  
                     l3886 0466                       l3878 0365                       l3798 00AF  
                     l3992 19D8                       l3968 0613                       l3896 04DA  
                     l3888 04C1                       l3976 0690                       l3994 19DF  
                     l3898 04E1                       l3978 06A4                       l3996 19E5  
                     l3988 19CE                       l3998 19EA                       STR_1 07B3  
                     STR_2 07A0                       u4000 0BF1                       u4001 0BF0  
                     u4010 0C05                       u3130 1A95                       u4011 0C04  
                     u3131 1A94                       u3300 12B3                       u4020 0C0C  
                     u3301 12B2                       u4021 0C0B                       u3310 12B9  
                     u4030 0C12                       u3150 1AA7                       u3311 12B8  
                     u4031 0C11                       u3151 1AA6                       u3320 12BE  
                     u5000 1DD1                       u4040 0C24                       u3321 12BD  
                     u5001 1DD0                       u4041 0C23                       u3145 1A99  
                     u3410 1378                       u3330 12D7                       u5010 1DD5  
                     u4050 0C33                       u3170 1AB8                       u3411 1377  
                     u3331 12D6                       u5011 1DD4                       u3171 1AB7  
                     u3420 137C                       u3340 12DB                       u3260 127F  
                     u5100 1E52                       u5020 1DF5                       u4060 0C50  
                     u3501 13F4                       u3421 137B                       u3405 1365  
                     u3341 12DA                       u3261 127E                       u5101 1E51  
                     u5021 1DF4                       u4061 0C4F                       u3165 1AA8  
                     u3510 1408                       u3502 13F5                       u3430 1381  
                     u3350 1333                       u3270 1285                       u5110 1E67  
                     u4070 0C6A                       u3190 1ACC                       u3511 1409  
                     u3503 13FA                       u3431 1380                       u3351 1332  
                     u3271 1284                       u4071 0C69                       u4055 0C2E  
                     u3191 1ACB                       u3175 1AB4                       u3600 1480  
                     u3520 1426                       u3512 140E                       u3504 13FB  
                     u3360 133E                       u3280 128A                       u5120 1E77  
                     u5040 1E16                       u4080 0C88                       u6000 07CA  
                     u3601 147F                       u3521 1425                       u3513 140F  
                     u3505 1400                       u3441 1393                       u3361 133C  
                     u3281 1289                       u5121 1E76                       u5041 1E15  
                     u4081 0C87                       u4065 0C4C                       u3185 1AC0  
                     u6001 07C9                       u3610 1486                       u3530 144B  
                     u3506 1401                       u3450 13A5                       u3442 139A  
                     u3370 133F                       u3290 12A8                       u5130 1E7B  
                     u4410 1F04                       u3611 1485                       u3531 144A  
                     u3451 13A4                       u3443 13A1                       u3355 132F  
                     u3291 12A7                       u5131 1E7A                       u5115 1E62  
                     u5035 1E08                       u4411 1F03                       u4075 0C66  
                     u3700 14E3                       u3620 148D                       u3540 1450  
                     u3460 13A9                       u3380 1353                       u5060 1E38  
                     u4500 1F63                       u4420 1F08                       u6020 07DE  
                     u6100 117F                       u4340 0808                       u3701 14E2  
                     u3621 148C                       u3541 144F                       u3461 13A8  
                     u3381 1352                       u5061 1E37                       u4501 1F62  
                     u4421 1F07                       u4405 1EF7                       u6021 07DD  
                     u6101 117E                       u4341 0807                       u3710 14F4  
                     u3630 1493                       u3470 13B8                       u3390 1362  
                     u4430 1F0F                       u2910 1A01                       u6030 07E8  
                     u4350 080E                       u3711 14F3                       u3631 1492  
                     u3471 13B7                       u3391 1361                       u5055 1E2A  
                     u4431 1F0E                       u2911 1A00                       u6031 07E7  
                     u6015 07D0                       u4351 080D                       u3640 14A5  
                     u3560 1466                       u5080 1E48                       u4520 1FA4  
                     u4360 1E98                       u3720 094D                       u7000 06A4  
                     u3641 14A4                       u3561 1465                       u5081 1E47  
                     u4521 1FA3                       u4361 1E97                       u3801 09F1  
                     u3721 094C                       u7001 06A1                       u7010 19D3  
                     u3650 14B4                       u3570 146B                       u3490 13DD  
                     u5090 1E4E                       u4610 1FF7                       u4450 1F21  
                     u4370 1EB2                       u2930 1A15                       u3802 09F8  
                     u3730 0953                       u6050 07FB                       u7011 19D2  
                     u3571 146A                       u3555 145B                       u3491 13DC  
                     u5091 1E4D                       u5075 1E3D                       u4611 1FF6  
                     u4515 1F8B                       u4451 1F20                       u4371 1EB1  
                     u2931 1A14                       u3811 0A0D                       u3803 09FF  
                     u3731 0952                       u6051 07FA                       u6035 07E4  
                     u6115 119C                       u7020 19E5                       u3660 14C3  
                     u3580 1475                       u4540 1FC2                       u4460 1F28  
                     u3812 0A14                       u3740 0958                       u6060 106A  
                     u6140 0CA4                       u7021 19E4                       u3661 14C2  
                     u3581 1474                       u3493 13D9                       u3485 13BB  
                     u4605 1FE9                       u4541 1FC1                       u4525 1FA0  
                     u4461 1F27                       u4445 1F11                       u2925 1A08  
                     u3901 0B48                       u3821 0A39                       u3813 0A1B  
                     u3741 0957                       u6045 07EF                       u6125 11E9  
                     u6061 1069                       u6205 0DB1                       u6141 0CA3  
                     u7030 1A54                       u3670 14CC                       u3590 147B  
                     u6310 1A22                       u4550 1FC6                       u4390 1EEB  
                     u3910 0B72                       u3902 0B4F                       u3822 0A40  
                     u3750 0979                       u6230 0E5A                       u6150 0CAD  
                     u3671 14CB                       u3655 14AF                       u3591 147A  
                     u6311 1A21                       u4551 1FC5                       u4535 1FB5  
                     u4391 1EEA                       u3903 0B56                       u3831 0A55  
                     u3823 0A47                       u3751 0978                       u6135 1235  
                     u6231 0E59                       u6215 0DED                       u6151 0CAC  
                     u7040 1A78                       u4800 1D8B                       u3680 14D1  
                     u4560 1FCD                       u4480 1F39                       u3832 0A5C  
                     u3760 097F                       u4801 1D8A                       u3681 14D0  
                     u4561 1FCC                       u4481 1F38                       u4385 1ED6  
                     u3921 0B7E                       u3833 0A63                       u3761 097E  
                     u6305 0FD6                       u6225 0E29                       u7050 1A8A  
                     u4730 1AE7                       u3690 14DE                       u6410 1C24  
                     u4490 1F4F                       u3930 0B9A                       u3922 0B85  
                     u3770 0984                       u7107 1B81                       u7051 1A89  
                     u4731 1AE6                       u4811 1D9A                       u3691 14DD  
                     u6411 1C23                       u4491 1F4E                       u4475 1F2B  
                     u4395 1EE7                       u3923 0B8C                       u3915 0B6D  
                     u3851 0A8B                       u3771 0983                       u6075 1087  
                     u4740 1B03                       u4820 1DC5                       u4812 1D9B  
                     u4900 1D03                       u6420 06B3                       u6340 1A3E  
                     u4580 1FDF                       u3852 0A92                       u3780 099B  
                     u6500 1566                       _RCIF 0065                       u7117 1B91  
                     u4741 1B02                       u4821 1DC4                       u4813 1DA0  
                     u4901 1D02                       u6405 1C16                       u6421 06B2  
                     u6341 1A3D                       u6325 1A2B                       u4581 1FDE  
                     u3941 0BA6                       u3861 0AB8                       u3853 0A99  
                     u3845 0A65                       u3781 099A                       u6085 10E3  
                     u6245 0E7C                       u6165 0CCF                       u6501 1565  
                     u4750 1B1D                       u4814 1DA1                       u4830 195C  
                     u6350 1BD7                       u4590 1FE6                       u3942 0BAD  
                     u3862 0ABF                       u3790 09A0                       u6270 0F4B  
                     u6190 0D9E                       u6510 1574                       u7127 1BA1  
                     u4751 1B1C                       u4815 1DA6                       u4831 195B  
                     u6351 1BD6                       u6335 1A32                       u4591 1FE5  
                     u4575 1FCF                       u3943 0BB4                       u3935 0B95  
                     u3863 0AC6                       u3791 099F                       u6095 1138  
                     u6271 0F4A                       u6255 0EB8                       u6191 0D9D  
                     u6175 0D0B                       u6511 1573                       i1l64 1C4D  
                     u4816 1DA7                       u4760 1D3B                       u4920 1D14  
                     u4840 1CB6                       u6440 06C7                       u6600 17A3  
                     u6520 15B8                       i1l65 1C43                       u7137 19B9  
                     u4825 1DC1                       u4761 1D3A                       u4921 1D13  
                     u4841 1CB5                       u6441 06C6                       u3881 0AEE  
                     u6265 0F03                       u6185 0D56                       u6601 17A2  
                     u6521 15B7                       u4770 1D57                       u4930 1D19  
                     u4850 1CCD                       u6370 1BEB                       u6450 06D9  
                     u3970 0BD8                       u3882 0AF5                       u5810 0819  
                     u6610 0027                       u6530 15EF                       i1l67 1C7B  
                     u7147 19C5                       u4755 1B19                       u4771 1D56  
                     u4931 1D18                       u4915 1D06                       u6371 1BEA  
                     u6451 06D8                       u6435 06B8                       u3971 0BD7  
                     u3955 0BB6                       u3891 0B1B                       u3883 0AFC  
                     u3875 0AC8                       u5811 0818                       u6611 17FA  
                     u6531 15EC                       u7067 088E                       u4780 1D63  
                     u4860 1CE3                       u3892 0B22                       u5900 0871  
                     u5820 0824                       u6700 0208                       u6620 0050  
                     u6540 15F3                       i1l69 1CA2                       u4781 1D62  
                     u4861 1CE2                       u6365 1BDC                       u3965 0BCD  
                     u3893 0B29                       u5901 0870                       u5821 0823  
                     u6285 0F5E                       u6701 0207                       u6621 004F  
                     u6605 179F                       u6541 15F2                       u7077 0932  
                     u4870 1CEA                       u6390 1C06                       u6470 06F6  
                     u3990 0BEC                       u5830 0835                       u5910 100D  
                     u6710 022A                       u6630 0077                       u6550 1630  
                     u7087 197B                       u4791 1D72                       u4871 1CE9  
                     u4855 1CC8                       u6391 1C05                       u6471 06F5  
                     u6455 06D5                       u3991 0BEB                       u5831 0834  
                     u5911 100C                       u6295 0F9A                       u6711 0229  
                     u6631 0076                       u6615 17F5                       u6551 162F  
                     u4792 1D73                       u5920 1018                       u6800 04C8  
                     u6720 0238                       u6640 0086                       u6560 1678  
                     u6480 1506                       u7097 1983                       u4793 1D78  
                     u6385 1BED                       u6465 06E8                       u3985 0BDB  
                     u5921 1017                       u6801 04C7                       u6721 0237  
                     u6641 0085                       u6561 1677                       u6481 1505  
                     u4794 1D79                       u4890 1CFC                       u5850 0847  
                     u5930 1023                       u6810 04E0                       u6650 00AF  
                     u6570 16C3                       u6490 1526                       u4795 1D7E  
                     u4891 1CFB                       u6395 1C02                       u5851 0846  
                     u5931 1022                       u6811 04DF                       u6715 0226  
                     u6651 00AE                       u6571 16C2                       u6491 1525  
                     u4796 1D7F                       u6900 0592                       u6820 04FA  
                     u6740 02F1                       u6580 175A                       u4885 1CEC  
                     u5845 0839                       u6901 0591                       u6821 04F9  
                     u6741 02F0                       u6645 0082                       u6581 1759  
                     u5870 0858                       u5950 1035                       u6910 059E  
                     u6830 050F                       u6750 0312                       u6670 01D0  
                     u6590 178C                       u5871 0857                       u5951 1034  
                     u6911 059D                       u6831 050E                       u6751 0311  
                     u6735 0247                       u6671 01CF                       u6591 178B  
                     u5960 103F                       u6920 05A8                       u6840 0517  
                     u6760 0321                       u6680 01DB                       u5865 0848  
                     u5961 103E                       u5945 1027                       u6921 05A7  
                     u6841 0516                       u6761 0320                       u6681 01DA  
                     u6665 019D                       u5890 086C                       u6930 05B6  
                     u6770 033C                       u6690 01F6                       u5891 086B  
                     u5875 0854                       u6931 05B5                       u6771 033B  
                     u6755 030E                       u6691 01F5                       u6675 01CC  
                     u5980 1052                       u6940 05CE                       u6860 0555  
                     u5885 0860                       u5981 1051                       u5965 103B  
                     u6941 05CD                       u6861 0554                       u6765 031D  
                     u5990 1057                       u6950 05E4                       u6870 0560  
                     u5991 1056                       u5975 1046                       u6951 05E3  
                     u6935 05B2                       u6871 055F                       u6855 0522  
                     u6960 05FB                       u6880 056B                       u6961 05FA  
                     u6945 05CA                       u6881 056A                       u6865 0551  
                     u6785 03C3                       u6970 0607                       u6890 0581  
                     u6971 0606                       u6891 0580                       u6795 0469  
                     u6885 0567                       u6990 0690                       u6991 068F  
                     u6895 057D                       u6985 0622                       _Vol1 00DB  
                     _Vol2 00D7          ?_LCD_Write_String 0020                       _main 087B  
       __size_of_LCD_Clear 000D                       btemp 007E                       start 000C  
       ??_LCD_Write_String 0022                      ??_ISR 0070           __end_of_LCD_Init 1BC5  
         __end_of_LCD_Port 1006              ___fltol@sign1 0062            __end_of___fladd 14F6  
                    ?_main 0070            __end_of___awdiv 087B            __end_of___flneg 195F  
          __end_of___awmod 1061            __end_of___flmul 0C9D            __end_of___flsub 1B71  
          __end_of___fltol 1D25                      _ANSEL 0188            __end_of___lldiv 1C2D  
          ___awdiv@divisor 0023            __end_of___llmod 06FF            __end_of___lwdiv 1AD1  
          __end_of___lwmod 0800            ___awdiv@counter 0028                      _RCREG 001A  
                    _PORTA 0005                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089     __end_of_LCD_Set_Cursor 19F1  
                    _Setup 1987            __end_of_dpowers 07A0                      _scale 0C9D  
          __end_of_isdigit 0812                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 06A9             _LCD_Write_Char 196C  
          __initialization 000F               __end_of_main 093C                     ??_main 00D3  
        __end_of_LCD_Clear 196C                  ??_LCD_Cmd 0075       __size_of__tdiv_to_l_ 00BD  
          ?_LCD_Set_Cursor 0020                     ?_Setup 0070           ___llmod@dividend 0031  
                   ?_scale 0046                     _ADRESH 001E           ___awdiv@dividend 0025  
                   _ANSELH 0189                     i1l3400 1C93                     i1l3402 1C97  
                   i1l3404 1C99                     i1l3406 1C9E                     i1l3408 1CA1  
                   i1l3380 1C2D                     i1l3390 1C66                     i1l3382 1C33  
                   i1l3392 1C6C                     i1l3384 1C37                     i1l3394 1C72  
                   i1l3386 1C3D                     i1l3396 1C77                     i1l3388 1C49  
                   i1l3398 1C7A                     u715_27 1C74                     u580_20 1C93  
                   u572_20 1C33                     u580_21 1C92                     u572_21 1C32  
                   u716_27 1C9B                     u573_20 1C3D                     u573_21 1C3C  
                   u574_20 1C49                     u574_21 1C48                     u575_20 1C53  
                   u575_21 1C51                     u575_22 1C54                     u576_20 1C5F  
                   u576_21 1C5D                     u576_22 1C60                     u577_20 1C66  
                   u577_21 1C65                     u578_20 1C80                     u578_21 1C7E  
                   u578_22 1C81                     u579_20 1C8C                     u579_21 1C8A  
                   u579_22 1C8D           __end_of___xxtofl 1E85     __end_of_LCD_Write_Char 1987  
                   _Lcdvar 0190           __end_of__powers_ 0744                     ___flge 1D25  
                   ___fleq 1AD1                  ??___fladd 0062                     _adcvar 00E0  
                   ___wmul 1A1A                  ??___awdiv 0027                  ??___flneg 0078  
                ??___awmod 0020                  ??___flmul 0034                  ??___flsub 0078  
                ??___fltol 005D                  ??___lldiv 0074                  ??___llmod 0075  
                ??___lwdiv 0026                  ??___lwmod 0020                     _fround 1061  
         ___awdiv@quotient 002A            ___awmod@divisor 0074            ___awmod@counter 0021  
                ??_isdigit 0074         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 00B3            LCD_Set_Cursor@a 0023            LCD_Set_Cursor@x 0022  
          LCD_Set_Cursor@y 0020                 ___flge@ff1 0020                 ___flge@ff2 0024  
             ___xxtofl@arg 0026               ___xxtofl@exp 0025               ___xxtofl@val 0074  
               ___fleq@ff1 0020                 ___fleq@ff2 0024    __end_of__initialization 0023  
                ?_LCD_Init 0070                 ___flneg@f1 0074                  ?_LCD_Port 0070  
               ___fltol@f1 0059            ?_LCD_Write_Char 0070             __pcstackCOMMON 0070  
            __end_of_Setup 19A8                  LCD_Port@a 0074              __end_of_scale 1000  
               __div_to_l_ 1F42                    ??_Setup 0074            __div_to_l_@exp1 002D  
          __div_to_l_@cntr 002C                    ??_scale 004A            __div_to_l_@quot 0028  
             sprintf@width 00BF                 __pbssBANK1 00D7                 __pbssBANK3 0190  
               ??_LCD_Init 0020                 ??_LCD_Port 0074              __div_to_l_@f1 0020  
            __div_to_l_@f2 0024          __end_of__Umul8_16 1A1A                 __pmaintext 087B  
                  ?___flge 0020                    ?___fleq 0020                    ?___wmul 0074  
               __pintentry 0004                    ?_fround 0046  __size_of_LCD_Write_String 0046  
                  _LCD_Cmd 19A8                  ?___xxtofl 0074                 __stringtab 0700  
        __end_of__npowers_ 0778            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 126E                    ___awdiv 0812                    ___flneg 1954  
                  ___awmod 1006                    ___flmul 093C                    ___flsub 1B21  
                  ___fltol 1CA9                    ___lldiv 1BC5            __size_of___wmul 002B  
                  ___llmod 06A9                    ___lwdiv 1A8B                 _fround$887 0055  
               _fround$888 0051                    ___lwmod 07C4                    _adcvar1 0079  
          __size_of_fround 020D           ??_LCD_Set_Cursor 0021                    __ptext1 14F6  
                  __ptext2 0C9D                    __ptext3 1006                    __ptext4 0812  
                  __ptext5 0800                    __ptext6 1061                    __ptext7 07C4  
                  __ptext8 1A8B                    __ptext9 093C               __size_of_ISR 007C  
              ?__div_to_l_ 0020                    _dpowers 0778                    _isdigit 0800  
               ??___xxtofl 0020                    _receive 0078           ___awmod@dividend 0076  
                _LCD_Clear 195F                    _sprintf 14F6                    clrloop0 194D  
     end_of_initialization 0023            ___lldiv@divisor 0020            ___lldiv@counter 002C  
                  psplit$0 C002D             __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024  
            ??__tdiv_to_l_ 0074                ___fladd@grs 006D              ___xxtofl@sign 0024  
               ?_LCD_Clear 0070          LCD_Write_String@a 0020          LCD_Write_String@i 0025  
         ??_LCD_Write_Char 0075                ___flmul@grs 003A          __size_of_LCD_Init 0054  
      __size_of__div_to_l_ 00BE          __size_of_LCD_Port 0006             __end_of___flge 1DC9  
           __end_of___fleq 1B21             __end_of___wmul 1A45           _LCD_Write_String 1A45  
        pnum$text1_split_1 002D             __end_of_fround 126E        start_initialization 000F  
              __end_of_ISR 1CA9        __end_of__tdiv_to_l_ 1F42            ___llmod@divisor 002D  
          ___llmod@counter 0076                   ??___flge 0074                   ??___fleq 0074  
                 ??___wmul 0078                  __Umul8_16 19F1            LCD_Write_Char@a 0076  
                 ??_fround 004A              sprintf@tmpval 00C1                  ___fladd@a 005E  
                ___fladd@b 005A                 fround@prec 0059                   ?_LCD_Cmd 0070  
                ___flmul@a 0030                  ___flmul@b 002C                __pbssCOMMON 0078  
                 LCD_Cmd@a 0077                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
              ??_LCD_Clear 0078          __size_of___xxtofl 00BC                sprintf@flag 00BD  
              sprintf@eexp 00C9                sprintf@fval 00CB                sprintf@prec 00D0  
         ___lwdiv@dividend 0024                   ?___fladd 005A                   ?___awdiv 0023  
                 ?___flneg 0074                   ?___awmod 0074                   ?___flmul 002C  
                 ?___flsub 00A0                   ?___fltol 0059                   ?___lldiv 0020  
                 ?___llmod 002D                  __npowers_ 0744                 ?__Umul8_16 0074  
                 ?___lwdiv 0022                   ?___lwmod 0074                  __pstrings 0700  
              __tdiv_to_l_ 1E85               ??__div_to_l_ 0074                   ?_isdigit 0070  
                _scale$889 0054             __size_of_Setup 0021           ___lwdiv@quotient 0027  
                 ?_sprintf 00A8             __size_of_scale 0363          interrupt_function 0004  
                 _LCD_Init 1B71             ___wmul@product 0020                   _LCD_Port 1000  
                clear_ram0 194C                   _PIR1bits 000C         __end_of__div_to_l_ 2000  
               _ADCON0bits 001F                __stringbase 070F          ___wmul@multiplier 0074  
         __size_of_LCD_Cmd 0023   __end_of_LCD_Write_String 1A8B                ??__Umul8_16 0076  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 005B           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003C         __end_of__stringtab 0710  
              _isdigit$714 0074                 sprintf@val 00C5                   ___xxtofl 1DC9  
         __size_of_isdigit 0012            ___lwdiv@divisor 0022            ___lwdiv@counter 0029  
                 __ptext10 19F1                   __ptext11 1E85                   __ptext20 1954  
                 __ptext12 1F42                   __ptext21 1D25                   __ptext13 1DC9  
                 __ptext30 1000                   __ptext22 1AD1                   __ptext14 1A1A  
                 __ptext31 1C2D                   __ptext23 1987                   __ptext15 06A9  
                 __ptext24 1A45                   __ptext16 1BC5                   __ptext25 196C  
                 __ptext17 1CA9                   __ptext26 19CB                   __ptext18 1B21  
                 __ptext27 1B71                   __ptext19 126E                   __ptext28 195F  
                 __ptext29 19A8                   __powers_ 0710    __size_of_LCD_Set_Cursor 0026  
                 _contador 00DF           __size_of_sprintf F1B3              __size_of_main 00C1  
                pnum$text1 000C                   isdigit@c 0075                   scale@scl 0058  
                 intlevel1 0000                  sprintf@ap 00BC           __tdiv_to_l_@exp1 002D  
         __tdiv_to_l_@cntr 002C                  sprintf@sp 00CF           __tdiv_to_l_@quot 0028  
         ___lwmod@dividend 0076           ___lldiv@dividend 0024                  stringcode 070A  
  __size_of_LCD_Write_Char 001B               ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0074  
                 sprintf@c 00D2                   sprintf@f 00A8           ___lldiv@quotient 0028  
          ___lwmod@divisor 0074            ___lwmod@counter 0021                   stringdir 070A  
                 stringtab 0700              ___fladd@signs 006A               ___fladd@aexp 006B  
             ___fladd@bexp 006C       __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
