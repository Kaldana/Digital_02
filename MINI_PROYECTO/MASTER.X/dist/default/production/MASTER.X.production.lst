

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 19:39:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  0107                     	;# 
   155  0108                     	;# 
   156  0109                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0185                     	;# 
   163  0187                     	;# 
   164  0188                     	;# 
   165  0189                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0185                     	;# 
   241  0187                     	;# 
   242  0188                     	;# 
   243  0189                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  008F                     	;# 
   369  0090                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  0105                     	;# 
   388  0107                     	;# 
   389  0108                     	;# 
   390  0109                     	;# 
   391  010C                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  0185                     	;# 
   397  0187                     	;# 
   398  0188                     	;# 
   399  0189                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0088                     	;# 
   442  0089                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  008F                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  0105                     	;# 
   466  0107                     	;# 
   467  0108                     	;# 
   468  0109                     	;# 
   469  010C                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0185                     	;# 
   475  0187                     	;# 
   476  0188                     	;# 
   477  0189                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480                           
   481                           	psect	strings
   482  0800                     __pstrings:
   483  0800                     stringtab:
   484  0800                     __stringtab:
   485                           
   486                           ;	String table - string pointers are 1 byte each
   487  0800  1BFF               	btfsc	btemp+1,7
   488  0801  280A               	ljmp	stringcode
   489  0802  1383               	bcf	3,7
   490  0803  187F               	btfsc	btemp+1,0
   491  0804  1783               	bsf	3,7
   492  0805  0800               	movf	0,w
   493  0806  0A84               	incf	4,f
   494  0807  1903               	skipnz
   495  0808  0AFF               	incf	btemp+1,f
   496  0809  0008               	return
   497  080A                     stringcode:
   498  080A                     stringdir:
   499  080A  3008               	movlw	high stringdir
   500  080B  008A               	movwf	10
   501  080C  0804               	movf	4,w
   502  080D  0A84               	incf	4,f
   503  080E  0782               	addwf	2,f
   504  080F                     __stringbase:
   505  080F  3400               	retlw	0
   506  0810                     __end_of__stringtab:
   507  0810                     __powers_:
   508  0810  3400               	retlw	0
   509  0811  3400               	retlw	0
   510  0812  3480               	retlw	128
   511  0813  343F               	retlw	63
   512  0814  3400               	retlw	0
   513  0815  3400               	retlw	0
   514  0816  3420               	retlw	32
   515  0817  3441               	retlw	65
   516  0818  3400               	retlw	0
   517  0819  3400               	retlw	0
   518  081A  34C8               	retlw	200
   519  081B  3442               	retlw	66
   520  081C  3400               	retlw	0
   521  081D  3400               	retlw	0
   522  081E  347A               	retlw	122
   523  081F  3444               	retlw	68
   524  0820  3400               	retlw	0
   525  0821  3440               	retlw	64
   526  0822  341C               	retlw	28
   527  0823  3446               	retlw	70
   528  0824  3400               	retlw	0
   529  0825  3450               	retlw	80
   530  0826  34C3               	retlw	195
   531  0827  3447               	retlw	71
   532  0828  3400               	retlw	0
   533  0829  3424               	retlw	36
   534  082A  3474               	retlw	116
   535  082B  3449               	retlw	73
   536  082C  3480               	retlw	128
   537  082D  3496               	retlw	150
   538  082E  3418               	retlw	24
   539  082F  344B               	retlw	75
   540  0830  3420               	retlw	32
   541  0831  34BC               	retlw	188
   542  0832  34BE               	retlw	190
   543  0833  344C               	retlw	76
   544  0834  3428               	retlw	40
   545  0835  346B               	retlw	107
   546  0836  346E               	retlw	110
   547  0837  344E               	retlw	78
   548  0838  34F9               	retlw	249
   549  0839  3402               	retlw	2
   550  083A  3415               	retlw	21
   551  083B  3450               	retlw	80
   552  083C  34EC               	retlw	236
   553  083D  3478               	retlw	120
   554  083E  34AD               	retlw	173
   555  083F  3460               	retlw	96
   556  0840  34CA               	retlw	202
   557  0841  34F2               	retlw	242
   558  0842  3449               	retlw	73
   559  0843  3471               	retlw	113
   560  0844                     __end_of__powers_:
   561  0844                     __npowers_:
   562  0844  3400               	retlw	0
   563  0845  3400               	retlw	0
   564  0846  3480               	retlw	128
   565  0847  343F               	retlw	63
   566  0848  34CD               	retlw	205
   567  0849  34CC               	retlw	204
   568  084A  34CC               	retlw	204
   569  084B  343D               	retlw	61
   570  084C  340A               	retlw	10
   571  084D  34D7               	retlw	215
   572  084E  3423               	retlw	35
   573  084F  343C               	retlw	60
   574  0850  346F               	retlw	111
   575  0851  3412               	retlw	18
   576  0852  3483               	retlw	131
   577  0853  343A               	retlw	58
   578  0854  3417               	retlw	23
   579  0855  34B7               	retlw	183
   580  0856  34D1               	retlw	209
   581  0857  3438               	retlw	56
   582  0858  34AC               	retlw	172
   583  0859  34C5               	retlw	197
   584  085A  3427               	retlw	39
   585  085B  3437               	retlw	55
   586  085C  34BD               	retlw	189
   587  085D  3437               	retlw	55
   588  085E  3486               	retlw	134
   589  085F  3435               	retlw	53
   590  0860  3495               	retlw	149
   591  0861  34BF               	retlw	191
   592  0862  34D6               	retlw	214
   593  0863  3433               	retlw	51
   594  0864  3477               	retlw	119
   595  0865  34CC               	retlw	204
   596  0866  342B               	retlw	43
   597  0867  3432               	retlw	50
   598  0868  345F               	retlw	95
   599  0869  3470               	retlw	112
   600  086A  3489               	retlw	137
   601  086B  3430               	retlw	48
   602  086C  34FF               	retlw	255
   603  086D  34E6               	retlw	230
   604  086E  34DB               	retlw	219
   605  086F  342E               	retlw	46
   606  0870  3408               	retlw	8
   607  0871  34E5               	retlw	229
   608  0872  343C               	retlw	60
   609  0873  341E               	retlw	30
   610  0874  3460               	retlw	96
   611  0875  3442               	retlw	66
   612  0876  34A2               	retlw	162
   613  0877  340D               	retlw	13
   614  0878                     __end_of__npowers_:
   615  0878                     _dpowers:
   616  0878  3401               	retlw	1
   617  0879  3400               	retlw	0
   618  087A  3400               	retlw	0
   619  087B  3400               	retlw	0
   620  087C  340A               	retlw	10
   621  087D  3400               	retlw	0
   622  087E  3400               	retlw	0
   623  087F  3400               	retlw	0
   624  0880  3464               	retlw	100
   625  0881  3400               	retlw	0
   626  0882  3400               	retlw	0
   627  0883  3400               	retlw	0
   628  0884  34E8               	retlw	232
   629  0885  3403               	retlw	3
   630  0886  3400               	retlw	0
   631  0887  3400               	retlw	0
   632  0888  3410               	retlw	16
   633  0889  3427               	retlw	39
   634  088A  3400               	retlw	0
   635  088B  3400               	retlw	0
   636  088C  34A0               	retlw	160
   637  088D  3486               	retlw	134
   638  088E  3401               	retlw	1
   639  088F  3400               	retlw	0
   640  0890  3440               	retlw	64
   641  0891  3442               	retlw	66
   642  0892  340F               	retlw	15
   643  0893  3400               	retlw	0
   644  0894  3480               	retlw	128
   645  0895  3496               	retlw	150
   646  0896  3498               	retlw	152
   647  0897  3400               	retlw	0
   648  0898  3400               	retlw	0
   649  0899  34E1               	retlw	225
   650  089A  34F5               	retlw	245
   651  089B  3405               	retlw	5
   652  089C  3400               	retlw	0
   653  089D  34CA               	retlw	202
   654  089E  349A               	retlw	154
   655  089F  343B               	retlw	59
   656  08A0                     __end_of_dpowers:
   657  0014                     _SSPCON	set	20
   658  001A                     _RCREG	set	26
   659  0019                     _TXREG	set	25
   660  0018                     _RCSTAbits	set	24
   661  000B                     _INTCONbits	set	11
   662  000C                     _PIR1bits	set	12
   663  0013                     _SSPBUF	set	19
   664  0007                     _PORTCbits	set	7
   665  0006                     _PORTB	set	6
   666  0009                     _PORTE	set	9
   667  0008                     _PORTD	set	8
   668  0005                     _PORTA	set	5
   669  0065                     _RCIF	set	101
   670  0049                     _RE1	set	73
   671  0048                     _RE0	set	72
   672  0094                     _SSPSTAT	set	148
   673  008C                     _PIE1bits	set	140
   674  0098                     _TXSTAbits	set	152
   675  0099                     _SPBRG	set	153
   676  0094                     _SSPSTATbits	set	148
   677  0087                     _TRISCbits	set	135
   678  0086                     _TRISB	set	134
   679  0089                     _TRISE	set	137
   680  0088                     _TRISD	set	136
   681  0085                     _TRISA	set	133
   682  04C1                     _TRMT	set	1217
   683  0189                     _ANSELH	set	393
   684  0188                     _ANSEL	set	392
   685  08A0                     STR_1:
   686  08A0  3441               	retlw	65	;'A'
   687  08A1  3444               	retlw	68	;'D'
   688  08A2  3443               	retlw	67	;'C'
   689  08A3  3420               	retlw	32	;' '
   690  08A4  3420               	retlw	32	;' '
   691  08A5  3443               	retlw	67	;'C'
   692  08A6  344F               	retlw	79	;'O'
   693  08A7  344E               	retlw	78	;'N'
   694  08A8  3454               	retlw	84	;'T'
   695  08A9  3420               	retlw	32	;' '
   696  08AA  3420               	retlw	32	;' '
   697  08AB  3420               	retlw	32	;' '
   698  08AC  3454               	retlw	84	;'T'
   699  08AD  3445               	retlw	69	;'E'
   700  08AE  344D               	retlw	77	;'M'
   701  08AF  3450               	retlw	80	;'P'
   702  08B0  3420               	retlw	32	;' '
   703  08B1  340A               	retlw	10
   704  08B2  3400               	retlw	0
   705  08B3                     STR_2:
   706  08B3  3425               	retlw	37	;'%'
   707  08B4  3431               	retlw	49	;'1'
   708  08B5  342E               	retlw	46	;'.'
   709  08B6  3432               	retlw	50	;'2'
   710  08B7  3466               	retlw	102	;'f'
   711  08B8  3420               	retlw	32	;' '
   712  08B9  3425               	retlw	37	;'%'
   713  08BA  3431               	retlw	49	;'1'
   714  08BB  342E               	retlw	46	;'.'
   715  08BC  3432               	retlw	50	;'2'
   716  08BD  3466               	retlw	102	;'f'
   717  08BE  3420               	retlw	32	;' '
   718  08BF  3420               	retlw	32	;' '
   719  08C0  3425               	retlw	37	;'%'
   720  08C1  3431               	retlw	49	;'1'
   721  08C2  342E               	retlw	46	;'.'
   722  08C3  3432               	retlw	50	;'2'
   723  08C4  3466               	retlw	102	;'f'
   724  08C5  3400               	retlw	0
   725  08C6                     STR_3:
   726  08C6  3441               	retlw	65	;'A'
   727  08C7  3444               	retlw	68	;'D'
   728  08C8  3443               	retlw	67	;'C'
   729  08C9  3420               	retlw	32	;' '
   730  08CA  3420               	retlw	32	;' '
   731  08CB  3443               	retlw	67	;'C'
   732  08CC  344F               	retlw	79	;'O'
   733  08CD  344E               	retlw	78	;'N'
   734  08CE  3454               	retlw	84	;'T'
   735  08CF  3420               	retlw	32	;' '
   736  08D0  3420               	retlw	32	;' '
   737  08D1  3454               	retlw	84	;'T'
   738  08D2  3445               	retlw	69	;'E'
   739  08D3  344D               	retlw	77	;'M'
   740  08D4  3450               	retlw	80	;'P'
   741  08D5  3400               	retlw	0
   742                           
   743                           	psect	cinit
   744  000F                     start_initialization:	
   745                           ; #config settings
   746                           
   747  000F                     __initialization:
   748                           
   749                           ; Clear objects allocated to COMMON
   750  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   751                           
   752                           ; Clear objects allocated to BANK1
   753  0010  1383               	bcf	3,7	;select IRP bank0
   754  0011  30D4               	movlw	low __pbssBANK1
   755  0012  0084               	movwf	4
   756  0013  30E3               	movlw	low (__pbssBANK1+15)
   757  0014  160A  118A  2001  120A  118A  	fcall	clear_ram0
   758                           
   759                           ; Clear objects allocated to BANK3
   760  0019  1783               	bsf	3,7	;select IRP bank2
   761  001A  3090               	movlw	low __pbssBANK3
   762  001B  0084               	movwf	4
   763  001C  30A4               	movlw	low (__pbssBANK3+20)
   764  001D  160A  118A  2001  120A  118A  	fcall	clear_ram0
   765  0022                     end_of_initialization:	
   766                           ;End of C runtime variable initialization code
   767                           
   768  0022                     __end_of__initialization:
   769  0022  0183               	clrf	3
   770  0023  160A  118A  28F2   	ljmp	_main	;jump to C main() function
   771                           
   772                           	psect	bssCOMMON
   773  007B                     __pbssCOMMON:
   774  007B                     _receive:
   775  007B                     	ds	1
   776                           
   777                           	psect	bssBANK1
   778  00D4                     __pbssBANK1:
   779  00D4                     _S3:
   780  00D4                     	ds	4
   781  00D8                     _S2:
   782  00D8                     	ds	4
   783  00DC                     _S1:
   784  00DC                     	ds	4
   785  00E0                     _temp_value:
   786  00E0                     	ds	1
   787  00E1                     _cont:
   788  00E1                     	ds	1
   789  00E2                     _adcvar:
   790  00E2                     	ds	1
   791                           
   792                           	psect	bssBANK3
   793  0190                     __pbssBANK3:
   794  0190                     _Lcdvar:
   795  0190                     	ds	20
   796                           
   797                           	psect	clrtext
   798  1001                     clear_ram0:	
   799                           ;	Called with FSR containing the base address, and
   800                           ;	W with the last address+1
   801                           
   802  1001  0064               	clrwdt	;clear the watchdog before getting into this loop
   803  1002                     clrloop0:
   804  1002  0180               	clrf	0	;clear RAM location pointed to by FSR
   805  1003  0A84               	incf	4,f	;increment pointer
   806  1004  0604               	xorwf	4,w	;XOR with final address
   807  1005  1903               	btfsc	3,2	;have we reached the end yet?
   808  1006  3400               	retlw	0	;all done for this memory range, return
   809  1007  0604               	xorwf	4,w	;XOR again to restore value
   810  1008  2802               	goto	clrloop0	;do the next byte
   811                           
   812                           	psect	cstackBANK1
   813  00A0                     __pcstackBANK1:
   814  00A0                     ?___flsub:
   815  00A0                     ___flsub@a:	
   816                           ; 4 bytes @ 0x0
   817                           
   818                           
   819                           ; 4 bytes @ 0x0
   820  00A0                     	ds	4
   821  00A4                     ___flsub@b:
   822                           
   823                           ; 4 bytes @ 0x4
   824  00A4                     	ds	4
   825  00A8                     ?_sprintf:
   826  00A8                     sprintf@f:	
   827                           ; 2 bytes @ 0x8
   828                           
   829                           
   830                           ; 1 bytes @ 0x8
   831  00A8                     	ds	13
   832  00B5                     _sprintf$1196:
   833                           
   834                           ; 4 bytes @ 0x15
   835  00B5                     	ds	4
   836  00B9                     sprintf@ap:
   837                           
   838                           ; 1 bytes @ 0x19
   839  00B9                     	ds	1
   840  00BA                     sprintf@val:
   841                           
   842                           ; 4 bytes @ 0x1A
   843  00BA                     	ds	4
   844  00BE                     sprintf@flag:
   845                           
   846                           ; 2 bytes @ 0x1E
   847  00BE                     	ds	2
   848  00C0                     sprintf@width:
   849                           
   850                           ; 2 bytes @ 0x20
   851  00C0                     	ds	2
   852  00C2                     sprintf@tmpval:
   853                           
   854                           ; 4 bytes @ 0x22
   855  00C2                     	ds	4
   856  00C6                     sprintf@eexp:
   857                           
   858                           ; 2 bytes @ 0x26
   859  00C6                     	ds	2
   860  00C8                     sprintf@fval:
   861                           
   862                           ; 4 bytes @ 0x28
   863  00C8                     	ds	4
   864  00CC                     sprintf@sp:
   865                           
   866                           ; 1 bytes @ 0x2C
   867  00CC                     	ds	1
   868  00CD                     sprintf@prec:
   869                           
   870                           ; 2 bytes @ 0x2D
   871  00CD                     	ds	2
   872  00CF                     sprintf@c:
   873                           
   874                           ; 1 bytes @ 0x2F
   875  00CF                     	ds	1
   876  00D0                     ??_main:
   877                           
   878                           ; 1 bytes @ 0x30
   879  00D0                     	ds	4
   880                           
   881                           	psect	cstackCOMMON
   882  0070                     __pcstackCOMMON:
   883  0070                     ?_isdigit:
   884  0070                     ?_SPI_MASTER:	
   885                           ; 1 bit 
   886                           
   887  0070                     ?_LCD_Init:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_LCD_Clear:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_Set_BaudRate:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_Init_Trans:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?_Init_Receive:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_USART_Write:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_LCD_Port:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_LCD_Cmd:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_Setup:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_ISR:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ??_ISR:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_main:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_LCD_Write_Char:	
   924                           ; 1 bytes @ 0x0
   925                           
   926                           
   927                           ; 1 bytes @ 0x0
   928  0070                     	ds	2
   929  0072                     ?___fleq:
   930  0072                     ?___flge:	
   931                           ; 1 bit 
   932                           
   933  0072                     ??_SPI_MASTER:	
   934                           ; 1 bit 
   935                           
   936  0072                     ??_Set_BaudRate:	
   937                           ; 1 bytes @ 0x2
   938                           
   939  0072                     ??_Init_Trans:	
   940                           ; 1 bytes @ 0x2
   941                           
   942  0072                     ??_Init_Receive:	
   943                           ; 1 bytes @ 0x2
   944                           
   945  0072                     ??_USART_Write:	
   946                           ; 1 bytes @ 0x2
   947                           
   948  0072                     ??_LCD_Port:	
   949                           ; 1 bytes @ 0x2
   950                           
   951  0072                     ??_isdigit:	
   952                           ; 1 bytes @ 0x2
   953                           
   954  0072                     ??_Setup:	
   955                           ; 1 bytes @ 0x2
   956                           
   957  0072                     ?__Umul8_16:	
   958                           ; 1 bytes @ 0x2
   959                           
   960  0072                     ?___wmul:	
   961                           ; 2 bytes @ 0x2
   962                           
   963  0072                     ?___awmod:	
   964                           ; 2 bytes @ 0x2
   965                           
   966  0072                     ?___lwmod:	
   967                           ; 2 bytes @ 0x2
   968                           
   969  0072                     ?__tdiv_to_l_:	
   970                           ; 2 bytes @ 0x2
   971                           
   972  0072                     ?__div_to_l_:	
   973                           ; 4 bytes @ 0x2
   974                           
   975  0072                     ?___lldiv:	
   976                           ; 4 bytes @ 0x2
   977                           
   978  0072                     ?___flneg:	
   979                           ; 4 bytes @ 0x2
   980                           
   981  0072                     ?___llmod:	
   982                           ; 4 bytes @ 0x2
   983                           
   984  0072                     ?___xxtofl:	
   985                           ; 4 bytes @ 0x2
   986                           
   987  0072                     LCD_Port@a:	
   988                           ; 4 bytes @ 0x2
   989                           
   990  0072                     USART_Write@a:	
   991                           ; 1 bytes @ 0x2
   992                           
   993  0072                     __Umul8_16@multiplicand:	
   994                           ; 1 bytes @ 0x2
   995                           
   996  0072                     _isdigit$1017:	
   997                           ; 1 bytes @ 0x2
   998                           
   999  0072                     ___wmul@multiplier:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002  0072                     ___awmod@divisor:	
  1003                           ; 2 bytes @ 0x2
  1004                           
  1005  0072                     ___lwmod@divisor:	
  1006                           ; 2 bytes @ 0x2
  1007                           
  1008  0072                     ___lldiv@divisor:	
  1009                           ; 2 bytes @ 0x2
  1010                           
  1011  0072                     __div_to_l_@f1:	
  1012                           ; 4 bytes @ 0x2
  1013                           
  1014  0072                     ___fleq@ff1:	
  1015                           ; 4 bytes @ 0x2
  1016                           
  1017  0072                     ___flge@ff1:	
  1018                           ; 4 bytes @ 0x2
  1019                           
  1020  0072                     ___flneg@f1:	
  1021                           ; 4 bytes @ 0x2
  1022                           
  1023  0072                     __tdiv_to_l_@f1:	
  1024                           ; 4 bytes @ 0x2
  1025                           
  1026  0072                     ___llmod@divisor:	
  1027                           ; 4 bytes @ 0x2
  1028                           
  1029  0072                     ___xxtofl@val:	
  1030                           ; 4 bytes @ 0x2
  1031                           
  1032                           
  1033                           ; 4 bytes @ 0x2
  1034  0072                     	ds	1
  1035  0073                     ?_USART_WriteStr:
  1036  0073                     ??_LCD_Cmd:	
  1037                           ; 1 bytes @ 0x3
  1038                           
  1039  0073                     ??_LCD_Write_Char:	
  1040                           ; 1 bytes @ 0x3
  1041                           
  1042  0073                     isdigit@c:	
  1043                           ; 1 bytes @ 0x3
  1044                           
  1045  0073                     USART_WriteStr@a:	
  1046                           ; 1 bytes @ 0x3
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x3
  1050  0073                     	ds	1
  1051  0074                     ??__Umul8_16:
  1052  0074                     LCD_Write_Char@a:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055  0074                     ___wmul@multiplicand:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058  0074                     ___awmod@dividend:	
  1059                           ; 2 bytes @ 0x4
  1060                           
  1061  0074                     ___lwmod@dividend:	
  1062                           ; 2 bytes @ 0x4
  1063                           
  1064                           
  1065                           ; 2 bytes @ 0x4
  1066  0074                     	ds	1
  1067  0075                     ??_USART_WriteStr:
  1068  0075                     ?_LCD_Write_String:	
  1069                           ; 1 bytes @ 0x5
  1070                           
  1071  0075                     LCD_Cmd@a:	
  1072                           ; 1 bytes @ 0x5
  1073                           
  1074  0075                     LCD_Write_String@a:	
  1075                           ; 1 bytes @ 0x5
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x5
  1079  0075                     	ds	1
  1080  0076                     ??_LCD_Init:
  1081  0076                     ??_LCD_Clear:	
  1082                           ; 1 bytes @ 0x6
  1083                           
  1084  0076                     ?_LCD_Set_Cursor:	
  1085                           ; 1 bytes @ 0x6
  1086                           
  1087  0076                     ??___wmul:	
  1088                           ; 1 bytes @ 0x6
  1089                           
  1090  0076                     ??___awmod:	
  1091                           ; 1 bytes @ 0x6
  1092                           
  1093  0076                     ??___flneg:	
  1094                           ; 1 bytes @ 0x6
  1095                           
  1096  0076                     ??___lwmod:	
  1097                           ; 1 bytes @ 0x6
  1098                           
  1099  0076                     ??___xxtofl:	
  1100                           ; 1 bytes @ 0x6
  1101                           
  1102  0076                     LCD_Set_Cursor@y:	
  1103                           ; 1 bytes @ 0x6
  1104                           
  1105  0076                     USART_WriteStr@i:	
  1106                           ; 1 bytes @ 0x6
  1107                           
  1108  0076                     ___wmul@product:	
  1109                           ; 1 bytes @ 0x6
  1110                           
  1111  0076                     __Umul8_16@product:	
  1112                           ; 2 bytes @ 0x6
  1113                           
  1114  0076                     ___lldiv@dividend:	
  1115                           ; 2 bytes @ 0x6
  1116                           
  1117  0076                     __div_to_l_@f2:	
  1118                           ; 4 bytes @ 0x6
  1119                           
  1120  0076                     ___fleq@ff2:	
  1121                           ; 4 bytes @ 0x6
  1122                           
  1123  0076                     ___flge@ff2:	
  1124                           ; 4 bytes @ 0x6
  1125                           
  1126  0076                     __tdiv_to_l_@f2:	
  1127                           ; 4 bytes @ 0x6
  1128                           
  1129  0076                     ___llmod@dividend:	
  1130                           ; 4 bytes @ 0x6
  1131                           
  1132                           
  1133                           ; 4 bytes @ 0x6
  1134  0076                     	ds	1
  1135  0077                     ??_LCD_Set_Cursor:
  1136  0077                     ??_LCD_Write_String:	
  1137                           ; 1 bytes @ 0x7
  1138                           
  1139  0077                     ___awmod@counter:	
  1140                           ; 1 bytes @ 0x7
  1141                           
  1142  0077                     ___lwmod@counter:	
  1143                           ; 1 bytes @ 0x7
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x7
  1147  0077                     	ds	1
  1148  0078                     ??___lwdiv:
  1149  0078                     LCD_Set_Cursor@x:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152  0078                     ___awmod@sign:	
  1153                           ; 1 bytes @ 0x8
  1154                           
  1155  0078                     __Umul8_16@word_mpld:	
  1156                           ; 1 bytes @ 0x8
  1157                           
  1158                           
  1159                           ; 2 bytes @ 0x8
  1160  0078                     	ds	1
  1161  0079                     ??___awdiv:
  1162  0079                     LCD_Set_Cursor@a:	
  1163                           ; 1 bytes @ 0x9
  1164                           
  1165                           
  1166                           ; 1 bytes @ 0x9
  1167  0079                     	ds	1
  1168  007A                     ??__div_to_l_:
  1169  007A                     ??___lldiv:	
  1170                           ; 1 bytes @ 0xA
  1171                           
  1172  007A                     ??___llmod:	
  1173                           ; 1 bytes @ 0xA
  1174                           
  1175  007A                     __Umul8_16@multiplier:	
  1176                           ; 1 bytes @ 0xA
  1177                           
  1178                           
  1179                           ; 1 bytes @ 0xA
  1180  007A                     	ds	1
  1181  007B                     ??___flsub:
  1182                           
  1183                           	psect	cstackBANK0
  1184  0020                     __pcstackBANK0:	
  1185                           ; 1 bytes @ 0xB
  1186                           
  1187  0020                     ??__tdiv_to_l_:
  1188  0020                     ??___fleq:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0020                     ??___flge:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0020                     ?___awdiv:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0020                     ?___lwdiv:	
  1198                           ; 2 bytes @ 0x0
  1199                           
  1200  0020                     ___llmod@counter:	
  1201                           ; 2 bytes @ 0x0
  1202                           
  1203  0020                     ___xxtofl@sign:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0020                     LCD_Write_String@i:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0020                     ___awdiv@divisor:	
  1210                           ; 2 bytes @ 0x0
  1211                           
  1212  0020                     ___lwdiv@divisor:	
  1213                           ; 2 bytes @ 0x0
  1214                           
  1215  0020                     ___lldiv@quotient:	
  1216                           ; 2 bytes @ 0x0
  1217                           
  1218  0020                     __div_to_l_@quot:	
  1219                           ; 4 bytes @ 0x0
  1220                           
  1221                           
  1222                           ; 4 bytes @ 0x0
  1223  0020                     	ds	1
  1224  0021                     ___xxtofl@exp:
  1225                           
  1226                           ; 1 bytes @ 0x1
  1227  0021                     	ds	1
  1228  0022                     ___awdiv@dividend:
  1229  0022                     ___lwdiv@dividend:	
  1230                           ; 2 bytes @ 0x2
  1231                           
  1232  0022                     ___xxtofl@arg:	
  1233                           ; 2 bytes @ 0x2
  1234                           
  1235                           
  1236                           ; 4 bytes @ 0x2
  1237  0022                     	ds	2
  1238  0024                     ___lldiv@counter:
  1239  0024                     ___awdiv@counter:	
  1240                           ; 1 bytes @ 0x4
  1241                           
  1242  0024                     __div_to_l_@cntr:	
  1243                           ; 1 bytes @ 0x4
  1244                           
  1245  0024                     ___lwdiv@counter:	
  1246                           ; 1 bytes @ 0x4
  1247                           
  1248  0024                     __tdiv_to_l_@quot:	
  1249                           ; 1 bytes @ 0x4
  1250                           
  1251                           
  1252                           ; 4 bytes @ 0x4
  1253  0024                     	ds	1
  1254  0025                     ___awdiv@sign:
  1255  0025                     __div_to_l_@exp1:	
  1256                           ; 1 bytes @ 0x5
  1257                           
  1258  0025                     ___lwdiv@quotient:	
  1259                           ; 1 bytes @ 0x5
  1260                           
  1261                           
  1262                           ; 2 bytes @ 0x5
  1263  0025                     	ds	1
  1264  0026                     ___awdiv@quotient:
  1265                           
  1266                           ; 2 bytes @ 0x6
  1267  0026                     	ds	2
  1268  0028                     ?___flmul:
  1269  0028                     __tdiv_to_l_@cntr:	
  1270                           ; 4 bytes @ 0x8
  1271                           
  1272  0028                     ___flmul@b:	
  1273                           ; 1 bytes @ 0x8
  1274                           
  1275                           
  1276                           ; 4 bytes @ 0x8
  1277  0028                     	ds	1
  1278  0029                     __tdiv_to_l_@exp1:
  1279                           
  1280                           ; 1 bytes @ 0x9
  1281  0029                     	ds	3
  1282  002C                     ___flmul@a:
  1283                           
  1284                           ; 4 bytes @ 0xC
  1285  002C                     	ds	4
  1286  0030                     ??___flmul:
  1287                           
  1288                           ; 1 bytes @ 0x10
  1289  0030                     	ds	5
  1290  0035                     ___flmul@sign:
  1291                           
  1292                           ; 1 bytes @ 0x15
  1293  0035                     	ds	1
  1294  0036                     ___flmul@grs:
  1295                           
  1296                           ; 4 bytes @ 0x16
  1297  0036                     	ds	4
  1298  003A                     ___flmul@aexp:
  1299                           
  1300                           ; 1 bytes @ 0x1A
  1301  003A                     	ds	1
  1302  003B                     ___flmul@bexp:
  1303                           
  1304                           ; 1 bytes @ 0x1B
  1305  003B                     	ds	1
  1306  003C                     ___flmul@prod:
  1307                           
  1308                           ; 4 bytes @ 0x1C
  1309  003C                     	ds	4
  1310  0040                     ___flmul@temp:
  1311                           
  1312                           ; 2 bytes @ 0x20
  1313  0040                     	ds	2
  1314  0042                     ?_fround:
  1315  0042                     ?_scale:	
  1316                           ; 4 bytes @ 0x22
  1317                           
  1318                           
  1319                           ; 4 bytes @ 0x22
  1320  0042                     	ds	4
  1321  0046                     ??_fround:
  1322  0046                     ??_scale:	
  1323                           ; 1 bytes @ 0x26
  1324                           
  1325                           
  1326                           ; 1 bytes @ 0x26
  1327  0046                     	ds	7
  1328  004D                     _fround$1194:
  1329                           
  1330                           ; 4 bytes @ 0x2D
  1331  004D                     	ds	3
  1332  0050                     _scale$1195:
  1333                           
  1334                           ; 4 bytes @ 0x30
  1335  0050                     	ds	1
  1336  0051                     _fround$1193:
  1337                           
  1338                           ; 4 bytes @ 0x31
  1339  0051                     	ds	3
  1340  0054                     scale@scl:
  1341                           
  1342                           ; 1 bytes @ 0x34
  1343  0054                     	ds	1
  1344  0055                     ?___fltol:
  1345  0055                     fround@prec:	
  1346                           ; 4 bytes @ 0x35
  1347                           
  1348  0055                     ___fltol@f1:	
  1349                           ; 1 bytes @ 0x35
  1350                           
  1351                           
  1352                           ; 4 bytes @ 0x35
  1353  0055                     	ds	1
  1354  0056                     ?___fladd:
  1355  0056                     ___fladd@b:	
  1356                           ; 4 bytes @ 0x36
  1357                           
  1358                           
  1359                           ; 4 bytes @ 0x36
  1360  0056                     	ds	3
  1361  0059                     ??___fltol:
  1362                           
  1363                           ; 1 bytes @ 0x39
  1364  0059                     	ds	1
  1365  005A                     ___fladd@a:
  1366                           
  1367                           ; 4 bytes @ 0x3A
  1368  005A                     	ds	4
  1369  005E                     ??___fladd:
  1370  005E                     ___fltol@sign1:	
  1371                           ; 1 bytes @ 0x3E
  1372                           
  1373                           
  1374                           ; 1 bytes @ 0x3E
  1375  005E                     	ds	1
  1376  005F                     ___fltol@exp1:
  1377                           
  1378                           ; 1 bytes @ 0x3F
  1379  005F                     	ds	7
  1380  0066                     ___fladd@signs:
  1381                           
  1382                           ; 1 bytes @ 0x46
  1383  0066                     	ds	1
  1384  0067                     ___fladd@aexp:
  1385                           
  1386                           ; 1 bytes @ 0x47
  1387  0067                     	ds	1
  1388  0068                     ___fladd@bexp:
  1389                           
  1390                           ; 1 bytes @ 0x48
  1391  0068                     	ds	1
  1392  0069                     ___fladd@grs:
  1393                           
  1394                           ; 1 bytes @ 0x49
  1395  0069                     	ds	1
  1396  006A                     ??_sprintf:
  1397                           
  1398                           ; 1 bytes @ 0x4A
  1399  006A                     	ds	5
  1400                           
  1401                           	psect	maintext
  1402  10F2                     __pmaintext:	
  1403 ;;
  1404 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1405 ;;
  1406 ;; *************** function _main *****************
  1407 ;; Defined at:
  1408 ;;		line 109 in file "Master_main.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : B00/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1422 ;;      Params:         0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0
  1424 ;;      Temps:          0       0       4       0       0
  1425 ;;      Totals:         0       0       4       0       0
  1426 ;;Total ram usage:        4 bytes
  1427 ;; Hardware stack levels required when called:    5
  1428 ;; This function calls:
  1429 ;;		_Init_Receive
  1430 ;;		_Init_Trans
  1431 ;;		_LCD_Clear
  1432 ;;		_LCD_Init
  1433 ;;		_LCD_Set_Cursor
  1434 ;;		_LCD_Write_String
  1435 ;;		_Set_BaudRate
  1436 ;;		_Setup
  1437 ;;		_USART_Write
  1438 ;;		_USART_WriteStr
  1439 ;;		___flmul
  1440 ;;		___xxtofl
  1441 ;;		_sprintf
  1442 ;; This function is called by:
  1443 ;;		Startup code after reset
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _main
  1449  10F2                     _main:
  1450  10F2                     l3953:	
  1451                           ;incstack = 0
  1452                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1453                           
  1454                           
  1455                           ;Master_main.c: 110:     Setup();
  1456  10F2  160A  158A  22A5  160A  118A  	fcall	_Setup
  1457                           
  1458                           ;Master_main.c: 111:     LCD_Init();
  1459  10F7  160A  158A  23A1  160A  118A  	fcall	_LCD_Init
  1460                           
  1461                           ;Master_main.c: 112:     LCD_Clear();
  1462  10FC  120A  158A  20D6  160A  118A  	fcall	_LCD_Clear
  1463                           
  1464                           ;Master_main.c: 113:     Set_BaudRate();
  1465  1101  160A  158A  219A  160A  118A  	fcall	_Set_BaudRate
  1466  1106                     l3955:
  1467                           
  1468                           ;Master_main.c: 114:     Init_Trans();
  1469  1106  160A  158A  21D7  160A  118A  	fcall	_Init_Trans
  1470  110B                     l3957:
  1471                           
  1472                           ;Master_main.c: 115:     Init_Receive();
  1473  110B  160A  158A  21AC  160A  118A  	fcall	_Init_Receive
  1474  1110                     l3959:
  1475                           
  1476                           ;Master_main.c: 119:         PORTCbits.RC0 = 0;
  1477  1110  1283               	bcf	3,5	;RP0=0, select bank0
  1478  1111  1303               	bcf	3,6	;RP1=0, select bank0
  1479  1112  1007               	bcf	7,0	;volatile
  1480  1113                     l3961:
  1481                           
  1482                           ;Master_main.c: 120:         SSPBUF = 0;
  1483  1113  0193               	clrf	19	;volatile
  1484  1114                     l3963:
  1485                           
  1486                           ;Master_main.c: 121:         if(SSPSTATbits.BF == 0){
  1487  1114  1683               	bsf	3,5	;RP0=1, select bank1
  1488  1115  1303               	bcf	3,6	;RP1=0, select bank1
  1489  1116  1814               	btfsc	20,0	;volatile
  1490  1117  2919               	goto	u6351
  1491  1118  291A               	goto	u6350
  1492  1119                     u6351:
  1493  1119  2922               	goto	l82
  1494  111A                     u6350:
  1495  111A                     l3965:
  1496                           
  1497                           ;Master_main.c: 122:             adcvar = SSPBUF;
  1498  111A  1283               	bcf	3,5	;RP0=0, select bank0
  1499  111B  1303               	bcf	3,6	;RP1=0, select bank0
  1500  111C  0813               	movf	19,w	;volatile
  1501  111D  1683               	bsf	3,5	;RP0=1, select bank1
  1502  111E  1303               	bcf	3,6	;RP1=0, select bank1
  1503  111F  00D0               	movwf	??_main^(0+128)
  1504  1120  0850               	movf	??_main^(0+128),w
  1505  1121  00E2               	movwf	_adcvar^(0+128)
  1506  1122                     l82:	
  1507                           ;Master_main.c: 123:         }
  1508                           
  1509                           
  1510                           ;Master_main.c: 124:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1511  1122  3003               	movlw	3
  1512  1123  1683               	bsf	3,5	;RP0=1, select bank1
  1513  1124  1303               	bcf	3,6	;RP1=0, select bank1
  1514  1125  00D1               	movwf	(??_main^(0+128)+1)
  1515  1126  3097               	movlw	151
  1516  1127  00D0               	movwf	??_main^(0+128)
  1517  1128                     u6387:
  1518  1128  0BD0               	decfsz	??_main^(0+128),f
  1519  1129  2928               	goto	u6387
  1520  112A  0BD1               	decfsz	(??_main^(0+128)+1),f
  1521  112B  2928               	goto	u6387
  1522  112C                     l3967:
  1523                           
  1524                           ;Master_main.c: 125:         PORTCbits.RC0 = 1;
  1525  112C  1283               	bcf	3,5	;RP0=0, select bank0
  1526  112D  1303               	bcf	3,6	;RP1=0, select bank0
  1527  112E  1407               	bsf	7,0	;volatile
  1528  112F                     l3969:
  1529                           
  1530                           ;Master_main.c: 127:         PORTCbits.RC1 = 0;
  1531  112F  1087               	bcf	7,1	;volatile
  1532  1130                     l3971:
  1533                           
  1534                           ;Master_main.c: 128:         SSPBUF = 0;
  1535  1130  0193               	clrf	19	;volatile
  1536  1131                     l3973:
  1537                           
  1538                           ;Master_main.c: 129:         if(SSPSTATbits.BF == 0){
  1539  1131  1683               	bsf	3,5	;RP0=1, select bank1
  1540  1132  1303               	bcf	3,6	;RP1=0, select bank1
  1541  1133  1814               	btfsc	20,0	;volatile
  1542  1134  2936               	goto	u6361
  1543  1135  2937               	goto	u6360
  1544  1136                     u6361:
  1545  1136  293F               	goto	l83
  1546  1137                     u6360:
  1547  1137                     l3975:
  1548                           
  1549                           ;Master_main.c: 130:             cont = SSPBUF;
  1550  1137  1283               	bcf	3,5	;RP0=0, select bank0
  1551  1138  1303               	bcf	3,6	;RP1=0, select bank0
  1552  1139  0813               	movf	19,w	;volatile
  1553  113A  1683               	bsf	3,5	;RP0=1, select bank1
  1554  113B  1303               	bcf	3,6	;RP1=0, select bank1
  1555  113C  00D0               	movwf	??_main^(0+128)
  1556  113D  0850               	movf	??_main^(0+128),w
  1557  113E  00E1               	movwf	_cont^(0+128)
  1558  113F                     l83:	
  1559                           ;Master_main.c: 131:         }
  1560                           
  1561                           
  1562                           ;Master_main.c: 132:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1563  113F  3003               	movlw	3
  1564  1140  1683               	bsf	3,5	;RP0=1, select bank1
  1565  1141  1303               	bcf	3,6	;RP1=0, select bank1
  1566  1142  00D1               	movwf	(??_main^(0+128)+1)
  1567  1143  3097               	movlw	151
  1568  1144  00D0               	movwf	??_main^(0+128)
  1569  1145                     u6397:
  1570  1145  0BD0               	decfsz	??_main^(0+128),f
  1571  1146  2945               	goto	u6397
  1572  1147  0BD1               	decfsz	(??_main^(0+128)+1),f
  1573  1148  2945               	goto	u6397
  1574  1149                     l3977:
  1575                           
  1576                           ;Master_main.c: 133:         PORTCbits.RC1 = 1;
  1577  1149  1283               	bcf	3,5	;RP0=0, select bank0
  1578  114A  1303               	bcf	3,6	;RP1=0, select bank0
  1579  114B  1487               	bsf	7,1	;volatile
  1580  114C                     l3979:
  1581                           
  1582                           ;Master_main.c: 135:         PORTCbits.RC2 = 0;
  1583  114C  1107               	bcf	7,2	;volatile
  1584  114D                     l3981:
  1585                           
  1586                           ;Master_main.c: 136:         SSPBUF = 0;
  1587  114D  0193               	clrf	19	;volatile
  1588  114E                     l3983:
  1589                           
  1590                           ;Master_main.c: 137:         if(SSPSTATbits.BF == 0){
  1591  114E  1683               	bsf	3,5	;RP0=1, select bank1
  1592  114F  1303               	bcf	3,6	;RP1=0, select bank1
  1593  1150  1814               	btfsc	20,0	;volatile
  1594  1151  2953               	goto	u6371
  1595  1152  2954               	goto	u6370
  1596  1153                     u6371:
  1597  1153  295C               	goto	l84
  1598  1154                     u6370:
  1599  1154                     l3985:
  1600                           
  1601                           ;Master_main.c: 138:             temp_value = SSPBUF;
  1602  1154  1283               	bcf	3,5	;RP0=0, select bank0
  1603  1155  1303               	bcf	3,6	;RP1=0, select bank0
  1604  1156  0813               	movf	19,w	;volatile
  1605  1157  1683               	bsf	3,5	;RP0=1, select bank1
  1606  1158  1303               	bcf	3,6	;RP1=0, select bank1
  1607  1159  00D0               	movwf	??_main^(0+128)
  1608  115A  0850               	movf	??_main^(0+128),w
  1609  115B  00E0               	movwf	_temp_value^(0+128)
  1610  115C                     l84:	
  1611                           ;Master_main.c: 139:         }
  1612                           
  1613                           
  1614                           ;Master_main.c: 140:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1615  115C  3003               	movlw	3
  1616  115D  1683               	bsf	3,5	;RP0=1, select bank1
  1617  115E  1303               	bcf	3,6	;RP1=0, select bank1
  1618  115F  00D1               	movwf	(??_main^(0+128)+1)
  1619  1160  3097               	movlw	151
  1620  1161  00D0               	movwf	??_main^(0+128)
  1621  1162                     u6407:
  1622  1162  0BD0               	decfsz	??_main^(0+128),f
  1623  1163  2962               	goto	u6407
  1624  1164  0BD1               	decfsz	(??_main^(0+128)+1),f
  1625  1165  2962               	goto	u6407
  1626  1166                     l3987:
  1627                           
  1628                           ;Master_main.c: 141:         PORTCbits.RC2 = 1;
  1629  1166  1283               	bcf	3,5	;RP0=0, select bank0
  1630  1167  1303               	bcf	3,6	;RP1=0, select bank0
  1631  1168  1507               	bsf	7,2	;volatile
  1632                           
  1633                           ;Master_main.c: 143:         PORTB = temp_value;
  1634  1169  1683               	bsf	3,5	;RP0=1, select bank1
  1635  116A  1303               	bcf	3,6	;RP1=0, select bank1
  1636  116B  0860               	movf	_temp_value^(0+128),w
  1637  116C  1283               	bcf	3,5	;RP0=0, select bank0
  1638  116D  1303               	bcf	3,6	;RP1=0, select bank0
  1639  116E  0086               	movwf	6	;volatile
  1640  116F                     l3989:
  1641                           
  1642                           ;Master_main.c: 144:         S1 = adcvar*(0.0196);
  1643  116F  303C               	movlw	60
  1644  1170  00AB               	movwf	___flmul@b+3
  1645  1171  30A0               	movlw	160
  1646  1172  00AA               	movwf	___flmul@b+2
  1647  1173  3090               	movlw	144
  1648  1174  00A9               	movwf	___flmul@b+1
  1649  1175  302E               	movlw	46
  1650  1176  00A8               	movwf	___flmul@b
  1651  1177  1683               	bsf	3,5	;RP0=1, select bank1
  1652  1178  1303               	bcf	3,6	;RP1=0, select bank1
  1653  1179  0862               	movf	_adcvar^(0+128),w
  1654  117A  00D0               	movwf	??_main^(0+128)
  1655  117B  01D1               	clrf	(??_main^(0+128)+1)
  1656  117C  01D2               	clrf	(??_main^(0+128)+2)
  1657  117D  01D3               	clrf	(??_main^(0+128)+3)
  1658  117E  0853               	movf	(??_main+3)^(0+128),w
  1659  117F  00F5               	movwf	___xxtofl@val+3
  1660  1180  0852               	movf	(??_main+2)^(0+128),w
  1661  1181  00F4               	movwf	___xxtofl@val+2
  1662  1182  0851               	movf	(??_main+1)^(0+128),w
  1663  1183  00F3               	movwf	___xxtofl@val+1
  1664  1184  0850               	movf	??_main^(0+128),w
  1665  1185  00F2               	movwf	___xxtofl@val
  1666  1186  3001               	movlw	1
  1667  1187  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1668  118C  0875               	movf	?___xxtofl+3,w
  1669  118D  1283               	bcf	3,5	;RP0=0, select bank0
  1670  118E  1303               	bcf	3,6	;RP1=0, select bank0
  1671  118F  00AF               	movwf	___flmul@a+3
  1672  1190  0874               	movf	?___xxtofl+2,w
  1673  1191  00AE               	movwf	___flmul@a+2
  1674  1192  0873               	movf	?___xxtofl+1,w
  1675  1193  00AD               	movwf	___flmul@a+1
  1676  1194  0872               	movf	?___xxtofl,w
  1677  1195  00AC               	movwf	___flmul@a
  1678  1196  120A  158A  213C  160A  118A  	fcall	___flmul
  1679  119B  1283               	bcf	3,5	;RP0=0, select bank0
  1680  119C  1303               	bcf	3,6	;RP1=0, select bank0
  1681  119D  082B               	movf	?___flmul+3,w
  1682  119E  1683               	bsf	3,5	;RP0=1, select bank1
  1683  119F  1303               	bcf	3,6	;RP1=0, select bank1
  1684  11A0  00DF               	movwf	(_S1+3)^(0+128)
  1685  11A1  1283               	bcf	3,5	;RP0=0, select bank0
  1686  11A2  1303               	bcf	3,6	;RP1=0, select bank0
  1687  11A3  082A               	movf	?___flmul+2,w
  1688  11A4  1683               	bsf	3,5	;RP0=1, select bank1
  1689  11A5  1303               	bcf	3,6	;RP1=0, select bank1
  1690  11A6  00DE               	movwf	(_S1+2)^(0+128)
  1691  11A7  1283               	bcf	3,5	;RP0=0, select bank0
  1692  11A8  1303               	bcf	3,6	;RP1=0, select bank0
  1693  11A9  0829               	movf	?___flmul+1,w
  1694  11AA  1683               	bsf	3,5	;RP0=1, select bank1
  1695  11AB  1303               	bcf	3,6	;RP1=0, select bank1
  1696  11AC  00DD               	movwf	(_S1+1)^(0+128)
  1697  11AD  1283               	bcf	3,5	;RP0=0, select bank0
  1698  11AE  1303               	bcf	3,6	;RP1=0, select bank0
  1699  11AF  0828               	movf	?___flmul,w
  1700  11B0  1683               	bsf	3,5	;RP0=1, select bank1
  1701  11B1  1303               	bcf	3,6	;RP1=0, select bank1
  1702  11B2  00DC               	movwf	_S1^(0+128)
  1703  11B3                     l3991:
  1704                           
  1705                           ;Master_main.c: 145:         S2 = cont;
  1706  11B3  0861               	movf	_cont^(0+128),w
  1707  11B4  00D0               	movwf	??_main^(0+128)
  1708  11B5  01D1               	clrf	(??_main^(0+128)+1)
  1709  11B6  01D2               	clrf	(??_main^(0+128)+2)
  1710  11B7  01D3               	clrf	(??_main^(0+128)+3)
  1711  11B8  0853               	movf	(??_main+3)^(0+128),w
  1712  11B9  00F5               	movwf	___xxtofl@val+3
  1713  11BA  0852               	movf	(??_main+2)^(0+128),w
  1714  11BB  00F4               	movwf	___xxtofl@val+2
  1715  11BC  0851               	movf	(??_main+1)^(0+128),w
  1716  11BD  00F3               	movwf	___xxtofl@val+1
  1717  11BE  0850               	movf	??_main^(0+128),w
  1718  11BF  00F2               	movwf	___xxtofl@val
  1719  11C0  3000               	movlw	0
  1720  11C1  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1721  11C6  0875               	movf	?___xxtofl+3,w
  1722  11C7  1683               	bsf	3,5	;RP0=1, select bank1
  1723  11C8  1303               	bcf	3,6	;RP1=0, select bank1
  1724  11C9  00DB               	movwf	(_S2+3)^(0+128)
  1725  11CA  0874               	movf	?___xxtofl+2,w
  1726  11CB  00DA               	movwf	(_S2+2)^(0+128)
  1727  11CC  0873               	movf	?___xxtofl+1,w
  1728  11CD  00D9               	movwf	(_S2+1)^(0+128)
  1729  11CE  0872               	movf	?___xxtofl,w
  1730  11CF  00D8               	movwf	_S2^(0+128)
  1731  11D0                     l3993:
  1732                           
  1733                           ;Master_main.c: 146:         S3 = temp_value*(2);
  1734  11D0  0860               	movf	_temp_value^(0+128),w
  1735  11D1  00D0               	movwf	??_main^(0+128)
  1736  11D2  01D1               	clrf	(??_main^(0+128)+1)
  1737  11D3  1003               	clrc
  1738  11D4  0D50               	rlf	??_main^(0+128),w
  1739  11D5  00F2               	movwf	___xxtofl@val
  1740  11D6  0D51               	rlf	(??_main+1)^(0+128),w
  1741  11D7  00F3               	movwf	___xxtofl@val+1
  1742  11D8  01F4               	clrf	___xxtofl@val+2
  1743  11D9  1BF3               	btfsc	___xxtofl@val+1,7
  1744  11DA  03F4               	decf	___xxtofl@val+2,f
  1745  11DB  0874               	movf	___xxtofl@val+2,w
  1746  11DC  00F5               	movwf	___xxtofl@val+3
  1747  11DD  3001               	movlw	1
  1748  11DE  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1749  11E3  0875               	movf	?___xxtofl+3,w
  1750  11E4  1683               	bsf	3,5	;RP0=1, select bank1
  1751  11E5  1303               	bcf	3,6	;RP1=0, select bank1
  1752  11E6  00D7               	movwf	(_S3+3)^(0+128)
  1753  11E7  0874               	movf	?___xxtofl+2,w
  1754  11E8  00D6               	movwf	(_S3+2)^(0+128)
  1755  11E9  0873               	movf	?___xxtofl+1,w
  1756  11EA  00D5               	movwf	(_S3+1)^(0+128)
  1757  11EB  0872               	movf	?___xxtofl,w
  1758  11EC  00D4               	movwf	_S3^(0+128)
  1759  11ED                     l3995:
  1760                           
  1761                           ;Master_main.c: 147:         USART_WriteStr("ADC  CONT   TEMP \n");
  1762  11ED  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1763  11EE  00F3               	movwf	USART_WriteStr@a
  1764  11EF  3080               	movlw	128
  1765  11F0  00F4               	movwf	USART_WriteStr@a+1
  1766  11F1  160A  118A  2009  160A  118A  	fcall	_USART_WriteStr
  1767  11F6                     l3997:
  1768                           
  1769                           ;Master_main.c: 148:         USART_Write(13);
  1770  11F6  300D               	movlw	13
  1771  11F7  160A  158A  21CB  160A  118A  	fcall	_USART_Write
  1772  11FC                     l3999:
  1773                           
  1774                           ;Master_main.c: 149:         USART_Write(10);
  1775  11FC  300A               	movlw	10
  1776  11FD  160A  158A  21CB  160A  118A  	fcall	_USART_Write
  1777  1202                     l4001:
  1778                           
  1779                           ;Master_main.c: 150:         sprintf(Lcdvar, "%1.2f %1.2f  %1.2f", S1,S2,S3);
  1780  1202  30A4               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1781  1203  1683               	bsf	3,5	;RP0=1, select bank1
  1782  1204  1303               	bcf	3,6	;RP1=0, select bank1
  1783  1205  00D0               	movwf	??_main^(0+128)
  1784  1206  0850               	movf	??_main^(0+128),w
  1785  1207  00A8               	movwf	sprintf@f^(0+128)
  1786  1208  085F               	movf	(_S1+3)^(0+128),w
  1787  1209  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1788  120A  085E               	movf	(_S1+2)^(0+128),w
  1789  120B  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1790  120C  085D               	movf	(_S1+1)^(0+128),w
  1791  120D  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1792  120E  085C               	movf	_S1^(0+128),w
  1793  120F  00A9               	movwf	(?_sprintf^(0+128)+1)
  1794  1210  085B               	movf	(_S2+3)^(0+128),w
  1795  1211  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1796  1212  085A               	movf	(_S2+2)^(0+128),w
  1797  1213  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1798  1214  0859               	movf	(_S2+1)^(0+128),w
  1799  1215  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1800  1216  0858               	movf	_S2^(0+128),w
  1801  1217  00AD               	movwf	(?_sprintf^(0+128)+5)
  1802  1218  0857               	movf	(_S3+3)^(0+128),w
  1803  1219  00B4               	movwf	((?_sprintf+3)^(0+128)+9)
  1804  121A  0856               	movf	(_S3+2)^(0+128),w
  1805  121B  00B3               	movwf	((?_sprintf+2)^(0+128)+9)
  1806  121C  0855               	movf	(_S3+1)^(0+128),w
  1807  121D  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1808  121E  0854               	movf	_S3^(0+128),w
  1809  121F  00B1               	movwf	(?_sprintf^(0+128)+9)
  1810  1220  3090               	movlw	(low (_Lcdvar| (0+256)))& (0+255)
  1811  1221  160A  118A  24FC  160A  118A  	fcall	_sprintf
  1812  1226                     l4003:
  1813                           
  1814                           ;Master_main.c: 152:         USART_WriteStr(Lcdvar);
  1815  1226  3090               	movlw	(low (_Lcdvar| (0+256)))& (0+255)
  1816  1227  00F3               	movwf	USART_WriteStr@a
  1817  1228  3001               	movlw	1
  1818  1229  00F4               	movwf	USART_WriteStr@a+1
  1819  122A  160A  118A  2009  160A  118A  	fcall	_USART_WriteStr
  1820  122F                     l4005:
  1821                           
  1822                           ;Master_main.c: 154:         USART_Write(13);
  1823  122F  300D               	movlw	13
  1824  1230  160A  158A  21CB  160A  118A  	fcall	_USART_Write
  1825  1235                     l4007:
  1826                           
  1827                           ;Master_main.c: 155:         USART_Write(10);
  1828  1235  300A               	movlw	10
  1829  1236  160A  158A  21CB  160A  118A  	fcall	_USART_Write
  1830  123B                     l4009:
  1831                           
  1832                           ;Master_main.c: 157:         LCD_Clear();
  1833  123B  120A  158A  20D6  160A  118A  	fcall	_LCD_Clear
  1834  1240                     l4011:
  1835                           
  1836                           ;Master_main.c: 158:         LCD_Set_Cursor(1,1);
  1837  1240  01F6               	clrf	LCD_Set_Cursor@y
  1838  1241  0AF6               	incf	LCD_Set_Cursor@y,f
  1839  1242  3001               	movlw	1
  1840  1243  160A  158A  2235  160A  118A  	fcall	_LCD_Set_Cursor
  1841  1248                     l4013:
  1842                           
  1843                           ;Master_main.c: 159:         LCD_Write_String("ADC  CONT  TEMP");
  1844  1248  30B7               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1845  1249  00F5               	movwf	LCD_Write_String@a
  1846  124A  3080               	movlw	128
  1847  124B  00F6               	movwf	LCD_Write_String@a+1
  1848  124C  160A  158A  2315  160A  118A  	fcall	_LCD_Write_String
  1849  1251                     l4015:
  1850                           
  1851                           ;Master_main.c: 160:         LCD_Set_Cursor(2,1);
  1852  1251  01F6               	clrf	LCD_Set_Cursor@y
  1853  1252  0AF6               	incf	LCD_Set_Cursor@y,f
  1854  1253  3002               	movlw	2
  1855  1254  160A  158A  2235  160A  118A  	fcall	_LCD_Set_Cursor
  1856  1259                     l4017:
  1857                           
  1858                           ;Master_main.c: 161:         LCD_Write_String(Lcdvar);
  1859  1259  3090               	movlw	(low (_Lcdvar| (0+256)))& (0+255)
  1860  125A  00F5               	movwf	LCD_Write_String@a
  1861  125B  3001               	movlw	1
  1862  125C  00F6               	movwf	LCD_Write_String@a+1
  1863  125D  160A  158A  2315  160A  118A  	fcall	_LCD_Write_String
  1864  1262                     l4019:
  1865                           
  1866                           ;Master_main.c: 163:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1867  1262  3006               	movlw	6
  1868  1263  1683               	bsf	3,5	;RP0=1, select bank1
  1869  1264  1303               	bcf	3,6	;RP1=0, select bank1
  1870  1265  00D2               	movwf	(??_main^(0+128)+2)
  1871  1266  3013               	movlw	19
  1872  1267  00D1               	movwf	(??_main^(0+128)+1)
  1873  1268  30AD               	movlw	173
  1874  1269  00D0               	movwf	??_main^(0+128)
  1875  126A                     u6417:
  1876  126A  0BD0               	decfsz	??_main^(0+128),f
  1877  126B  2A6A               	goto	u6417
  1878  126C  0BD1               	decfsz	(??_main^(0+128)+1),f
  1879  126D  2A6A               	goto	u6417
  1880  126E  0BD2               	decfsz	(??_main^(0+128)+2),f
  1881  126F  2A6A               	goto	u6417
  1882  1270  2910               	goto	l3959
  1883  1271  120A  118A  280C   	ljmp	start
  1884  1274                     __end_of_main:
  1885                           
  1886                           	psect	text1
  1887  14FC                     __ptext1:	
  1888 ;; *************** function _sprintf *****************
  1889 ;; Defined at:
  1890 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  sp              1    wreg     PTR unsigned char 
  1893 ;;		 -> Lcdvar(20), 
  1894 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1895 ;;		 -> STR_2(19), 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  sp              1   44[BANK1 ] PTR unsigned char 
  1898 ;;		 -> Lcdvar(20), 
  1899 ;;  fval            4   40[BANK1 ] PTR unsigned char 
  1900 ;;  tmpval          4   34[BANK1 ] struct .
  1901 ;;  val             4   26[BANK1 ] unsigned long 
  1902 ;;  prec            2   45[BANK1 ] int 
  1903 ;;  eexp            2   38[BANK1 ] int 
  1904 ;;  width           2   32[BANK1 ] int 
  1905 ;;  flag            2   30[BANK1 ] unsigned short 
  1906 ;;  cp              2    0        PTR const unsigned char 
  1907 ;;  len             2    0        unsigned int 
  1908 ;;  c               1   47[BANK1 ] unsigned char 
  1909 ;;  ap              1   25[BANK1 ] PTR void [1]
  1910 ;;		 -> ?_sprintf(2), 
  1911 ;;  d               1    0        unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  2    8[BANK1 ] int 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         0       0      13       0       0
  1922 ;;      Locals:         0       0      27       0       0
  1923 ;;      Temps:          0       5       0       0       0
  1924 ;;      Totals:         0       5      40       0       0
  1925 ;;Total ram usage:       45 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    4
  1928 ;; This function calls:
  1929 ;;		___awdiv
  1930 ;;		___fladd
  1931 ;;		___fleq
  1932 ;;		___flge
  1933 ;;		___flmul
  1934 ;;		___flneg
  1935 ;;		___flsub
  1936 ;;		___fltol
  1937 ;;		___lldiv
  1938 ;;		___llmod
  1939 ;;		___wmul
  1940 ;;		___xxtofl
  1941 ;;		__div_to_l_
  1942 ;;		__tdiv_to_l_
  1943 ;;		_fround
  1944 ;;		_isdigit
  1945 ;;		_scale
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           
  1952                           ;psect for function _sprintf
  1953  14FC                     _sprintf:
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1957                           ;sprintf@sp stored from wreg
  1958  14FC  1683               	bsf	3,5	;RP0=1, select bank1
  1959  14FD  1303               	bcf	3,6	;RP1=0, select bank1
  1960  14FE  00CC               	movwf	sprintf@sp^(0+128)
  1961  14FF                     l3671:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1964  14FF  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1965  1500  1283               	bcf	3,5	;RP0=0, select bank0
  1966  1501  1303               	bcf	3,6	;RP1=0, select bank0
  1967  1502  00EA               	movwf	??_sprintf
  1968  1503  086A               	movf	??_sprintf,w
  1969  1504  1683               	bsf	3,5	;RP0=1, select bank1
  1970  1505  1303               	bcf	3,6	;RP1=0, select bank1
  1971  1506  00B9               	movwf	sprintf@ap^(0+128)
  1972  1507                     L1:
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1975  1507  120A  118A  2D81   	goto	l3921
  1976  150A                     l3673:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1979  150A  3025               	movlw	37
  1980  150B  064F               	xorwf	sprintf@c^(0+128),w
  1981  150C  1903               	btfsc	3,2
  1982  150D  2D0F               	goto	u5831
  1983  150E  2D10               	goto	u5830
  1984  150F                     u5831:
  1985  150F  2D24               	goto	l3679
  1986  1510                     u5830:
  1987  1510                     l3675:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1990  1510  084F               	movf	sprintf@c^(0+128),w
  1991  1511  1283               	bcf	3,5	;RP0=0, select bank0
  1992  1512  1303               	bcf	3,6	;RP1=0, select bank0
  1993  1513  00EA               	movwf	??_sprintf
  1994  1514  1683               	bsf	3,5	;RP0=1, select bank1
  1995  1515  1303               	bcf	3,6	;RP1=0, select bank1
  1996  1516  084C               	movf	sprintf@sp^(0+128),w
  1997  1517  0084               	movwf	4
  1998  1518  1283               	bcf	3,5	;RP0=0, select bank0
  1999  1519  1303               	bcf	3,6	;RP1=0, select bank0
  2000  151A  086A               	movf	??_sprintf,w
  2001  151B  1783               	bsf	3,7	;select IRP bank2
  2002  151C  0080               	movwf	0
  2003  151D                     l3677:
  2004  151D  3001               	movlw	1
  2005  151E  00EA               	movwf	??_sprintf
  2006  151F  086A               	movf	??_sprintf,w
  2007  1520  1683               	bsf	3,5	;RP0=1, select bank1
  2008  1521  1303               	bcf	3,6	;RP1=0, select bank1
  2009  1522  07CC               	addwf	sprintf@sp^(0+128),f
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2012  1523  2D07               	goto	L1
  2013  1524                     l3679:
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2016  1524  01C0               	clrf	sprintf@width^(0+128)
  2017  1525  01C1               	clrf	(sprintf@width+1)^(0+128)
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2020  1526  01BE               	clrf	sprintf@flag^(0+128)
  2021  1527  01BF               	clrf	(sprintf@flag+1)^(0+128)
  2022  1528                     l3681:
  2023                           
  2024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2025  1528  0828               	movf	sprintf@f^(0+128),w
  2026  1529  0084               	movwf	4
  2027  152A  120A  158A  200A  160A  118A  	fcall	stringdir
  2028  152F  160A  158A  21E5  160A  118A  	fcall	_isdigit
  2029  1534  1C03               	btfss	3,0
  2030  1535  2D37               	goto	u5841
  2031  1536  2D38               	goto	u5840
  2032  1537                     u5841:
  2033  1537  2D84               	goto	l3693
  2034  1538                     u5840:
  2035  1538                     l3683:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2038  1538  1683               	bsf	3,5	;RP0=1, select bank1
  2039  1539  1303               	bcf	3,6	;RP1=0, select bank1
  2040  153A  01C0               	clrf	sprintf@width^(0+128)
  2041  153B  01C1               	clrf	(sprintf@width+1)^(0+128)
  2042  153C                     l3685:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2045  153C  300A               	movlw	10
  2046  153D  00F2               	movwf	___wmul@multiplier
  2047  153E  3000               	movlw	0
  2048  153F  00F3               	movwf	___wmul@multiplier+1
  2049  1540  1683               	bsf	3,5	;RP0=1, select bank1
  2050  1541  1303               	bcf	3,6	;RP1=0, select bank1
  2051  1542  0841               	movf	(sprintf@width+1)^(0+128),w
  2052  1543  00F5               	movwf	___wmul@multiplicand+1
  2053  1544  0840               	movf	sprintf@width^(0+128),w
  2054  1545  00F4               	movwf	___wmul@multiplicand
  2055  1546  160A  158A  2259  160A  118A  	fcall	___wmul
  2056  154B  0873               	movf	?___wmul+1,w
  2057  154C  1683               	bsf	3,5	;RP0=1, select bank1
  2058  154D  1303               	bcf	3,6	;RP1=0, select bank1
  2059  154E  00C1               	movwf	(sprintf@width+1)^(0+128)
  2060  154F  0872               	movf	?___wmul,w
  2061  1550  00C0               	movwf	sprintf@width^(0+128)
  2062  1551                     l3687:
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2065  1551  0828               	movf	sprintf@f^(0+128),w
  2066  1552  0084               	movwf	4
  2067  1553  120A  158A  200A  160A  118A  	fcall	stringdir
  2068  1558  3ED0               	addlw	208
  2069  1559  1283               	bcf	3,5	;RP0=0, select bank0
  2070  155A  1303               	bcf	3,6	;RP1=0, select bank0
  2071  155B  00EA               	movwf	??_sprintf
  2072  155C  30FF               	movlw	255
  2073  155D  1803               	skipnc
  2074  155E  3000               	movlw	0
  2075  155F  00EB               	movwf	??_sprintf+1
  2076  1560  086A               	movf	??_sprintf,w
  2077  1561  1683               	bsf	3,5	;RP0=1, select bank1
  2078  1562  1303               	bcf	3,6	;RP1=0, select bank1
  2079  1563  07C0               	addwf	sprintf@width^(0+128),f
  2080  1564  1803               	skipnc
  2081  1565  0AC1               	incf	(sprintf@width+1)^(0+128),f
  2082  1566  1283               	bcf	3,5	;RP0=0, select bank0
  2083  1567  1303               	bcf	3,6	;RP1=0, select bank0
  2084  1568  086B               	movf	??_sprintf+1,w
  2085  1569  1683               	bsf	3,5	;RP0=1, select bank1
  2086  156A  1303               	bcf	3,6	;RP1=0, select bank1
  2087  156B  07C1               	addwf	(sprintf@width+1)^(0+128),f
  2088  156C                     l3689:
  2089  156C  3001               	movlw	1
  2090  156D  1283               	bcf	3,5	;RP0=0, select bank0
  2091  156E  1303               	bcf	3,6	;RP1=0, select bank0
  2092  156F  00EA               	movwf	??_sprintf
  2093  1570  086A               	movf	??_sprintf,w
  2094  1571  1683               	bsf	3,5	;RP0=1, select bank1
  2095  1572  1303               	bcf	3,6	;RP1=0, select bank1
  2096  1573  07A8               	addwf	sprintf@f^(0+128),f
  2097  1574                     l3691:
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2100  1574  0828               	movf	sprintf@f^(0+128),w
  2101  1575  0084               	movwf	4
  2102  1576  120A  158A  200A  160A  118A  	fcall	stringdir
  2103  157B  160A  158A  21E5  160A  118A  	fcall	_isdigit
  2104  1580  1803               	btfsc	3,0
  2105  1581  2D83               	goto	u5851
  2106  1582  2D84               	goto	u5850
  2107  1583                     u5851:
  2108  1583  2D3C               	goto	l3685
  2109  1584                     u5850:
  2110  1584                     l3693:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2113  1584  1683               	bsf	3,5	;RP0=1, select bank1
  2114  1585  1303               	bcf	3,6	;RP1=0, select bank1
  2115  1586  0828               	movf	sprintf@f^(0+128),w
  2116  1587  0084               	movwf	4
  2117  1588  120A  158A  200A  160A  118A  	fcall	stringdir
  2118  158D  3A2E               	xorlw	46
  2119  158E  1D03               	skipz
  2120  158F  2D91               	goto	u5861
  2121  1590  2D92               	goto	u5860
  2122  1591                     u5861:
  2123  1591  2DE7               	goto	l3709
  2124  1592                     u5860:
  2125  1592                     l3695:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2128  1592  173F               	bsf	(sprintf@flag^(0+128)+1),6
  2129  1593                     l3697:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2132  1593  3001               	movlw	1
  2133  1594  1283               	bcf	3,5	;RP0=0, select bank0
  2134  1595  1303               	bcf	3,6	;RP1=0, select bank0
  2135  1596  00EA               	movwf	??_sprintf
  2136  1597  086A               	movf	??_sprintf,w
  2137  1598  1683               	bsf	3,5	;RP0=1, select bank1
  2138  1599  1303               	bcf	3,6	;RP1=0, select bank1
  2139  159A  07A8               	addwf	sprintf@f^(0+128),f
  2140  159B                     l3699:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2143  159B  01CD               	clrf	sprintf@prec^(0+128)
  2144  159C  01CE               	clrf	(sprintf@prec+1)^(0+128)
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2147  159D  2DD6               	goto	l3707
  2148  159E                     l3701:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2151  159E  300A               	movlw	10
  2152  159F  00F2               	movwf	___wmul@multiplier
  2153  15A0  3000               	movlw	0
  2154  15A1  00F3               	movwf	___wmul@multiplier+1
  2155  15A2  1683               	bsf	3,5	;RP0=1, select bank1
  2156  15A3  1303               	bcf	3,6	;RP1=0, select bank1
  2157  15A4  084E               	movf	(sprintf@prec+1)^(0+128),w
  2158  15A5  00F5               	movwf	___wmul@multiplicand+1
  2159  15A6  084D               	movf	sprintf@prec^(0+128),w
  2160  15A7  00F4               	movwf	___wmul@multiplicand
  2161  15A8  160A  158A  2259  160A  118A  	fcall	___wmul
  2162  15AD  0873               	movf	?___wmul+1,w
  2163  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  2164  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  2165  15B0  00CE               	movwf	(sprintf@prec+1)^(0+128)
  2166  15B1  0872               	movf	?___wmul,w
  2167  15B2  00CD               	movwf	sprintf@prec^(0+128)
  2168  15B3                     l3703:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2171  15B3  0828               	movf	sprintf@f^(0+128),w
  2172  15B4  0084               	movwf	4
  2173  15B5  120A  158A  200A  160A  118A  	fcall	stringdir
  2174  15BA  3ED0               	addlw	208
  2175  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  2176  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  2177  15BD  00EA               	movwf	??_sprintf
  2178  15BE  30FF               	movlw	255
  2179  15BF  1803               	skipnc
  2180  15C0  3000               	movlw	0
  2181  15C1  00EB               	movwf	??_sprintf+1
  2182  15C2  086A               	movf	??_sprintf,w
  2183  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  2184  15C4  1303               	bcf	3,6	;RP1=0, select bank1
  2185  15C5  07CD               	addwf	sprintf@prec^(0+128),f
  2186  15C6  1803               	skipnc
  2187  15C7  0ACE               	incf	(sprintf@prec+1)^(0+128),f
  2188  15C8  1283               	bcf	3,5	;RP0=0, select bank0
  2189  15C9  1303               	bcf	3,6	;RP1=0, select bank0
  2190  15CA  086B               	movf	??_sprintf+1,w
  2191  15CB  1683               	bsf	3,5	;RP0=1, select bank1
  2192  15CC  1303               	bcf	3,6	;RP1=0, select bank1
  2193  15CD  07CE               	addwf	(sprintf@prec+1)^(0+128),f
  2194  15CE                     l3705:
  2195  15CE  3001               	movlw	1
  2196  15CF  1283               	bcf	3,5	;RP0=0, select bank0
  2197  15D0  1303               	bcf	3,6	;RP1=0, select bank0
  2198  15D1  00EA               	movwf	??_sprintf
  2199  15D2  086A               	movf	??_sprintf,w
  2200  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  2201  15D4  1303               	bcf	3,6	;RP1=0, select bank1
  2202  15D5  07A8               	addwf	sprintf@f^(0+128),f
  2203  15D6                     l3707:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2206  15D6  0828               	movf	sprintf@f^(0+128),w
  2207  15D7  0084               	movwf	4
  2208  15D8  120A  158A  200A  160A  118A  	fcall	stringdir
  2209  15DD  160A  158A  21E5  160A  118A  	fcall	_isdigit
  2210  15E2  1803               	btfsc	3,0
  2211  15E3  2DE5               	goto	u5871
  2212  15E4  2DE6               	goto	u5870
  2213  15E5                     u5871:
  2214  15E5  2D9E               	goto	l3701
  2215  15E6                     u5870:
  2216  15E6  2DEF               	goto	l3715
  2217  15E7                     l3709:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2220  15E7  01CD               	clrf	sprintf@prec^(0+128)
  2221  15E8  01CE               	clrf	(sprintf@prec+1)^(0+128)
  2222  15E9                     l3711:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2225  15E9  163F               	bsf	(sprintf@flag^(0+128)+1),4
  2226  15EA  2DEF               	goto	l3715
  2227  15EB                     l315:	
  2228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2229                           
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2232  15EB  1683               	bsf	3,5	;RP0=1, select bank1
  2233  15EC  1303               	bcf	3,6	;RP1=0, select bank1
  2234  15ED  153F               	bsf	(sprintf@flag^(0+128)+1),2
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2237  15EE  2E0D               	goto	l3717
  2238  15EF                     l3715:
  2239  15EF  3001               	movlw	1
  2240  15F0  1683               	bsf	3,5	;RP0=1, select bank1
  2241  15F1  1303               	bcf	3,6	;RP1=0, select bank1
  2242  15F2  07A8               	addwf	sprintf@f^(0+128),f
  2243  15F3  30FF               	movlw	-1
  2244  15F4  0728               	addwf	sprintf@f^(0+128),w
  2245  15F5  0084               	movwf	4
  2246  15F6  120A  158A  200A  160A  118A  	fcall	stringdir
  2247  15FB  00CF               	movwf	sprintf@c^(0+128)
  2248  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  2249  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  2250  15FE  00EA               	movwf	??_sprintf
  2251  15FF  01EB               	clrf	??_sprintf+1
  2252                           
  2253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2254                           ; Switch size 1, requested type "simple"
  2255                           ; Number of cases is 1, Range of values is 0 to 0
  2256                           ; switch strategies available:
  2257                           ; Name         Instructions Cycles
  2258                           ; simple_byte            4     3 (average)
  2259                           ; direct_byte           11     8 (fixed)
  2260                           ; jumptable            260     6 (fixed)
  2261                           ;	Chosen strategy is simple_byte
  2262  1600  086B               	movf	??_sprintf+1,w
  2263  1601  3A00               	xorlw	0	; case 0
  2264  1602  1903               	skipnz
  2265  1603  2E05               	goto	l4051
  2266  1604  2D07               	goto	L1
  2267  1605                     l4051:
  2268                           
  2269                           ; Switch size 1, requested type "simple"
  2270                           ; Number of cases is 2, Range of values is 0 to 102
  2271                           ; switch strategies available:
  2272                           ; Name         Instructions Cycles
  2273                           ; simple_byte            7     4 (average)
  2274                           ; jumptable            260     6 (fixed)
  2275                           ;	Chosen strategy is simple_byte
  2276  1605  086A               	movf	??_sprintf,w
  2277  1606  3A00               	xorlw	0	; case 0
  2278  1607  1903               	skipnz
  2279  1608  2FFD               	goto	L3
  2280  1609  3A66               	xorlw	102	; case 102
  2281  160A  1903               	skipnz
  2282  160B  2DEB               	goto	l315
  2283  160C  2D07               	goto	L1
  2284  160D                     l3717:
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2287  160D  3000               	movlw	0
  2288  160E  053E               	andwf	sprintf@flag^(0+128),w
  2289  160F  1283               	bcf	3,5	;RP0=0, select bank0
  2290  1610  1303               	bcf	3,6	;RP1=0, select bank0
  2291  1611  00EA               	movwf	??_sprintf
  2292  1612  3007               	movlw	7
  2293  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2294  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2295  1615  053F               	andwf	(sprintf@flag+1)^(0+128),w
  2296  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2297  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2298  1618  00EB               	movwf	??_sprintf+1
  2299  1619  086A               	movf	??_sprintf,w
  2300  161A  046B               	iorwf	??_sprintf+1,w
  2301  161B  1903               	btfsc	3,2
  2302  161C  2E1E               	goto	u5881
  2303  161D  2E21               	goto	u5880
  2304  161E                     u5881:
  2305  161E  120A  118A  2C7E   	goto	l3875
  2306  1621                     u5880:
  2307  1621                     l3719:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2310  1621  1683               	bsf	3,5	;RP0=1, select bank1
  2311  1622  1303               	bcf	3,6	;RP1=0, select bank1
  2312  1623  1E3F               	btfss	(sprintf@flag+1)^(0+128),4
  2313  1624  2E26               	goto	u5891
  2314  1625  2E27               	goto	u5890
  2315  1626                     u5891:
  2316  1626  2E2B               	goto	l3723
  2317  1627                     u5890:
  2318  1627                     l3721:
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2321  1627  3006               	movlw	6
  2322  1628  00CD               	movwf	sprintf@prec^(0+128)
  2323  1629  3000               	movlw	0
  2324  162A  00CE               	movwf	(sprintf@prec^(0+128)+1)
  2325  162B                     l3723:
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2328  162B  0839               	movf	sprintf@ap^(0+128),w
  2329  162C  0084               	movwf	4
  2330  162D  1383               	bcf	3,7	;select IRP bank0
  2331  162E  0800               	movf	0,w
  2332  162F  00C8               	movwf	sprintf@fval^(0+128)
  2333  1630  0A84               	incf	4,f
  2334  1631  0800               	movf	0,w
  2335  1632  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2336  1633  0A84               	incf	4,f
  2337  1634  0800               	movf	0,w
  2338  1635  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2339  1636  0A84               	incf	4,f
  2340  1637  0800               	movf	0,w
  2341  1638  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2342  1639                     l3725:
  2343  1639  3004               	movlw	4
  2344  163A  1283               	bcf	3,5	;RP0=0, select bank0
  2345  163B  1303               	bcf	3,6	;RP1=0, select bank0
  2346  163C  00EA               	movwf	??_sprintf
  2347  163D  086A               	movf	??_sprintf,w
  2348  163E  1683               	bsf	3,5	;RP0=1, select bank1
  2349  163F  1303               	bcf	3,6	;RP1=0, select bank1
  2350  1640  07B9               	addwf	sprintf@ap^(0+128),f
  2351  1641                     l3727:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2354  1641  084B               	movf	(sprintf@fval+3)^(0+128),w
  2355  1642  00F5               	movwf	___flge@ff1+3
  2356  1643  084A               	movf	(sprintf@fval+2)^(0+128),w
  2357  1644  00F4               	movwf	___flge@ff1+2
  2358  1645  0849               	movf	(sprintf@fval+1)^(0+128),w
  2359  1646  00F3               	movwf	___flge@ff1+1
  2360  1647  0848               	movf	sprintf@fval^(0+128),w
  2361  1648  00F2               	movwf	___flge@ff1
  2362  1649  3000               	movlw	0
  2363  164A  00F9               	movwf	___flge@ff2+3
  2364  164B  3000               	movlw	0
  2365  164C  00F8               	movwf	___flge@ff2+2
  2366  164D  3000               	movlw	0
  2367  164E  00F7               	movwf	___flge@ff2+1
  2368  164F  3000               	movlw	0
  2369  1650  00F6               	movwf	___flge@ff2
  2370  1651  160A  158A  25E3  160A  118A  	fcall	___flge
  2371  1656  1803               	btfsc	3,0
  2372  1657  2E59               	goto	u5901
  2373  1658  2E5A               	goto	u5900
  2374  1659                     u5901:
  2375  1659  2E77               	goto	l3733
  2376  165A                     u5900:
  2377  165A                     l3729:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2380  165A  1683               	bsf	3,5	;RP0=1, select bank1
  2381  165B  1303               	bcf	3,6	;RP1=0, select bank1
  2382  165C  084B               	movf	(sprintf@fval+3)^(0+128),w
  2383  165D  00F5               	movwf	___flneg@f1+3
  2384  165E  084A               	movf	(sprintf@fval+2)^(0+128),w
  2385  165F  00F4               	movwf	___flneg@f1+2
  2386  1660  0849               	movf	(sprintf@fval+1)^(0+128),w
  2387  1661  00F3               	movwf	___flneg@f1+1
  2388  1662  0848               	movf	sprintf@fval^(0+128),w
  2389  1663  00F2               	movwf	___flneg@f1
  2390  1664  160A  158A  21B4  160A  118A  	fcall	___flneg
  2391  1669  0875               	movf	?___flneg+3,w
  2392  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2393  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2394  166C  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2395  166D  0874               	movf	?___flneg+2,w
  2396  166E  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2397  166F  0873               	movf	?___flneg+1,w
  2398  1670  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2399  1671  0872               	movf	?___flneg,w
  2400  1672  00C8               	movwf	sprintf@fval^(0+128)
  2401  1673                     l3731:
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2404  1673  3003               	movlw	3
  2405  1674  04BE               	iorwf	sprintf@flag^(0+128),f
  2406  1675  3000               	movlw	0
  2407  1676  04BF               	iorwf	(sprintf@flag+1)^(0+128),f
  2408  1677                     l3733:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2411  1677  1683               	bsf	3,5	;RP0=1, select bank1
  2412  1678  1303               	bcf	3,6	;RP1=0, select bank1
  2413  1679  01C6               	clrf	sprintf@eexp^(0+128)
  2414  167A  01C7               	clrf	(sprintf@eexp+1)^(0+128)
  2415  167B                     l3735:
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2418  167B  084B               	movf	(sprintf@fval+3)^(0+128),w
  2419  167C  00F5               	movwf	___fleq@ff1+3
  2420  167D  084A               	movf	(sprintf@fval+2)^(0+128),w
  2421  167E  00F4               	movwf	___fleq@ff1+2
  2422  167F  0849               	movf	(sprintf@fval+1)^(0+128),w
  2423  1680  00F3               	movwf	___fleq@ff1+1
  2424  1681  0848               	movf	sprintf@fval^(0+128),w
  2425  1682  00F2               	movwf	___fleq@ff1
  2426  1683  3000               	movlw	0
  2427  1684  00F9               	movwf	___fleq@ff2+3
  2428  1685  3000               	movlw	0
  2429  1686  00F8               	movwf	___fleq@ff2+2
  2430  1687  3000               	movlw	0
  2431  1688  00F7               	movwf	___fleq@ff2+1
  2432  1689  3000               	movlw	0
  2433  168A  00F6               	movwf	___fleq@ff2
  2434  168B  160A  158A  23F0  160A  118A  	fcall	___fleq
  2435  1690  1803               	btfsc	3,0
  2436  1691  2E93               	goto	u5911
  2437  1692  2E94               	goto	u5910
  2438  1693                     u5911:
  2439  1693  2F94               	goto	l3761
  2440  1694                     u5910:
  2441  1694                     l3737:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2444  1694  1003               	clrc
  2445  1695  1683               	bsf	3,5	;RP0=1, select bank1
  2446  1696  1303               	bcf	3,6	;RP1=0, select bank1
  2447  1697  0D4A               	rlf	(sprintf@fval+2)^(0+128),w
  2448  1698  0D4B               	rlf	(sprintf@fval+3)^(0+128),w
  2449  1699  3E82               	addlw	130
  2450  169A  00C6               	movwf	sprintf@eexp^(0+128)
  2451  169B  30FF               	movlw	255
  2452  169C  1803               	skipnc
  2453  169D  3000               	movlw	0
  2454  169E  00C7               	movwf	(sprintf@eexp^(0+128)+1)
  2455  169F                     l3739:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2458  169F  30FF               	movlw	255
  2459  16A0  07C6               	addwf	sprintf@eexp^(0+128),f
  2460  16A1  1803               	skipnc
  2461  16A2  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2462  16A3  30FF               	movlw	255
  2463  16A4  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2464  16A5                     l3741:
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2467  16A5  3003               	movlw	3
  2468  16A6  00F2               	movwf	___wmul@multiplier
  2469  16A7  3000               	movlw	0
  2470  16A8  00F3               	movwf	___wmul@multiplier+1
  2471  16A9  0847               	movf	(sprintf@eexp+1)^(0+128),w
  2472  16AA  00F5               	movwf	___wmul@multiplicand+1
  2473  16AB  0846               	movf	sprintf@eexp^(0+128),w
  2474  16AC  00F4               	movwf	___wmul@multiplicand
  2475  16AD  160A  158A  2259  160A  118A  	fcall	___wmul
  2476  16B2  0873               	movf	?___wmul+1,w
  2477  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2478  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2479  16B5  00C7               	movwf	(sprintf@eexp+1)^(0+128)
  2480  16B6  0872               	movf	?___wmul,w
  2481  16B7  00C6               	movwf	sprintf@eexp^(0+128)
  2482  16B8                     l3743:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2485  16B8  300A               	movlw	10
  2486  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2487  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2488  16BB  00A0               	movwf	___awdiv@divisor
  2489  16BC  3000               	movlw	0
  2490  16BD  00A1               	movwf	___awdiv@divisor+1
  2491  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2492  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2493  16C0  0847               	movf	(sprintf@eexp+1)^(0+128),w
  2494  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2495  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2496  16C3  00A3               	movwf	___awdiv@dividend+1
  2497  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2498  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2499  16C6  0846               	movf	sprintf@eexp^(0+128),w
  2500  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2501  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2502  16C9  00A2               	movwf	___awdiv@dividend
  2503  16CA  160A  158A  24FE  160A  118A  	fcall	___awdiv
  2504  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2505  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2506  16D1  0821               	movf	?___awdiv+1,w
  2507  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2508  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2509  16D4  00C7               	movwf	(sprintf@eexp+1)^(0+128)
  2510  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2511  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2512  16D7  0820               	movf	?___awdiv,w
  2513  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2514  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2515  16DA  00C6               	movwf	sprintf@eexp^(0+128)
  2516  16DB                     l3745:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2519  16DB  1FC7               	btfss	(sprintf@eexp+1)^(0+128),7
  2520  16DC  2EDE               	goto	u5921
  2521  16DD  2EDF               	goto	u5920
  2522  16DE                     u5921:
  2523  16DE  2EE5               	goto	l3749
  2524  16DF                     u5920:
  2525  16DF                     l3747:
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2528  16DF  30FF               	movlw	255
  2529  16E0  07C6               	addwf	sprintf@eexp^(0+128),f
  2530  16E1  1803               	skipnc
  2531  16E2  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2532  16E3  30FF               	movlw	255
  2533  16E4  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2534  16E5                     l3749:
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2537  16E5  0346               	decf	sprintf@eexp^(0+128),w
  2538  16E6  3AFF               	xorlw	255
  2539  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2540  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2541  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2542  16EE  0845               	movf	?_scale+3,w
  2543  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2544  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2545  16F1  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  2546  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2547  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2548  16F4  0844               	movf	?_scale+2,w
  2549  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2550  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2551  16F7  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  2552  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2553  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2554  16FA  0843               	movf	?_scale+1,w
  2555  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2556  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2557  16FD  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  2558  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2559  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2560  1700  0842               	movf	?_scale,w
  2561  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2562  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2563  1703  00C2               	movwf	sprintf@tmpval^(0+128)
  2564  1704                     l3751:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2567  1704  084B               	movf	(sprintf@fval+3)^(0+128),w
  2568  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2569  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2570  1707  00AB               	movwf	___flmul@b+3
  2571  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2572  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2573  170A  084A               	movf	(sprintf@fval+2)^(0+128),w
  2574  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2575  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2576  170D  00AA               	movwf	___flmul@b+2
  2577  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2578  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2579  1710  0849               	movf	(sprintf@fval+1)^(0+128),w
  2580  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2581  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2582  1713  00A9               	movwf	___flmul@b+1
  2583  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2584  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2585  1716  0848               	movf	sprintf@fval^(0+128),w
  2586  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2587  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2588  1719  00A8               	movwf	___flmul@b
  2589  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2590  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2591  171C  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  2592  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2593  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2594  171F  00AF               	movwf	___flmul@a+3
  2595  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2596  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2597  1722  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2598  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2599  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2600  1725  00AE               	movwf	___flmul@a+2
  2601  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2602  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2603  1728  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2604  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2605  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2606  172B  00AD               	movwf	___flmul@a+1
  2607  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2608  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2609  172E  0842               	movf	sprintf@tmpval^(0+128),w
  2610  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2611  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2612  1731  00AC               	movwf	___flmul@a
  2613  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2614  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2615  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2616  1739  082B               	movf	?___flmul+3,w
  2617  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2618  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2619  173C  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  2620  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2621  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2622  173F  082A               	movf	?___flmul+2,w
  2623  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2624  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2625  1742  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  2626  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2627  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2628  1745  0829               	movf	?___flmul+1,w
  2629  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2630  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2631  1748  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  2632  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2633  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2634  174B  0828               	movf	?___flmul,w
  2635  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2636  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2637  174E  00C2               	movwf	sprintf@tmpval^(0+128)
  2638  174F                     l3753:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2641  174F  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  2642  1750  00F5               	movwf	___flge@ff1+3
  2643  1751  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2644  1752  00F4               	movwf	___flge@ff1+2
  2645  1753  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2646  1754  00F3               	movwf	___flge@ff1+1
  2647  1755  0842               	movf	sprintf@tmpval^(0+128),w
  2648  1756  00F2               	movwf	___flge@ff1
  2649  1757  303F               	movlw	63
  2650  1758  00F9               	movwf	___flge@ff2+3
  2651  1759  3080               	movlw	128
  2652  175A  00F8               	movwf	___flge@ff2+2
  2653  175B  3000               	movlw	0
  2654  175C  00F7               	movwf	___flge@ff2+1
  2655  175D  3000               	movlw	0
  2656  175E  00F6               	movwf	___flge@ff2
  2657  175F  160A  158A  25E3  160A  118A  	fcall	___flge
  2658  1764  1803               	btfsc	3,0
  2659  1765  2F67               	goto	u5931
  2660  1766  2F68               	goto	u5930
  2661  1767                     u5931:
  2662  1767  2F71               	goto	l3757
  2663  1768                     u5930:
  2664  1768                     l3755:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2667  1768  30FF               	movlw	255
  2668  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2669  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2670  176B  07C6               	addwf	sprintf@eexp^(0+128),f
  2671  176C  1803               	skipnc
  2672  176D  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2673  176E  30FF               	movlw	255
  2674  176F  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2675  1770  2F94               	goto	l3761
  2676  1771                     l3757:
  2677  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2678  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2679  1773  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  2680  1774  00F5               	movwf	___flge@ff1+3
  2681  1775  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2682  1776  00F4               	movwf	___flge@ff1+2
  2683  1777  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2684  1778  00F3               	movwf	___flge@ff1+1
  2685  1779  0842               	movf	sprintf@tmpval^(0+128),w
  2686  177A  00F2               	movwf	___flge@ff1
  2687  177B  3041               	movlw	65
  2688  177C  00F9               	movwf	___flge@ff2+3
  2689  177D  3020               	movlw	32
  2690  177E  00F8               	movwf	___flge@ff2+2
  2691  177F  3000               	movlw	0
  2692  1780  00F7               	movwf	___flge@ff2+1
  2693  1781  3000               	movlw	0
  2694  1782  00F6               	movwf	___flge@ff2
  2695  1783  160A  158A  25E3  160A  118A  	fcall	___flge
  2696  1788  1C03               	btfss	3,0
  2697  1789  2F8B               	goto	u5941
  2698  178A  2F8C               	goto	u5940
  2699  178B                     u5941:
  2700  178B  2F94               	goto	l3761
  2701  178C                     u5940:
  2702  178C                     l3759:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2705  178C  3001               	movlw	1
  2706  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2707  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2708  178F  07C6               	addwf	sprintf@eexp^(0+128),f
  2709  1790  1803               	skipnc
  2710  1791  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2711  1792  3000               	movlw	0
  2712  1793  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2713  1794                     l3761:
  2714                           
  2715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2716  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2717  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2718  1796  084E               	movf	(sprintf@prec+1)^(0+128),w
  2719  1797  3A80               	xorlw	128
  2720  1798  00FF               	movwf	btemp+1
  2721  1799  3080               	movlw	128
  2722  179A  027F               	subwf	btemp+1,w
  2723  179B  1D03               	skipz
  2724  179C  2F9F               	goto	u5955
  2725  179D  300D               	movlw	13
  2726  179E  024D               	subwf	sprintf@prec^(0+128),w
  2727  179F                     u5955:
  2728  179F  1803               	skipnc
  2729  17A0  2FA2               	goto	u5951
  2730  17A1  2FA3               	goto	u5950
  2731  17A2                     u5951:
  2732  17A2  2FEA               	goto	l3765
  2733  17A3                     u5950:
  2734  17A3                     l3763:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2737  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2738  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2739  17A5  084D               	movf	sprintf@prec^(0+128),w
  2740  17A6  120A  118A  25A2  160A  118A  	fcall	_fround
  2741  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2742  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2743  17AD  0845               	movf	?_fround+3,w
  2744  17AE  00D9               	movwf	___fladd@b+3
  2745  17AF  0844               	movf	?_fround+2,w
  2746  17B0  00D8               	movwf	___fladd@b+2
  2747  17B1  0843               	movf	?_fround+1,w
  2748  17B2  00D7               	movwf	___fladd@b+1
  2749  17B3  0842               	movf	?_fround,w
  2750  17B4  00D6               	movwf	___fladd@b
  2751  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2752  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2753  17B7  084B               	movf	(sprintf@fval+3)^(0+128),w
  2754  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2755  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2756  17BA  00DD               	movwf	___fladd@a+3
  2757  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2758  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2759  17BD  084A               	movf	(sprintf@fval+2)^(0+128),w
  2760  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2761  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2762  17C0  00DC               	movwf	___fladd@a+2
  2763  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2764  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2765  17C3  0849               	movf	(sprintf@fval+1)^(0+128),w
  2766  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2767  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2768  17C6  00DB               	movwf	___fladd@a+1
  2769  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2770  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2771  17C9  0848               	movf	sprintf@fval^(0+128),w
  2772  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2773  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2774  17CC  00DA               	movwf	___fladd@a
  2775  17CD  160A  118A  2274  160A  118A  	fcall	___fladd
  2776  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2777  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2778  17D4  0859               	movf	?___fladd+3,w
  2779  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2780  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2781  17D7  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2782  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2783  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2784  17DA  0858               	movf	?___fladd+2,w
  2785  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2786  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2787  17DD  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2788  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2789  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2790  17E0  0857               	movf	?___fladd+1,w
  2791  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2792  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2793  17E3  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2794  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2795  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2796  17E6  0856               	movf	?___fladd,w
  2797  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2798  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2799  17E9  00C8               	movwf	sprintf@fval^(0+128)
  2800  17EA                     l3765:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2803  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2804  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2805  17EC  0847               	movf	(sprintf@eexp+1)^(0+128),w
  2806  17ED  3A80               	xorlw	128
  2807  17EE  00FF               	movwf	btemp+1
  2808  17EF  3080               	movlw	128
  2809  17F0  027F               	subwf	btemp+1,w
  2810  17F1  1D03               	skipz
  2811  17F2  2FF5               	goto	u5965
  2812  17F3  300A               	movlw	10
  2813  17F4  0246               	subwf	sprintf@eexp^(0+128),w
  2814  17F5                     u5965:
  2815  17F5  1803               	skipnc
  2816  17F6  2FFA               	goto	u5961
  2817  17F7  120A  118A  2826   	goto	u5960
  2818  17FA                     u5961:
  2819  17FA  120A  118A  2877   	goto	l3773
  2820  17FD                     L3:
  2821  17FD                     L2:
  2822  17FD  120A  118A  2D9B   	ljmp	l3923
  2823                           
  2824                           	psect	text2
  2825  0C9D                     __ptext2:	
  2826 ;; *************** function _scale *****************
  2827 ;; Defined at:
  2828 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  scl             1    wreg     char 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  scl             1   52[BANK0 ] char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  4   34[BANK0 ] char 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2842 ;;      Params:         0       4       0       0       0
  2843 ;;      Locals:         0       5       0       0       0
  2844 ;;      Temps:          0      10       0       0       0
  2845 ;;      Totals:         0      19       0       0       0
  2846 ;;Total ram usage:       19 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    3
  2849 ;; This function calls:
  2850 ;;		___awdiv
  2851 ;;		___awmod
  2852 ;;		___flmul
  2853 ;; This function is called by:
  2854 ;;		_sprintf
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function _scale
  2860  0C9D                     _scale:
  2861                           
  2862                           ;incstack = 0
  2863                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2864                           ;scale@scl stored from wreg
  2865  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2866  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0C9F  00D4               	movwf	scale@scl
  2868  0CA0                     l2799:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2871  0CA0  1FD4               	btfss	scale@scl,7
  2872  0CA1  2CA3               	goto	u4091
  2873  0CA2  2CA4               	goto	u4090
  2874  0CA3                     u4091:
  2875  0CA3  2E53               	goto	l2821
  2876  0CA4                     u4090:
  2877  0CA4                     l2801:
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2880  0CA4  09D4               	comf	scale@scl,f
  2881  0CA5  0AD4               	incf	scale@scl,f
  2882  0CA6                     l2803:
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2885  0CA6  0854               	movf	scale@scl,w
  2886  0CA7  3A80               	xorlw	128
  2887  0CA8  3E12               	addlw	-238
  2888  0CA9  1C03               	skipc
  2889  0CAA  2CAC               	goto	u4101
  2890  0CAB  2CAD               	goto	u4100
  2891  0CAC                     u4101:
  2892  0CAC  2D97               	goto	l2811
  2893  0CAD                     u4100:
  2894  0CAD                     l2805:
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2897  0CAD  300A               	movlw	10
  2898  0CAE  00A0               	movwf	___awdiv@divisor
  2899  0CAF  3000               	movlw	0
  2900  0CB0  00A1               	movwf	___awdiv@divisor+1
  2901  0CB1  0854               	movf	scale@scl,w
  2902  0CB2  00F4               	movwf	___awmod@dividend
  2903  0CB3  01F5               	clrf	___awmod@dividend+1
  2904  0CB4  1BF4               	btfsc	___awmod@dividend,7
  2905  0CB5  03F5               	decf	___awmod@dividend+1,f
  2906  0CB6  3064               	movlw	100
  2907  0CB7  00F2               	movwf	___awmod@divisor
  2908  0CB8  3000               	movlw	0
  2909  0CB9  00F3               	movwf	___awmod@divisor+1
  2910  0CBA  120A  158A  20E3  120A  158A  	fcall	___awmod
  2911  0CBF  0873               	movf	?___awmod+1,w
  2912  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0CC2  00A3               	movwf	___awdiv@dividend+1
  2915  0CC3  0872               	movf	?___awmod,w
  2916  0CC4  00A2               	movwf	___awdiv@dividend
  2917  0CC5  160A  158A  24FE  120A  158A  	fcall	___awdiv
  2918  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0CCC  0820               	movf	?___awdiv,w
  2921  0CCD  00C6               	movwf	??_scale
  2922  0CCE  3001               	movlw	1
  2923  0CCF                     u4115:
  2924  0CCF  1003               	clrc
  2925  0CD0  0DC6               	rlf	??_scale,f
  2926  0CD1  3EFF               	addlw	-1
  2927  0CD2  1D03               	skipz
  2928  0CD3  2CCF               	goto	u4115
  2929  0CD4  1003               	clrc
  2930  0CD5  0D46               	rlf	??_scale,w
  2931  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2932  0CD7  0084               	movwf	4
  2933  0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  2934  0CDD  00C7               	movwf	??_scale+1
  2935  0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  2936  0CE3  00C8               	movwf	??_scale+2
  2937  0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  2938  0CE9  00C9               	movwf	??_scale+3
  2939  0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  2940  0CEF  00CA               	movwf	??_scale+4
  2941  0CF0  084A               	movf	??_scale+4,w
  2942  0CF1  00AB               	movwf	___flmul@b+3
  2943  0CF2  0849               	movf	??_scale+3,w
  2944  0CF3  00AA               	movwf	___flmul@b+2
  2945  0CF4  0848               	movf	??_scale+2,w
  2946  0CF5  00A9               	movwf	___flmul@b+1
  2947  0CF6  0847               	movf	??_scale+1,w
  2948  0CF7  00A8               	movwf	___flmul@b
  2949  0CF8  3064               	movlw	100
  2950  0CF9  00A0               	movwf	___awdiv@divisor
  2951  0CFA  3000               	movlw	0
  2952  0CFB  00A1               	movwf	___awdiv@divisor+1
  2953  0CFC  0854               	movf	scale@scl,w
  2954  0CFD  00A2               	movwf	___awdiv@dividend
  2955  0CFE  01A3               	clrf	___awdiv@dividend+1
  2956  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2957  0D00  03A3               	decf	___awdiv@dividend+1,f
  2958  0D01  160A  158A  24FE  120A  158A  	fcall	___awdiv
  2959  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0D08  0820               	movf	?___awdiv,w
  2962  0D09  00CB               	movwf	??_scale+5
  2963  0D0A  3001               	movlw	1
  2964  0D0B                     u4125:
  2965  0D0B  1003               	clrc
  2966  0D0C  0DCB               	rlf	??_scale+5,f
  2967  0D0D  3EFF               	addlw	-1
  2968  0D0E  1D03               	skipz
  2969  0D0F  2D0B               	goto	u4125
  2970  0D10  1003               	clrc
  2971  0D11  0D4B               	rlf	??_scale+5,w
  2972  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2973  0D13  0084               	movwf	4
  2974  0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  2975  0D19  00CC               	movwf	??_scale+6
  2976  0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  2977  0D1F  00CD               	movwf	??_scale+7
  2978  0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  2979  0D25  00CE               	movwf	??_scale+8
  2980  0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  2981  0D2B  00CF               	movwf	??_scale+9
  2982  0D2C  084F               	movf	??_scale+9,w
  2983  0D2D  00AF               	movwf	___flmul@a+3
  2984  0D2E  084E               	movf	??_scale+8,w
  2985  0D2F  00AE               	movwf	___flmul@a+2
  2986  0D30  084D               	movf	??_scale+7,w
  2987  0D31  00AD               	movwf	___flmul@a+1
  2988  0D32  084C               	movf	??_scale+6,w
  2989  0D33  00AC               	movwf	___flmul@a
  2990  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2991  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0D3B  082B               	movf	?___flmul+3,w
  2994  0D3C  00D3               	movwf	_scale$1195+3
  2995  0D3D  082A               	movf	?___flmul+2,w
  2996  0D3E  00D2               	movwf	_scale$1195+2
  2997  0D3F  0829               	movf	?___flmul+1,w
  2998  0D40  00D1               	movwf	_scale$1195+1
  2999  0D41  0828               	movf	?___flmul,w
  3000  0D42  00D0               	movwf	_scale$1195
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3003  0D43  300A               	movlw	10
  3004  0D44  00F2               	movwf	___awmod@divisor
  3005  0D45  3000               	movlw	0
  3006  0D46  00F3               	movwf	___awmod@divisor+1
  3007  0D47  0854               	movf	scale@scl,w
  3008  0D48  00F4               	movwf	___awmod@dividend
  3009  0D49  01F5               	clrf	___awmod@dividend+1
  3010  0D4A  1BF4               	btfsc	___awmod@dividend,7
  3011  0D4B  03F5               	decf	___awmod@dividend+1,f
  3012  0D4C  120A  158A  20E3  120A  158A  	fcall	___awmod
  3013  0D51  0872               	movf	?___awmod,w
  3014  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3016  0D54  00C6               	movwf	??_scale
  3017  0D55  3001               	movlw	1
  3018  0D56                     u4135:
  3019  0D56  1003               	clrc
  3020  0D57  0DC6               	rlf	??_scale,f
  3021  0D58  3EFF               	addlw	-1
  3022  0D59  1D03               	skipz
  3023  0D5A  2D56               	goto	u4135
  3024  0D5B  1003               	clrc
  3025  0D5C  0D46               	rlf	??_scale,w
  3026  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3027  0D5E  0084               	movwf	4
  3028  0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  3029  0D64  00C7               	movwf	??_scale+1
  3030  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  3031  0D6A  00C8               	movwf	??_scale+2
  3032  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3033  0D70  00C9               	movwf	??_scale+3
  3034  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  3035  0D76  00CA               	movwf	??_scale+4
  3036  0D77  084A               	movf	??_scale+4,w
  3037  0D78  00AB               	movwf	___flmul@b+3
  3038  0D79  0849               	movf	??_scale+3,w
  3039  0D7A  00AA               	movwf	___flmul@b+2
  3040  0D7B  0848               	movf	??_scale+2,w
  3041  0D7C  00A9               	movwf	___flmul@b+1
  3042  0D7D  0847               	movf	??_scale+1,w
  3043  0D7E  00A8               	movwf	___flmul@b
  3044  0D7F  0853               	movf	_scale$1195+3,w
  3045  0D80  00AF               	movwf	___flmul@a+3
  3046  0D81  0852               	movf	_scale$1195+2,w
  3047  0D82  00AE               	movwf	___flmul@a+2
  3048  0D83  0851               	movf	_scale$1195+1,w
  3049  0D84  00AD               	movwf	___flmul@a+1
  3050  0D85  0850               	movf	_scale$1195,w
  3051  0D86  00AC               	movwf	___flmul@a
  3052  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3053  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0D8E  082B               	movf	?___flmul+3,w
  3056  0D8F  00C5               	movwf	?_scale+3
  3057  0D90  082A               	movf	?___flmul+2,w
  3058  0D91  00C4               	movwf	?_scale+2
  3059  0D92  0829               	movf	?___flmul+1,w
  3060  0D93  00C3               	movwf	?_scale+1
  3061  0D94  0828               	movf	?___flmul,w
  3062  0D95  00C2               	movwf	?_scale
  3063  0D96  2FFF               	goto	l293
  3064  0D97                     l2811:
  3065  0D97  0854               	movf	scale@scl,w
  3066  0D98  3A80               	xorlw	128
  3067  0D99  3E75               	addlw	-139
  3068  0D9A  1C03               	skipc
  3069  0D9B  2D9D               	goto	u4141
  3070  0D9C  2D9E               	goto	u4140
  3071  0D9D                     u4141:
  3072  0D9D  2E26               	goto	l2817
  3073  0D9E                     u4140:
  3074  0D9E                     l2813:
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3077  0D9E  300A               	movlw	10
  3078  0D9F  00F2               	movwf	___awmod@divisor
  3079  0DA0  3000               	movlw	0
  3080  0DA1  00F3               	movwf	___awmod@divisor+1
  3081  0DA2  0854               	movf	scale@scl,w
  3082  0DA3  00F4               	movwf	___awmod@dividend
  3083  0DA4  01F5               	clrf	___awmod@dividend+1
  3084  0DA5  1BF4               	btfsc	___awmod@dividend,7
  3085  0DA6  03F5               	decf	___awmod@dividend+1,f
  3086  0DA7  120A  158A  20E3  120A  158A  	fcall	___awmod
  3087  0DAC  0872               	movf	?___awmod,w
  3088  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0DAF  00C6               	movwf	??_scale
  3091  0DB0  3001               	movlw	1
  3092  0DB1                     u4155:
  3093  0DB1  1003               	clrc
  3094  0DB2  0DC6               	rlf	??_scale,f
  3095  0DB3  3EFF               	addlw	-1
  3096  0DB4  1D03               	skipz
  3097  0DB5  2DB1               	goto	u4155
  3098  0DB6  1003               	clrc
  3099  0DB7  0D46               	rlf	??_scale,w
  3100  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3101  0DB9  0084               	movwf	4
  3102  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  3103  0DBF  00C7               	movwf	??_scale+1
  3104  0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  3105  0DC5  00C8               	movwf	??_scale+2
  3106  0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  3107  0DCB  00C9               	movwf	??_scale+3
  3108  0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  3109  0DD1  00CA               	movwf	??_scale+4
  3110  0DD2  084A               	movf	??_scale+4,w
  3111  0DD3  00AB               	movwf	___flmul@b+3
  3112  0DD4  0849               	movf	??_scale+3,w
  3113  0DD5  00AA               	movwf	___flmul@b+2
  3114  0DD6  0848               	movf	??_scale+2,w
  3115  0DD7  00A9               	movwf	___flmul@b+1
  3116  0DD8  0847               	movf	??_scale+1,w
  3117  0DD9  00A8               	movwf	___flmul@b
  3118  0DDA  300A               	movlw	10
  3119  0DDB  00A0               	movwf	___awdiv@divisor
  3120  0DDC  3000               	movlw	0
  3121  0DDD  00A1               	movwf	___awdiv@divisor+1
  3122  0DDE  0854               	movf	scale@scl,w
  3123  0DDF  00A2               	movwf	___awdiv@dividend
  3124  0DE0  01A3               	clrf	___awdiv@dividend+1
  3125  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3126  0DE2  03A3               	decf	___awdiv@dividend+1,f
  3127  0DE3  160A  158A  24FE  120A  158A  	fcall	___awdiv
  3128  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0DEA  0820               	movf	?___awdiv,w
  3131  0DEB  00CB               	movwf	??_scale+5
  3132  0DEC  3001               	movlw	1
  3133  0DED                     u4165:
  3134  0DED  1003               	clrc
  3135  0DEE  0DCB               	rlf	??_scale+5,f
  3136  0DEF  3EFF               	addlw	-1
  3137  0DF0  1D03               	skipz
  3138  0DF1  2DED               	goto	u4165
  3139  0DF2  1003               	clrc
  3140  0DF3  0D4B               	rlf	??_scale+5,w
  3141  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3142  0DF5  0084               	movwf	4
  3143  0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  3144  0DFB  00CC               	movwf	??_scale+6
  3145  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  3146  0E01  00CD               	movwf	??_scale+7
  3147  0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  3148  0E07  00CE               	movwf	??_scale+8
  3149  0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  3150  0E0D  00CF               	movwf	??_scale+9
  3151  0E0E  084F               	movf	??_scale+9,w
  3152  0E0F  00AF               	movwf	___flmul@a+3
  3153  0E10  084E               	movf	??_scale+8,w
  3154  0E11  00AE               	movwf	___flmul@a+2
  3155  0E12  084D               	movf	??_scale+7,w
  3156  0E13  00AD               	movwf	___flmul@a+1
  3157  0E14  084C               	movf	??_scale+6,w
  3158  0E15  00AC               	movwf	___flmul@a
  3159  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3160  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0E1D  082B               	movf	?___flmul+3,w
  3163  0E1E  00C5               	movwf	?_scale+3
  3164  0E1F  082A               	movf	?___flmul+2,w
  3165  0E20  00C4               	movwf	?_scale+2
  3166  0E21  0829               	movf	?___flmul+1,w
  3167  0E22  00C3               	movwf	?_scale+1
  3168  0E23  0828               	movf	?___flmul,w
  3169  0E24  00C2               	movwf	?_scale
  3170  0E25  2FFF               	goto	l293
  3171  0E26                     l2817:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3174  0E26  0854               	movf	scale@scl,w
  3175  0E27  00C6               	movwf	??_scale
  3176  0E28  3001               	movlw	1
  3177  0E29                     u4175:
  3178  0E29  1003               	clrc
  3179  0E2A  0DC6               	rlf	??_scale,f
  3180  0E2B  3EFF               	addlw	-1
  3181  0E2C  1D03               	skipz
  3182  0E2D  2E29               	goto	u4175
  3183  0E2E  1003               	clrc
  3184  0E2F  0D46               	rlf	??_scale,w
  3185  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3186  0E31  0084               	movwf	4
  3187  0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  3188  0E37  00C7               	movwf	??_scale+1
  3189  0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  3190  0E3D  00C8               	movwf	??_scale+2
  3191  0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  3192  0E43  00C9               	movwf	??_scale+3
  3193  0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  3194  0E49  00CA               	movwf	??_scale+4
  3195  0E4A  084A               	movf	??_scale+4,w
  3196  0E4B  00C5               	movwf	?_scale+3
  3197  0E4C  0849               	movf	??_scale+3,w
  3198  0E4D  00C4               	movwf	?_scale+2
  3199  0E4E  0848               	movf	??_scale+2,w
  3200  0E4F  00C3               	movwf	?_scale+1
  3201  0E50  0847               	movf	??_scale+1,w
  3202  0E51  00C2               	movwf	?_scale
  3203  0E52  2FFF               	goto	l293
  3204  0E53                     l2821:
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3207  0E53  0854               	movf	scale@scl,w
  3208  0E54  3A80               	xorlw	128
  3209  0E55  3E12               	addlw	-238
  3210  0E56  1C03               	skipc
  3211  0E57  2E59               	goto	u4181
  3212  0E58  2E5A               	goto	u4180
  3213  0E59                     u4181:
  3214  0E59  2F44               	goto	l2829
  3215  0E5A                     u4180:
  3216  0E5A                     l2823:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3219  0E5A  300A               	movlw	10
  3220  0E5B  00A0               	movwf	___awdiv@divisor
  3221  0E5C  3000               	movlw	0
  3222  0E5D  00A1               	movwf	___awdiv@divisor+1
  3223  0E5E  0854               	movf	scale@scl,w
  3224  0E5F  00F4               	movwf	___awmod@dividend
  3225  0E60  01F5               	clrf	___awmod@dividend+1
  3226  0E61  1BF4               	btfsc	___awmod@dividend,7
  3227  0E62  03F5               	decf	___awmod@dividend+1,f
  3228  0E63  3064               	movlw	100
  3229  0E64  00F2               	movwf	___awmod@divisor
  3230  0E65  3000               	movlw	0
  3231  0E66  00F3               	movwf	___awmod@divisor+1
  3232  0E67  120A  158A  20E3  120A  158A  	fcall	___awmod
  3233  0E6C  0873               	movf	?___awmod+1,w
  3234  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0E6F  00A3               	movwf	___awdiv@dividend+1
  3237  0E70  0872               	movf	?___awmod,w
  3238  0E71  00A2               	movwf	___awdiv@dividend
  3239  0E72  160A  158A  24FE  120A  158A  	fcall	___awdiv
  3240  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0E79  0820               	movf	?___awdiv,w
  3243  0E7A  00C6               	movwf	??_scale
  3244  0E7B  3001               	movlw	1
  3245  0E7C                     u4195:
  3246  0E7C  1003               	clrc
  3247  0E7D  0DC6               	rlf	??_scale,f
  3248  0E7E  3EFF               	addlw	-1
  3249  0E7F  1D03               	skipz
  3250  0E80  2E7C               	goto	u4195
  3251  0E81  1003               	clrc
  3252  0E82  0D46               	rlf	??_scale,w
  3253  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3254  0E84  0084               	movwf	4
  3255  0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  3256  0E8A  00C7               	movwf	??_scale+1
  3257  0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  3258  0E90  00C8               	movwf	??_scale+2
  3259  0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  3260  0E96  00C9               	movwf	??_scale+3
  3261  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  3262  0E9C  00CA               	movwf	??_scale+4
  3263  0E9D  084A               	movf	??_scale+4,w
  3264  0E9E  00AB               	movwf	___flmul@b+3
  3265  0E9F  0849               	movf	??_scale+3,w
  3266  0EA0  00AA               	movwf	___flmul@b+2
  3267  0EA1  0848               	movf	??_scale+2,w
  3268  0EA2  00A9               	movwf	___flmul@b+1
  3269  0EA3  0847               	movf	??_scale+1,w
  3270  0EA4  00A8               	movwf	___flmul@b
  3271  0EA5  3064               	movlw	100
  3272  0EA6  00A0               	movwf	___awdiv@divisor
  3273  0EA7  3000               	movlw	0
  3274  0EA8  00A1               	movwf	___awdiv@divisor+1
  3275  0EA9  0854               	movf	scale@scl,w
  3276  0EAA  00A2               	movwf	___awdiv@dividend
  3277  0EAB  01A3               	clrf	___awdiv@dividend+1
  3278  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3279  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3280  0EAE  160A  158A  24FE  120A  158A  	fcall	___awdiv
  3281  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3282  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3283  0EB5  0820               	movf	?___awdiv,w
  3284  0EB6  00CB               	movwf	??_scale+5
  3285  0EB7  3001               	movlw	1
  3286  0EB8                     u4205:
  3287  0EB8  1003               	clrc
  3288  0EB9  0DCB               	rlf	??_scale+5,f
  3289  0EBA  3EFF               	addlw	-1
  3290  0EBB  1D03               	skipz
  3291  0EBC  2EB8               	goto	u4205
  3292  0EBD  1003               	clrc
  3293  0EBE  0D4B               	rlf	??_scale+5,w
  3294  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3295  0EC0  0084               	movwf	4
  3296  0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  3297  0EC6  00CC               	movwf	??_scale+6
  3298  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  3299  0ECC  00CD               	movwf	??_scale+7
  3300  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  3301  0ED2  00CE               	movwf	??_scale+8
  3302  0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  3303  0ED8  00CF               	movwf	??_scale+9
  3304  0ED9  084F               	movf	??_scale+9,w
  3305  0EDA  00AF               	movwf	___flmul@a+3
  3306  0EDB  084E               	movf	??_scale+8,w
  3307  0EDC  00AE               	movwf	___flmul@a+2
  3308  0EDD  084D               	movf	??_scale+7,w
  3309  0EDE  00AD               	movwf	___flmul@a+1
  3310  0EDF  084C               	movf	??_scale+6,w
  3311  0EE0  00AC               	movwf	___flmul@a
  3312  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3313  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0EE8  082B               	movf	?___flmul+3,w
  3316  0EE9  00D3               	movwf	_scale$1195+3
  3317  0EEA  082A               	movf	?___flmul+2,w
  3318  0EEB  00D2               	movwf	_scale$1195+2
  3319  0EEC  0829               	movf	?___flmul+1,w
  3320  0EED  00D1               	movwf	_scale$1195+1
  3321  0EEE  0828               	movf	?___flmul,w
  3322  0EEF  00D0               	movwf	_scale$1195
  3323                           
  3324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3325  0EF0  300A               	movlw	10
  3326  0EF1  00F2               	movwf	___awmod@divisor
  3327  0EF2  3000               	movlw	0
  3328  0EF3  00F3               	movwf	___awmod@divisor+1
  3329  0EF4  0854               	movf	scale@scl,w
  3330  0EF5  00F4               	movwf	___awmod@dividend
  3331  0EF6  01F5               	clrf	___awmod@dividend+1
  3332  0EF7  1BF4               	btfsc	___awmod@dividend,7
  3333  0EF8  03F5               	decf	___awmod@dividend+1,f
  3334  0EF9  120A  158A  20E3  120A  158A  	fcall	___awmod
  3335  0EFE  0872               	movf	?___awmod,w
  3336  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0F01  00C6               	movwf	??_scale
  3339  0F02  3001               	movlw	1
  3340  0F03                     u4215:
  3341  0F03  1003               	clrc
  3342  0F04  0DC6               	rlf	??_scale,f
  3343  0F05  3EFF               	addlw	-1
  3344  0F06  1D03               	skipz
  3345  0F07  2F03               	goto	u4215
  3346  0F08  1003               	clrc
  3347  0F09  0D46               	rlf	??_scale,w
  3348  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3349  0F0B  0084               	movwf	4
  3350  0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3351  0F11  00C7               	movwf	??_scale+1
  3352  0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  3353  0F17  00C8               	movwf	??_scale+2
  3354  0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  3355  0F1D  00C9               	movwf	??_scale+3
  3356  0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  3357  0F23  00CA               	movwf	??_scale+4
  3358  0F24  084A               	movf	??_scale+4,w
  3359  0F25  00AB               	movwf	___flmul@b+3
  3360  0F26  0849               	movf	??_scale+3,w
  3361  0F27  00AA               	movwf	___flmul@b+2
  3362  0F28  0848               	movf	??_scale+2,w
  3363  0F29  00A9               	movwf	___flmul@b+1
  3364  0F2A  0847               	movf	??_scale+1,w
  3365  0F2B  00A8               	movwf	___flmul@b
  3366  0F2C  0853               	movf	_scale$1195+3,w
  3367  0F2D  00AF               	movwf	___flmul@a+3
  3368  0F2E  0852               	movf	_scale$1195+2,w
  3369  0F2F  00AE               	movwf	___flmul@a+2
  3370  0F30  0851               	movf	_scale$1195+1,w
  3371  0F31  00AD               	movwf	___flmul@a+1
  3372  0F32  0850               	movf	_scale$1195,w
  3373  0F33  00AC               	movwf	___flmul@a
  3374  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3375  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3377  0F3B  082B               	movf	?___flmul+3,w
  3378  0F3C  00C5               	movwf	?_scale+3
  3379  0F3D  082A               	movf	?___flmul+2,w
  3380  0F3E  00C4               	movwf	?_scale+2
  3381  0F3F  0829               	movf	?___flmul+1,w
  3382  0F40  00C3               	movwf	?_scale+1
  3383  0F41  0828               	movf	?___flmul,w
  3384  0F42  00C2               	movwf	?_scale
  3385  0F43  2FFF               	goto	l293
  3386  0F44                     l2829:
  3387  0F44  0854               	movf	scale@scl,w
  3388  0F45  3A80               	xorlw	128
  3389  0F46  3E75               	addlw	-139
  3390  0F47  1C03               	skipc
  3391  0F48  2F4A               	goto	u4221
  3392  0F49  2F4B               	goto	u4220
  3393  0F4A                     u4221:
  3394  0F4A  2FD3               	goto	l2835
  3395  0F4B                     u4220:
  3396  0F4B                     l2831:
  3397                           
  3398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3399  0F4B  300A               	movlw	10
  3400  0F4C  00F2               	movwf	___awmod@divisor
  3401  0F4D  3000               	movlw	0
  3402  0F4E  00F3               	movwf	___awmod@divisor+1
  3403  0F4F  0854               	movf	scale@scl,w
  3404  0F50  00F4               	movwf	___awmod@dividend
  3405  0F51  01F5               	clrf	___awmod@dividend+1
  3406  0F52  1BF4               	btfsc	___awmod@dividend,7
  3407  0F53  03F5               	decf	___awmod@dividend+1,f
  3408  0F54  120A  158A  20E3  120A  158A  	fcall	___awmod
  3409  0F59  0872               	movf	?___awmod,w
  3410  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3412  0F5C  00C6               	movwf	??_scale
  3413  0F5D  3001               	movlw	1
  3414  0F5E                     u4235:
  3415  0F5E  1003               	clrc
  3416  0F5F  0DC6               	rlf	??_scale,f
  3417  0F60  3EFF               	addlw	-1
  3418  0F61  1D03               	skipz
  3419  0F62  2F5E               	goto	u4235
  3420  0F63  1003               	clrc
  3421  0F64  0D46               	rlf	??_scale,w
  3422  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3423  0F66  0084               	movwf	4
  3424  0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  3425  0F6C  00C7               	movwf	??_scale+1
  3426  0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  3427  0F72  00C8               	movwf	??_scale+2
  3428  0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  3429  0F78  00C9               	movwf	??_scale+3
  3430  0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  3431  0F7E  00CA               	movwf	??_scale+4
  3432  0F7F  084A               	movf	??_scale+4,w
  3433  0F80  00AB               	movwf	___flmul@b+3
  3434  0F81  0849               	movf	??_scale+3,w
  3435  0F82  00AA               	movwf	___flmul@b+2
  3436  0F83  0848               	movf	??_scale+2,w
  3437  0F84  00A9               	movwf	___flmul@b+1
  3438  0F85  0847               	movf	??_scale+1,w
  3439  0F86  00A8               	movwf	___flmul@b
  3440  0F87  300A               	movlw	10
  3441  0F88  00A0               	movwf	___awdiv@divisor
  3442  0F89  3000               	movlw	0
  3443  0F8A  00A1               	movwf	___awdiv@divisor+1
  3444  0F8B  0854               	movf	scale@scl,w
  3445  0F8C  00A2               	movwf	___awdiv@dividend
  3446  0F8D  01A3               	clrf	___awdiv@dividend+1
  3447  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3448  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3449  0F90  160A  158A  24FE  120A  158A  	fcall	___awdiv
  3450  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3451  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3452  0F97  0820               	movf	?___awdiv,w
  3453  0F98  00CB               	movwf	??_scale+5
  3454  0F99  3001               	movlw	1
  3455  0F9A                     u4245:
  3456  0F9A  1003               	clrc
  3457  0F9B  0DCB               	rlf	??_scale+5,f
  3458  0F9C  3EFF               	addlw	-1
  3459  0F9D  1D03               	skipz
  3460  0F9E  2F9A               	goto	u4245
  3461  0F9F  1003               	clrc
  3462  0FA0  0D4B               	rlf	??_scale+5,w
  3463  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3464  0FA2  0084               	movwf	4
  3465  0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  3466  0FA8  00CC               	movwf	??_scale+6
  3467  0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  3468  0FAE  00CD               	movwf	??_scale+7
  3469  0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  3470  0FB4  00CE               	movwf	??_scale+8
  3471  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  3472  0FBA  00CF               	movwf	??_scale+9
  3473  0FBB  084F               	movf	??_scale+9,w
  3474  0FBC  00AF               	movwf	___flmul@a+3
  3475  0FBD  084E               	movf	??_scale+8,w
  3476  0FBE  00AE               	movwf	___flmul@a+2
  3477  0FBF  084D               	movf	??_scale+7,w
  3478  0FC0  00AD               	movwf	___flmul@a+1
  3479  0FC1  084C               	movf	??_scale+6,w
  3480  0FC2  00AC               	movwf	___flmul@a
  3481  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3482  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0FCA  082B               	movf	?___flmul+3,w
  3485  0FCB  00C5               	movwf	?_scale+3
  3486  0FCC  082A               	movf	?___flmul+2,w
  3487  0FCD  00C4               	movwf	?_scale+2
  3488  0FCE  0829               	movf	?___flmul+1,w
  3489  0FCF  00C3               	movwf	?_scale+1
  3490  0FD0  0828               	movf	?___flmul,w
  3491  0FD1  00C2               	movwf	?_scale
  3492  0FD2  2FFF               	goto	l293
  3493  0FD3                     l2835:
  3494                           
  3495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3496  0FD3  0854               	movf	scale@scl,w
  3497  0FD4  00C6               	movwf	??_scale
  3498  0FD5  3001               	movlw	1
  3499  0FD6                     u4255:
  3500  0FD6  1003               	clrc
  3501  0FD7  0DC6               	rlf	??_scale,f
  3502  0FD8  3EFF               	addlw	-1
  3503  0FD9  1D03               	skipz
  3504  0FDA  2FD6               	goto	u4255
  3505  0FDB  1003               	clrc
  3506  0FDC  0D46               	rlf	??_scale,w
  3507  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3508  0FDE  0084               	movwf	4
  3509  0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  3510  0FE4  00C7               	movwf	??_scale+1
  3511  0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3512  0FEA  00C8               	movwf	??_scale+2
  3513  0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  3514  0FF0  00C9               	movwf	??_scale+3
  3515  0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  3516  0FF6  00CA               	movwf	??_scale+4
  3517  0FF7  084A               	movf	??_scale+4,w
  3518  0FF8  00C5               	movwf	?_scale+3
  3519  0FF9  0849               	movf	??_scale+3,w
  3520  0FFA  00C4               	movwf	?_scale+2
  3521  0FFB  0848               	movf	??_scale+2,w
  3522  0FFC  00C3               	movwf	?_scale+1
  3523  0FFD  0847               	movf	??_scale+1,w
  3524  0FFE  00C2               	movwf	?_scale
  3525  0FFF                     l293:
  3526  0FFF  0008               	return
  3527  1000                     __end_of_scale:
  3528                           
  3529                           	psect	text3
  3530  08E3                     __ptext3:	
  3531 ;; *************** function ___awmod *****************
  3532 ;; Defined at:
  3533 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  divisor         2    2[COMMON] int 
  3536 ;;  dividend        2    4[COMMON] int 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  sign            1    8[COMMON] unsigned char 
  3539 ;;  counter         1    7[COMMON] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  2    2[COMMON] int 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3549 ;;      Params:         4       0       0       0       0
  3550 ;;      Locals:         2       0       0       0       0
  3551 ;;      Temps:          1       0       0       0       0
  3552 ;;      Totals:         7       0       0       0       0
  3553 ;;Total ram usage:        7 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    1
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_scale
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           
  3564                           ;psect for function ___awmod
  3565  08E3                     ___awmod:
  3566  08E3                     l2327:	
  3567                           ;incstack = 0
  3568                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3569                           
  3570  08E3  01F8               	clrf	___awmod@sign
  3571  08E4                     l2329:
  3572  08E4  1FF5               	btfss	___awmod@dividend+1,7
  3573  08E5  28E7               	goto	u2951
  3574  08E6  28E8               	goto	u2950
  3575  08E7                     u2951:
  3576  08E7  28EF               	goto	l2335
  3577  08E8                     u2950:
  3578  08E8                     l2331:
  3579  08E8  09F4               	comf	___awmod@dividend,f
  3580  08E9  09F5               	comf	___awmod@dividend+1,f
  3581  08EA  0AF4               	incf	___awmod@dividend,f
  3582  08EB  1903               	skipnz
  3583  08EC  0AF5               	incf	___awmod@dividend+1,f
  3584  08ED                     l2333:
  3585  08ED  01F8               	clrf	___awmod@sign
  3586  08EE  0AF8               	incf	___awmod@sign,f
  3587  08EF                     l2335:
  3588  08EF  1FF3               	btfss	___awmod@divisor+1,7
  3589  08F0  28F2               	goto	u2961
  3590  08F1  28F3               	goto	u2960
  3591  08F2                     u2961:
  3592  08F2  28F8               	goto	l2339
  3593  08F3                     u2960:
  3594  08F3                     l2337:
  3595  08F3  09F2               	comf	___awmod@divisor,f
  3596  08F4  09F3               	comf	___awmod@divisor+1,f
  3597  08F5  0AF2               	incf	___awmod@divisor,f
  3598  08F6  1903               	skipnz
  3599  08F7  0AF3               	incf	___awmod@divisor+1,f
  3600  08F8                     l2339:
  3601  08F8  0872               	movf	___awmod@divisor,w
  3602  08F9  0473               	iorwf	___awmod@divisor+1,w
  3603  08FA  1903               	btfsc	3,2
  3604  08FB  28FD               	goto	u2971
  3605  08FC  28FE               	goto	u2970
  3606  08FD                     u2971:
  3607  08FD  292D               	goto	l2357
  3608  08FE                     u2970:
  3609  08FE                     l2341:
  3610  08FE  01F7               	clrf	___awmod@counter
  3611  08FF  0AF7               	incf	___awmod@counter,f
  3612  0900  290C               	goto	l2347
  3613  0901                     l2343:
  3614  0901  3001               	movlw	1
  3615  0902                     u2985:
  3616  0902  1003               	clrc
  3617  0903  0DF2               	rlf	___awmod@divisor,f
  3618  0904  0DF3               	rlf	___awmod@divisor+1,f
  3619  0905  3EFF               	addlw	-1
  3620  0906  1D03               	skipz
  3621  0907  2902               	goto	u2985
  3622  0908                     l2345:
  3623  0908  3001               	movlw	1
  3624  0909  00F6               	movwf	??___awmod
  3625  090A  0876               	movf	??___awmod,w
  3626  090B  07F7               	addwf	___awmod@counter,f
  3627  090C                     l2347:
  3628  090C  1FF3               	btfss	___awmod@divisor+1,7
  3629  090D  290F               	goto	u2991
  3630  090E  2910               	goto	u2990
  3631  090F                     u2991:
  3632  090F  2901               	goto	l2343
  3633  0910                     u2990:
  3634  0910                     l2349:
  3635  0910  0873               	movf	___awmod@divisor+1,w
  3636  0911  0275               	subwf	___awmod@dividend+1,w
  3637  0912  1D03               	skipz
  3638  0913  2916               	goto	u3005
  3639  0914  0872               	movf	___awmod@divisor,w
  3640  0915  0274               	subwf	___awmod@dividend,w
  3641  0916                     u3005:
  3642  0916  1C03               	skipc
  3643  0917  2919               	goto	u3001
  3644  0918  291A               	goto	u3000
  3645  0919                     u3001:
  3646  0919  2920               	goto	l2353
  3647  091A                     u3000:
  3648  091A                     l2351:
  3649  091A  0872               	movf	___awmod@divisor,w
  3650  091B  02F4               	subwf	___awmod@dividend,f
  3651  091C  0873               	movf	___awmod@divisor+1,w
  3652  091D  1C03               	skipc
  3653  091E  03F5               	decf	___awmod@dividend+1,f
  3654  091F  02F5               	subwf	___awmod@dividend+1,f
  3655  0920                     l2353:
  3656  0920  3001               	movlw	1
  3657  0921                     u3015:
  3658  0921  1003               	clrc
  3659  0922  0CF3               	rrf	___awmod@divisor+1,f
  3660  0923  0CF2               	rrf	___awmod@divisor,f
  3661  0924  3EFF               	addlw	-1
  3662  0925  1D03               	skipz
  3663  0926  2921               	goto	u3015
  3664  0927                     l2355:
  3665  0927  3001               	movlw	1
  3666  0928  02F7               	subwf	___awmod@counter,f
  3667  0929  1D03               	btfss	3,2
  3668  092A  292C               	goto	u3021
  3669  092B  292D               	goto	u3020
  3670  092C                     u3021:
  3671  092C  2910               	goto	l2349
  3672  092D                     u3020:
  3673  092D                     l2357:
  3674  092D  0878               	movf	___awmod@sign,w
  3675  092E  1903               	btfsc	3,2
  3676  092F  2931               	goto	u3031
  3677  0930  2932               	goto	u3030
  3678  0931                     u3031:
  3679  0931  2937               	goto	l2361
  3680  0932                     u3030:
  3681  0932                     l2359:
  3682  0932  09F4               	comf	___awmod@dividend,f
  3683  0933  09F5               	comf	___awmod@dividend+1,f
  3684  0934  0AF4               	incf	___awmod@dividend,f
  3685  0935  1903               	skipnz
  3686  0936  0AF5               	incf	___awmod@dividend+1,f
  3687  0937                     l2361:
  3688  0937  0875               	movf	___awmod@dividend+1,w
  3689  0938  00F3               	movwf	?___awmod+1
  3690  0939  0874               	movf	___awmod@dividend,w
  3691  093A  00F2               	movwf	?___awmod
  3692  093B                     l546:
  3693  093B  0008               	return
  3694  093C                     __end_of___awmod:
  3695                           
  3696                           	psect	text4
  3697  1CFE                     __ptext4:	
  3698 ;; *************** function ___awdiv *****************
  3699 ;; Defined at:
  3700 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  divisor         2    0[BANK0 ] int 
  3703 ;;  dividend        2    2[BANK0 ] int 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  quotient        2    6[BANK0 ] int 
  3706 ;;  sign            1    5[BANK0 ] unsigned char 
  3707 ;;  counter         1    4[BANK0 ] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  2    0[BANK0 ] int 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3717 ;;      Params:         0       4       0       0       0
  3718 ;;      Locals:         0       4       0       0       0
  3719 ;;      Temps:          1       0       0       0       0
  3720 ;;      Totals:         1       8       0       0       0
  3721 ;;Total ram usage:        9 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    1
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_scale
  3728 ;;		_sprintf
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           
  3733                           ;psect for function ___awdiv
  3734  1CFE                     ___awdiv:
  3735  1CFE                     l2283:	
  3736                           ;incstack = 0
  3737                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3738                           
  3739  1CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3740  1CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3741  1D00  01A5               	clrf	___awdiv@sign
  3742  1D01                     l2285:
  3743  1D01  1FA1               	btfss	___awdiv@divisor+1,7
  3744  1D02  2D04               	goto	u2851
  3745  1D03  2D05               	goto	u2850
  3746  1D04                     u2851:
  3747  1D04  2D0C               	goto	l2291
  3748  1D05                     u2850:
  3749  1D05                     l2287:
  3750  1D05  09A0               	comf	___awdiv@divisor,f
  3751  1D06  09A1               	comf	___awdiv@divisor+1,f
  3752  1D07  0AA0               	incf	___awdiv@divisor,f
  3753  1D08  1903               	skipnz
  3754  1D09  0AA1               	incf	___awdiv@divisor+1,f
  3755  1D0A                     l2289:
  3756  1D0A  01A5               	clrf	___awdiv@sign
  3757  1D0B  0AA5               	incf	___awdiv@sign,f
  3758  1D0C                     l2291:
  3759  1D0C  1FA3               	btfss	___awdiv@dividend+1,7
  3760  1D0D  2D0F               	goto	u2861
  3761  1D0E  2D10               	goto	u2860
  3762  1D0F                     u2861:
  3763  1D0F  2D19               	goto	l2297
  3764  1D10                     u2860:
  3765  1D10                     l2293:
  3766  1D10  09A2               	comf	___awdiv@dividend,f
  3767  1D11  09A3               	comf	___awdiv@dividend+1,f
  3768  1D12  0AA2               	incf	___awdiv@dividend,f
  3769  1D13  1903               	skipnz
  3770  1D14  0AA3               	incf	___awdiv@dividend+1,f
  3771  1D15                     l2295:
  3772  1D15  3001               	movlw	1
  3773  1D16  00F9               	movwf	??___awdiv
  3774  1D17  0879               	movf	??___awdiv,w
  3775  1D18  06A5               	xorwf	___awdiv@sign,f
  3776  1D19                     l2297:
  3777  1D19  01A6               	clrf	___awdiv@quotient
  3778  1D1A  01A7               	clrf	___awdiv@quotient+1
  3779  1D1B                     l2299:
  3780  1D1B  0820               	movf	___awdiv@divisor,w
  3781  1D1C  0421               	iorwf	___awdiv@divisor+1,w
  3782  1D1D  1903               	btfsc	3,2
  3783  1D1E  2D20               	goto	u2871
  3784  1D1F  2D21               	goto	u2870
  3785  1D20                     u2871:
  3786  1D20  2D58               	goto	l2319
  3787  1D21                     u2870:
  3788  1D21                     l2301:
  3789  1D21  01A4               	clrf	___awdiv@counter
  3790  1D22  0AA4               	incf	___awdiv@counter,f
  3791  1D23  2D2F               	goto	l2307
  3792  1D24                     l2303:
  3793  1D24  3001               	movlw	1
  3794  1D25                     u2885:
  3795  1D25  1003               	clrc
  3796  1D26  0DA0               	rlf	___awdiv@divisor,f
  3797  1D27  0DA1               	rlf	___awdiv@divisor+1,f
  3798  1D28  3EFF               	addlw	-1
  3799  1D29  1D03               	skipz
  3800  1D2A  2D25               	goto	u2885
  3801  1D2B                     l2305:
  3802  1D2B  3001               	movlw	1
  3803  1D2C  00F9               	movwf	??___awdiv
  3804  1D2D  0879               	movf	??___awdiv,w
  3805  1D2E  07A4               	addwf	___awdiv@counter,f
  3806  1D2F                     l2307:
  3807  1D2F  1FA1               	btfss	___awdiv@divisor+1,7
  3808  1D30  2D32               	goto	u2891
  3809  1D31  2D33               	goto	u2890
  3810  1D32                     u2891:
  3811  1D32  2D24               	goto	l2303
  3812  1D33                     u2890:
  3813  1D33                     l2309:
  3814  1D33  3001               	movlw	1
  3815  1D34                     u2905:
  3816  1D34  1003               	clrc
  3817  1D35  0DA6               	rlf	___awdiv@quotient,f
  3818  1D36  0DA7               	rlf	___awdiv@quotient+1,f
  3819  1D37  3EFF               	addlw	-1
  3820  1D38  1D03               	skipz
  3821  1D39  2D34               	goto	u2905
  3822  1D3A  0821               	movf	___awdiv@divisor+1,w
  3823  1D3B  0223               	subwf	___awdiv@dividend+1,w
  3824  1D3C  1D03               	skipz
  3825  1D3D  2D40               	goto	u2915
  3826  1D3E  0820               	movf	___awdiv@divisor,w
  3827  1D3F  0222               	subwf	___awdiv@dividend,w
  3828  1D40                     u2915:
  3829  1D40  1C03               	skipc
  3830  1D41  2D43               	goto	u2911
  3831  1D42  2D44               	goto	u2910
  3832  1D43                     u2911:
  3833  1D43  2D4B               	goto	l2315
  3834  1D44                     u2910:
  3835  1D44                     l2311:
  3836  1D44  0820               	movf	___awdiv@divisor,w
  3837  1D45  02A2               	subwf	___awdiv@dividend,f
  3838  1D46  0821               	movf	___awdiv@divisor+1,w
  3839  1D47  1C03               	skipc
  3840  1D48  03A3               	decf	___awdiv@dividend+1,f
  3841  1D49  02A3               	subwf	___awdiv@dividend+1,f
  3842  1D4A                     l2313:
  3843  1D4A  1426               	bsf	___awdiv@quotient,0
  3844  1D4B                     l2315:
  3845  1D4B  3001               	movlw	1
  3846  1D4C                     u2925:
  3847  1D4C  1003               	clrc
  3848  1D4D  0CA1               	rrf	___awdiv@divisor+1,f
  3849  1D4E  0CA0               	rrf	___awdiv@divisor,f
  3850  1D4F  3EFF               	addlw	-1
  3851  1D50  1D03               	skipz
  3852  1D51  2D4C               	goto	u2925
  3853  1D52                     l2317:
  3854  1D52  3001               	movlw	1
  3855  1D53  02A4               	subwf	___awdiv@counter,f
  3856  1D54  1D03               	btfss	3,2
  3857  1D55  2D57               	goto	u2931
  3858  1D56  2D58               	goto	u2930
  3859  1D57                     u2931:
  3860  1D57  2D33               	goto	l2309
  3861  1D58                     u2930:
  3862  1D58                     l2319:
  3863  1D58  0825               	movf	___awdiv@sign,w
  3864  1D59  1903               	btfsc	3,2
  3865  1D5A  2D5C               	goto	u2941
  3866  1D5B  2D5D               	goto	u2940
  3867  1D5C                     u2941:
  3868  1D5C  2D62               	goto	l2323
  3869  1D5D                     u2940:
  3870  1D5D                     l2321:
  3871  1D5D  09A6               	comf	___awdiv@quotient,f
  3872  1D5E  09A7               	comf	___awdiv@quotient+1,f
  3873  1D5F  0AA6               	incf	___awdiv@quotient,f
  3874  1D60  1903               	skipnz
  3875  1D61  0AA7               	incf	___awdiv@quotient+1,f
  3876  1D62                     l2323:
  3877  1D62  0827               	movf	___awdiv@quotient+1,w
  3878  1D63  00A1               	movwf	?___awdiv+1
  3879  1D64  0826               	movf	___awdiv@quotient,w
  3880  1D65  00A0               	movwf	?___awdiv
  3881  1D66                     l533:
  3882  1D66  0008               	return
  3883  1D67                     __end_of___awdiv:
  3884                           
  3885                           	psect	text5
  3886  19E5                     __ptext5:	
  3887 ;; *************** function _isdigit *****************
  3888 ;; Defined at:
  3889 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  c               1    wreg     unsigned char 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  c               1    3[COMMON] unsigned char 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;		None               void
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3903 ;;      Params:         0       0       0       0       0
  3904 ;;      Locals:         2       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0
  3906 ;;      Totals:         2       0       0       0       0
  3907 ;;Total ram usage:        2 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_sprintf
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _isdigit
  3919  19E5                     _isdigit:
  3920                           
  3921                           ;incstack = 0
  3922                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3923                           ;isdigit@c stored from wreg
  3924  19E5  00F3               	movwf	isdigit@c
  3925  19E6                     l2839:
  3926  19E6  01F2               	clrf	_isdigit$1017
  3927  19E7                     l2841:
  3928  19E7  303A               	movlw	58
  3929  19E8  0273               	subwf	isdigit@c,w
  3930  19E9  1803               	skipnc
  3931  19EA  29EC               	goto	u4261
  3932  19EB  29ED               	goto	u4260
  3933  19EC                     u4261:
  3934  19EC  29F5               	goto	l2847
  3935  19ED                     u4260:
  3936  19ED                     l2843:
  3937  19ED  3030               	movlw	48
  3938  19EE  0273               	subwf	isdigit@c,w
  3939  19EF  1C03               	skipc
  3940  19F0  29F2               	goto	u4271
  3941  19F1  29F3               	goto	u4270
  3942  19F2                     u4271:
  3943  19F2  29F5               	goto	l2847
  3944  19F3                     u4270:
  3945  19F3                     l2845:
  3946  19F3  01F2               	clrf	_isdigit$1017
  3947  19F4  0AF2               	incf	_isdigit$1017,f
  3948  19F5                     l2847:
  3949  19F5  0C72               	rrf	_isdigit$1017,w
  3950  19F6                     l867:
  3951  19F6  0008               	return
  3952  19F7                     __end_of_isdigit:
  3953                           
  3954                           	psect	text6
  3955  05A2                     __ptext6:	
  3956 ;; *************** function _fround *****************
  3957 ;; Defined at:
  3958 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  prec            1    wreg     unsigned char 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  prec            1   53[BANK0 ] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  4   34[BANK0 ] unsigned char 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3972 ;;      Params:         0       4       0       0       0
  3973 ;;      Locals:         0       9       0       0       0
  3974 ;;      Temps:          0       7       0       0       0
  3975 ;;      Totals:         0      20       0       0       0
  3976 ;;Total ram usage:       20 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    3
  3979 ;; This function calls:
  3980 ;;		___flmul
  3981 ;;		___lwdiv
  3982 ;;		___lwmod
  3983 ;; This function is called by:
  3984 ;;		_sprintf
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           
  3989                           ;psect for function _fround
  3990  05A2                     _fround:
  3991                           
  3992                           ;incstack = 0
  3993                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3994                           ;fround@prec stored from wreg
  3995  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3996  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3997  05A4  00D5               	movwf	fround@prec
  3998  05A5                     l3619:
  3999                           
  4000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4001  05A5  306E               	movlw	110
  4002  05A6  0255               	subwf	fround@prec,w
  4003  05A7  1C03               	skipc
  4004  05A8  2DAA               	goto	u5691
  4005  05A9  2DAB               	goto	u5690
  4006  05AA                     u5691:
  4007  05AA  2EBA               	goto	l3627
  4008  05AB                     u5690:
  4009  05AB                     l3621:
  4010                           
  4011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4012  05AB  303F               	movlw	63
  4013  05AC  00AB               	movwf	___flmul@b+3
  4014  05AD  3000               	movlw	0
  4015  05AE  00AA               	movwf	___flmul@b+2
  4016  05AF  3000               	movlw	0
  4017  05B0  00A9               	movwf	___flmul@b+1
  4018  05B1  3000               	movlw	0
  4019  05B2  00A8               	movwf	___flmul@b
  4020  05B3  3064               	movlw	100
  4021  05B4  00A0               	movwf	___lwdiv@divisor
  4022  05B5  3000               	movlw	0
  4023  05B6  00A1               	movwf	___lwdiv@divisor+1
  4024  05B7  0855               	movf	fround@prec,w
  4025  05B8  00C6               	movwf	??_fround
  4026  05B9  01C7               	clrf	??_fround+1
  4027  05BA  0846               	movf	??_fround,w
  4028  05BB  00A2               	movwf	___lwdiv@dividend
  4029  05BC  0847               	movf	??_fround+1,w
  4030  05BD  00A3               	movwf	___lwdiv@dividend+1
  4031  05BE  160A  158A  235B  120A  118A  	fcall	___lwdiv
  4032  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  4033  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  4034  05C5  0820               	movf	?___lwdiv,w
  4035  05C6  00C8               	movwf	??_fround+2
  4036  05C7  3001               	movlw	1
  4037  05C8                     u5705:
  4038  05C8  1003               	clrc
  4039  05C9  0DC8               	rlf	??_fround+2,f
  4040  05CA  3EFF               	addlw	-1
  4041  05CB  1D03               	skipz
  4042  05CC  2DC8               	goto	u5705
  4043  05CD  1003               	clrc
  4044  05CE  0D48               	rlf	??_fround+2,w
  4045  05CF  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4046  05D0  0084               	movwf	4
  4047  05D1  120A  158A  200A  120A  118A  	fcall	stringdir
  4048  05D6  00C9               	movwf	??_fround+3
  4049  05D7  120A  158A  200A  120A  118A  	fcall	stringdir
  4050  05DC  00CA               	movwf	??_fround+4
  4051  05DD  120A  158A  200A  120A  118A  	fcall	stringdir
  4052  05E2  00CB               	movwf	??_fround+5
  4053  05E3  120A  158A  200A  120A  118A  	fcall	stringdir
  4054  05E8  00CC               	movwf	??_fround+6
  4055  05E9  084C               	movf	??_fround+6,w
  4056  05EA  00AF               	movwf	___flmul@a+3
  4057  05EB  084B               	movf	??_fround+5,w
  4058  05EC  00AE               	movwf	___flmul@a+2
  4059  05ED  084A               	movf	??_fround+4,w
  4060  05EE  00AD               	movwf	___flmul@a+1
  4061  05EF  0849               	movf	??_fround+3,w
  4062  05F0  00AC               	movwf	___flmul@a
  4063  05F1  120A  158A  213C  120A  118A  	fcall	___flmul
  4064  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  4065  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  4066  05F8  082B               	movf	?___flmul+3,w
  4067  05F9  00D4               	movwf	_fround$1193+3
  4068  05FA  082A               	movf	?___flmul+2,w
  4069  05FB  00D3               	movwf	_fround$1193+2
  4070  05FC  0829               	movf	?___flmul+1,w
  4071  05FD  00D2               	movwf	_fround$1193+1
  4072  05FE  0828               	movf	?___flmul,w
  4073  05FF  00D1               	movwf	_fround$1193
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4076  0600  300A               	movlw	10
  4077  0601  00A0               	movwf	___lwdiv@divisor
  4078  0602  3000               	movlw	0
  4079  0603  00A1               	movwf	___lwdiv@divisor+1
  4080  0604  0855               	movf	fround@prec,w
  4081  0605  00C6               	movwf	??_fround
  4082  0606  01C7               	clrf	??_fround+1
  4083  0607  0846               	movf	??_fround,w
  4084  0608  00F4               	movwf	___lwmod@dividend
  4085  0609  0847               	movf	??_fround+1,w
  4086  060A  00F5               	movwf	___lwmod@dividend+1
  4087  060B  3064               	movlw	100
  4088  060C  00F2               	movwf	___lwmod@divisor
  4089  060D  3000               	movlw	0
  4090  060E  00F3               	movwf	___lwmod@divisor+1
  4091  060F  160A  158A  22DB  120A  118A  	fcall	___lwmod
  4092  0614  0873               	movf	?___lwmod+1,w
  4093  0615  1283               	bcf	3,5	;RP0=0, select bank0
  4094  0616  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0617  00A3               	movwf	___lwdiv@dividend+1
  4096  0618  0872               	movf	?___lwmod,w
  4097  0619  00A2               	movwf	___lwdiv@dividend
  4098  061A  160A  158A  235B  120A  118A  	fcall	___lwdiv
  4099  061F  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0620  1303               	bcf	3,6	;RP1=0, select bank0
  4101  0621  0820               	movf	?___lwdiv,w
  4102  0622  00C8               	movwf	??_fround+2
  4103  0623  3001               	movlw	1
  4104  0624                     u5715:
  4105  0624  1003               	clrc
  4106  0625  0DC8               	rlf	??_fround+2,f
  4107  0626  3EFF               	addlw	-1
  4108  0627  1D03               	skipz
  4109  0628  2E24               	goto	u5715
  4110  0629  1003               	clrc
  4111  062A  0D48               	rlf	??_fround+2,w
  4112  062B  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4113  062C  0084               	movwf	4
  4114  062D  120A  158A  200A  120A  118A  	fcall	stringdir
  4115  0632  00C9               	movwf	??_fround+3
  4116  0633  120A  158A  200A  120A  118A  	fcall	stringdir
  4117  0638  00CA               	movwf	??_fround+4
  4118  0639  120A  158A  200A  120A  118A  	fcall	stringdir
  4119  063E  00CB               	movwf	??_fround+5
  4120  063F  120A  158A  200A  120A  118A  	fcall	stringdir
  4121  0644  00CC               	movwf	??_fround+6
  4122  0645  084C               	movf	??_fround+6,w
  4123  0646  00AB               	movwf	___flmul@b+3
  4124  0647  084B               	movf	??_fround+5,w
  4125  0648  00AA               	movwf	___flmul@b+2
  4126  0649  084A               	movf	??_fround+4,w
  4127  064A  00A9               	movwf	___flmul@b+1
  4128  064B  0849               	movf	??_fround+3,w
  4129  064C  00A8               	movwf	___flmul@b
  4130  064D  0854               	movf	_fround$1193+3,w
  4131  064E  00AF               	movwf	___flmul@a+3
  4132  064F  0853               	movf	_fround$1193+2,w
  4133  0650  00AE               	movwf	___flmul@a+2
  4134  0651  0852               	movf	_fround$1193+1,w
  4135  0652  00AD               	movwf	___flmul@a+1
  4136  0653  0851               	movf	_fround$1193,w
  4137  0654  00AC               	movwf	___flmul@a
  4138  0655  120A  158A  213C  120A  118A  	fcall	___flmul
  4139  065A  1283               	bcf	3,5	;RP0=0, select bank0
  4140  065B  1303               	bcf	3,6	;RP1=0, select bank0
  4141  065C  082B               	movf	?___flmul+3,w
  4142  065D  00D0               	movwf	_fround$1194+3
  4143  065E  082A               	movf	?___flmul+2,w
  4144  065F  00CF               	movwf	_fround$1194+2
  4145  0660  0829               	movf	?___flmul+1,w
  4146  0661  00CE               	movwf	_fround$1194+1
  4147  0662  0828               	movf	?___flmul,w
  4148  0663  00CD               	movwf	_fround$1194
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4151  0664  300A               	movlw	10
  4152  0665  00F2               	movwf	___lwmod@divisor
  4153  0666  3000               	movlw	0
  4154  0667  00F3               	movwf	___lwmod@divisor+1
  4155  0668  0855               	movf	fround@prec,w
  4156  0669  00C6               	movwf	??_fround
  4157  066A  01C7               	clrf	??_fround+1
  4158  066B  0846               	movf	??_fround,w
  4159  066C  00F4               	movwf	___lwmod@dividend
  4160  066D  0847               	movf	??_fround+1,w
  4161  066E  00F5               	movwf	___lwmod@dividend+1
  4162  066F  160A  158A  22DB  120A  118A  	fcall	___lwmod
  4163  0674  0872               	movf	?___lwmod,w
  4164  0675  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0676  1303               	bcf	3,6	;RP1=0, select bank0
  4166  0677  00C8               	movwf	??_fround+2
  4167  0678  3001               	movlw	1
  4168  0679                     u5725:
  4169  0679  1003               	clrc
  4170  067A  0DC8               	rlf	??_fround+2,f
  4171  067B  3EFF               	addlw	-1
  4172  067C  1D03               	skipz
  4173  067D  2E79               	goto	u5725
  4174  067E  1003               	clrc
  4175  067F  0D48               	rlf	??_fround+2,w
  4176  0680  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4177  0681  0084               	movwf	4
  4178  0682  120A  158A  200A  120A  118A  	fcall	stringdir
  4179  0687  00C9               	movwf	??_fround+3
  4180  0688  120A  158A  200A  120A  118A  	fcall	stringdir
  4181  068D  00CA               	movwf	??_fround+4
  4182  068E  120A  158A  200A  120A  118A  	fcall	stringdir
  4183  0693  00CB               	movwf	??_fround+5
  4184  0694  120A  158A  200A  120A  118A  	fcall	stringdir
  4185  0699  00CC               	movwf	??_fround+6
  4186  069A  084C               	movf	??_fround+6,w
  4187  069B  00AB               	movwf	___flmul@b+3
  4188  069C  084B               	movf	??_fround+5,w
  4189  069D  00AA               	movwf	___flmul@b+2
  4190  069E  084A               	movf	??_fround+4,w
  4191  069F  00A9               	movwf	___flmul@b+1
  4192  06A0  0849               	movf	??_fround+3,w
  4193  06A1  00A8               	movwf	___flmul@b
  4194  06A2  0850               	movf	_fround$1194+3,w
  4195  06A3  00AF               	movwf	___flmul@a+3
  4196  06A4  084F               	movf	_fround$1194+2,w
  4197  06A5  00AE               	movwf	___flmul@a+2
  4198  06A6  084E               	movf	_fround$1194+1,w
  4199  06A7  00AD               	movwf	___flmul@a+1
  4200  06A8  084D               	movf	_fround$1194,w
  4201  06A9  00AC               	movwf	___flmul@a
  4202  06AA  120A  158A  213C  120A  118A  	fcall	___flmul
  4203  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  4204  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  4205  06B1  082B               	movf	?___flmul+3,w
  4206  06B2  00C5               	movwf	?_fround+3
  4207  06B3  082A               	movf	?___flmul+2,w
  4208  06B4  00C4               	movwf	?_fround+2
  4209  06B5  0829               	movf	?___flmul+1,w
  4210  06B6  00C3               	movwf	?_fround+1
  4211  06B7  0828               	movf	?___flmul,w
  4212  06B8  00C2               	movwf	?_fround
  4213  06B9  2FAE               	goto	l286
  4214  06BA                     l3627:
  4215  06BA  300B               	movlw	11
  4216  06BB  0255               	subwf	fround@prec,w
  4217  06BC  1C03               	skipc
  4218  06BD  2EBF               	goto	u5731
  4219  06BE  2EC0               	goto	u5730
  4220  06BF                     u5731:
  4221  06BF  2F6B               	goto	l3633
  4222  06C0                     u5730:
  4223  06C0                     l3629:
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4226  06C0  303F               	movlw	63
  4227  06C1  00AB               	movwf	___flmul@b+3
  4228  06C2  3000               	movlw	0
  4229  06C3  00AA               	movwf	___flmul@b+2
  4230  06C4  3000               	movlw	0
  4231  06C5  00A9               	movwf	___flmul@b+1
  4232  06C6  3000               	movlw	0
  4233  06C7  00A8               	movwf	___flmul@b
  4234  06C8  300A               	movlw	10
  4235  06C9  00A0               	movwf	___lwdiv@divisor
  4236  06CA  3000               	movlw	0
  4237  06CB  00A1               	movwf	___lwdiv@divisor+1
  4238  06CC  0855               	movf	fround@prec,w
  4239  06CD  00C6               	movwf	??_fround
  4240  06CE  01C7               	clrf	??_fround+1
  4241  06CF  0846               	movf	??_fround,w
  4242  06D0  00A2               	movwf	___lwdiv@dividend
  4243  06D1  0847               	movf	??_fround+1,w
  4244  06D2  00A3               	movwf	___lwdiv@dividend+1
  4245  06D3  160A  158A  235B  120A  118A  	fcall	___lwdiv
  4246  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  4247  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  4248  06DA  0820               	movf	?___lwdiv,w
  4249  06DB  00C8               	movwf	??_fround+2
  4250  06DC  3001               	movlw	1
  4251  06DD                     u5745:
  4252  06DD  1003               	clrc
  4253  06DE  0DC8               	rlf	??_fround+2,f
  4254  06DF  3EFF               	addlw	-1
  4255  06E0  1D03               	skipz
  4256  06E1  2EDD               	goto	u5745
  4257  06E2  1003               	clrc
  4258  06E3  0D48               	rlf	??_fround+2,w
  4259  06E4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4260  06E5  0084               	movwf	4
  4261  06E6  120A  158A  200A  120A  118A  	fcall	stringdir
  4262  06EB  00C9               	movwf	??_fround+3
  4263  06EC  120A  158A  200A  120A  118A  	fcall	stringdir
  4264  06F1  00CA               	movwf	??_fround+4
  4265  06F2  120A  158A  200A  120A  118A  	fcall	stringdir
  4266  06F7  00CB               	movwf	??_fround+5
  4267  06F8  120A  158A  200A  120A  118A  	fcall	stringdir
  4268  06FD  00CC               	movwf	??_fround+6
  4269  06FE  084C               	movf	??_fround+6,w
  4270  06FF  00AF               	movwf	___flmul@a+3
  4271  0700  084B               	movf	??_fround+5,w
  4272  0701  00AE               	movwf	___flmul@a+2
  4273  0702  084A               	movf	??_fround+4,w
  4274  0703  00AD               	movwf	___flmul@a+1
  4275  0704  0849               	movf	??_fround+3,w
  4276  0705  00AC               	movwf	___flmul@a
  4277  0706  120A  158A  213C  120A  118A  	fcall	___flmul
  4278  070B  1283               	bcf	3,5	;RP0=0, select bank0
  4279  070C  1303               	bcf	3,6	;RP1=0, select bank0
  4280  070D  082B               	movf	?___flmul+3,w
  4281  070E  00D4               	movwf	_fround$1193+3
  4282  070F  082A               	movf	?___flmul+2,w
  4283  0710  00D3               	movwf	_fround$1193+2
  4284  0711  0829               	movf	?___flmul+1,w
  4285  0712  00D2               	movwf	_fround$1193+1
  4286  0713  0828               	movf	?___flmul,w
  4287  0714  00D1               	movwf	_fround$1193
  4288                           
  4289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4290  0715  300A               	movlw	10
  4291  0716  00F2               	movwf	___lwmod@divisor
  4292  0717  3000               	movlw	0
  4293  0718  00F3               	movwf	___lwmod@divisor+1
  4294  0719  0855               	movf	fround@prec,w
  4295  071A  00C6               	movwf	??_fround
  4296  071B  01C7               	clrf	??_fround+1
  4297  071C  0846               	movf	??_fround,w
  4298  071D  00F4               	movwf	___lwmod@dividend
  4299  071E  0847               	movf	??_fround+1,w
  4300  071F  00F5               	movwf	___lwmod@dividend+1
  4301  0720  160A  158A  22DB  120A  118A  	fcall	___lwmod
  4302  0725  0872               	movf	?___lwmod,w
  4303  0726  1283               	bcf	3,5	;RP0=0, select bank0
  4304  0727  1303               	bcf	3,6	;RP1=0, select bank0
  4305  0728  00C8               	movwf	??_fround+2
  4306  0729  3001               	movlw	1
  4307  072A                     u5755:
  4308  072A  1003               	clrc
  4309  072B  0DC8               	rlf	??_fround+2,f
  4310  072C  3EFF               	addlw	-1
  4311  072D  1D03               	skipz
  4312  072E  2F2A               	goto	u5755
  4313  072F  1003               	clrc
  4314  0730  0D48               	rlf	??_fround+2,w
  4315  0731  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4316  0732  0084               	movwf	4
  4317  0733  120A  158A  200A  120A  118A  	fcall	stringdir
  4318  0738  00C9               	movwf	??_fround+3
  4319  0739  120A  158A  200A  120A  118A  	fcall	stringdir
  4320  073E  00CA               	movwf	??_fround+4
  4321  073F  120A  158A  200A  120A  118A  	fcall	stringdir
  4322  0744  00CB               	movwf	??_fround+5
  4323  0745  120A  158A  200A  120A  118A  	fcall	stringdir
  4324  074A  00CC               	movwf	??_fround+6
  4325  074B  084C               	movf	??_fround+6,w
  4326  074C  00AB               	movwf	___flmul@b+3
  4327  074D  084B               	movf	??_fround+5,w
  4328  074E  00AA               	movwf	___flmul@b+2
  4329  074F  084A               	movf	??_fround+4,w
  4330  0750  00A9               	movwf	___flmul@b+1
  4331  0751  0849               	movf	??_fround+3,w
  4332  0752  00A8               	movwf	___flmul@b
  4333  0753  0854               	movf	_fround$1193+3,w
  4334  0754  00AF               	movwf	___flmul@a+3
  4335  0755  0853               	movf	_fround$1193+2,w
  4336  0756  00AE               	movwf	___flmul@a+2
  4337  0757  0852               	movf	_fround$1193+1,w
  4338  0758  00AD               	movwf	___flmul@a+1
  4339  0759  0851               	movf	_fround$1193,w
  4340  075A  00AC               	movwf	___flmul@a
  4341  075B  120A  158A  213C  120A  118A  	fcall	___flmul
  4342  0760  1283               	bcf	3,5	;RP0=0, select bank0
  4343  0761  1303               	bcf	3,6	;RP1=0, select bank0
  4344  0762  082B               	movf	?___flmul+3,w
  4345  0763  00C5               	movwf	?_fround+3
  4346  0764  082A               	movf	?___flmul+2,w
  4347  0765  00C4               	movwf	?_fround+2
  4348  0766  0829               	movf	?___flmul+1,w
  4349  0767  00C3               	movwf	?_fround+1
  4350  0768  0828               	movf	?___flmul,w
  4351  0769  00C2               	movwf	?_fround
  4352  076A  2FAE               	goto	l286
  4353  076B                     l3633:
  4354                           
  4355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4356  076B  303F               	movlw	63
  4357  076C  00AB               	movwf	___flmul@b+3
  4358  076D  3000               	movlw	0
  4359  076E  00AA               	movwf	___flmul@b+2
  4360  076F  3000               	movlw	0
  4361  0770  00A9               	movwf	___flmul@b+1
  4362  0771  3000               	movlw	0
  4363  0772  00A8               	movwf	___flmul@b
  4364  0773  0855               	movf	fround@prec,w
  4365  0774  00C6               	movwf	??_fround
  4366  0775  3001               	movlw	1
  4367  0776                     u5765:
  4368  0776  1003               	clrc
  4369  0777  0DC6               	rlf	??_fround,f
  4370  0778  3EFF               	addlw	-1
  4371  0779  1D03               	skipz
  4372  077A  2F76               	goto	u5765
  4373  077B  1003               	clrc
  4374  077C  0D46               	rlf	??_fround,w
  4375  077D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4376  077E  0084               	movwf	4
  4377  077F  120A  158A  200A  120A  118A  	fcall	stringdir
  4378  0784  00C7               	movwf	??_fround+1
  4379  0785  120A  158A  200A  120A  118A  	fcall	stringdir
  4380  078A  00C8               	movwf	??_fround+2
  4381  078B  120A  158A  200A  120A  118A  	fcall	stringdir
  4382  0790  00C9               	movwf	??_fround+3
  4383  0791  120A  158A  200A  120A  118A  	fcall	stringdir
  4384  0796  00CA               	movwf	??_fround+4
  4385  0797  084A               	movf	??_fround+4,w
  4386  0798  00AF               	movwf	___flmul@a+3
  4387  0799  0849               	movf	??_fround+3,w
  4388  079A  00AE               	movwf	___flmul@a+2
  4389  079B  0848               	movf	??_fround+2,w
  4390  079C  00AD               	movwf	___flmul@a+1
  4391  079D  0847               	movf	??_fround+1,w
  4392  079E  00AC               	movwf	___flmul@a
  4393  079F  120A  158A  213C  120A  118A  	fcall	___flmul
  4394  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  4395  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  4396  07A6  082B               	movf	?___flmul+3,w
  4397  07A7  00C5               	movwf	?_fround+3
  4398  07A8  082A               	movf	?___flmul+2,w
  4399  07A9  00C4               	movwf	?_fround+2
  4400  07AA  0829               	movf	?___flmul+1,w
  4401  07AB  00C3               	movwf	?_fround+1
  4402  07AC  0828               	movf	?___flmul,w
  4403  07AD  00C2               	movwf	?_fround
  4404  07AE                     l286:
  4405  07AE  0008               	return
  4406  07AF                     __end_of_fround:
  4407                           
  4408                           	psect	text7
  4409  1ADB                     __ptext7:	
  4410 ;; *************** function ___lwmod *****************
  4411 ;; Defined at:
  4412 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  divisor         2    2[COMMON] unsigned int 
  4415 ;;  dividend        2    4[COMMON] unsigned int 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  counter         1    7[COMMON] unsigned char 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  2    2[COMMON] unsigned int 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4427 ;;      Params:         4       0       0       0       0
  4428 ;;      Locals:         1       0       0       0       0
  4429 ;;      Temps:          1       0       0       0       0
  4430 ;;      Totals:         6       0       0       0       0
  4431 ;;Total ram usage:        6 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    1
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_fround
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           
  4442                           ;psect for function ___lwmod
  4443  1ADB                     ___lwmod:
  4444  1ADB                     l2391:	
  4445                           ;incstack = 0
  4446                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4447                           
  4448  1ADB  0872               	movf	___lwmod@divisor,w
  4449  1ADC  0473               	iorwf	___lwmod@divisor+1,w
  4450  1ADD  1903               	btfsc	3,2
  4451  1ADE  2AE0               	goto	u3111
  4452  1ADF  2AE1               	goto	u3110
  4453  1AE0                     u3111:
  4454  1AE0  2B10               	goto	l2409
  4455  1AE1                     u3110:
  4456  1AE1                     l2393:
  4457  1AE1  01F7               	clrf	___lwmod@counter
  4458  1AE2  0AF7               	incf	___lwmod@counter,f
  4459  1AE3  2AEF               	goto	l2399
  4460  1AE4                     l2395:
  4461  1AE4  3001               	movlw	1
  4462  1AE5                     u3125:
  4463  1AE5  1003               	clrc
  4464  1AE6  0DF2               	rlf	___lwmod@divisor,f
  4465  1AE7  0DF3               	rlf	___lwmod@divisor+1,f
  4466  1AE8  3EFF               	addlw	-1
  4467  1AE9  1D03               	skipz
  4468  1AEA  2AE5               	goto	u3125
  4469  1AEB                     l2397:
  4470  1AEB  3001               	movlw	1
  4471  1AEC  00F6               	movwf	??___lwmod
  4472  1AED  0876               	movf	??___lwmod,w
  4473  1AEE  07F7               	addwf	___lwmod@counter,f
  4474  1AEF                     l2399:
  4475  1AEF  1FF3               	btfss	___lwmod@divisor+1,7
  4476  1AF0  2AF2               	goto	u3131
  4477  1AF1  2AF3               	goto	u3130
  4478  1AF2                     u3131:
  4479  1AF2  2AE4               	goto	l2395
  4480  1AF3                     u3130:
  4481  1AF3                     l2401:
  4482  1AF3  0873               	movf	___lwmod@divisor+1,w
  4483  1AF4  0275               	subwf	___lwmod@dividend+1,w
  4484  1AF5  1D03               	skipz
  4485  1AF6  2AF9               	goto	u3145
  4486  1AF7  0872               	movf	___lwmod@divisor,w
  4487  1AF8  0274               	subwf	___lwmod@dividend,w
  4488  1AF9                     u3145:
  4489  1AF9  1C03               	skipc
  4490  1AFA  2AFC               	goto	u3141
  4491  1AFB  2AFD               	goto	u3140
  4492  1AFC                     u3141:
  4493  1AFC  2B03               	goto	l2405
  4494  1AFD                     u3140:
  4495  1AFD                     l2403:
  4496  1AFD  0872               	movf	___lwmod@divisor,w
  4497  1AFE  02F4               	subwf	___lwmod@dividend,f
  4498  1AFF  0873               	movf	___lwmod@divisor+1,w
  4499  1B00  1C03               	skipc
  4500  1B01  03F5               	decf	___lwmod@dividend+1,f
  4501  1B02  02F5               	subwf	___lwmod@dividend+1,f
  4502  1B03                     l2405:
  4503  1B03  3001               	movlw	1
  4504  1B04                     u3155:
  4505  1B04  1003               	clrc
  4506  1B05  0CF3               	rrf	___lwmod@divisor+1,f
  4507  1B06  0CF2               	rrf	___lwmod@divisor,f
  4508  1B07  3EFF               	addlw	-1
  4509  1B08  1D03               	skipz
  4510  1B09  2B04               	goto	u3155
  4511  1B0A                     l2407:
  4512  1B0A  3001               	movlw	1
  4513  1B0B  02F7               	subwf	___lwmod@counter,f
  4514  1B0C  1D03               	btfss	3,2
  4515  1B0D  2B0F               	goto	u3161
  4516  1B0E  2B10               	goto	u3160
  4517  1B0F                     u3161:
  4518  1B0F  2AF3               	goto	l2401
  4519  1B10                     u3160:
  4520  1B10                     l2409:
  4521  1B10  0875               	movf	___lwmod@dividend+1,w
  4522  1B11  00F3               	movwf	?___lwmod+1
  4523  1B12  0874               	movf	___lwmod@dividend,w
  4524  1B13  00F2               	movwf	?___lwmod
  4525  1B14                     l696:
  4526  1B14  0008               	return
  4527  1B15                     __end_of___lwmod:
  4528                           
  4529                           	psect	text8
  4530  1B5B                     __ptext8:	
  4531 ;; *************** function ___lwdiv *****************
  4532 ;; Defined at:
  4533 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  divisor         2    0[BANK0 ] unsigned int 
  4536 ;;  dividend        2    2[BANK0 ] unsigned int 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  quotient        2    5[BANK0 ] unsigned int 
  4539 ;;  counter         1    4[BANK0 ] unsigned char 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  2    0[BANK0 ] unsigned int 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4549 ;;      Params:         0       4       0       0       0
  4550 ;;      Locals:         0       3       0       0       0
  4551 ;;      Temps:          1       0       0       0       0
  4552 ;;      Totals:         1       7       0       0       0
  4553 ;;Total ram usage:        8 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    1
  4556 ;; This function calls:
  4557 ;;		Nothing
  4558 ;; This function is called by:
  4559 ;;		_fround
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           
  4564                           ;psect for function ___lwdiv
  4565  1B5B                     ___lwdiv:
  4566  1B5B                     l3569:	
  4567                           ;incstack = 0
  4568                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4569                           
  4570  1B5B  1283               	bcf	3,5	;RP0=0, select bank0
  4571  1B5C  1303               	bcf	3,6	;RP1=0, select bank0
  4572  1B5D  01A5               	clrf	___lwdiv@quotient
  4573  1B5E  01A6               	clrf	___lwdiv@quotient+1
  4574  1B5F                     l3571:
  4575  1B5F  0820               	movf	___lwdiv@divisor,w
  4576  1B60  0421               	iorwf	___lwdiv@divisor+1,w
  4577  1B61  1903               	btfsc	3,2
  4578  1B62  2B64               	goto	u5621
  4579  1B63  2B65               	goto	u5620
  4580  1B64                     u5621:
  4581  1B64  2B9C               	goto	l3591
  4582  1B65                     u5620:
  4583  1B65                     l3573:
  4584  1B65  01A4               	clrf	___lwdiv@counter
  4585  1B66  0AA4               	incf	___lwdiv@counter,f
  4586  1B67  2B73               	goto	l3579
  4587  1B68                     l3575:
  4588  1B68  3001               	movlw	1
  4589  1B69                     u5635:
  4590  1B69  1003               	clrc
  4591  1B6A  0DA0               	rlf	___lwdiv@divisor,f
  4592  1B6B  0DA1               	rlf	___lwdiv@divisor+1,f
  4593  1B6C  3EFF               	addlw	-1
  4594  1B6D  1D03               	skipz
  4595  1B6E  2B69               	goto	u5635
  4596  1B6F                     l3577:
  4597  1B6F  3001               	movlw	1
  4598  1B70  00F8               	movwf	??___lwdiv
  4599  1B71  0878               	movf	??___lwdiv,w
  4600  1B72  07A4               	addwf	___lwdiv@counter,f
  4601  1B73                     l3579:
  4602  1B73  1FA1               	btfss	___lwdiv@divisor+1,7
  4603  1B74  2B76               	goto	u5641
  4604  1B75  2B77               	goto	u5640
  4605  1B76                     u5641:
  4606  1B76  2B68               	goto	l3575
  4607  1B77                     u5640:
  4608  1B77                     l3581:
  4609  1B77  3001               	movlw	1
  4610  1B78                     u5655:
  4611  1B78  1003               	clrc
  4612  1B79  0DA5               	rlf	___lwdiv@quotient,f
  4613  1B7A  0DA6               	rlf	___lwdiv@quotient+1,f
  4614  1B7B  3EFF               	addlw	-1
  4615  1B7C  1D03               	skipz
  4616  1B7D  2B78               	goto	u5655
  4617  1B7E  0821               	movf	___lwdiv@divisor+1,w
  4618  1B7F  0223               	subwf	___lwdiv@dividend+1,w
  4619  1B80  1D03               	skipz
  4620  1B81  2B84               	goto	u5665
  4621  1B82  0820               	movf	___lwdiv@divisor,w
  4622  1B83  0222               	subwf	___lwdiv@dividend,w
  4623  1B84                     u5665:
  4624  1B84  1C03               	skipc
  4625  1B85  2B87               	goto	u5661
  4626  1B86  2B88               	goto	u5660
  4627  1B87                     u5661:
  4628  1B87  2B8F               	goto	l3587
  4629  1B88                     u5660:
  4630  1B88                     l3583:
  4631  1B88  0820               	movf	___lwdiv@divisor,w
  4632  1B89  02A2               	subwf	___lwdiv@dividend,f
  4633  1B8A  0821               	movf	___lwdiv@divisor+1,w
  4634  1B8B  1C03               	skipc
  4635  1B8C  03A3               	decf	___lwdiv@dividend+1,f
  4636  1B8D  02A3               	subwf	___lwdiv@dividend+1,f
  4637  1B8E                     l3585:
  4638  1B8E  1425               	bsf	___lwdiv@quotient,0
  4639  1B8F                     l3587:
  4640  1B8F  3001               	movlw	1
  4641  1B90                     u5675:
  4642  1B90  1003               	clrc
  4643  1B91  0CA1               	rrf	___lwdiv@divisor+1,f
  4644  1B92  0CA0               	rrf	___lwdiv@divisor,f
  4645  1B93  3EFF               	addlw	-1
  4646  1B94  1D03               	skipz
  4647  1B95  2B90               	goto	u5675
  4648  1B96                     l3589:
  4649  1B96  3001               	movlw	1
  4650  1B97  02A4               	subwf	___lwdiv@counter,f
  4651  1B98  1D03               	btfss	3,2
  4652  1B99  2B9B               	goto	u5681
  4653  1B9A  2B9C               	goto	u5680
  4654  1B9B                     u5681:
  4655  1B9B  2B77               	goto	l3581
  4656  1B9C                     u5680:
  4657  1B9C                     l3591:
  4658  1B9C  0826               	movf	___lwdiv@quotient+1,w
  4659  1B9D  00A1               	movwf	?___lwdiv+1
  4660  1B9E  0825               	movf	___lwdiv@quotient,w
  4661  1B9F  00A0               	movwf	?___lwdiv
  4662  1BA0                     l686:
  4663  1BA0  0008               	return
  4664  1BA1                     __end_of___lwdiv:
  4665                           
  4666                           	psect	text9
  4667  093C                     __ptext9:	
  4668 ;; *************** function ___flmul *****************
  4669 ;; Defined at:
  4670 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  b               4    8[BANK0 ] unsigned int 
  4673 ;;  a               4   12[BANK0 ] unsigned int 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  prod            4   28[BANK0 ] struct .
  4676 ;;  grs             4   22[BANK0 ] unsigned long 
  4677 ;;  temp            2   32[BANK0 ] struct .
  4678 ;;  bexp            1   27[BANK0 ] unsigned char 
  4679 ;;  aexp            1   26[BANK0 ] unsigned char 
  4680 ;;  sign            1   21[BANK0 ] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  4    8[BANK0 ] unsigned char 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4690 ;;      Params:         0       8       0       0       0
  4691 ;;      Locals:         0      13       0       0       0
  4692 ;;      Temps:          0       5       0       0       0
  4693 ;;      Totals:         0      26       0       0       0
  4694 ;;Total ram usage:       26 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    2
  4697 ;; This function calls:
  4698 ;;		__Umul8_16
  4699 ;; This function is called by:
  4700 ;;		_main
  4701 ;;		_fround
  4702 ;;		_scale
  4703 ;;		_sprintf
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           
  4708                           ;psect for function ___flmul
  4709  093C                     ___flmul:
  4710  093C                     l2607:	
  4711                           ;incstack = 0
  4712                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4713                           
  4714  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4715  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4716  093E  082B               	movf	___flmul@b+3,w
  4717  093F  3980               	andlw	128
  4718  0940  00B0               	movwf	??___flmul
  4719  0941  0830               	movf	??___flmul,w
  4720  0942  00B5               	movwf	___flmul@sign
  4721  0943                     l2609:
  4722  0943  082B               	movf	___flmul@b+3,w
  4723  0944  00B0               	movwf	??___flmul
  4724  0945  0730               	addwf	??___flmul,w
  4725  0946  00B1               	movwf	??___flmul+1
  4726  0947  0831               	movf	??___flmul+1,w
  4727  0948  00BB               	movwf	___flmul@bexp
  4728  0949                     l2611:
  4729  0949  1FAA               	btfss	___flmul@b+2,7
  4730  094A  294C               	goto	u3631
  4731  094B  294D               	goto	u3630
  4732  094C                     u3631:
  4733  094C  294E               	goto	l2615
  4734  094D                     u3630:
  4735  094D                     l2613:
  4736  094D  143B               	bsf	___flmul@bexp,0
  4737  094E                     l2615:
  4738  094E  083B               	movf	___flmul@bexp,w
  4739  094F  1903               	btfsc	3,2
  4740  0950  2952               	goto	u3641
  4741  0951  2953               	goto	u3640
  4742  0952                     u3641:
  4743  0952  2962               	goto	l2623
  4744  0953                     u3640:
  4745  0953                     l2617:
  4746  0953  0A3B               	incf	___flmul@bexp,w
  4747  0954  1D03               	btfss	3,2
  4748  0955  2957               	goto	u3651
  4749  0956  2958               	goto	u3650
  4750  0957                     u3651:
  4751  0957  2960               	goto	l2621
  4752  0958                     u3650:
  4753  0958                     l2619:
  4754  0958  3000               	movlw	0
  4755  0959  00AB               	movwf	___flmul@b+3
  4756  095A  3000               	movlw	0
  4757  095B  00AA               	movwf	___flmul@b+2
  4758  095C  3000               	movlw	0
  4759  095D  00A9               	movwf	___flmul@b+1
  4760  095E  3000               	movlw	0
  4761  095F  00A8               	movwf	___flmul@b
  4762  0960                     l2621:
  4763  0960  17AA               	bsf	___flmul@b+2,7
  4764  0961  296A               	goto	l2625
  4765  0962                     l2623:
  4766  0962  3000               	movlw	0
  4767  0963  00AB               	movwf	___flmul@b+3
  4768  0964  3000               	movlw	0
  4769  0965  00AA               	movwf	___flmul@b+2
  4770  0966  3000               	movlw	0
  4771  0967  00A9               	movwf	___flmul@b+1
  4772  0968  3000               	movlw	0
  4773  0969  00A8               	movwf	___flmul@b
  4774  096A                     l2625:
  4775  096A  082F               	movf	___flmul@a+3,w
  4776  096B  3980               	andlw	128
  4777  096C  00B0               	movwf	??___flmul
  4778  096D  0830               	movf	??___flmul,w
  4779  096E  06B5               	xorwf	___flmul@sign,f
  4780  096F                     l2627:
  4781  096F  082F               	movf	___flmul@a+3,w
  4782  0970  00B0               	movwf	??___flmul
  4783  0971  0730               	addwf	??___flmul,w
  4784  0972  00B1               	movwf	??___flmul+1
  4785  0973  0831               	movf	??___flmul+1,w
  4786  0974  00BA               	movwf	___flmul@aexp
  4787  0975                     l2629:
  4788  0975  1FAE               	btfss	___flmul@a+2,7
  4789  0976  2978               	goto	u3661
  4790  0977  2979               	goto	u3660
  4791  0978                     u3661:
  4792  0978  297A               	goto	l2633
  4793  0979                     u3660:
  4794  0979                     l2631:
  4795  0979  143A               	bsf	___flmul@aexp,0
  4796  097A                     l2633:
  4797  097A  083A               	movf	___flmul@aexp,w
  4798  097B  1903               	btfsc	3,2
  4799  097C  297E               	goto	u3671
  4800  097D  297F               	goto	u3670
  4801  097E                     u3671:
  4802  097E  298E               	goto	l2641
  4803  097F                     u3670:
  4804  097F                     l2635:
  4805  097F  0A3A               	incf	___flmul@aexp,w
  4806  0980  1D03               	btfss	3,2
  4807  0981  2983               	goto	u3681
  4808  0982  2984               	goto	u3680
  4809  0983                     u3681:
  4810  0983  298C               	goto	l2639
  4811  0984                     u3680:
  4812  0984                     l2637:
  4813  0984  3000               	movlw	0
  4814  0985  00AF               	movwf	___flmul@a+3
  4815  0986  3000               	movlw	0
  4816  0987  00AE               	movwf	___flmul@a+2
  4817  0988  3000               	movlw	0
  4818  0989  00AD               	movwf	___flmul@a+1
  4819  098A  3000               	movlw	0
  4820  098B  00AC               	movwf	___flmul@a
  4821  098C                     l2639:
  4822  098C  17AE               	bsf	___flmul@a+2,7
  4823  098D  2996               	goto	l2643
  4824  098E                     l2641:
  4825  098E  3000               	movlw	0
  4826  098F  00AF               	movwf	___flmul@a+3
  4827  0990  3000               	movlw	0
  4828  0991  00AE               	movwf	___flmul@a+2
  4829  0992  3000               	movlw	0
  4830  0993  00AD               	movwf	___flmul@a+1
  4831  0994  3000               	movlw	0
  4832  0995  00AC               	movwf	___flmul@a
  4833  0996                     l2643:
  4834  0996  083A               	movf	___flmul@aexp,w
  4835  0997  1903               	btfsc	3,2
  4836  0998  299A               	goto	u3691
  4837  0999  299B               	goto	u3690
  4838  099A                     u3691:
  4839  099A  29A0               	goto	l2647
  4840  099B                     u3690:
  4841  099B                     l2645:
  4842  099B  083B               	movf	___flmul@bexp,w
  4843  099C  1D03               	btfss	3,2
  4844  099D  299F               	goto	u3701
  4845  099E  29A0               	goto	u3700
  4846  099F                     u3701:
  4847  099F  29A9               	goto	l2651
  4848  09A0                     u3700:
  4849  09A0                     l2647:
  4850  09A0  3000               	movlw	0
  4851  09A1  00AB               	movwf	?___flmul+3
  4852  09A2  3000               	movlw	0
  4853  09A3  00AA               	movwf	?___flmul+2
  4854  09A4  3000               	movlw	0
  4855  09A5  00A9               	movwf	?___flmul+1
  4856  09A6  3000               	movlw	0
  4857  09A7  00A8               	movwf	?___flmul
  4858  09A8  2C9C               	goto	l803
  4859  09A9                     l2651:
  4860  09A9  0828               	movf	___flmul@b,w
  4861  09AA  00B0               	movwf	??___flmul
  4862  09AB  0830               	movf	??___flmul,w
  4863  09AC  00F2               	movwf	__Umul8_16@multiplicand
  4864  09AD  082E               	movf	___flmul@a+2,w
  4865  09AE  160A  158A  227E  120A  158A  	fcall	__Umul8_16
  4866  09B3  0873               	movf	?__Umul8_16+1,w
  4867  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4868  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4869  09B6  00C1               	movwf	___flmul@temp+1
  4870  09B7  0872               	movf	?__Umul8_16,w
  4871  09B8  00C0               	movwf	___flmul@temp
  4872  09B9                     l2653:
  4873  09B9  0840               	movf	___flmul@temp,w
  4874  09BA  00B0               	movwf	??___flmul
  4875  09BB  01B1               	clrf	??___flmul+1
  4876  09BC  01B2               	clrf	??___flmul+2
  4877  09BD  01B3               	clrf	??___flmul+3
  4878  09BE  0833               	movf	??___flmul+3,w
  4879  09BF  00B9               	movwf	___flmul@grs+3
  4880  09C0  0832               	movf	??___flmul+2,w
  4881  09C1  00B8               	movwf	___flmul@grs+2
  4882  09C2  0831               	movf	??___flmul+1,w
  4883  09C3  00B7               	movwf	___flmul@grs+1
  4884  09C4  0830               	movf	??___flmul,w
  4885  09C5  00B6               	movwf	___flmul@grs
  4886  09C6                     l2655:
  4887  09C6  0841               	movf	___flmul@temp+1,w
  4888  09C7  00B0               	movwf	??___flmul
  4889  09C8  01B1               	clrf	??___flmul+1
  4890  09C9  01B2               	clrf	??___flmul+2
  4891  09CA  01B3               	clrf	??___flmul+3
  4892  09CB  0833               	movf	??___flmul+3,w
  4893  09CC  00BF               	movwf	___flmul@prod+3
  4894  09CD  0832               	movf	??___flmul+2,w
  4895  09CE  00BE               	movwf	___flmul@prod+2
  4896  09CF  0831               	movf	??___flmul+1,w
  4897  09D0  00BD               	movwf	___flmul@prod+1
  4898  09D1  0830               	movf	??___flmul,w
  4899  09D2  00BC               	movwf	___flmul@prod
  4900  09D3  0829               	movf	___flmul@b+1,w
  4901  09D4  00B0               	movwf	??___flmul
  4902  09D5  0830               	movf	??___flmul,w
  4903  09D6  00F2               	movwf	__Umul8_16@multiplicand
  4904  09D7  082D               	movf	___flmul@a+1,w
  4905  09D8  160A  158A  227E  120A  158A  	fcall	__Umul8_16
  4906  09DD  0873               	movf	?__Umul8_16+1,w
  4907  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4908  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4909  09E0  00C1               	movwf	___flmul@temp+1
  4910  09E1  0872               	movf	?__Umul8_16,w
  4911  09E2  00C0               	movwf	___flmul@temp
  4912  09E3                     l2657:
  4913  09E3  0840               	movf	___flmul@temp,w
  4914  09E4  00B0               	movwf	??___flmul
  4915  09E5  01B1               	clrf	??___flmul+1
  4916  09E6  01B2               	clrf	??___flmul+2
  4917  09E7  01B3               	clrf	??___flmul+3
  4918  09E8  0830               	movf	??___flmul,w
  4919  09E9  07B6               	addwf	___flmul@grs,f
  4920  09EA  0831               	movf	??___flmul+1,w
  4921  09EB  1103               	clrz
  4922  09EC  1803               	skipnc
  4923  09ED  3E01               	addlw	1
  4924  09EE  1903               	skipnz
  4925  09EF  29F1               	goto	u3711
  4926  09F0  07B7               	addwf	___flmul@grs+1,f
  4927  09F1                     u3711:
  4928  09F1  0832               	movf	??___flmul+2,w
  4929  09F2  1103               	clrz
  4930  09F3  1803               	skipnc
  4931  09F4  3E01               	addlw	1
  4932  09F5  1903               	skipnz
  4933  09F6  29F8               	goto	u3712
  4934  09F7  07B8               	addwf	___flmul@grs+2,f
  4935  09F8                     u3712:
  4936  09F8  0833               	movf	??___flmul+3,w
  4937  09F9  1103               	clrz
  4938  09FA  1803               	skipnc
  4939  09FB  3E01               	addlw	1
  4940  09FC  1903               	skipnz
  4941  09FD  29FF               	goto	u3713
  4942  09FE  07B9               	addwf	___flmul@grs+3,f
  4943  09FF                     u3713:
  4944  09FF                     l2659:
  4945  09FF  0841               	movf	___flmul@temp+1,w
  4946  0A00  00B0               	movwf	??___flmul
  4947  0A01  01B1               	clrf	??___flmul+1
  4948  0A02  01B2               	clrf	??___flmul+2
  4949  0A03  01B3               	clrf	??___flmul+3
  4950  0A04  0830               	movf	??___flmul,w
  4951  0A05  07BC               	addwf	___flmul@prod,f
  4952  0A06  0831               	movf	??___flmul+1,w
  4953  0A07  1103               	clrz
  4954  0A08  1803               	skipnc
  4955  0A09  3E01               	addlw	1
  4956  0A0A  1903               	skipnz
  4957  0A0B  2A0D               	goto	u3721
  4958  0A0C  07BD               	addwf	___flmul@prod+1,f
  4959  0A0D                     u3721:
  4960  0A0D  0832               	movf	??___flmul+2,w
  4961  0A0E  1103               	clrz
  4962  0A0F  1803               	skipnc
  4963  0A10  3E01               	addlw	1
  4964  0A11  1903               	skipnz
  4965  0A12  2A14               	goto	u3722
  4966  0A13  07BE               	addwf	___flmul@prod+2,f
  4967  0A14                     u3722:
  4968  0A14  0833               	movf	??___flmul+3,w
  4969  0A15  1103               	clrz
  4970  0A16  1803               	skipnc
  4971  0A17  3E01               	addlw	1
  4972  0A18  1903               	skipnz
  4973  0A19  2A1B               	goto	u3723
  4974  0A1A  07BF               	addwf	___flmul@prod+3,f
  4975  0A1B                     u3723:
  4976  0A1B  082A               	movf	___flmul@b+2,w
  4977  0A1C  00B0               	movwf	??___flmul
  4978  0A1D  0830               	movf	??___flmul,w
  4979  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  4980  0A1F  082C               	movf	___flmul@a,w
  4981  0A20  160A  158A  227E  120A  158A  	fcall	__Umul8_16
  4982  0A25  0873               	movf	?__Umul8_16+1,w
  4983  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0A28  00C1               	movwf	___flmul@temp+1
  4986  0A29  0872               	movf	?__Umul8_16,w
  4987  0A2A  00C0               	movwf	___flmul@temp
  4988  0A2B                     l2661:
  4989  0A2B  0840               	movf	___flmul@temp,w
  4990  0A2C  00B0               	movwf	??___flmul
  4991  0A2D  01B1               	clrf	??___flmul+1
  4992  0A2E  01B2               	clrf	??___flmul+2
  4993  0A2F  01B3               	clrf	??___flmul+3
  4994  0A30  0830               	movf	??___flmul,w
  4995  0A31  07B6               	addwf	___flmul@grs,f
  4996  0A32  0831               	movf	??___flmul+1,w
  4997  0A33  1103               	clrz
  4998  0A34  1803               	skipnc
  4999  0A35  3E01               	addlw	1
  5000  0A36  1903               	skipnz
  5001  0A37  2A39               	goto	u3731
  5002  0A38  07B7               	addwf	___flmul@grs+1,f
  5003  0A39                     u3731:
  5004  0A39  0832               	movf	??___flmul+2,w
  5005  0A3A  1103               	clrz
  5006  0A3B  1803               	skipnc
  5007  0A3C  3E01               	addlw	1
  5008  0A3D  1903               	skipnz
  5009  0A3E  2A40               	goto	u3732
  5010  0A3F  07B8               	addwf	___flmul@grs+2,f
  5011  0A40                     u3732:
  5012  0A40  0833               	movf	??___flmul+3,w
  5013  0A41  1103               	clrz
  5014  0A42  1803               	skipnc
  5015  0A43  3E01               	addlw	1
  5016  0A44  1903               	skipnz
  5017  0A45  2A47               	goto	u3733
  5018  0A46  07B9               	addwf	___flmul@grs+3,f
  5019  0A47                     u3733:
  5020  0A47                     l2663:
  5021  0A47  0841               	movf	___flmul@temp+1,w
  5022  0A48  00B0               	movwf	??___flmul
  5023  0A49  01B1               	clrf	??___flmul+1
  5024  0A4A  01B2               	clrf	??___flmul+2
  5025  0A4B  01B3               	clrf	??___flmul+3
  5026  0A4C  0830               	movf	??___flmul,w
  5027  0A4D  07BC               	addwf	___flmul@prod,f
  5028  0A4E  0831               	movf	??___flmul+1,w
  5029  0A4F  1103               	clrz
  5030  0A50  1803               	skipnc
  5031  0A51  3E01               	addlw	1
  5032  0A52  1903               	skipnz
  5033  0A53  2A55               	goto	u3741
  5034  0A54  07BD               	addwf	___flmul@prod+1,f
  5035  0A55                     u3741:
  5036  0A55  0832               	movf	??___flmul+2,w
  5037  0A56  1103               	clrz
  5038  0A57  1803               	skipnc
  5039  0A58  3E01               	addlw	1
  5040  0A59  1903               	skipnz
  5041  0A5A  2A5C               	goto	u3742
  5042  0A5B  07BE               	addwf	___flmul@prod+2,f
  5043  0A5C                     u3742:
  5044  0A5C  0833               	movf	??___flmul+3,w
  5045  0A5D  1103               	clrz
  5046  0A5E  1803               	skipnc
  5047  0A5F  3E01               	addlw	1
  5048  0A60  1903               	skipnz
  5049  0A61  2A63               	goto	u3743
  5050  0A62  07BF               	addwf	___flmul@prod+3,f
  5051  0A63                     u3743:
  5052  0A63                     l2665:
  5053  0A63  3008               	movlw	8
  5054  0A64  00B0               	movwf	??___flmul
  5055  0A65                     u3755:
  5056  0A65  1003               	clrc
  5057  0A66  0DB6               	rlf	___flmul@grs,f
  5058  0A67  0DB7               	rlf	___flmul@grs+1,f
  5059  0A68  0DB8               	rlf	___flmul@grs+2,f
  5060  0A69  0DB9               	rlf	___flmul@grs+3,f
  5061  0A6A  0BB0               	decfsz	??___flmul,f
  5062  0A6B  2A65               	goto	u3755
  5063  0A6C                     l2667:
  5064  0A6C  0829               	movf	___flmul@b+1,w
  5065  0A6D  00B0               	movwf	??___flmul
  5066  0A6E  0830               	movf	??___flmul,w
  5067  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  5068  0A70  082C               	movf	___flmul@a,w
  5069  0A71  160A  158A  227E  120A  158A  	fcall	__Umul8_16
  5070  0A76  0873               	movf	?__Umul8_16+1,w
  5071  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5072  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5073  0A79  00C1               	movwf	___flmul@temp+1
  5074  0A7A  0872               	movf	?__Umul8_16,w
  5075  0A7B  00C0               	movwf	___flmul@temp
  5076  0A7C                     l2669:
  5077  0A7C  0840               	movf	___flmul@temp,w
  5078  0A7D  00B0               	movwf	??___flmul
  5079  0A7E  0841               	movf	___flmul@temp+1,w
  5080  0A7F  00B1               	movwf	??___flmul+1
  5081  0A80  01B2               	clrf	??___flmul+2
  5082  0A81  01B3               	clrf	??___flmul+3
  5083  0A82  0830               	movf	??___flmul,w
  5084  0A83  07B6               	addwf	___flmul@grs,f
  5085  0A84  0831               	movf	??___flmul+1,w
  5086  0A85  1103               	clrz
  5087  0A86  1803               	skipnc
  5088  0A87  3E01               	addlw	1
  5089  0A88  1903               	skipnz
  5090  0A89  2A8B               	goto	u3761
  5091  0A8A  07B7               	addwf	___flmul@grs+1,f
  5092  0A8B                     u3761:
  5093  0A8B  0832               	movf	??___flmul+2,w
  5094  0A8C  1103               	clrz
  5095  0A8D  1803               	skipnc
  5096  0A8E  3E01               	addlw	1
  5097  0A8F  1903               	skipnz
  5098  0A90  2A92               	goto	u3762
  5099  0A91  07B8               	addwf	___flmul@grs+2,f
  5100  0A92                     u3762:
  5101  0A92  0833               	movf	??___flmul+3,w
  5102  0A93  1103               	clrz
  5103  0A94  1803               	skipnc
  5104  0A95  3E01               	addlw	1
  5105  0A96  1903               	skipnz
  5106  0A97  2A99               	goto	u3763
  5107  0A98  07B9               	addwf	___flmul@grs+3,f
  5108  0A99                     u3763:
  5109  0A99                     l2671:
  5110  0A99  0828               	movf	___flmul@b,w
  5111  0A9A  00B0               	movwf	??___flmul
  5112  0A9B  0830               	movf	??___flmul,w
  5113  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  5114  0A9D  082D               	movf	___flmul@a+1,w
  5115  0A9E  160A  158A  227E  120A  158A  	fcall	__Umul8_16
  5116  0AA3  0873               	movf	?__Umul8_16+1,w
  5117  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5118  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  5119  0AA6  00C1               	movwf	___flmul@temp+1
  5120  0AA7  0872               	movf	?__Umul8_16,w
  5121  0AA8  00C0               	movwf	___flmul@temp
  5122  0AA9                     l2673:
  5123  0AA9  0840               	movf	___flmul@temp,w
  5124  0AAA  00B0               	movwf	??___flmul
  5125  0AAB  0841               	movf	___flmul@temp+1,w
  5126  0AAC  00B1               	movwf	??___flmul+1
  5127  0AAD  01B2               	clrf	??___flmul+2
  5128  0AAE  01B3               	clrf	??___flmul+3
  5129  0AAF  0830               	movf	??___flmul,w
  5130  0AB0  07B6               	addwf	___flmul@grs,f
  5131  0AB1  0831               	movf	??___flmul+1,w
  5132  0AB2  1103               	clrz
  5133  0AB3  1803               	skipnc
  5134  0AB4  3E01               	addlw	1
  5135  0AB5  1903               	skipnz
  5136  0AB6  2AB8               	goto	u3771
  5137  0AB7  07B7               	addwf	___flmul@grs+1,f
  5138  0AB8                     u3771:
  5139  0AB8  0832               	movf	??___flmul+2,w
  5140  0AB9  1103               	clrz
  5141  0ABA  1803               	skipnc
  5142  0ABB  3E01               	addlw	1
  5143  0ABC  1903               	skipnz
  5144  0ABD  2ABF               	goto	u3772
  5145  0ABE  07B8               	addwf	___flmul@grs+2,f
  5146  0ABF                     u3772:
  5147  0ABF  0833               	movf	??___flmul+3,w
  5148  0AC0  1103               	clrz
  5149  0AC1  1803               	skipnc
  5150  0AC2  3E01               	addlw	1
  5151  0AC3  1903               	skipnz
  5152  0AC4  2AC6               	goto	u3773
  5153  0AC5  07B9               	addwf	___flmul@grs+3,f
  5154  0AC6                     u3773:
  5155  0AC6                     l2675:
  5156  0AC6  3008               	movlw	8
  5157  0AC7  00B0               	movwf	??___flmul
  5158  0AC8                     u3785:
  5159  0AC8  1003               	clrc
  5160  0AC9  0DB6               	rlf	___flmul@grs,f
  5161  0ACA  0DB7               	rlf	___flmul@grs+1,f
  5162  0ACB  0DB8               	rlf	___flmul@grs+2,f
  5163  0ACC  0DB9               	rlf	___flmul@grs+3,f
  5164  0ACD  0BB0               	decfsz	??___flmul,f
  5165  0ACE  2AC8               	goto	u3785
  5166  0ACF  0828               	movf	___flmul@b,w
  5167  0AD0  00B0               	movwf	??___flmul
  5168  0AD1  0830               	movf	??___flmul,w
  5169  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  5170  0AD3  082C               	movf	___flmul@a,w
  5171  0AD4  160A  158A  227E  120A  158A  	fcall	__Umul8_16
  5172  0AD9  0873               	movf	?__Umul8_16+1,w
  5173  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5174  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5175  0ADC  00C1               	movwf	___flmul@temp+1
  5176  0ADD  0872               	movf	?__Umul8_16,w
  5177  0ADE  00C0               	movwf	___flmul@temp
  5178  0ADF                     l2677:
  5179  0ADF  0840               	movf	___flmul@temp,w
  5180  0AE0  00B0               	movwf	??___flmul
  5181  0AE1  0841               	movf	___flmul@temp+1,w
  5182  0AE2  00B1               	movwf	??___flmul+1
  5183  0AE3  01B2               	clrf	??___flmul+2
  5184  0AE4  01B3               	clrf	??___flmul+3
  5185  0AE5  0830               	movf	??___flmul,w
  5186  0AE6  07B6               	addwf	___flmul@grs,f
  5187  0AE7  0831               	movf	??___flmul+1,w
  5188  0AE8  1103               	clrz
  5189  0AE9  1803               	skipnc
  5190  0AEA  3E01               	addlw	1
  5191  0AEB  1903               	skipnz
  5192  0AEC  2AEE               	goto	u3791
  5193  0AED  07B7               	addwf	___flmul@grs+1,f
  5194  0AEE                     u3791:
  5195  0AEE  0832               	movf	??___flmul+2,w
  5196  0AEF  1103               	clrz
  5197  0AF0  1803               	skipnc
  5198  0AF1  3E01               	addlw	1
  5199  0AF2  1903               	skipnz
  5200  0AF3  2AF5               	goto	u3792
  5201  0AF4  07B8               	addwf	___flmul@grs+2,f
  5202  0AF5                     u3792:
  5203  0AF5  0833               	movf	??___flmul+3,w
  5204  0AF6  1103               	clrz
  5205  0AF7  1803               	skipnc
  5206  0AF8  3E01               	addlw	1
  5207  0AF9  1903               	skipnz
  5208  0AFA  2AFC               	goto	u3793
  5209  0AFB  07B9               	addwf	___flmul@grs+3,f
  5210  0AFC                     u3793:
  5211  0AFC                     l2679:
  5212  0AFC  0829               	movf	___flmul@b+1,w
  5213  0AFD  00B0               	movwf	??___flmul
  5214  0AFE  0830               	movf	??___flmul,w
  5215  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  5216  0B00  082E               	movf	___flmul@a+2,w
  5217  0B01  160A  158A  227E  120A  158A  	fcall	__Umul8_16
  5218  0B06  0873               	movf	?__Umul8_16+1,w
  5219  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5220  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5221  0B09  00C1               	movwf	___flmul@temp+1
  5222  0B0A  0872               	movf	?__Umul8_16,w
  5223  0B0B  00C0               	movwf	___flmul@temp
  5224  0B0C  0840               	movf	___flmul@temp,w
  5225  0B0D  00B0               	movwf	??___flmul
  5226  0B0E  0841               	movf	___flmul@temp+1,w
  5227  0B0F  00B1               	movwf	??___flmul+1
  5228  0B10  01B2               	clrf	??___flmul+2
  5229  0B11  01B3               	clrf	??___flmul+3
  5230  0B12  0830               	movf	??___flmul,w
  5231  0B13  07BC               	addwf	___flmul@prod,f
  5232  0B14  0831               	movf	??___flmul+1,w
  5233  0B15  1103               	clrz
  5234  0B16  1803               	skipnc
  5235  0B17  3E01               	addlw	1
  5236  0B18  1903               	skipnz
  5237  0B19  2B1B               	goto	u3801
  5238  0B1A  07BD               	addwf	___flmul@prod+1,f
  5239  0B1B                     u3801:
  5240  0B1B  0832               	movf	??___flmul+2,w
  5241  0B1C  1103               	clrz
  5242  0B1D  1803               	skipnc
  5243  0B1E  3E01               	addlw	1
  5244  0B1F  1903               	skipnz
  5245  0B20  2B22               	goto	u3802
  5246  0B21  07BE               	addwf	___flmul@prod+2,f
  5247  0B22                     u3802:
  5248  0B22  0833               	movf	??___flmul+3,w
  5249  0B23  1103               	clrz
  5250  0B24  1803               	skipnc
  5251  0B25  3E01               	addlw	1
  5252  0B26  1903               	skipnz
  5253  0B27  2B29               	goto	u3803
  5254  0B28  07BF               	addwf	___flmul@prod+3,f
  5255  0B29                     u3803:
  5256  0B29                     l2681:
  5257  0B29  082A               	movf	___flmul@b+2,w
  5258  0B2A  00B0               	movwf	??___flmul
  5259  0B2B  0830               	movf	??___flmul,w
  5260  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  5261  0B2D  082D               	movf	___flmul@a+1,w
  5262  0B2E  160A  158A  227E  120A  158A  	fcall	__Umul8_16
  5263  0B33  0873               	movf	?__Umul8_16+1,w
  5264  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0B36  00C1               	movwf	___flmul@temp+1
  5267  0B37  0872               	movf	?__Umul8_16,w
  5268  0B38  00C0               	movwf	___flmul@temp
  5269  0B39                     l2683:
  5270  0B39  0840               	movf	___flmul@temp,w
  5271  0B3A  00B0               	movwf	??___flmul
  5272  0B3B  0841               	movf	___flmul@temp+1,w
  5273  0B3C  00B1               	movwf	??___flmul+1
  5274  0B3D  01B2               	clrf	??___flmul+2
  5275  0B3E  01B3               	clrf	??___flmul+3
  5276  0B3F  0830               	movf	??___flmul,w
  5277  0B40  07BC               	addwf	___flmul@prod,f
  5278  0B41  0831               	movf	??___flmul+1,w
  5279  0B42  1103               	clrz
  5280  0B43  1803               	skipnc
  5281  0B44  3E01               	addlw	1
  5282  0B45  1903               	skipnz
  5283  0B46  2B48               	goto	u3811
  5284  0B47  07BD               	addwf	___flmul@prod+1,f
  5285  0B48                     u3811:
  5286  0B48  0832               	movf	??___flmul+2,w
  5287  0B49  1103               	clrz
  5288  0B4A  1803               	skipnc
  5289  0B4B  3E01               	addlw	1
  5290  0B4C  1903               	skipnz
  5291  0B4D  2B4F               	goto	u3812
  5292  0B4E  07BE               	addwf	___flmul@prod+2,f
  5293  0B4F                     u3812:
  5294  0B4F  0833               	movf	??___flmul+3,w
  5295  0B50  1103               	clrz
  5296  0B51  1803               	skipnc
  5297  0B52  3E01               	addlw	1
  5298  0B53  1903               	skipnz
  5299  0B54  2B56               	goto	u3813
  5300  0B55  07BF               	addwf	___flmul@prod+3,f
  5301  0B56                     u3813:
  5302  0B56  082A               	movf	___flmul@b+2,w
  5303  0B57  00B0               	movwf	??___flmul
  5304  0B58  0830               	movf	??___flmul,w
  5305  0B59  00F2               	movwf	__Umul8_16@multiplicand
  5306  0B5A  082E               	movf	___flmul@a+2,w
  5307  0B5B  160A  158A  227E  120A  158A  	fcall	__Umul8_16
  5308  0B60  0873               	movf	?__Umul8_16+1,w
  5309  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5310  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  5311  0B63  00C1               	movwf	___flmul@temp+1
  5312  0B64  0872               	movf	?__Umul8_16,w
  5313  0B65  00C0               	movwf	___flmul@temp
  5314  0B66                     l2685:
  5315  0B66  0840               	movf	___flmul@temp,w
  5316  0B67  00B0               	movwf	??___flmul
  5317  0B68  0841               	movf	___flmul@temp+1,w
  5318  0B69  00B1               	movwf	??___flmul+1
  5319  0B6A  01B2               	clrf	??___flmul+2
  5320  0B6B  01B3               	clrf	??___flmul+3
  5321  0B6C  3008               	movlw	8
  5322  0B6D                     u3825:
  5323  0B6D  1003               	clrc
  5324  0B6E  0DB0               	rlf	??___flmul,f
  5325  0B6F  0DB1               	rlf	??___flmul+1,f
  5326  0B70  0DB2               	rlf	??___flmul+2,f
  5327  0B71  0DB3               	rlf	??___flmul+3,f
  5328  0B72                     u3820:
  5329  0B72  3EFF               	addlw	-1
  5330  0B73  1D03               	skipz
  5331  0B74  2B6D               	goto	u3825
  5332  0B75  0830               	movf	??___flmul,w
  5333  0B76  07BC               	addwf	___flmul@prod,f
  5334  0B77  0831               	movf	??___flmul+1,w
  5335  0B78  1103               	clrz
  5336  0B79  1803               	skipnc
  5337  0B7A  3E01               	addlw	1
  5338  0B7B  1903               	skipnz
  5339  0B7C  2B7E               	goto	u3831
  5340  0B7D  07BD               	addwf	___flmul@prod+1,f
  5341  0B7E                     u3831:
  5342  0B7E  0832               	movf	??___flmul+2,w
  5343  0B7F  1103               	clrz
  5344  0B80  1803               	skipnc
  5345  0B81  3E01               	addlw	1
  5346  0B82  1903               	skipnz
  5347  0B83  2B85               	goto	u3832
  5348  0B84  07BE               	addwf	___flmul@prod+2,f
  5349  0B85                     u3832:
  5350  0B85  0833               	movf	??___flmul+3,w
  5351  0B86  1103               	clrz
  5352  0B87  1803               	skipnc
  5353  0B88  3E01               	addlw	1
  5354  0B89  1903               	skipnz
  5355  0B8A  2B8C               	goto	u3833
  5356  0B8B  07BF               	addwf	___flmul@prod+3,f
  5357  0B8C                     u3833:
  5358  0B8C                     l2687:
  5359  0B8C  0836               	movf	___flmul@grs,w
  5360  0B8D  00B0               	movwf	??___flmul
  5361  0B8E  0837               	movf	___flmul@grs+1,w
  5362  0B8F  00B1               	movwf	??___flmul+1
  5363  0B90  0838               	movf	___flmul@grs+2,w
  5364  0B91  00B2               	movwf	??___flmul+2
  5365  0B92  0839               	movf	___flmul@grs+3,w
  5366  0B93  00B3               	movwf	??___flmul+3
  5367  0B94  3018               	movlw	24
  5368  0B95                     u3845:
  5369  0B95  1003               	clrc
  5370  0B96  0CB3               	rrf	??___flmul+3,f
  5371  0B97  0CB2               	rrf	??___flmul+2,f
  5372  0B98  0CB1               	rrf	??___flmul+1,f
  5373  0B99  0CB0               	rrf	??___flmul,f
  5374  0B9A                     u3840:
  5375  0B9A  3EFF               	addlw	-1
  5376  0B9B  1D03               	skipz
  5377  0B9C  2B95               	goto	u3845
  5378  0B9D  0830               	movf	??___flmul,w
  5379  0B9E  07BC               	addwf	___flmul@prod,f
  5380  0B9F  0831               	movf	??___flmul+1,w
  5381  0BA0  1103               	clrz
  5382  0BA1  1803               	skipnc
  5383  0BA2  3E01               	addlw	1
  5384  0BA3  1903               	skipnz
  5385  0BA4  2BA6               	goto	u3851
  5386  0BA5  07BD               	addwf	___flmul@prod+1,f
  5387  0BA6                     u3851:
  5388  0BA6  0832               	movf	??___flmul+2,w
  5389  0BA7  1103               	clrz
  5390  0BA8  1803               	skipnc
  5391  0BA9  3E01               	addlw	1
  5392  0BAA  1903               	skipnz
  5393  0BAB  2BAD               	goto	u3852
  5394  0BAC  07BE               	addwf	___flmul@prod+2,f
  5395  0BAD                     u3852:
  5396  0BAD  0833               	movf	??___flmul+3,w
  5397  0BAE  1103               	clrz
  5398  0BAF  1803               	skipnc
  5399  0BB0  3E01               	addlw	1
  5400  0BB1  1903               	skipnz
  5401  0BB2  2BB4               	goto	u3853
  5402  0BB3  07BF               	addwf	___flmul@prod+3,f
  5403  0BB4                     u3853:
  5404  0BB4                     l2689:
  5405  0BB4  3008               	movlw	8
  5406  0BB5  00B0               	movwf	??___flmul
  5407  0BB6                     u3865:
  5408  0BB6  1003               	clrc
  5409  0BB7  0DB6               	rlf	___flmul@grs,f
  5410  0BB8  0DB7               	rlf	___flmul@grs+1,f
  5411  0BB9  0DB8               	rlf	___flmul@grs+2,f
  5412  0BBA  0DB9               	rlf	___flmul@grs+3,f
  5413  0BBB  0BB0               	decfsz	??___flmul,f
  5414  0BBC  2BB6               	goto	u3865
  5415  0BBD                     l2691:
  5416  0BBD  083B               	movf	___flmul@bexp,w
  5417  0BBE  073A               	addwf	___flmul@aexp,w
  5418  0BBF  00B0               	movwf	??___flmul
  5419  0BC0  01B1               	clrf	??___flmul+1
  5420  0BC1  0DB1               	rlf	??___flmul+1,f
  5421  0BC2  0830               	movf	??___flmul,w
  5422  0BC3  3E82               	addlw	130
  5423  0BC4  00C0               	movwf	___flmul@temp
  5424  0BC5  0831               	movf	??___flmul+1,w
  5425  0BC6  1803               	skipnc
  5426  0BC7  3E01               	addlw	1
  5427  0BC8  3EFF               	addlw	255
  5428  0BC9  00C1               	movwf	___flmul@temp+1
  5429  0BCA  2BE8               	goto	l2703
  5430  0BCB                     l2693:
  5431  0BCB  3001               	movlw	1
  5432  0BCC  00B0               	movwf	??___flmul
  5433  0BCD                     u3875:
  5434  0BCD  1003               	clrc
  5435  0BCE  0DBC               	rlf	___flmul@prod,f
  5436  0BCF  0DBD               	rlf	___flmul@prod+1,f
  5437  0BD0  0DBE               	rlf	___flmul@prod+2,f
  5438  0BD1  0DBF               	rlf	___flmul@prod+3,f
  5439  0BD2  0BB0               	decfsz	??___flmul,f
  5440  0BD3  2BCD               	goto	u3875
  5441  0BD4                     l2695:
  5442  0BD4  1FB9               	btfss	___flmul@grs+3,7
  5443  0BD5  2BD7               	goto	u3881
  5444  0BD6  2BD8               	goto	u3880
  5445  0BD7                     u3881:
  5446  0BD7  2BD9               	goto	l2699
  5447  0BD8                     u3880:
  5448  0BD8                     l2697:
  5449  0BD8  143C               	bsf	___flmul@prod,0
  5450  0BD9                     l2699:
  5451  0BD9  3001               	movlw	1
  5452  0BDA  00B0               	movwf	??___flmul
  5453  0BDB                     u3895:
  5454  0BDB  1003               	clrc
  5455  0BDC  0DB6               	rlf	___flmul@grs,f
  5456  0BDD  0DB7               	rlf	___flmul@grs+1,f
  5457  0BDE  0DB8               	rlf	___flmul@grs+2,f
  5458  0BDF  0DB9               	rlf	___flmul@grs+3,f
  5459  0BE0  0BB0               	decfsz	??___flmul,f
  5460  0BE1  2BDB               	goto	u3895
  5461  0BE2                     l2701:
  5462  0BE2  30FF               	movlw	255
  5463  0BE3  07C0               	addwf	___flmul@temp,f
  5464  0BE4  1803               	skipnc
  5465  0BE5  0AC1               	incf	___flmul@temp+1,f
  5466  0BE6  30FF               	movlw	255
  5467  0BE7  07C1               	addwf	___flmul@temp+1,f
  5468  0BE8                     l2703:
  5469  0BE8  1FBE               	btfss	___flmul@prod+2,7
  5470  0BE9  2BEB               	goto	u3901
  5471  0BEA  2BEC               	goto	u3900
  5472  0BEB                     u3901:
  5473  0BEB  2BCB               	goto	l2693
  5474  0BEC                     u3900:
  5475  0BEC                     l2705:
  5476  0BEC  01BA               	clrf	___flmul@aexp
  5477  0BED                     l2707:
  5478  0BED  1FB9               	btfss	___flmul@grs+3,7
  5479  0BEE  2BF0               	goto	u3911
  5480  0BEF  2BF1               	goto	u3910
  5481  0BF0                     u3911:
  5482  0BF0  2C0D               	goto	l2715
  5483  0BF1                     u3910:
  5484  0BF1                     l2709:
  5485  0BF1  30FF               	movlw	255
  5486  0BF2  0536               	andwf	___flmul@grs,w
  5487  0BF3  00B0               	movwf	??___flmul
  5488  0BF4  30FF               	movlw	255
  5489  0BF5  0537               	andwf	___flmul@grs+1,w
  5490  0BF6  00B1               	movwf	??___flmul+1
  5491  0BF7  30FF               	movlw	255
  5492  0BF8  0538               	andwf	___flmul@grs+2,w
  5493  0BF9  00B2               	movwf	??___flmul+2
  5494  0BFA  307F               	movlw	127
  5495  0BFB  0539               	andwf	___flmul@grs+3,w
  5496  0BFC  00B3               	movwf	??___flmul+3
  5497  0BFD  0833               	movf	??___flmul+3,w
  5498  0BFE  0432               	iorwf	??___flmul+2,w
  5499  0BFF  0431               	iorwf	??___flmul+1,w
  5500  0C00  0430               	iorwf	??___flmul,w
  5501  0C01  1903               	skipnz
  5502  0C02  2C04               	goto	u3921
  5503  0C03  2C05               	goto	u3920
  5504  0C04                     u3921:
  5505  0C04  2C08               	goto	l809
  5506  0C05                     u3920:
  5507  0C05                     l2711:
  5508  0C05  01BA               	clrf	___flmul@aexp
  5509  0C06  0ABA               	incf	___flmul@aexp,f
  5510  0C07  2C0D               	goto	l2715
  5511  0C08                     l809:
  5512  0C08  1C3C               	btfss	___flmul@prod,0
  5513  0C09  2C0B               	goto	u3931
  5514  0C0A  2C0C               	goto	u3930
  5515  0C0B                     u3931:
  5516  0C0B  2C0D               	goto	l2715
  5517  0C0C                     u3930:
  5518  0C0C  2C05               	goto	l2711
  5519  0C0D                     l2715:
  5520  0C0D  083A               	movf	___flmul@aexp,w
  5521  0C0E  1903               	btfsc	3,2
  5522  0C0F  2C11               	goto	u3941
  5523  0C10  2C12               	goto	u3940
  5524  0C11                     u3941:
  5525  0C11  2C43               	goto	l2725
  5526  0C12                     u3940:
  5527  0C12                     l2717:
  5528  0C12  3001               	movlw	1
  5529  0C13  07BC               	addwf	___flmul@prod,f
  5530  0C14  3000               	movlw	0
  5531  0C15  1803               	skipnc
  5532  0C16  3001               	movlw	1
  5533  0C17  07BD               	addwf	___flmul@prod+1,f
  5534  0C18  3000               	movlw	0
  5535  0C19  1803               	skipnc
  5536  0C1A  3001               	movlw	1
  5537  0C1B  07BE               	addwf	___flmul@prod+2,f
  5538  0C1C  3000               	movlw	0
  5539  0C1D  1803               	skipnc
  5540  0C1E  3001               	movlw	1
  5541  0C1F  07BF               	addwf	___flmul@prod+3,f
  5542  0C20                     l2719:
  5543  0C20  1C3F               	btfss	___flmul@prod+3,0
  5544  0C21  2C23               	goto	u3951
  5545  0C22  2C24               	goto	u3950
  5546  0C23                     u3951:
  5547  0C23  2C43               	goto	l2725
  5548  0C24                     u3950:
  5549  0C24                     l2721:
  5550  0C24  083C               	movf	___flmul@prod,w
  5551  0C25  00B0               	movwf	??___flmul
  5552  0C26  083D               	movf	___flmul@prod+1,w
  5553  0C27  00B1               	movwf	??___flmul+1
  5554  0C28  083E               	movf	___flmul@prod+2,w
  5555  0C29  00B2               	movwf	??___flmul+2
  5556  0C2A  083F               	movf	___flmul@prod+3,w
  5557  0C2B  00B3               	movwf	??___flmul+3
  5558  0C2C  3001               	movlw	1
  5559  0C2D  00B4               	movwf	??___flmul+4
  5560  0C2E                     u3965:
  5561  0C2E  0D33               	rlf	??___flmul+3,w
  5562  0C2F  0CB3               	rrf	??___flmul+3,f
  5563  0C30  0CB2               	rrf	??___flmul+2,f
  5564  0C31  0CB1               	rrf	??___flmul+1,f
  5565  0C32  0CB0               	rrf	??___flmul,f
  5566  0C33                     u3960:
  5567  0C33  0BB4               	decfsz	??___flmul+4,f
  5568  0C34  2C2E               	goto	u3965
  5569  0C35  0833               	movf	??___flmul+3,w
  5570  0C36  00BF               	movwf	___flmul@prod+3
  5571  0C37  0832               	movf	??___flmul+2,w
  5572  0C38  00BE               	movwf	___flmul@prod+2
  5573  0C39  0831               	movf	??___flmul+1,w
  5574  0C3A  00BD               	movwf	___flmul@prod+1
  5575  0C3B  0830               	movf	??___flmul,w
  5576  0C3C  00BC               	movwf	___flmul@prod
  5577  0C3D                     l2723:
  5578  0C3D  3001               	movlw	1
  5579  0C3E  07C0               	addwf	___flmul@temp,f
  5580  0C3F  1803               	skipnc
  5581  0C40  0AC1               	incf	___flmul@temp+1,f
  5582  0C41  3000               	movlw	0
  5583  0C42  07C1               	addwf	___flmul@temp+1,f
  5584  0C43                     l2725:
  5585  0C43  0841               	movf	___flmul@temp+1,w
  5586  0C44  3A80               	xorlw	128
  5587  0C45  00FF               	movwf	btemp+1
  5588  0C46  3080               	movlw	128
  5589  0C47  027F               	subwf	btemp+1,w
  5590  0C48  1D03               	skipz
  5591  0C49  2C4C               	goto	u3975
  5592  0C4A  30FF               	movlw	255
  5593  0C4B  0240               	subwf	___flmul@temp,w
  5594  0C4C                     u3975:
  5595  0C4C  1C03               	skipc
  5596  0C4D  2C4F               	goto	u3971
  5597  0C4E  2C50               	goto	u3970
  5598  0C4F                     u3971:
  5599  0C4F  2C5B               	goto	l2729
  5600  0C50                     u3970:
  5601  0C50                     l2727:
  5602  0C50  307F               	movlw	127
  5603  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5604  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5605  0C53  00BF               	movwf	___flmul@prod+3
  5606  0C54  3080               	movlw	128
  5607  0C55  00BE               	movwf	___flmul@prod+2
  5608  0C56  3000               	movlw	0
  5609  0C57  00BD               	movwf	___flmul@prod+1
  5610  0C58  3000               	movlw	0
  5611  0C59  00BC               	movwf	___flmul@prod
  5612  0C5A  2C90               	goto	l815
  5613  0C5B                     l2729:
  5614  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5616  0C5D  0841               	movf	___flmul@temp+1,w
  5617  0C5E  3A80               	xorlw	128
  5618  0C5F  00FF               	movwf	btemp+1
  5619  0C60  3080               	movlw	128
  5620  0C61  027F               	subwf	btemp+1,w
  5621  0C62  1D03               	skipz
  5622  0C63  2C66               	goto	u3985
  5623  0C64  3001               	movlw	1
  5624  0C65  0240               	subwf	___flmul@temp,w
  5625  0C66                     u3985:
  5626  0C66  1803               	skipnc
  5627  0C67  2C69               	goto	u3981
  5628  0C68  2C6A               	goto	u3980
  5629  0C69                     u3981:
  5630  0C69  2C76               	goto	l2735
  5631  0C6A                     u3980:
  5632  0C6A                     l2731:
  5633  0C6A  3000               	movlw	0
  5634  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5635  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5636  0C6D  00BF               	movwf	___flmul@prod+3
  5637  0C6E  3000               	movlw	0
  5638  0C6F  00BE               	movwf	___flmul@prod+2
  5639  0C70  3000               	movlw	0
  5640  0C71  00BD               	movwf	___flmul@prod+1
  5641  0C72  3000               	movlw	0
  5642  0C73  00BC               	movwf	___flmul@prod
  5643  0C74                     l2733:
  5644  0C74  01B5               	clrf	___flmul@sign
  5645  0C75  2C90               	goto	l815
  5646  0C76                     l2735:
  5647  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5648  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5649  0C78  0840               	movf	___flmul@temp,w
  5650  0C79  00B0               	movwf	??___flmul
  5651  0C7A  0830               	movf	??___flmul,w
  5652  0C7B  00BB               	movwf	___flmul@bexp
  5653  0C7C  30FF               	movlw	255
  5654  0C7D  05BC               	andwf	___flmul@prod,f
  5655  0C7E  30FF               	movlw	255
  5656  0C7F  05BD               	andwf	___flmul@prod+1,f
  5657  0C80  307F               	movlw	127
  5658  0C81  05BE               	andwf	___flmul@prod+2,f
  5659  0C82  3000               	movlw	0
  5660  0C83  05BF               	andwf	___flmul@prod+3,f
  5661  0C84                     l2737:
  5662  0C84  1C3B               	btfss	___flmul@bexp,0
  5663  0C85  2C87               	goto	u3991
  5664  0C86  2C88               	goto	u3990
  5665  0C87                     u3991:
  5666  0C87  2C89               	goto	l2741
  5667  0C88                     u3990:
  5668  0C88                     l2739:
  5669  0C88  17BE               	bsf	___flmul@prod+2,7
  5670  0C89                     l2741:
  5671  0C89  083B               	movf	___flmul@bexp,w
  5672  0C8A  00B0               	movwf	??___flmul
  5673  0C8B  1003               	clrc
  5674  0C8C  0C30               	rrf	??___flmul,w
  5675  0C8D  00B1               	movwf	??___flmul+1
  5676  0C8E  0831               	movf	??___flmul+1,w
  5677  0C8F  00BF               	movwf	___flmul@prod+3
  5678  0C90                     l815:
  5679  0C90  0835               	movf	___flmul@sign,w
  5680  0C91  00B0               	movwf	??___flmul
  5681  0C92  0830               	movf	??___flmul,w
  5682  0C93  04BF               	iorwf	___flmul@prod+3,f
  5683  0C94                     l2743:
  5684  0C94  083F               	movf	___flmul@prod+3,w
  5685  0C95  00AB               	movwf	?___flmul+3
  5686  0C96  083E               	movf	___flmul@prod+2,w
  5687  0C97  00AA               	movwf	?___flmul+2
  5688  0C98  083D               	movf	___flmul@prod+1,w
  5689  0C99  00A9               	movwf	?___flmul+1
  5690  0C9A  083C               	movf	___flmul@prod,w
  5691  0C9B  00A8               	movwf	?___flmul
  5692  0C9C                     l803:
  5693  0C9C  0008               	return
  5694  0C9D                     __end_of___flmul:
  5695                           
  5696                           	psect	text10
  5697  1A7E                     __ptext10:	
  5698 ;; *************** function __Umul8_16 *****************
  5699 ;; Defined at:
  5700 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  multiplier      1    wreg     unsigned char 
  5703 ;;  multiplicand    1    2[COMMON] unsigned char 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  multiplier      1   10[COMMON] unsigned char 
  5706 ;;  word_mpld       2    8[COMMON] unsigned int 
  5707 ;;  product         2    6[COMMON] unsigned int 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  2    2[COMMON] unsigned int 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5717 ;;      Params:         2       0       0       0       0
  5718 ;;      Locals:         5       0       0       0       0
  5719 ;;      Temps:          2       0       0       0       0
  5720 ;;      Totals:         9       0       0       0       0
  5721 ;;Total ram usage:        9 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    1
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		___flmul
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           
  5732                           ;psect for function __Umul8_16
  5733  1A7E                     __Umul8_16:
  5734                           
  5735                           ;incstack = 0
  5736                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5737                           ;__Umul8_16@multiplier stored from wreg
  5738  1A7E  00FA               	movwf	__Umul8_16@multiplier
  5739  1A7F                     l2267:
  5740  1A7F  01F6               	clrf	__Umul8_16@product
  5741  1A80  01F7               	clrf	__Umul8_16@product+1
  5742  1A81                     l2269:
  5743  1A81  0872               	movf	__Umul8_16@multiplicand,w
  5744  1A82  00F4               	movwf	??__Umul8_16
  5745  1A83  01F5               	clrf	??__Umul8_16+1
  5746  1A84  0874               	movf	??__Umul8_16,w
  5747  1A85  00F8               	movwf	__Umul8_16@word_mpld
  5748  1A86  0875               	movf	??__Umul8_16+1,w
  5749  1A87  00F9               	movwf	__Umul8_16@word_mpld+1
  5750  1A88                     l2271:
  5751  1A88  1C7A               	btfss	__Umul8_16@multiplier,0
  5752  1A89  2A8B               	goto	u2821
  5753  1A8A  2A8C               	goto	u2820
  5754  1A8B                     u2821:
  5755  1A8B  2A92               	goto	l822
  5756  1A8C                     u2820:
  5757  1A8C                     l2273:
  5758  1A8C  0878               	movf	__Umul8_16@word_mpld,w
  5759  1A8D  07F6               	addwf	__Umul8_16@product,f
  5760  1A8E  1803               	skipnc
  5761  1A8F  0AF7               	incf	__Umul8_16@product+1,f
  5762  1A90  0879               	movf	__Umul8_16@word_mpld+1,w
  5763  1A91  07F7               	addwf	__Umul8_16@product+1,f
  5764  1A92                     l822:
  5765  1A92  3001               	movlw	1
  5766  1A93                     u2835:
  5767  1A93  1003               	clrc
  5768  1A94  0DF8               	rlf	__Umul8_16@word_mpld,f
  5769  1A95  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  5770  1A96  3EFF               	addlw	-1
  5771  1A97  1D03               	skipz
  5772  1A98  2A93               	goto	u2835
  5773  1A99  1003               	clrc
  5774  1A9A  0CFA               	rrf	__Umul8_16@multiplier,f
  5775  1A9B                     l2275:
  5776  1A9B  087A               	movf	__Umul8_16@multiplier,w
  5777  1A9C  1D03               	btfss	3,2
  5778  1A9D  2A9F               	goto	u2841
  5779  1A9E  2AA0               	goto	u2840
  5780  1A9F                     u2841:
  5781  1A9F  2A88               	goto	l2271
  5782  1AA0                     u2840:
  5783  1AA0                     l2277:
  5784  1AA0  0877               	movf	__Umul8_16@product+1,w
  5785  1AA1  00F3               	movwf	?__Umul8_16+1
  5786  1AA2  0876               	movf	__Umul8_16@product,w
  5787  1AA3  00F2               	movwf	?__Umul8_16
  5788  1AA4                     l824:
  5789  1AA4  0008               	return
  5790  1AA5                     __end_of__Umul8_16:
  5791                           
  5792                           	psect	text11
  5793  1F43                     __ptext11:	
  5794 ;; *************** function __tdiv_to_l_ *****************
  5795 ;; Defined at:
  5796 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  f1              4    2[COMMON] float 
  5799 ;;  f2              4    6[COMMON] float 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  quot            4    4[BANK0 ] unsigned long 
  5802 ;;  exp1            1    9[BANK0 ] unsigned char 
  5803 ;;  cntr            1    8[BANK0 ] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  4    2[COMMON] unsigned long 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5813 ;;      Params:         8       0       0       0       0
  5814 ;;      Locals:         0       6       0       0       0
  5815 ;;      Temps:          0       4       0       0       0
  5816 ;;      Totals:         8      10       0       0       0
  5817 ;;Total ram usage:       18 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    1
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_sprintf
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           
  5828                           ;psect for function __tdiv_to_l_
  5829  1F43                     __tdiv_to_l_:
  5830  1F43                     l2851:	
  5831                           ;incstack = 0
  5832                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5833                           
  5834  1F43  0872               	movf	__tdiv_to_l_@f1,w
  5835  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  5836  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  5837  1F46  00A0               	movwf	??__tdiv_to_l_
  5838  1F47  0873               	movf	__tdiv_to_l_@f1+1,w
  5839  1F48  00A1               	movwf	??__tdiv_to_l_+1
  5840  1F49  0874               	movf	__tdiv_to_l_@f1+2,w
  5841  1F4A  00A2               	movwf	??__tdiv_to_l_+2
  5842  1F4B  1003               	clrc
  5843  1F4C  0D21               	rlf	??__tdiv_to_l_+1,w
  5844  1F4D  0D22               	rlf	??__tdiv_to_l_+2,w
  5845  1F4E  00A3               	movwf	??__tdiv_to_l_+3
  5846  1F4F  0823               	movf	??__tdiv_to_l_+3,w
  5847  1F50  00A9               	movwf	__tdiv_to_l_@exp1
  5848  1F51  0829               	movf	__tdiv_to_l_@exp1,w
  5849  1F52  1D03               	btfss	3,2
  5850  1F53  2F55               	goto	u4281
  5851  1F54  2F56               	goto	u4280
  5852  1F55                     u4281:
  5853  1F55  2F5F               	goto	l2857
  5854  1F56                     u4280:
  5855  1F56                     l2853:
  5856  1F56  3000               	movlw	0
  5857  1F57  00F5               	movwf	?__tdiv_to_l_+3
  5858  1F58  3000               	movlw	0
  5859  1F59  00F4               	movwf	?__tdiv_to_l_+2
  5860  1F5A  3000               	movlw	0
  5861  1F5B  00F3               	movwf	?__tdiv_to_l_+1
  5862  1F5C  3000               	movlw	0
  5863  1F5D  00F2               	movwf	?__tdiv_to_l_
  5864  1F5E  2FFF               	goto	l597
  5865  1F5F                     l2857:
  5866  1F5F  0876               	movf	__tdiv_to_l_@f2,w
  5867  1F60  00A0               	movwf	??__tdiv_to_l_
  5868  1F61  0877               	movf	__tdiv_to_l_@f2+1,w
  5869  1F62  00A1               	movwf	??__tdiv_to_l_+1
  5870  1F63  0878               	movf	__tdiv_to_l_@f2+2,w
  5871  1F64  00A2               	movwf	??__tdiv_to_l_+2
  5872  1F65  1003               	clrc
  5873  1F66  0D21               	rlf	??__tdiv_to_l_+1,w
  5874  1F67  0D22               	rlf	??__tdiv_to_l_+2,w
  5875  1F68  00A3               	movwf	??__tdiv_to_l_+3
  5876  1F69  0823               	movf	??__tdiv_to_l_+3,w
  5877  1F6A  00A8               	movwf	__tdiv_to_l_@cntr
  5878  1F6B  0828               	movf	__tdiv_to_l_@cntr,w
  5879  1F6C  1D03               	btfss	3,2
  5880  1F6D  2F6F               	goto	u4291
  5881  1F6E  2F70               	goto	u4290
  5882  1F6F                     u4291:
  5883  1F6F  2F71               	goto	l598
  5884  1F70                     u4290:
  5885  1F70  2F56               	goto	l2853
  5886  1F71                     l598:
  5887  1F71  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5888  1F72                     l2863:
  5889  1F72  30FF               	movlw	255
  5890  1F73  05F2               	andwf	__tdiv_to_l_@f1,f
  5891  1F74  30FF               	movlw	255
  5892  1F75  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5893  1F76  3000               	movlw	0
  5894  1F77  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5895  1F78                     l2865:
  5896  1F78  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5897  1F79  30FF               	movlw	255
  5898  1F7A  05F6               	andwf	__tdiv_to_l_@f2,f
  5899  1F7B  30FF               	movlw	255
  5900  1F7C  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5901  1F7D  3000               	movlw	0
  5902  1F7E  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5903  1F7F  3000               	movlw	0
  5904  1F80  00A7               	movwf	__tdiv_to_l_@quot+3
  5905  1F81  3000               	movlw	0
  5906  1F82  00A6               	movwf	__tdiv_to_l_@quot+2
  5907  1F83  3000               	movlw	0
  5908  1F84  00A5               	movwf	__tdiv_to_l_@quot+1
  5909  1F85  3000               	movlw	0
  5910  1F86  00A4               	movwf	__tdiv_to_l_@quot
  5911  1F87                     l2867:
  5912  1F87  307F               	movlw	127
  5913  1F88  02A9               	subwf	__tdiv_to_l_@exp1,f
  5914  1F89                     l2869:
  5915  1F89  3098               	movlw	152
  5916  1F8A  0728               	addwf	__tdiv_to_l_@cntr,w
  5917  1F8B  00A0               	movwf	??__tdiv_to_l_
  5918  1F8C  0820               	movf	??__tdiv_to_l_,w
  5919  1F8D  02A9               	subwf	__tdiv_to_l_@exp1,f
  5920  1F8E  3018               	movlw	24
  5921  1F8F  00A0               	movwf	??__tdiv_to_l_
  5922  1F90  0820               	movf	??__tdiv_to_l_,w
  5923  1F91  00A8               	movwf	__tdiv_to_l_@cntr
  5924  1F92                     l2871:
  5925  1F92  3001               	movlw	1
  5926  1F93  00A0               	movwf	??__tdiv_to_l_
  5927  1F94                     u4305:
  5928  1F94  1003               	clrc
  5929  1F95  0DA4               	rlf	__tdiv_to_l_@quot,f
  5930  1F96  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5931  1F97  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5932  1F98  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5933  1F99  0BA0               	decfsz	??__tdiv_to_l_,f
  5934  1F9A  2F94               	goto	u4305
  5935  1F9B                     l2873:
  5936  1F9B  0878               	movf	__tdiv_to_l_@f2+2,w
  5937  1F9C  0274               	subwf	__tdiv_to_l_@f1+2,w
  5938  1F9D  1D03               	skipz
  5939  1F9E  2FA5               	goto	u4315
  5940  1F9F  0877               	movf	__tdiv_to_l_@f2+1,w
  5941  1FA0  0273               	subwf	__tdiv_to_l_@f1+1,w
  5942  1FA1  1D03               	skipz
  5943  1FA2  2FA5               	goto	u4315
  5944  1FA3  0876               	movf	__tdiv_to_l_@f2,w
  5945  1FA4  0272               	subwf	__tdiv_to_l_@f1,w
  5946  1FA5                     u4315:
  5947  1FA5  1C03               	skipc
  5948  1FA6  2FA8               	goto	u4311
  5949  1FA7  2FA9               	goto	u4310
  5950  1FA8                     u4311:
  5951  1FA8  2FB4               	goto	l2879
  5952  1FA9                     u4310:
  5953  1FA9                     l2875:
  5954  1FA9  0876               	movf	__tdiv_to_l_@f2,w
  5955  1FAA  02F2               	subwf	__tdiv_to_l_@f1,f
  5956  1FAB  0877               	movf	__tdiv_to_l_@f2+1,w
  5957  1FAC  1C03               	skipc
  5958  1FAD  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5959  1FAE  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5960  1FAF  0878               	movf	__tdiv_to_l_@f2+2,w
  5961  1FB0  1C03               	skipc
  5962  1FB1  0A78               	incf	__tdiv_to_l_@f2+2,w
  5963  1FB2  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5964  1FB3                     l2877:
  5965  1FB3  1424               	bsf	__tdiv_to_l_@quot,0
  5966  1FB4                     l2879:
  5967  1FB4  3001               	movlw	1
  5968  1FB5                     u4325:
  5969  1FB5  1003               	clrc
  5970  1FB6  0DF2               	rlf	__tdiv_to_l_@f1,f
  5971  1FB7  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5972  1FB8  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5973  1FB9  3EFF               	addlw	-1
  5974  1FBA  1D03               	skipz
  5975  1FBB  2FB5               	goto	u4325
  5976  1FBC                     l2881:
  5977  1FBC  3001               	movlw	1
  5978  1FBD  02A8               	subwf	__tdiv_to_l_@cntr,f
  5979  1FBE  1D03               	btfss	3,2
  5980  1FBF  2FC1               	goto	u4331
  5981  1FC0  2FC2               	goto	u4330
  5982  1FC1                     u4331:
  5983  1FC1  2F92               	goto	l2871
  5984  1FC2                     u4330:
  5985  1FC2                     l601:
  5986  1FC2  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5987  1FC3  2FC5               	goto	u4341
  5988  1FC4  2FC6               	goto	u4340
  5989  1FC5                     u4341:
  5990  1FC5  2FE0               	goto	l2891
  5991  1FC6                     u4340:
  5992  1FC6                     l2883:
  5993  1FC6  0829               	movf	__tdiv_to_l_@exp1,w
  5994  1FC7  3A80               	xorlw	128
  5995  1FC8  3E97               	addlw	151
  5996  1FC9  1803               	skipnc
  5997  1FCA  2FCC               	goto	u4351
  5998  1FCB  2FCD               	goto	u4350
  5999  1FCC                     u4351:
  6000  1FCC  2FCE               	goto	l2889
  6001  1FCD                     u4350:
  6002  1FCD  2F56               	goto	l2853
  6003  1FCE                     l2889:
  6004  1FCE  3001               	movlw	1
  6005  1FCF                     u4365:
  6006  1FCF  1003               	clrc
  6007  1FD0  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  6008  1FD1  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  6009  1FD2  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  6010  1FD3  0CA4               	rrf	__tdiv_to_l_@quot,f
  6011  1FD4  3EFF               	addlw	-1
  6012  1FD5  1D03               	skipz
  6013  1FD6  2FCF               	goto	u4365
  6014  1FD7  3001               	movlw	1
  6015  1FD8  00A0               	movwf	??__tdiv_to_l_
  6016  1FD9  0820               	movf	??__tdiv_to_l_,w
  6017  1FDA  07A9               	addwf	__tdiv_to_l_@exp1,f
  6018  1FDB  1D03               	btfss	3,2
  6019  1FDC  2FDE               	goto	u4371
  6020  1FDD  2FDF               	goto	u4370
  6021  1FDE                     u4371:
  6022  1FDE  2FCE               	goto	l2889
  6023  1FDF                     u4370:
  6024  1FDF  2FF7               	goto	l2899
  6025  1FE0                     l2891:
  6026  1FE0  3018               	movlw	24
  6027  1FE1  0229               	subwf	__tdiv_to_l_@exp1,w
  6028  1FE2  1C03               	skipc
  6029  1FE3  2FE5               	goto	u4381
  6030  1FE4  2FE6               	goto	u4380
  6031  1FE5                     u4381:
  6032  1FE5  2FF2               	goto	l608
  6033  1FE6                     u4380:
  6034  1FE6  2F56               	goto	l2853
  6035  1FE7                     l2897:
  6036  1FE7  3001               	movlw	1
  6037  1FE8  00A0               	movwf	??__tdiv_to_l_
  6038  1FE9                     u4395:
  6039  1FE9  1003               	clrc
  6040  1FEA  0DA4               	rlf	__tdiv_to_l_@quot,f
  6041  1FEB  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  6042  1FEC  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  6043  1FED  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  6044  1FEE  0BA0               	decfsz	??__tdiv_to_l_,f
  6045  1FEF  2FE9               	goto	u4395
  6046  1FF0  3001               	movlw	1
  6047  1FF1  02A9               	subwf	__tdiv_to_l_@exp1,f
  6048  1FF2                     l608:
  6049  1FF2  0829               	movf	__tdiv_to_l_@exp1,w
  6050  1FF3  1D03               	btfss	3,2
  6051  1FF4  2FF6               	goto	u4401
  6052  1FF5  2FF7               	goto	u4400
  6053  1FF6                     u4401:
  6054  1FF6  2FE7               	goto	l2897
  6055  1FF7                     u4400:
  6056  1FF7                     l2899:
  6057  1FF7  0827               	movf	__tdiv_to_l_@quot+3,w
  6058  1FF8  00F5               	movwf	?__tdiv_to_l_+3
  6059  1FF9  0826               	movf	__tdiv_to_l_@quot+2,w
  6060  1FFA  00F4               	movwf	?__tdiv_to_l_+2
  6061  1FFB  0825               	movf	__tdiv_to_l_@quot+1,w
  6062  1FFC  00F3               	movwf	?__tdiv_to_l_+1
  6063  1FFD  0824               	movf	__tdiv_to_l_@quot,w
  6064  1FFE  00F2               	movwf	?__tdiv_to_l_
  6065  1FFF                     l597:
  6066  1FFF  0008               	return
  6067  2000                     __end_of__tdiv_to_l_:
  6068                           
  6069                           	psect	text12
  6070  1034                     __ptext12:	
  6071 ;; *************** function __div_to_l_ *****************
  6072 ;; Defined at:
  6073 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  f1              4    2[COMMON] unsigned long 
  6076 ;;  f2              4    6[COMMON] unsigned long 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  quot            4    0[BANK0 ] unsigned long 
  6079 ;;  exp1            1    5[BANK0 ] unsigned char 
  6080 ;;  cntr            1    4[BANK0 ] unsigned char 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  4    2[COMMON] unsigned long 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6090 ;;      Params:         8       0       0       0       0
  6091 ;;      Locals:         0       6       0       0       0
  6092 ;;      Temps:          1       0       0       0       0
  6093 ;;      Totals:         9       6       0       0       0
  6094 ;;Total ram usage:       15 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    1
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_sprintf
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           
  6105                           ;psect for function __div_to_l_
  6106  1034                     __div_to_l_:
  6107  1034                     l2903:	
  6108                           ;incstack = 0
  6109                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6110                           
  6111  1034  1003               	clrc
  6112  1035  0D74               	rlf	__div_to_l_@f1+2,w
  6113  1036  0D75               	rlf	__div_to_l_@f1+3,w
  6114  1037  00FA               	movwf	??__div_to_l_
  6115  1038  087A               	movf	??__div_to_l_,w
  6116  1039  1283               	bcf	3,5	;RP0=0, select bank0
  6117  103A  1303               	bcf	3,6	;RP1=0, select bank0
  6118  103B  00A5               	movwf	__div_to_l_@exp1
  6119  103C  0825               	movf	__div_to_l_@exp1,w
  6120  103D  1D03               	btfss	3,2
  6121  103E  2840               	goto	u4411
  6122  103F  2841               	goto	u4410
  6123  1040                     u4411:
  6124  1040  284A               	goto	l2909
  6125  1041                     u4410:
  6126  1041                     l2905:
  6127  1041  3000               	movlw	0
  6128  1042  00F5               	movwf	?__div_to_l_+3
  6129  1043  3000               	movlw	0
  6130  1044  00F4               	movwf	?__div_to_l_+2
  6131  1045  3000               	movlw	0
  6132  1046  00F3               	movwf	?__div_to_l_+1
  6133  1047  3000               	movlw	0
  6134  1048  00F2               	movwf	?__div_to_l_
  6135  1049  28F1               	goto	l550
  6136  104A                     l2909:
  6137  104A  1003               	clrc
  6138  104B  0D78               	rlf	__div_to_l_@f2+2,w
  6139  104C  0D79               	rlf	__div_to_l_@f2+3,w
  6140  104D  00FA               	movwf	??__div_to_l_
  6141  104E  087A               	movf	??__div_to_l_,w
  6142  104F  00A4               	movwf	__div_to_l_@cntr
  6143  1050  0824               	movf	__div_to_l_@cntr,w
  6144  1051  1D03               	btfss	3,2
  6145  1052  2854               	goto	u4421
  6146  1053  2855               	goto	u4420
  6147  1054                     u4421:
  6148  1054  2856               	goto	l551
  6149  1055                     u4420:
  6150  1055  2841               	goto	l2905
  6151  1056                     l551:
  6152  1056  17F4               	bsf	__div_to_l_@f1+2,7
  6153  1057                     l2915:
  6154  1057  30FF               	movlw	255
  6155  1058  05F2               	andwf	__div_to_l_@f1,f
  6156  1059  30FF               	movlw	255
  6157  105A  05F3               	andwf	__div_to_l_@f1+1,f
  6158  105B  30FF               	movlw	255
  6159  105C  05F4               	andwf	__div_to_l_@f1+2,f
  6160  105D  3000               	movlw	0
  6161  105E  05F5               	andwf	__div_to_l_@f1+3,f
  6162  105F                     l2917:
  6163  105F  17F8               	bsf	__div_to_l_@f2+2,7
  6164  1060  30FF               	movlw	255
  6165  1061  05F6               	andwf	__div_to_l_@f2,f
  6166  1062  30FF               	movlw	255
  6167  1063  05F7               	andwf	__div_to_l_@f2+1,f
  6168  1064  30FF               	movlw	255
  6169  1065  05F8               	andwf	__div_to_l_@f2+2,f
  6170  1066  3000               	movlw	0
  6171  1067  05F9               	andwf	__div_to_l_@f2+3,f
  6172  1068  3000               	movlw	0
  6173  1069  00A3               	movwf	__div_to_l_@quot+3
  6174  106A  3000               	movlw	0
  6175  106B  00A2               	movwf	__div_to_l_@quot+2
  6176  106C  3000               	movlw	0
  6177  106D  00A1               	movwf	__div_to_l_@quot+1
  6178  106E  3000               	movlw	0
  6179  106F  00A0               	movwf	__div_to_l_@quot
  6180  1070                     l2919:
  6181  1070  307F               	movlw	127
  6182  1071  02A5               	subwf	__div_to_l_@exp1,f
  6183  1072                     l2921:
  6184  1072  30A0               	movlw	160
  6185  1073  0724               	addwf	__div_to_l_@cntr,w
  6186  1074  00FA               	movwf	??__div_to_l_
  6187  1075  087A               	movf	??__div_to_l_,w
  6188  1076  02A5               	subwf	__div_to_l_@exp1,f
  6189  1077  3020               	movlw	32
  6190  1078  00FA               	movwf	??__div_to_l_
  6191  1079  087A               	movf	??__div_to_l_,w
  6192  107A  00A4               	movwf	__div_to_l_@cntr
  6193  107B                     l2923:
  6194  107B  3001               	movlw	1
  6195  107C  00FA               	movwf	??__div_to_l_
  6196  107D                     u4435:
  6197  107D  1003               	clrc
  6198  107E  0DA0               	rlf	__div_to_l_@quot,f
  6199  107F  0DA1               	rlf	__div_to_l_@quot+1,f
  6200  1080  0DA2               	rlf	__div_to_l_@quot+2,f
  6201  1081  0DA3               	rlf	__div_to_l_@quot+3,f
  6202  1082  0BFA               	decfsz	??__div_to_l_,f
  6203  1083  287D               	goto	u4435
  6204  1084                     l2925:
  6205  1084  0879               	movf	__div_to_l_@f2+3,w
  6206  1085  0275               	subwf	__div_to_l_@f1+3,w
  6207  1086  1D03               	skipz
  6208  1087  2892               	goto	u4445
  6209  1088  0878               	movf	__div_to_l_@f2+2,w
  6210  1089  0274               	subwf	__div_to_l_@f1+2,w
  6211  108A  1D03               	skipz
  6212  108B  2892               	goto	u4445
  6213  108C  0877               	movf	__div_to_l_@f2+1,w
  6214  108D  0273               	subwf	__div_to_l_@f1+1,w
  6215  108E  1D03               	skipz
  6216  108F  2892               	goto	u4445
  6217  1090  0876               	movf	__div_to_l_@f2,w
  6218  1091  0272               	subwf	__div_to_l_@f1,w
  6219  1092                     u4445:
  6220  1092  1C03               	skipc
  6221  1093  2895               	goto	u4441
  6222  1094  2896               	goto	u4440
  6223  1095                     u4441:
  6224  1095  28A5               	goto	l2931
  6225  1096                     u4440:
  6226  1096                     l2927:
  6227  1096  0876               	movf	__div_to_l_@f2,w
  6228  1097  02F2               	subwf	__div_to_l_@f1,f
  6229  1098  0877               	movf	__div_to_l_@f2+1,w
  6230  1099  1C03               	skipc
  6231  109A  0F77               	incfsz	__div_to_l_@f2+1,w
  6232  109B  02F3               	subwf	__div_to_l_@f1+1,f
  6233  109C  0878               	movf	__div_to_l_@f2+2,w
  6234  109D  1C03               	skipc
  6235  109E  0F78               	incfsz	__div_to_l_@f2+2,w
  6236  109F  02F4               	subwf	__div_to_l_@f1+2,f
  6237  10A0  0879               	movf	__div_to_l_@f2+3,w
  6238  10A1  1C03               	skipc
  6239  10A2  0F79               	incfsz	__div_to_l_@f2+3,w
  6240  10A3  02F5               	subwf	__div_to_l_@f1+3,f
  6241  10A4                     l2929:
  6242  10A4  1420               	bsf	__div_to_l_@quot,0
  6243  10A5                     l2931:
  6244  10A5  3001               	movlw	1
  6245  10A6  00FA               	movwf	??__div_to_l_
  6246  10A7                     u4455:
  6247  10A7  1003               	clrc
  6248  10A8  0DF2               	rlf	__div_to_l_@f1,f
  6249  10A9  0DF3               	rlf	__div_to_l_@f1+1,f
  6250  10AA  0DF4               	rlf	__div_to_l_@f1+2,f
  6251  10AB  0DF5               	rlf	__div_to_l_@f1+3,f
  6252  10AC  0BFA               	decfsz	??__div_to_l_,f
  6253  10AD  28A7               	goto	u4455
  6254  10AE                     l2933:
  6255  10AE  3001               	movlw	1
  6256  10AF  02A4               	subwf	__div_to_l_@cntr,f
  6257  10B0  1D03               	btfss	3,2
  6258  10B1  28B3               	goto	u4461
  6259  10B2  28B4               	goto	u4460
  6260  10B3                     u4461:
  6261  10B3  287B               	goto	l2923
  6262  10B4                     u4460:
  6263  10B4                     l554:
  6264  10B4  1FA5               	btfss	__div_to_l_@exp1,7
  6265  10B5  28B7               	goto	u4471
  6266  10B6  28B8               	goto	u4470
  6267  10B7                     u4471:
  6268  10B7  28D2               	goto	l2943
  6269  10B8                     u4470:
  6270  10B8                     l2935:
  6271  10B8  0825               	movf	__div_to_l_@exp1,w
  6272  10B9  3A80               	xorlw	128
  6273  10BA  3E9F               	addlw	159
  6274  10BB  1803               	skipnc
  6275  10BC  28BE               	goto	u4481
  6276  10BD  28BF               	goto	u4480
  6277  10BE                     u4481:
  6278  10BE  28C0               	goto	l2941
  6279  10BF                     u4480:
  6280  10BF  2841               	goto	l2905
  6281  10C0                     l2941:
  6282  10C0  3001               	movlw	1
  6283  10C1                     u4495:
  6284  10C1  1003               	clrc
  6285  10C2  0CA3               	rrf	__div_to_l_@quot+3,f
  6286  10C3  0CA2               	rrf	__div_to_l_@quot+2,f
  6287  10C4  0CA1               	rrf	__div_to_l_@quot+1,f
  6288  10C5  0CA0               	rrf	__div_to_l_@quot,f
  6289  10C6  3EFF               	addlw	-1
  6290  10C7  1D03               	skipz
  6291  10C8  28C1               	goto	u4495
  6292  10C9  3001               	movlw	1
  6293  10CA  00FA               	movwf	??__div_to_l_
  6294  10CB  087A               	movf	??__div_to_l_,w
  6295  10CC  07A5               	addwf	__div_to_l_@exp1,f
  6296  10CD  1D03               	btfss	3,2
  6297  10CE  28D0               	goto	u4501
  6298  10CF  28D1               	goto	u4500
  6299  10D0                     u4501:
  6300  10D0  28C0               	goto	l2941
  6301  10D1                     u4500:
  6302  10D1  28E9               	goto	l2951
  6303  10D2                     l2943:
  6304  10D2  3020               	movlw	32
  6305  10D3  0225               	subwf	__div_to_l_@exp1,w
  6306  10D4  1C03               	skipc
  6307  10D5  28D7               	goto	u4511
  6308  10D6  28D8               	goto	u4510
  6309  10D7                     u4511:
  6310  10D7  28E4               	goto	l561
  6311  10D8                     u4510:
  6312  10D8  2841               	goto	l2905
  6313  10D9                     l2949:
  6314  10D9  3001               	movlw	1
  6315  10DA  00FA               	movwf	??__div_to_l_
  6316  10DB                     u4525:
  6317  10DB  1003               	clrc
  6318  10DC  0DA0               	rlf	__div_to_l_@quot,f
  6319  10DD  0DA1               	rlf	__div_to_l_@quot+1,f
  6320  10DE  0DA2               	rlf	__div_to_l_@quot+2,f
  6321  10DF  0DA3               	rlf	__div_to_l_@quot+3,f
  6322  10E0  0BFA               	decfsz	??__div_to_l_,f
  6323  10E1  28DB               	goto	u4525
  6324  10E2  3001               	movlw	1
  6325  10E3  02A5               	subwf	__div_to_l_@exp1,f
  6326  10E4                     l561:
  6327  10E4  0825               	movf	__div_to_l_@exp1,w
  6328  10E5  1D03               	btfss	3,2
  6329  10E6  28E8               	goto	u4531
  6330  10E7  28E9               	goto	u4530
  6331  10E8                     u4531:
  6332  10E8  28D9               	goto	l2949
  6333  10E9                     u4530:
  6334  10E9                     l2951:
  6335  10E9  0823               	movf	__div_to_l_@quot+3,w
  6336  10EA  00F5               	movwf	?__div_to_l_+3
  6337  10EB  0822               	movf	__div_to_l_@quot+2,w
  6338  10EC  00F4               	movwf	?__div_to_l_+2
  6339  10ED  0821               	movf	__div_to_l_@quot+1,w
  6340  10EE  00F3               	movwf	?__div_to_l_+1
  6341  10EF  0820               	movf	__div_to_l_@quot,w
  6342  10F0  00F2               	movwf	?__div_to_l_
  6343  10F1                     l550:
  6344  10F1  0008               	return
  6345  10F2                     __end_of__div_to_l_:
  6346                           
  6347                           	psect	text13
  6348  1E87                     __ptext13:	
  6349 ;; *************** function ___xxtofl *****************
  6350 ;; Defined at:
  6351 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  sign            1    wreg     unsigned char 
  6354 ;;  val             4    2[COMMON] long 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  sign            1    0[BANK0 ] unsigned char 
  6357 ;;  arg             4    2[BANK0 ] unsigned long 
  6358 ;;  exp             1    1[BANK0 ] unsigned char 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  4    2[COMMON] unsigned char 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6368 ;;      Params:         4       0       0       0       0
  6369 ;;      Locals:         0       6       0       0       0
  6370 ;;      Temps:          4       0       0       0       0
  6371 ;;      Totals:         8       6       0       0       0
  6372 ;;Total ram usage:       14 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_main
  6379 ;;		_sprintf
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           
  6384                           ;psect for function ___xxtofl
  6385  1E87                     ___xxtofl:
  6386                           
  6387                           ;incstack = 0
  6388                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6389                           ;___xxtofl@sign stored from wreg
  6390  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  6391  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  6392  1E89  00A0               	movwf	___xxtofl@sign
  6393  1E8A                     l3095:
  6394  1E8A  0820               	movf	___xxtofl@sign,w
  6395  1E8B  1903               	btfsc	3,2
  6396  1E8C  2E8E               	goto	u4921
  6397  1E8D  2E8F               	goto	u4920
  6398  1E8E                     u4921:
  6399  1E8E  2EA3               	goto	l3101
  6400  1E8F                     u4920:
  6401  1E8F                     l3097:
  6402  1E8F  1FF5               	btfss	___xxtofl@val+3,7
  6403  1E90  2E92               	goto	u4931
  6404  1E91  2E93               	goto	u4930
  6405  1E92                     u4931:
  6406  1E92  2EA3               	goto	l3101
  6407  1E93                     u4930:
  6408  1E93                     l3099:
  6409  1E93  0972               	comf	___xxtofl@val,w
  6410  1E94  00A2               	movwf	___xxtofl@arg
  6411  1E95  0973               	comf	___xxtofl@val+1,w
  6412  1E96  00A3               	movwf	___xxtofl@arg+1
  6413  1E97  0974               	comf	___xxtofl@val+2,w
  6414  1E98  00A4               	movwf	___xxtofl@arg+2
  6415  1E99  0975               	comf	___xxtofl@val+3,w
  6416  1E9A  00A5               	movwf	___xxtofl@arg+3
  6417  1E9B  0AA2               	incf	___xxtofl@arg,f
  6418  1E9C  1903               	skipnz
  6419  1E9D  0AA3               	incf	___xxtofl@arg+1,f
  6420  1E9E  1903               	skipnz
  6421  1E9F  0AA4               	incf	___xxtofl@arg+2,f
  6422  1EA0  1903               	skipnz
  6423  1EA1  0AA5               	incf	___xxtofl@arg+3,f
  6424  1EA2  2EAB               	goto	l847
  6425  1EA3                     l3101:
  6426  1EA3  0875               	movf	___xxtofl@val+3,w
  6427  1EA4  00A5               	movwf	___xxtofl@arg+3
  6428  1EA5  0874               	movf	___xxtofl@val+2,w
  6429  1EA6  00A4               	movwf	___xxtofl@arg+2
  6430  1EA7  0873               	movf	___xxtofl@val+1,w
  6431  1EA8  00A3               	movwf	___xxtofl@arg+1
  6432  1EA9  0872               	movf	___xxtofl@val,w
  6433  1EAA  00A2               	movwf	___xxtofl@arg
  6434  1EAB                     l847:
  6435  1EAB  0875               	movf	___xxtofl@val+3,w
  6436  1EAC  0474               	iorwf	___xxtofl@val+2,w
  6437  1EAD  0473               	iorwf	___xxtofl@val+1,w
  6438  1EAE  0472               	iorwf	___xxtofl@val,w
  6439  1EAF  1D03               	skipz
  6440  1EB0  2EB2               	goto	u4941
  6441  1EB1  2EB3               	goto	u4940
  6442  1EB2                     u4941:
  6443  1EB2  2EBC               	goto	l3107
  6444  1EB3                     u4940:
  6445  1EB3                     l3103:
  6446  1EB3  3000               	movlw	0
  6447  1EB4  00F5               	movwf	?___xxtofl+3
  6448  1EB5  3000               	movlw	0
  6449  1EB6  00F4               	movwf	?___xxtofl+2
  6450  1EB7  3000               	movlw	0
  6451  1EB8  00F3               	movwf	?___xxtofl+1
  6452  1EB9  3000               	movlw	0
  6453  1EBA  00F2               	movwf	?___xxtofl
  6454  1EBB  2F42               	goto	l849
  6455  1EBC                     l3107:
  6456  1EBC  3096               	movlw	150
  6457  1EBD  00F6               	movwf	??___xxtofl
  6458  1EBE  0876               	movf	??___xxtofl,w
  6459  1EBF  00A1               	movwf	___xxtofl@exp
  6460  1EC0  2ECE               	goto	l3111
  6461  1EC1                     l3109:
  6462  1EC1  3001               	movlw	1
  6463  1EC2  00F6               	movwf	??___xxtofl
  6464  1EC3  0876               	movf	??___xxtofl,w
  6465  1EC4  07A1               	addwf	___xxtofl@exp,f
  6466  1EC5  3001               	movlw	1
  6467  1EC6                     u4955:
  6468  1EC6  1003               	clrc
  6469  1EC7  0CA5               	rrf	___xxtofl@arg+3,f
  6470  1EC8  0CA4               	rrf	___xxtofl@arg+2,f
  6471  1EC9  0CA3               	rrf	___xxtofl@arg+1,f
  6472  1ECA  0CA2               	rrf	___xxtofl@arg,f
  6473  1ECB  3EFF               	addlw	-1
  6474  1ECC  1D03               	skipz
  6475  1ECD  2EC6               	goto	u4955
  6476  1ECE                     l3111:
  6477  1ECE  30FE               	movlw	254
  6478  1ECF  0525               	andwf	___xxtofl@arg+3,w
  6479  1ED0  1D03               	btfss	3,2
  6480  1ED1  2ED3               	goto	u4961
  6481  1ED2  2ED4               	goto	u4960
  6482  1ED3                     u4961:
  6483  1ED3  2EC1               	goto	l3109
  6484  1ED4                     u4960:
  6485  1ED4  2EF0               	goto	l853
  6486  1ED5                     l3113:
  6487  1ED5  3001               	movlw	1
  6488  1ED6  00F6               	movwf	??___xxtofl
  6489  1ED7  0876               	movf	??___xxtofl,w
  6490  1ED8  07A1               	addwf	___xxtofl@exp,f
  6491  1ED9                     l3115:
  6492  1ED9  3001               	movlw	1
  6493  1EDA  07A2               	addwf	___xxtofl@arg,f
  6494  1EDB  3000               	movlw	0
  6495  1EDC  1803               	skipnc
  6496  1EDD  3001               	movlw	1
  6497  1EDE  07A3               	addwf	___xxtofl@arg+1,f
  6498  1EDF  3000               	movlw	0
  6499  1EE0  1803               	skipnc
  6500  1EE1  3001               	movlw	1
  6501  1EE2  07A4               	addwf	___xxtofl@arg+2,f
  6502  1EE3  3000               	movlw	0
  6503  1EE4  1803               	skipnc
  6504  1EE5  3001               	movlw	1
  6505  1EE6  07A5               	addwf	___xxtofl@arg+3,f
  6506  1EE7                     l3117:
  6507  1EE7  3001               	movlw	1
  6508  1EE8                     u4975:
  6509  1EE8  1003               	clrc
  6510  1EE9  0CA5               	rrf	___xxtofl@arg+3,f
  6511  1EEA  0CA4               	rrf	___xxtofl@arg+2,f
  6512  1EEB  0CA3               	rrf	___xxtofl@arg+1,f
  6513  1EEC  0CA2               	rrf	___xxtofl@arg,f
  6514  1EED  3EFF               	addlw	-1
  6515  1EEE  1D03               	skipz
  6516  1EEF  2EE8               	goto	u4975
  6517  1EF0                     l853:
  6518  1EF0  30FF               	movlw	255
  6519  1EF1  0525               	andwf	___xxtofl@arg+3,w
  6520  1EF2  1D03               	btfss	3,2
  6521  1EF3  2EF5               	goto	u4981
  6522  1EF4  2EF6               	goto	u4980
  6523  1EF5                     u4981:
  6524  1EF5  2ED5               	goto	l3113
  6525  1EF6                     u4980:
  6526  1EF6  2F02               	goto	l3121
  6527  1EF7                     l3119:
  6528  1EF7  3001               	movlw	1
  6529  1EF8  02A1               	subwf	___xxtofl@exp,f
  6530  1EF9  3001               	movlw	1
  6531  1EFA  00F6               	movwf	??___xxtofl
  6532  1EFB                     u4995:
  6533  1EFB  1003               	clrc
  6534  1EFC  0DA2               	rlf	___xxtofl@arg,f
  6535  1EFD  0DA3               	rlf	___xxtofl@arg+1,f
  6536  1EFE  0DA4               	rlf	___xxtofl@arg+2,f
  6537  1EFF  0DA5               	rlf	___xxtofl@arg+3,f
  6538  1F00  0BF6               	decfsz	??___xxtofl,f
  6539  1F01  2EFB               	goto	u4995
  6540  1F02                     l3121:
  6541  1F02  1BA4               	btfsc	___xxtofl@arg+2,7
  6542  1F03  2F05               	goto	u5001
  6543  1F04  2F06               	goto	u5000
  6544  1F05                     u5001:
  6545  1F05  2F0C               	goto	l860
  6546  1F06                     u5000:
  6547  1F06                     l3123:
  6548  1F06  3002               	movlw	2
  6549  1F07  0221               	subwf	___xxtofl@exp,w
  6550  1F08  1803               	skipnc
  6551  1F09  2F0B               	goto	u5011
  6552  1F0A  2F0C               	goto	u5010
  6553  1F0B                     u5011:
  6554  1F0B  2EF7               	goto	l3119
  6555  1F0C                     u5010:
  6556  1F0C                     l860:
  6557  1F0C  1821               	btfsc	___xxtofl@exp,0
  6558  1F0D  2F0F               	goto	u5021
  6559  1F0E  2F10               	goto	u5020
  6560  1F0F                     u5021:
  6561  1F0F  2F18               	goto	l861
  6562  1F10                     u5020:
  6563  1F10                     l3125:
  6564  1F10  30FF               	movlw	255
  6565  1F11  05A2               	andwf	___xxtofl@arg,f
  6566  1F12  30FF               	movlw	255
  6567  1F13  05A3               	andwf	___xxtofl@arg+1,f
  6568  1F14  307F               	movlw	127
  6569  1F15  05A4               	andwf	___xxtofl@arg+2,f
  6570  1F16  30FF               	movlw	255
  6571  1F17  05A5               	andwf	___xxtofl@arg+3,f
  6572  1F18                     l861:
  6573  1F18  1003               	clrc
  6574  1F19  0CA1               	rrf	___xxtofl@exp,f
  6575  1F1A                     l3127:
  6576  1F1A  0821               	movf	___xxtofl@exp,w
  6577  1F1B  00F6               	movwf	??___xxtofl
  6578  1F1C  01F7               	clrf	??___xxtofl+1
  6579  1F1D  01F8               	clrf	??___xxtofl+2
  6580  1F1E  01F9               	clrf	??___xxtofl+3
  6581  1F1F  3018               	movlw	24
  6582  1F20                     u5035:
  6583  1F20  1003               	clrc
  6584  1F21  0DF6               	rlf	??___xxtofl,f
  6585  1F22  0DF7               	rlf	??___xxtofl+1,f
  6586  1F23  0DF8               	rlf	??___xxtofl+2,f
  6587  1F24  0DF9               	rlf	??___xxtofl+3,f
  6588  1F25                     u5030:
  6589  1F25  3EFF               	addlw	-1
  6590  1F26  1D03               	skipz
  6591  1F27  2F20               	goto	u5035
  6592  1F28  0876               	movf	??___xxtofl,w
  6593  1F29  04A2               	iorwf	___xxtofl@arg,f
  6594  1F2A  0877               	movf	??___xxtofl+1,w
  6595  1F2B  04A3               	iorwf	___xxtofl@arg+1,f
  6596  1F2C  0878               	movf	??___xxtofl+2,w
  6597  1F2D  04A4               	iorwf	___xxtofl@arg+2,f
  6598  1F2E  0879               	movf	??___xxtofl+3,w
  6599  1F2F  04A5               	iorwf	___xxtofl@arg+3,f
  6600  1F30                     l3129:
  6601  1F30  0820               	movf	___xxtofl@sign,w
  6602  1F31  1903               	btfsc	3,2
  6603  1F32  2F34               	goto	u5041
  6604  1F33  2F35               	goto	u5040
  6605  1F34                     u5041:
  6606  1F34  2F3A               	goto	l3135
  6607  1F35                     u5040:
  6608  1F35                     l3131:
  6609  1F35  1FF5               	btfss	___xxtofl@val+3,7
  6610  1F36  2F38               	goto	u5051
  6611  1F37  2F39               	goto	u5050
  6612  1F38                     u5051:
  6613  1F38  2F3A               	goto	l3135
  6614  1F39                     u5050:
  6615  1F39                     l3133:
  6616  1F39  17A5               	bsf	___xxtofl@arg+3,7
  6617  1F3A                     l3135:
  6618  1F3A  0825               	movf	___xxtofl@arg+3,w
  6619  1F3B  00F5               	movwf	?___xxtofl+3
  6620  1F3C  0824               	movf	___xxtofl@arg+2,w
  6621  1F3D  00F4               	movwf	?___xxtofl+2
  6622  1F3E  0823               	movf	___xxtofl@arg+1,w
  6623  1F3F  00F3               	movwf	?___xxtofl+1
  6624  1F40  0822               	movf	___xxtofl@arg,w
  6625  1F41  00F2               	movwf	?___xxtofl
  6626  1F42                     l849:
  6627  1F42  0008               	return
  6628  1F43                     __end_of___xxtofl:
  6629                           
  6630                           	psect	text14
  6631  1A59                     __ptext14:	
  6632 ;; *************** function ___wmul *****************
  6633 ;; Defined at:
  6634 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  multiplier      2    2[COMMON] unsigned int 
  6637 ;;  multiplicand    2    4[COMMON] unsigned int 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  product         2    6[COMMON] unsigned int 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  2    2[COMMON] unsigned int 
  6642 ;; Registers used:
  6643 ;;		wreg, status,2, status,0
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6649 ;;      Params:         4       0       0       0       0
  6650 ;;      Locals:         2       0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0
  6652 ;;      Totals:         6       0       0       0       0
  6653 ;;Total ram usage:        6 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    1
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		_sprintf
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           
  6664                           ;psect for function ___wmul
  6665  1A59                     ___wmul:
  6666  1A59                     l2955:	
  6667                           ;incstack = 0
  6668                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6669                           
  6670  1A59  01F6               	clrf	___wmul@product
  6671  1A5A  01F7               	clrf	___wmul@product+1
  6672  1A5B                     l2957:
  6673  1A5B  1C72               	btfss	___wmul@multiplier,0
  6674  1A5C  2A5E               	goto	u4541
  6675  1A5D  2A5F               	goto	u4540
  6676  1A5E                     u4541:
  6677  1A5E  2A65               	goto	l380
  6678  1A5F                     u4540:
  6679  1A5F                     l2959:
  6680  1A5F  0874               	movf	___wmul@multiplicand,w
  6681  1A60  07F6               	addwf	___wmul@product,f
  6682  1A61  1803               	skipnc
  6683  1A62  0AF7               	incf	___wmul@product+1,f
  6684  1A63  0875               	movf	___wmul@multiplicand+1,w
  6685  1A64  07F7               	addwf	___wmul@product+1,f
  6686  1A65                     l380:
  6687  1A65  3001               	movlw	1
  6688  1A66                     u4555:
  6689  1A66  1003               	clrc
  6690  1A67  0DF4               	rlf	___wmul@multiplicand,f
  6691  1A68  0DF5               	rlf	___wmul@multiplicand+1,f
  6692  1A69  3EFF               	addlw	-1
  6693  1A6A  1D03               	skipz
  6694  1A6B  2A66               	goto	u4555
  6695  1A6C                     l2961:
  6696  1A6C  3001               	movlw	1
  6697  1A6D                     u4565:
  6698  1A6D  1003               	clrc
  6699  1A6E  0CF3               	rrf	___wmul@multiplier+1,f
  6700  1A6F  0CF2               	rrf	___wmul@multiplier,f
  6701  1A70  3EFF               	addlw	-1
  6702  1A71  1D03               	skipz
  6703  1A72  2A6D               	goto	u4565
  6704  1A73                     l2963:
  6705  1A73  0872               	movf	___wmul@multiplier,w
  6706  1A74  0473               	iorwf	___wmul@multiplier+1,w
  6707  1A75  1D03               	btfss	3,2
  6708  1A76  2A78               	goto	u4571
  6709  1A77  2A79               	goto	u4570
  6710  1A78                     u4571:
  6711  1A78  2A5B               	goto	l2957
  6712  1A79                     u4570:
  6713  1A79                     l2965:
  6714  1A79  0877               	movf	___wmul@product+1,w
  6715  1A7A  00F3               	movwf	?___wmul+1
  6716  1A7B  0876               	movf	___wmul@product,w
  6717  1A7C  00F2               	movwf	?___wmul
  6718  1A7D                     l382:
  6719  1A7D  0008               	return
  6720  1A7E                     __end_of___wmul:
  6721                           
  6722                           	psect	text15
  6723  1C40                     __ptext15:	
  6724 ;; *************** function ___llmod *****************
  6725 ;; Defined at:
  6726 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  divisor         4    2[COMMON] unsigned long 
  6729 ;;  dividend        4    6[COMMON] unsigned long 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;  counter         1    0[BANK0 ] unsigned char 
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  4    2[COMMON] unsigned long 
  6734 ;; Registers used:
  6735 ;;		wreg, status,2, status,0
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6741 ;;      Params:         8       0       0       0       0
  6742 ;;      Locals:         0       1       0       0       0
  6743 ;;      Temps:          1       0       0       0       0
  6744 ;;      Totals:         9       1       0       0       0
  6745 ;;Total ram usage:       10 bytes
  6746 ;; Hardware stack levels used:    1
  6747 ;; Hardware stack levels required when called:    1
  6748 ;; This function calls:
  6749 ;;		Nothing
  6750 ;; This function is called by:
  6751 ;;		_sprintf
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           
  6756                           ;psect for function ___llmod
  6757  1C40                     ___llmod:
  6758  1C40                     l3637:	
  6759                           ;incstack = 0
  6760                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6761                           
  6762  1C40  0875               	movf	___llmod@divisor+3,w
  6763  1C41  0474               	iorwf	___llmod@divisor+2,w
  6764  1C42  0473               	iorwf	___llmod@divisor+1,w
  6765  1C43  0472               	iorwf	___llmod@divisor,w
  6766  1C44  1903               	skipnz
  6767  1C45  2C47               	goto	u5771
  6768  1C46  2C48               	goto	u5770
  6769  1C47                     u5771:
  6770  1C47  2C8D               	goto	l3653
  6771  1C48                     u5770:
  6772  1C48                     l3639:
  6773  1C48  1283               	bcf	3,5	;RP0=0, select bank0
  6774  1C49  1303               	bcf	3,6	;RP1=0, select bank0
  6775  1C4A  01A0               	clrf	___llmod@counter
  6776  1C4B  0AA0               	incf	___llmod@counter,f
  6777  1C4C  2C5A               	goto	l3643
  6778  1C4D                     l3641:
  6779  1C4D  3001               	movlw	1
  6780  1C4E  00FA               	movwf	??___llmod
  6781  1C4F                     u5785:
  6782  1C4F  1003               	clrc
  6783  1C50  0DF2               	rlf	___llmod@divisor,f
  6784  1C51  0DF3               	rlf	___llmod@divisor+1,f
  6785  1C52  0DF4               	rlf	___llmod@divisor+2,f
  6786  1C53  0DF5               	rlf	___llmod@divisor+3,f
  6787  1C54  0BFA               	decfsz	??___llmod,f
  6788  1C55  2C4F               	goto	u5785
  6789  1C56  3001               	movlw	1
  6790  1C57  00FA               	movwf	??___llmod
  6791  1C58  087A               	movf	??___llmod,w
  6792  1C59  07A0               	addwf	___llmod@counter,f
  6793  1C5A                     l3643:
  6794  1C5A  1FF5               	btfss	___llmod@divisor+3,7
  6795  1C5B  2C5D               	goto	u5791
  6796  1C5C  2C5E               	goto	u5790
  6797  1C5D                     u5791:
  6798  1C5D  2C4D               	goto	l3641
  6799  1C5E                     u5790:
  6800  1C5E                     l3645:
  6801  1C5E  0875               	movf	___llmod@divisor+3,w
  6802  1C5F  0279               	subwf	___llmod@dividend+3,w
  6803  1C60  1D03               	skipz
  6804  1C61  2C6C               	goto	u5805
  6805  1C62  0874               	movf	___llmod@divisor+2,w
  6806  1C63  0278               	subwf	___llmod@dividend+2,w
  6807  1C64  1D03               	skipz
  6808  1C65  2C6C               	goto	u5805
  6809  1C66  0873               	movf	___llmod@divisor+1,w
  6810  1C67  0277               	subwf	___llmod@dividend+1,w
  6811  1C68  1D03               	skipz
  6812  1C69  2C6C               	goto	u5805
  6813  1C6A  0872               	movf	___llmod@divisor,w
  6814  1C6B  0276               	subwf	___llmod@dividend,w
  6815  1C6C                     u5805:
  6816  1C6C  1C03               	skipc
  6817  1C6D  2C6F               	goto	u5801
  6818  1C6E  2C70               	goto	u5800
  6819  1C6F                     u5801:
  6820  1C6F  2C7E               	goto	l3649
  6821  1C70                     u5800:
  6822  1C70                     l3647:
  6823  1C70  0872               	movf	___llmod@divisor,w
  6824  1C71  02F6               	subwf	___llmod@dividend,f
  6825  1C72  0873               	movf	___llmod@divisor+1,w
  6826  1C73  1C03               	skipc
  6827  1C74  0F73               	incfsz	___llmod@divisor+1,w
  6828  1C75  02F7               	subwf	___llmod@dividend+1,f
  6829  1C76  0874               	movf	___llmod@divisor+2,w
  6830  1C77  1C03               	skipc
  6831  1C78  0F74               	incfsz	___llmod@divisor+2,w
  6832  1C79  02F8               	subwf	___llmod@dividend+2,f
  6833  1C7A  0875               	movf	___llmod@divisor+3,w
  6834  1C7B  1C03               	skipc
  6835  1C7C  0F75               	incfsz	___llmod@divisor+3,w
  6836  1C7D  02F9               	subwf	___llmod@dividend+3,f
  6837  1C7E                     l3649:
  6838  1C7E  3001               	movlw	1
  6839  1C7F                     u5815:
  6840  1C7F  1003               	clrc
  6841  1C80  0CF5               	rrf	___llmod@divisor+3,f
  6842  1C81  0CF4               	rrf	___llmod@divisor+2,f
  6843  1C82  0CF3               	rrf	___llmod@divisor+1,f
  6844  1C83  0CF2               	rrf	___llmod@divisor,f
  6845  1C84  3EFF               	addlw	-1
  6846  1C85  1D03               	skipz
  6847  1C86  2C7F               	goto	u5815
  6848  1C87                     l3651:
  6849  1C87  3001               	movlw	1
  6850  1C88  02A0               	subwf	___llmod@counter,f
  6851  1C89  1D03               	btfss	3,2
  6852  1C8A  2C8C               	goto	u5821
  6853  1C8B  2C8D               	goto	u5820
  6854  1C8C                     u5821:
  6855  1C8C  2C5E               	goto	l3645
  6856  1C8D                     u5820:
  6857  1C8D                     l3653:
  6858  1C8D  0879               	movf	___llmod@dividend+3,w
  6859  1C8E  00F5               	movwf	?___llmod+3
  6860  1C8F  0878               	movf	___llmod@dividend+2,w
  6861  1C90  00F4               	movwf	?___llmod+2
  6862  1C91  0877               	movf	___llmod@dividend+1,w
  6863  1C92  00F3               	movwf	?___llmod+1
  6864  1C93  0876               	movf	___llmod@dividend,w
  6865  1C94  00F2               	movwf	?___llmod
  6866  1C95                     l636:
  6867  1C95  0008               	return
  6868  1C96                     __end_of___llmod:
  6869                           
  6870                           	psect	text16
  6871  1C96                     __ptext16:	
  6872 ;; *************** function ___lldiv *****************
  6873 ;; Defined at:
  6874 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  divisor         4    2[COMMON] unsigned long 
  6877 ;;  dividend        4    6[COMMON] unsigned long 
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;  quotient        4    0[BANK0 ] unsigned long 
  6880 ;;  counter         1    4[BANK0 ] unsigned char 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  4    2[COMMON] unsigned long 
  6883 ;; Registers used:
  6884 ;;		wreg, status,2, status,0
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6890 ;;      Params:         8       0       0       0       0
  6891 ;;      Locals:         0       5       0       0       0
  6892 ;;      Temps:          1       0       0       0       0
  6893 ;;      Totals:         9       5       0       0       0
  6894 ;;Total ram usage:       14 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:    1
  6897 ;; This function calls:
  6898 ;;		Nothing
  6899 ;; This function is called by:
  6900 ;;		_sprintf
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           
  6905                           ;psect for function ___lldiv
  6906  1C96                     ___lldiv:
  6907  1C96                     l2969:	
  6908                           ;incstack = 0
  6909                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6910                           
  6911  1C96  3000               	movlw	0
  6912  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  6913  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  6914  1C99  00A3               	movwf	___lldiv@quotient+3
  6915  1C9A  3000               	movlw	0
  6916  1C9B  00A2               	movwf	___lldiv@quotient+2
  6917  1C9C  3000               	movlw	0
  6918  1C9D  00A1               	movwf	___lldiv@quotient+1
  6919  1C9E  3000               	movlw	0
  6920  1C9F  00A0               	movwf	___lldiv@quotient
  6921  1CA0  0875               	movf	___lldiv@divisor+3,w
  6922  1CA1  0474               	iorwf	___lldiv@divisor+2,w
  6923  1CA2  0473               	iorwf	___lldiv@divisor+1,w
  6924  1CA3  0472               	iorwf	___lldiv@divisor,w
  6925  1CA4  1903               	skipnz
  6926  1CA5  2CA7               	goto	u4581
  6927  1CA6  2CA8               	goto	u4580
  6928  1CA7                     u4581:
  6929  1CA7  2CF5               	goto	l2989
  6930  1CA8                     u4580:
  6931  1CA8                     l2971:
  6932  1CA8  01A4               	clrf	___lldiv@counter
  6933  1CA9  0AA4               	incf	___lldiv@counter,f
  6934  1CAA  2CB8               	goto	l2975
  6935  1CAB                     l2973:
  6936  1CAB  3001               	movlw	1
  6937  1CAC  00FA               	movwf	??___lldiv
  6938  1CAD                     u4595:
  6939  1CAD  1003               	clrc
  6940  1CAE  0DF2               	rlf	___lldiv@divisor,f
  6941  1CAF  0DF3               	rlf	___lldiv@divisor+1,f
  6942  1CB0  0DF4               	rlf	___lldiv@divisor+2,f
  6943  1CB1  0DF5               	rlf	___lldiv@divisor+3,f
  6944  1CB2  0BFA               	decfsz	??___lldiv,f
  6945  1CB3  2CAD               	goto	u4595
  6946  1CB4  3001               	movlw	1
  6947  1CB5  00FA               	movwf	??___lldiv
  6948  1CB6  087A               	movf	??___lldiv,w
  6949  1CB7  07A4               	addwf	___lldiv@counter,f
  6950  1CB8                     l2975:
  6951  1CB8  1FF5               	btfss	___lldiv@divisor+3,7
  6952  1CB9  2CBB               	goto	u4601
  6953  1CBA  2CBC               	goto	u4600
  6954  1CBB                     u4601:
  6955  1CBB  2CAB               	goto	l2973
  6956  1CBC                     u4600:
  6957  1CBC                     l2977:
  6958  1CBC  3001               	movlw	1
  6959  1CBD  00FA               	movwf	??___lldiv
  6960  1CBE                     u4615:
  6961  1CBE  1003               	clrc
  6962  1CBF  0DA0               	rlf	___lldiv@quotient,f
  6963  1CC0  0DA1               	rlf	___lldiv@quotient+1,f
  6964  1CC1  0DA2               	rlf	___lldiv@quotient+2,f
  6965  1CC2  0DA3               	rlf	___lldiv@quotient+3,f
  6966  1CC3  0BFA               	decfsz	??___lldiv,f
  6967  1CC4  2CBE               	goto	u4615
  6968  1CC5                     l2979:
  6969  1CC5  0875               	movf	___lldiv@divisor+3,w
  6970  1CC6  0279               	subwf	___lldiv@dividend+3,w
  6971  1CC7  1D03               	skipz
  6972  1CC8  2CD3               	goto	u4625
  6973  1CC9  0874               	movf	___lldiv@divisor+2,w
  6974  1CCA  0278               	subwf	___lldiv@dividend+2,w
  6975  1CCB  1D03               	skipz
  6976  1CCC  2CD3               	goto	u4625
  6977  1CCD  0873               	movf	___lldiv@divisor+1,w
  6978  1CCE  0277               	subwf	___lldiv@dividend+1,w
  6979  1CCF  1D03               	skipz
  6980  1CD0  2CD3               	goto	u4625
  6981  1CD1  0872               	movf	___lldiv@divisor,w
  6982  1CD2  0276               	subwf	___lldiv@dividend,w
  6983  1CD3                     u4625:
  6984  1CD3  1C03               	skipc
  6985  1CD4  2CD6               	goto	u4621
  6986  1CD5  2CD7               	goto	u4620
  6987  1CD6                     u4621:
  6988  1CD6  2CE6               	goto	l2985
  6989  1CD7                     u4620:
  6990  1CD7                     l2981:
  6991  1CD7  0872               	movf	___lldiv@divisor,w
  6992  1CD8  02F6               	subwf	___lldiv@dividend,f
  6993  1CD9  0873               	movf	___lldiv@divisor+1,w
  6994  1CDA  1C03               	skipc
  6995  1CDB  0F73               	incfsz	___lldiv@divisor+1,w
  6996  1CDC  02F7               	subwf	___lldiv@dividend+1,f
  6997  1CDD  0874               	movf	___lldiv@divisor+2,w
  6998  1CDE  1C03               	skipc
  6999  1CDF  0F74               	incfsz	___lldiv@divisor+2,w
  7000  1CE0  02F8               	subwf	___lldiv@dividend+2,f
  7001  1CE1  0875               	movf	___lldiv@divisor+3,w
  7002  1CE2  1C03               	skipc
  7003  1CE3  0F75               	incfsz	___lldiv@divisor+3,w
  7004  1CE4  02F9               	subwf	___lldiv@dividend+3,f
  7005  1CE5                     l2983:
  7006  1CE5  1420               	bsf	___lldiv@quotient,0
  7007  1CE6                     l2985:
  7008  1CE6  3001               	movlw	1
  7009  1CE7                     u4635:
  7010  1CE7  1003               	clrc
  7011  1CE8  0CF5               	rrf	___lldiv@divisor+3,f
  7012  1CE9  0CF4               	rrf	___lldiv@divisor+2,f
  7013  1CEA  0CF3               	rrf	___lldiv@divisor+1,f
  7014  1CEB  0CF2               	rrf	___lldiv@divisor,f
  7015  1CEC  3EFF               	addlw	-1
  7016  1CED  1D03               	skipz
  7017  1CEE  2CE7               	goto	u4635
  7018  1CEF                     l2987:
  7019  1CEF  3001               	movlw	1
  7020  1CF0  02A4               	subwf	___lldiv@counter,f
  7021  1CF1  1D03               	btfss	3,2
  7022  1CF2  2CF4               	goto	u4641
  7023  1CF3  2CF5               	goto	u4640
  7024  1CF4                     u4641:
  7025  1CF4  2CBC               	goto	l2977
  7026  1CF5                     u4640:
  7027  1CF5                     l2989:
  7028  1CF5  0823               	movf	___lldiv@quotient+3,w
  7029  1CF6  00F5               	movwf	?___lldiv+3
  7030  1CF7  0822               	movf	___lldiv@quotient+2,w
  7031  1CF8  00F4               	movwf	?___lldiv+2
  7032  1CF9  0821               	movf	___lldiv@quotient+1,w
  7033  1CFA  00F3               	movwf	?___lldiv+1
  7034  1CFB  0820               	movf	___lldiv@quotient,w
  7035  1CFC  00F2               	movwf	?___lldiv
  7036  1CFD                     l416:
  7037  1CFD  0008               	return
  7038  1CFE                     __end_of___lldiv:
  7039                           
  7040                           	psect	text17
  7041  1D67                     __ptext17:	
  7042 ;; *************** function ___fltol *****************
  7043 ;; Defined at:
  7044 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  f1              4   53[BANK0 ] unsigned long 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  exp1            1   63[BANK0 ] unsigned char 
  7049 ;;  sign1           1   62[BANK0 ] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  4   53[BANK0 ] long 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7059 ;;      Params:         0       4       0       0       0
  7060 ;;      Locals:         0       2       0       0       0
  7061 ;;      Temps:          0       5       0       0       0
  7062 ;;      Totals:         0      11       0       0       0
  7063 ;;Total ram usage:       11 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    1
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_sprintf
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           
  7074                           ;psect for function ___fltol
  7075  1D67                     ___fltol:
  7076  1D67                     l3033:	
  7077                           ;incstack = 0
  7078                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7079                           
  7080  1D67  1003               	clrc
  7081  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  7082  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  7083  1D6A  0D57               	rlf	___fltol@f1+2,w
  7084  1D6B  0D58               	rlf	___fltol@f1+3,w
  7085  1D6C  00D9               	movwf	??___fltol
  7086  1D6D  0859               	movf	??___fltol,w
  7087  1D6E  00DF               	movwf	___fltol@exp1
  7088  1D6F  085F               	movf	___fltol@exp1,w
  7089  1D70  1D03               	btfss	3,2
  7090  1D71  2D73               	goto	u4761
  7091  1D72  2D74               	goto	u4760
  7092  1D73                     u4761:
  7093  1D73  2D7D               	goto	l3039
  7094  1D74                     u4760:
  7095  1D74                     l3035:
  7096  1D74  3000               	movlw	0
  7097  1D75  00D8               	movwf	?___fltol+3
  7098  1D76  3000               	movlw	0
  7099  1D77  00D7               	movwf	?___fltol+2
  7100  1D78  3000               	movlw	0
  7101  1D79  00D6               	movwf	?___fltol+1
  7102  1D7A  3000               	movlw	0
  7103  1D7B  00D5               	movwf	?___fltol
  7104  1D7C  2DE2               	goto	l583
  7105  1D7D                     l3039:
  7106  1D7D  0855               	movf	___fltol@f1,w
  7107  1D7E  00D9               	movwf	??___fltol
  7108  1D7F  0856               	movf	___fltol@f1+1,w
  7109  1D80  00DA               	movwf	??___fltol+1
  7110  1D81  0857               	movf	___fltol@f1+2,w
  7111  1D82  00DB               	movwf	??___fltol+2
  7112  1D83  0858               	movf	___fltol@f1+3,w
  7113  1D84  00DC               	movwf	??___fltol+3
  7114  1D85  301F               	movlw	31
  7115  1D86                     u4775:
  7116  1D86  1003               	clrc
  7117  1D87  0CDC               	rrf	??___fltol+3,f
  7118  1D88  0CDB               	rrf	??___fltol+2,f
  7119  1D89  0CDA               	rrf	??___fltol+1,f
  7120  1D8A  0CD9               	rrf	??___fltol,f
  7121  1D8B                     u4770:
  7122  1D8B  3EFF               	addlw	-1
  7123  1D8C  1D03               	skipz
  7124  1D8D  2D86               	goto	u4775
  7125  1D8E  0859               	movf	??___fltol,w
  7126  1D8F  00DD               	movwf	??___fltol+4
  7127  1D90  085D               	movf	??___fltol+4,w
  7128  1D91  00DE               	movwf	___fltol@sign1
  7129  1D92                     l3041:
  7130  1D92  17D7               	bsf	___fltol@f1+2,7
  7131  1D93                     l3043:
  7132  1D93  30FF               	movlw	255
  7133  1D94  05D5               	andwf	___fltol@f1,f
  7134  1D95  30FF               	movlw	255
  7135  1D96  05D6               	andwf	___fltol@f1+1,f
  7136  1D97  30FF               	movlw	255
  7137  1D98  05D7               	andwf	___fltol@f1+2,f
  7138  1D99  3000               	movlw	0
  7139  1D9A  05D8               	andwf	___fltol@f1+3,f
  7140  1D9B                     l3045:
  7141  1D9B  3096               	movlw	150
  7142  1D9C  02DF               	subwf	___fltol@exp1,f
  7143  1D9D                     l3047:
  7144  1D9D  1FDF               	btfss	___fltol@exp1,7
  7145  1D9E  2DA0               	goto	u4781
  7146  1D9F  2DA1               	goto	u4780
  7147  1DA0                     u4781:
  7148  1DA0  2DBB               	goto	l3057
  7149  1DA1                     u4780:
  7150  1DA1                     l3049:
  7151  1DA1  085F               	movf	___fltol@exp1,w
  7152  1DA2  3A80               	xorlw	128
  7153  1DA3  3E97               	addlw	151
  7154  1DA4  1803               	skipnc
  7155  1DA5  2DA7               	goto	u4791
  7156  1DA6  2DA8               	goto	u4790
  7157  1DA7                     u4791:
  7158  1DA7  2DA9               	goto	l3055
  7159  1DA8                     u4790:
  7160  1DA8  2D74               	goto	l3035
  7161  1DA9                     l3055:
  7162  1DA9  3001               	movlw	1
  7163  1DAA                     u4805:
  7164  1DAA  1003               	clrc
  7165  1DAB  0CD8               	rrf	___fltol@f1+3,f
  7166  1DAC  0CD7               	rrf	___fltol@f1+2,f
  7167  1DAD  0CD6               	rrf	___fltol@f1+1,f
  7168  1DAE  0CD5               	rrf	___fltol@f1,f
  7169  1DAF  3EFF               	addlw	-1
  7170  1DB0  1D03               	skipz
  7171  1DB1  2DAA               	goto	u4805
  7172  1DB2  3001               	movlw	1
  7173  1DB3  00D9               	movwf	??___fltol
  7174  1DB4  0859               	movf	??___fltol,w
  7175  1DB5  07DF               	addwf	___fltol@exp1,f
  7176  1DB6  1D03               	btfss	3,2
  7177  1DB7  2DB9               	goto	u4811
  7178  1DB8  2DBA               	goto	u4810
  7179  1DB9                     u4811:
  7180  1DB9  2DA9               	goto	l3055
  7181  1DBA                     u4810:
  7182  1DBA  2DD2               	goto	l3065
  7183  1DBB                     l3057:
  7184  1DBB  3020               	movlw	32
  7185  1DBC  025F               	subwf	___fltol@exp1,w
  7186  1DBD  1C03               	skipc
  7187  1DBE  2DC0               	goto	u4821
  7188  1DBF  2DC1               	goto	u4820
  7189  1DC0                     u4821:
  7190  1DC0  2DCD               	goto	l590
  7191  1DC1                     u4820:
  7192  1DC1  2D74               	goto	l3035
  7193  1DC2                     l3063:
  7194  1DC2  3001               	movlw	1
  7195  1DC3  00D9               	movwf	??___fltol
  7196  1DC4                     u4835:
  7197  1DC4  1003               	clrc
  7198  1DC5  0DD5               	rlf	___fltol@f1,f
  7199  1DC6  0DD6               	rlf	___fltol@f1+1,f
  7200  1DC7  0DD7               	rlf	___fltol@f1+2,f
  7201  1DC8  0DD8               	rlf	___fltol@f1+3,f
  7202  1DC9  0BD9               	decfsz	??___fltol,f
  7203  1DCA  2DC4               	goto	u4835
  7204  1DCB  3001               	movlw	1
  7205  1DCC  02DF               	subwf	___fltol@exp1,f
  7206  1DCD                     l590:
  7207  1DCD  085F               	movf	___fltol@exp1,w
  7208  1DCE  1D03               	btfss	3,2
  7209  1DCF  2DD1               	goto	u4841
  7210  1DD0  2DD2               	goto	u4840
  7211  1DD1                     u4841:
  7212  1DD1  2DC2               	goto	l3063
  7213  1DD2                     u4840:
  7214  1DD2                     l3065:
  7215  1DD2  085E               	movf	___fltol@sign1,w
  7216  1DD3  1903               	btfsc	3,2
  7217  1DD4  2DD6               	goto	u4851
  7218  1DD5  2DD7               	goto	u4850
  7219  1DD6                     u4851:
  7220  1DD6  2DE2               	goto	l593
  7221  1DD7                     u4850:
  7222  1DD7                     l3067:
  7223  1DD7  09D5               	comf	___fltol@f1,f
  7224  1DD8  09D6               	comf	___fltol@f1+1,f
  7225  1DD9  09D7               	comf	___fltol@f1+2,f
  7226  1DDA  09D8               	comf	___fltol@f1+3,f
  7227  1DDB  0AD5               	incf	___fltol@f1,f
  7228  1DDC  1903               	skipnz
  7229  1DDD  0AD6               	incf	___fltol@f1+1,f
  7230  1DDE  1903               	skipnz
  7231  1DDF  0AD7               	incf	___fltol@f1+2,f
  7232  1DE0  1903               	skipnz
  7233  1DE1  0AD8               	incf	___fltol@f1+3,f
  7234  1DE2                     l593:
  7235  1DE2                     l583:
  7236  1DE2  0008               	return
  7237  1DE3                     __end_of___fltol:
  7238                           
  7239                           	psect	text18
  7240  07AF                     __ptext18:	
  7241 ;; *************** function ___flsub *****************
  7242 ;; Defined at:
  7243 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  a               4    0[BANK1 ] long 
  7246 ;;  b               4    4[BANK1 ] long 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  4    0[BANK1 ] long 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7258 ;;      Params:         0       0       8       0       0
  7259 ;;      Locals:         0       0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0
  7261 ;;      Totals:         0       0       8       0       0
  7262 ;;Total ram usage:        8 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    2
  7265 ;; This function calls:
  7266 ;;		___fladd
  7267 ;; This function is called by:
  7268 ;;		_sprintf
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           
  7273                           ;psect for function ___flsub
  7274  07AF                     ___flsub:
  7275  07AF                     l3089:	
  7276                           ;incstack = 0
  7277                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7278                           
  7279  07AF  3080               	movlw	128
  7280  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  7281  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  7282  07B2  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7283  07B3                     l3091:
  7284  07B3  0827               	movf	(___flsub@b+3)^(0+128),w
  7285  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  7286  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  7287  07B6  00D9               	movwf	___fladd@b+3
  7288  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  7289  07B8  1303               	bcf	3,6	;RP1=0, select bank1
  7290  07B9  0826               	movf	(___flsub@b+2)^(0+128),w
  7291  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  7292  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  7293  07BC  00D8               	movwf	___fladd@b+2
  7294  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  7295  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  7296  07BF  0825               	movf	(___flsub@b+1)^(0+128),w
  7297  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  7298  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  7299  07C2  00D7               	movwf	___fladd@b+1
  7300  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  7301  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  7302  07C5  0824               	movf	___flsub@b^(0+128),w
  7303  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  7304  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  7305  07C8  00D6               	movwf	___fladd@b
  7306  07C9  1683               	bsf	3,5	;RP0=1, select bank1
  7307  07CA  1303               	bcf	3,6	;RP1=0, select bank1
  7308  07CB  0823               	movf	(___flsub@a+3)^(0+128),w
  7309  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  7310  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  7311  07CE  00DD               	movwf	___fladd@a+3
  7312  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  7313  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  7314  07D1  0822               	movf	(___flsub@a+2)^(0+128),w
  7315  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  7316  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  7317  07D4  00DC               	movwf	___fladd@a+2
  7318  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  7319  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  7320  07D7  0821               	movf	(___flsub@a+1)^(0+128),w
  7321  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  7322  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  7323  07DA  00DB               	movwf	___fladd@a+1
  7324  07DB  1683               	bsf	3,5	;RP0=1, select bank1
  7325  07DC  1303               	bcf	3,6	;RP1=0, select bank1
  7326  07DD  0820               	movf	___flsub@a^(0+128),w
  7327  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  7328  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  7329  07E0  00DA               	movwf	___fladd@a
  7330  07E1  160A  118A  2274  120A  118A  	fcall	___fladd
  7331  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  7332  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  7333  07E8  0859               	movf	?___fladd+3,w
  7334  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  7335  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  7336  07EB  00A3               	movwf	(?___flsub+3)^(0+128)
  7337  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  7338  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  7339  07EE  0858               	movf	?___fladd+2,w
  7340  07EF  1683               	bsf	3,5	;RP0=1, select bank1
  7341  07F0  1303               	bcf	3,6	;RP1=0, select bank1
  7342  07F1  00A2               	movwf	(?___flsub+2)^(0+128)
  7343  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  7344  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  7345  07F4  0857               	movf	?___fladd+1,w
  7346  07F5  1683               	bsf	3,5	;RP0=1, select bank1
  7347  07F6  1303               	bcf	3,6	;RP1=0, select bank1
  7348  07F7  00A1               	movwf	(?___flsub+1)^(0+128)
  7349  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  7350  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  7351  07FA  0856               	movf	?___fladd,w
  7352  07FB  1683               	bsf	3,5	;RP0=1, select bank1
  7353  07FC  1303               	bcf	3,6	;RP1=0, select bank1
  7354  07FD  00A0               	movwf	?___flsub^(0+128)
  7355  07FE                     l753:
  7356  07FE  0008               	return
  7357  07FF                     __end_of___flsub:
  7358                           
  7359                           	psect	text19
  7360  1274                     __ptext19:	
  7361 ;; *************** function ___fladd *****************
  7362 ;; Defined at:
  7363 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  b               4   54[BANK0 ] long 
  7366 ;;  a               4   58[BANK0 ] long 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  grs             1   73[BANK0 ] unsigned char 
  7369 ;;  bexp            1   72[BANK0 ] unsigned char 
  7370 ;;  aexp            1   71[BANK0 ] unsigned char 
  7371 ;;  signs           1   70[BANK0 ] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  4   54[BANK0 ] unsigned char 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0, btemp+1
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7381 ;;      Params:         0       8       0       0       0
  7382 ;;      Locals:         0       4       0       0       0
  7383 ;;      Temps:          0       8       0       0       0
  7384 ;;      Totals:         0      20       0       0       0
  7385 ;;Total ram usage:       20 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:    1
  7388 ;; This function calls:
  7389 ;;		Nothing
  7390 ;; This function is called by:
  7391 ;;		_sprintf
  7392 ;;		___flsub
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           
  7397                           ;psect for function ___fladd
  7398  1274                     ___fladd:
  7399  1274                     l2413:	
  7400                           ;incstack = 0
  7401                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7402                           
  7403  1274  1283               	bcf	3,5	;RP0=0, select bank0
  7404  1275  1303               	bcf	3,6	;RP1=0, select bank0
  7405  1276  0859               	movf	___fladd@b+3,w
  7406  1277  3980               	andlw	128
  7407  1278  00DE               	movwf	??___fladd
  7408  1279  085E               	movf	??___fladd,w
  7409  127A  00E6               	movwf	___fladd@signs
  7410  127B                     l2415:
  7411  127B  0859               	movf	___fladd@b+3,w
  7412  127C  00DE               	movwf	??___fladd
  7413  127D  075E               	addwf	??___fladd,w
  7414  127E  00DF               	movwf	??___fladd+1
  7415  127F  085F               	movf	??___fladd+1,w
  7416  1280  00E8               	movwf	___fladd@bexp
  7417  1281                     l2417:
  7418  1281  1FD8               	btfss	___fladd@b+2,7
  7419  1282  2A84               	goto	u3171
  7420  1283  2A85               	goto	u3170
  7421  1284                     u3171:
  7422  1284  2A86               	goto	l2421
  7423  1285                     u3170:
  7424  1285                     l2419:
  7425  1285  1468               	bsf	___fladd@bexp,0
  7426  1286                     l2421:
  7427  1286  0868               	movf	___fladd@bexp,w
  7428  1287  1903               	btfsc	3,2
  7429  1288  2A8A               	goto	u3181
  7430  1289  2A8B               	goto	u3180
  7431  128A                     u3181:
  7432  128A  2A9B               	goto	l2431
  7433  128B                     u3180:
  7434  128B                     l2423:
  7435  128B  0A68               	incf	___fladd@bexp,w
  7436  128C  1D03               	btfss	3,2
  7437  128D  2A8F               	goto	u3191
  7438  128E  2A90               	goto	u3190
  7439  128F                     u3191:
  7440  128F  2A98               	goto	l2427
  7441  1290                     u3190:
  7442  1290                     l2425:
  7443  1290  3000               	movlw	0
  7444  1291  00D9               	movwf	___fladd@b+3
  7445  1292  3000               	movlw	0
  7446  1293  00D8               	movwf	___fladd@b+2
  7447  1294  3000               	movlw	0
  7448  1295  00D7               	movwf	___fladd@b+1
  7449  1296  3000               	movlw	0
  7450  1297  00D6               	movwf	___fladd@b
  7451  1298                     l2427:
  7452  1298  17D8               	bsf	___fladd@b+2,7
  7453  1299                     l2429:
  7454  1299  01D9               	clrf	___fladd@b+3
  7455  129A  2AA3               	goto	l2433
  7456  129B                     l2431:
  7457  129B  3000               	movlw	0
  7458  129C  00D9               	movwf	___fladd@b+3
  7459  129D  3000               	movlw	0
  7460  129E  00D8               	movwf	___fladd@b+2
  7461  129F  3000               	movlw	0
  7462  12A0  00D7               	movwf	___fladd@b+1
  7463  12A1  3000               	movlw	0
  7464  12A2  00D6               	movwf	___fladd@b
  7465  12A3                     l2433:
  7466  12A3  085D               	movf	___fladd@a+3,w
  7467  12A4  3980               	andlw	128
  7468  12A5  00DE               	movwf	??___fladd
  7469  12A6  085E               	movf	??___fladd,w
  7470  12A7  00E7               	movwf	___fladd@aexp
  7471  12A8                     l2435:
  7472  12A8  0867               	movf	___fladd@aexp,w
  7473  12A9  0666               	xorwf	___fladd@signs,w
  7474  12AA  1903               	skipnz
  7475  12AB  2AAD               	goto	u3201
  7476  12AC  2AAE               	goto	u3200
  7477  12AD                     u3201:
  7478  12AD  2AAF               	goto	l2439
  7479  12AE                     u3200:
  7480  12AE                     l2437:
  7481  12AE  1766               	bsf	___fladd@signs,6
  7482  12AF                     l2439:
  7483  12AF  085D               	movf	___fladd@a+3,w
  7484  12B0  00DE               	movwf	??___fladd
  7485  12B1  075E               	addwf	??___fladd,w
  7486  12B2  00DF               	movwf	??___fladd+1
  7487  12B3  085F               	movf	??___fladd+1,w
  7488  12B4  00E7               	movwf	___fladd@aexp
  7489  12B5                     l2441:
  7490  12B5  1FDC               	btfss	___fladd@a+2,7
  7491  12B6  2AB8               	goto	u3211
  7492  12B7  2AB9               	goto	u3210
  7493  12B8                     u3211:
  7494  12B8  2ABA               	goto	l2445
  7495  12B9                     u3210:
  7496  12B9                     l2443:
  7497  12B9  1467               	bsf	___fladd@aexp,0
  7498  12BA                     l2445:
  7499  12BA  0867               	movf	___fladd@aexp,w
  7500  12BB  1903               	btfsc	3,2
  7501  12BC  2ABE               	goto	u3221
  7502  12BD  2ABF               	goto	u3220
  7503  12BE                     u3221:
  7504  12BE  2ACF               	goto	l2455
  7505  12BF                     u3220:
  7506  12BF                     l2447:
  7507  12BF  0A67               	incf	___fladd@aexp,w
  7508  12C0  1D03               	btfss	3,2
  7509  12C1  2AC3               	goto	u3231
  7510  12C2  2AC4               	goto	u3230
  7511  12C3                     u3231:
  7512  12C3  2ACC               	goto	l2451
  7513  12C4                     u3230:
  7514  12C4                     l2449:
  7515  12C4  3000               	movlw	0
  7516  12C5  00DD               	movwf	___fladd@a+3
  7517  12C6  3000               	movlw	0
  7518  12C7  00DC               	movwf	___fladd@a+2
  7519  12C8  3000               	movlw	0
  7520  12C9  00DB               	movwf	___fladd@a+1
  7521  12CA  3000               	movlw	0
  7522  12CB  00DA               	movwf	___fladd@a
  7523  12CC                     l2451:
  7524  12CC  17DC               	bsf	___fladd@a+2,7
  7525  12CD                     l2453:
  7526  12CD  01DD               	clrf	___fladd@a+3
  7527  12CE  2AD7               	goto	l707
  7528  12CF                     l2455:
  7529  12CF  3000               	movlw	0
  7530  12D0  00DD               	movwf	___fladd@a+3
  7531  12D1  3000               	movlw	0
  7532  12D2  00DC               	movwf	___fladd@a+2
  7533  12D3  3000               	movlw	0
  7534  12D4  00DB               	movwf	___fladd@a+1
  7535  12D5  3000               	movlw	0
  7536  12D6  00DA               	movwf	___fladd@a
  7537  12D7                     l707:
  7538  12D7  0868               	movf	___fladd@bexp,w
  7539  12D8  0267               	subwf	___fladd@aexp,w
  7540  12D9  1803               	skipnc
  7541  12DA  2ADC               	goto	u3241
  7542  12DB  2ADD               	goto	u3240
  7543  12DC                     u3241:
  7544  12DC  2B21               	goto	l2491
  7545  12DD                     u3240:
  7546  12DD                     l2457:
  7547  12DD  1F66               	btfss	___fladd@signs,6
  7548  12DE  2AE0               	goto	u3251
  7549  12DF  2AE1               	goto	u3250
  7550  12E0                     u3251:
  7551  12E0  2AE5               	goto	l2461
  7552  12E1                     u3250:
  7553  12E1                     l2459:
  7554  12E1  3080               	movlw	128
  7555  12E2  00DE               	movwf	??___fladd
  7556  12E3  085E               	movf	??___fladd,w
  7557  12E4  06E6               	xorwf	___fladd@signs,f
  7558  12E5                     l2461:
  7559  12E5  0868               	movf	___fladd@bexp,w
  7560  12E6  00DE               	movwf	??___fladd
  7561  12E7  085E               	movf	??___fladd,w
  7562  12E8  00E9               	movwf	___fladd@grs
  7563  12E9                     l2463:
  7564  12E9  0867               	movf	___fladd@aexp,w
  7565  12EA  00DE               	movwf	??___fladd
  7566  12EB  085E               	movf	??___fladd,w
  7567  12EC  00E8               	movwf	___fladd@bexp
  7568  12ED                     l2465:
  7569  12ED  0869               	movf	___fladd@grs,w
  7570  12EE  00DE               	movwf	??___fladd
  7571  12EF  085E               	movf	??___fladd,w
  7572  12F0  00E7               	movwf	___fladd@aexp
  7573  12F1                     l2467:
  7574  12F1  0856               	movf	___fladd@b,w
  7575  12F2  00DE               	movwf	??___fladd
  7576  12F3  085E               	movf	??___fladd,w
  7577  12F4  00E9               	movwf	___fladd@grs
  7578  12F5                     l2469:
  7579  12F5  085A               	movf	___fladd@a,w
  7580  12F6  00DE               	movwf	??___fladd
  7581  12F7  085E               	movf	??___fladd,w
  7582  12F8  00D6               	movwf	___fladd@b
  7583  12F9                     l2471:
  7584  12F9  0869               	movf	___fladd@grs,w
  7585  12FA  00DE               	movwf	??___fladd
  7586  12FB  085E               	movf	??___fladd,w
  7587  12FC  00DA               	movwf	___fladd@a
  7588  12FD                     l2473:
  7589  12FD  0857               	movf	___fladd@b+1,w
  7590  12FE  00DE               	movwf	??___fladd
  7591  12FF  085E               	movf	??___fladd,w
  7592  1300  00E9               	movwf	___fladd@grs
  7593  1301                     l2475:
  7594  1301  085B               	movf	___fladd@a+1,w
  7595  1302  00DE               	movwf	??___fladd
  7596  1303  085E               	movf	??___fladd,w
  7597  1304  00D7               	movwf	___fladd@b+1
  7598  1305                     l2477:
  7599  1305  0869               	movf	___fladd@grs,w
  7600  1306  00DE               	movwf	??___fladd
  7601  1307  085E               	movf	??___fladd,w
  7602  1308  00DB               	movwf	___fladd@a+1
  7603  1309                     l2479:
  7604  1309  0858               	movf	___fladd@b+2,w
  7605  130A  00DE               	movwf	??___fladd
  7606  130B  085E               	movf	??___fladd,w
  7607  130C  00E9               	movwf	___fladd@grs
  7608  130D                     l2481:
  7609  130D  085C               	movf	___fladd@a+2,w
  7610  130E  00DE               	movwf	??___fladd
  7611  130F  085E               	movf	??___fladd,w
  7612  1310  00D8               	movwf	___fladd@b+2
  7613  1311                     l2483:
  7614  1311  0869               	movf	___fladd@grs,w
  7615  1312  00DE               	movwf	??___fladd
  7616  1313  085E               	movf	??___fladd,w
  7617  1314  00DC               	movwf	___fladd@a+2
  7618  1315                     l2485:
  7619  1315  0859               	movf	___fladd@b+3,w
  7620  1316  00DE               	movwf	??___fladd
  7621  1317  085E               	movf	??___fladd,w
  7622  1318  00E9               	movwf	___fladd@grs
  7623  1319                     l2487:
  7624  1319  085D               	movf	___fladd@a+3,w
  7625  131A  00DE               	movwf	??___fladd
  7626  131B  085E               	movf	??___fladd,w
  7627  131C  00D9               	movwf	___fladd@b+3
  7628  131D                     l2489:
  7629  131D  0869               	movf	___fladd@grs,w
  7630  131E  00DE               	movwf	??___fladd
  7631  131F  085E               	movf	??___fladd,w
  7632  1320  00DD               	movwf	___fladd@a+3
  7633  1321                     l2491:
  7634  1321  01E9               	clrf	___fladd@grs
  7635  1322                     l2493:
  7636  1322  0867               	movf	___fladd@aexp,w
  7637  1323  00DE               	movwf	??___fladd
  7638  1324  01DF               	clrf	??___fladd+1
  7639  1325  085F               	movf	??___fladd+1,w
  7640  1326  00E1               	movwf	??___fladd+3
  7641  1327  0868               	movf	___fladd@bexp,w
  7642  1328  025E               	subwf	??___fladd,w
  7643  1329  00E0               	movwf	??___fladd+2
  7644  132A  1C03               	skipc
  7645  132B  03E1               	decf	??___fladd+3,f
  7646  132C  0861               	movf	??___fladd+3,w
  7647  132D  3A80               	xorlw	128
  7648  132E  00FF               	movwf	btemp+1
  7649  132F  3080               	movlw	128
  7650  1330  027F               	subwf	btemp+1,w
  7651  1331  1D03               	skipz
  7652  1332  2B35               	goto	u3265
  7653  1333  301A               	movlw	26
  7654  1334  0260               	subwf	??___fladd+2,w
  7655  1335                     u3265:
  7656  1335  1C03               	skipc
  7657  1336  2B38               	goto	u3261
  7658  1337  2B39               	goto	u3260
  7659  1338                     u3261:
  7660  1338  2B76               	goto	l2509
  7661  1339                     u3260:
  7662  1339                     l2495:
  7663  1339  1283               	bcf	3,5	;RP0=0, select bank0
  7664  133A  1303               	bcf	3,6	;RP1=0, select bank0
  7665  133B  0859               	movf	___fladd@b+3,w
  7666  133C  0458               	iorwf	___fladd@b+2,w
  7667  133D  0457               	iorwf	___fladd@b+1,w
  7668  133E  0456               	iorwf	___fladd@b,w
  7669  133F  1D03               	skipz
  7670  1340  2B42               	goto	u3271
  7671  1341  2B44               	goto	u3270
  7672  1342                     u3271:
  7673  1342  3001               	movlw	1
  7674  1343  2B45               	goto	u3280
  7675  1344                     u3270:
  7676  1344  3000               	movlw	0
  7677  1345                     u3280:
  7678  1345  00DE               	movwf	??___fladd
  7679  1346  085E               	movf	??___fladd,w
  7680  1347  00E9               	movwf	___fladd@grs
  7681  1348  3000               	movlw	0
  7682  1349  00D9               	movwf	___fladd@b+3
  7683  134A  3000               	movlw	0
  7684  134B  00D8               	movwf	___fladd@b+2
  7685  134C  3000               	movlw	0
  7686  134D  00D7               	movwf	___fladd@b+1
  7687  134E  3000               	movlw	0
  7688  134F  00D6               	movwf	___fladd@b
  7689  1350  0867               	movf	___fladd@aexp,w
  7690  1351  00DE               	movwf	??___fladd
  7691  1352  085E               	movf	??___fladd,w
  7692  1353  00E8               	movwf	___fladd@bexp
  7693  1354  2B7E               	goto	l711
  7694  1355                     l713:
  7695  1355  1C69               	btfss	___fladd@grs,0
  7696  1356  2B58               	goto	u3291
  7697  1357  2B59               	goto	u3290
  7698  1358                     u3291:
  7699  1358  2B62               	goto	l2499
  7700  1359                     u3290:
  7701  1359                     l2497:
  7702  1359  0869               	movf	___fladd@grs,w
  7703  135A  00DE               	movwf	??___fladd
  7704  135B  1003               	clrc
  7705  135C  0C5E               	rrf	??___fladd,w
  7706  135D  3801               	iorlw	1
  7707  135E  00DF               	movwf	??___fladd+1
  7708  135F  085F               	movf	??___fladd+1,w
  7709  1360  00E9               	movwf	___fladd@grs
  7710  1361  2B64               	goto	l2501
  7711  1362                     l2499:
  7712  1362  1003               	clrc
  7713  1363  0CE9               	rrf	___fladd@grs,f
  7714  1364                     l2501:
  7715  1364  1C56               	btfss	___fladd@b,0
  7716  1365  2B67               	goto	u3301
  7717  1366  2B68               	goto	u3300
  7718  1367                     u3301:
  7719  1367  2B69               	goto	l2505
  7720  1368                     u3300:
  7721  1368                     l2503:
  7722  1368  17E9               	bsf	___fladd@grs,7
  7723  1369                     l2505:
  7724  1369  3001               	movlw	1
  7725  136A  00DE               	movwf	??___fladd
  7726  136B                     u3315:
  7727  136B  0D59               	rlf	___fladd@b+3,w
  7728  136C  0CD9               	rrf	___fladd@b+3,f
  7729  136D  0CD8               	rrf	___fladd@b+2,f
  7730  136E  0CD7               	rrf	___fladd@b+1,f
  7731  136F  0CD6               	rrf	___fladd@b,f
  7732  1370  0BDE               	decfsz	??___fladd& (0+127),f
  7733  1371  2B6B               	goto	u3315
  7734  1372                     l2507:
  7735  1372  3001               	movlw	1
  7736  1373  00DE               	movwf	??___fladd
  7737  1374  085E               	movf	??___fladd,w
  7738  1375  07E8               	addwf	___fladd@bexp,f
  7739  1376                     l2509:
  7740  1376  1283               	bcf	3,5	;RP0=0, select bank0
  7741  1377  1303               	bcf	3,6	;RP1=0, select bank0
  7742  1378  0867               	movf	___fladd@aexp,w
  7743  1379  0268               	subwf	___fladd@bexp,w
  7744  137A  1C03               	skipc
  7745  137B  2B7D               	goto	u3321
  7746  137C  2B7E               	goto	u3320
  7747  137D                     u3321:
  7748  137D  2B55               	goto	l713
  7749  137E                     u3320:
  7750  137E                     l711:
  7751  137E  1B66               	btfsc	___fladd@signs,6
  7752  137F  2B81               	goto	u3331
  7753  1380  2B82               	goto	u3330
  7754  1381                     u3331:
  7755  1381  2BCD               	goto	l2535
  7756  1382                     u3330:
  7757  1382                     l2511:
  7758  1382  0868               	movf	___fladd@bexp,w
  7759  1383  1D03               	btfss	3,2
  7760  1384  2B86               	goto	u3341
  7761  1385  2B87               	goto	u3340
  7762  1386                     u3341:
  7763  1386  2B90               	goto	l2517
  7764  1387                     u3340:
  7765  1387                     l2513:
  7766  1387  3000               	movlw	0
  7767  1388  00D9               	movwf	?___fladd+3
  7768  1389  3000               	movlw	0
  7769  138A  00D8               	movwf	?___fladd+2
  7770  138B  3000               	movlw	0
  7771  138C  00D7               	movwf	?___fladd+1
  7772  138D  3000               	movlw	0
  7773  138E  00D6               	movwf	?___fladd
  7774  138F  2CFB               	goto	l720
  7775  1390                     l2517:
  7776  1390  085A               	movf	___fladd@a,w
  7777  1391  07D6               	addwf	___fladd@b,f
  7778  1392  085B               	movf	___fladd@a+1,w
  7779  1393  1103               	clrz
  7780  1394  1803               	skipnc
  7781  1395  3E01               	addlw	1
  7782  1396  1903               	skipnz
  7783  1397  2B99               	goto	u3351
  7784  1398  07D7               	addwf	___fladd@b+1,f
  7785  1399                     u3351:
  7786  1399  085C               	movf	___fladd@a+2,w
  7787  139A  1103               	clrz
  7788  139B  1803               	skipnc
  7789  139C  3E01               	addlw	1
  7790  139D  1903               	skipnz
  7791  139E  2BA0               	goto	u3352
  7792  139F  07D8               	addwf	___fladd@b+2,f
  7793  13A0                     u3352:
  7794  13A0  085D               	movf	___fladd@a+3,w
  7795  13A1  1103               	clrz
  7796  13A2  1803               	skipnc
  7797  13A3  3E01               	addlw	1
  7798  13A4  1903               	skipnz
  7799  13A5  2BA7               	goto	u3353
  7800  13A6  07D9               	addwf	___fladd@b+3,f
  7801  13A7                     u3353:
  7802  13A7                     l2519:
  7803  13A7  1C59               	btfss	___fladd@b+3,0
  7804  13A8  2BAA               	goto	u3361
  7805  13A9  2BAB               	goto	u3360
  7806  13AA                     u3361:
  7807  13AA  2C81               	goto	l2569
  7808  13AB                     u3360:
  7809  13AB                     l2521:
  7810  13AB  1C69               	btfss	___fladd@grs,0
  7811  13AC  2BAE               	goto	u3371
  7812  13AD  2BAF               	goto	u3370
  7813  13AE                     u3371:
  7814  13AE  2BB8               	goto	l2525
  7815  13AF                     u3370:
  7816  13AF                     l2523:
  7817  13AF  0869               	movf	___fladd@grs,w
  7818  13B0  00DE               	movwf	??___fladd
  7819  13B1  1003               	clrc
  7820  13B2  0C5E               	rrf	??___fladd,w
  7821  13B3  3801               	iorlw	1
  7822  13B4  00DF               	movwf	??___fladd+1
  7823  13B5  085F               	movf	??___fladd+1,w
  7824  13B6  00E9               	movwf	___fladd@grs
  7825  13B7  2BBA               	goto	l2527
  7826  13B8                     l2525:
  7827  13B8  1003               	clrc
  7828  13B9  0CE9               	rrf	___fladd@grs,f
  7829  13BA                     l2527:
  7830  13BA  1C56               	btfss	___fladd@b,0
  7831  13BB  2BBD               	goto	u3381
  7832  13BC  2BBE               	goto	u3380
  7833  13BD                     u3381:
  7834  13BD  2BBF               	goto	l2531
  7835  13BE                     u3380:
  7836  13BE                     l2529:
  7837  13BE  17E9               	bsf	___fladd@grs,7
  7838  13BF                     l2531:
  7839  13BF  3001               	movlw	1
  7840  13C0  00DE               	movwf	??___fladd
  7841  13C1                     u3395:
  7842  13C1  0D59               	rlf	___fladd@b+3,w
  7843  13C2  0CD9               	rrf	___fladd@b+3,f
  7844  13C3  0CD8               	rrf	___fladd@b+2,f
  7845  13C4  0CD7               	rrf	___fladd@b+1,f
  7846  13C5  0CD6               	rrf	___fladd@b,f
  7847  13C6  0BDE               	decfsz	??___fladd& (0+127),f
  7848  13C7  2BC1               	goto	u3395
  7849  13C8                     l2533:
  7850  13C8  3001               	movlw	1
  7851  13C9  00DE               	movwf	??___fladd
  7852  13CA  085E               	movf	??___fladd,w
  7853  13CB  07E8               	addwf	___fladd@bexp,f
  7854  13CC  2C81               	goto	l2569
  7855  13CD                     l2535:
  7856  13CD  0859               	movf	___fladd@b+3,w
  7857  13CE  3A80               	xorlw	128
  7858  13CF  00FF               	movwf	btemp+1
  7859  13D0  085D               	movf	___fladd@a+3,w
  7860  13D1  3A80               	xorlw	128
  7861  13D2  027F               	subwf	btemp+1,w
  7862  13D3  1D03               	skipz
  7863  13D4  2BDF               	goto	u3403
  7864  13D5  085C               	movf	___fladd@a+2,w
  7865  13D6  0258               	subwf	___fladd@b+2,w
  7866  13D7  1D03               	skipz
  7867  13D8  2BDF               	goto	u3403
  7868  13D9  085B               	movf	___fladd@a+1,w
  7869  13DA  0257               	subwf	___fladd@b+1,w
  7870  13DB  1D03               	skipz
  7871  13DC  2BDF               	goto	u3403
  7872  13DD  085A               	movf	___fladd@a,w
  7873  13DE  0256               	subwf	___fladd@b,w
  7874  13DF                     u3403:
  7875  13DF  1803               	skipnc
  7876  13E0  2BE2               	goto	u3401
  7877  13E1  2BE3               	goto	u3400
  7878  13E2                     u3401:
  7879  13E2  2C3B               	goto	l2545
  7880  13E3                     u3400:
  7881  13E3                     l2537:
  7882  13E3  30FF               	movlw	255
  7883  13E4  00DE               	movwf	??___fladd
  7884  13E5  30FF               	movlw	255
  7885  13E6  00DF               	movwf	??___fladd+1
  7886  13E7  30FF               	movlw	255
  7887  13E8  00E0               	movwf	??___fladd+2
  7888  13E9  30FF               	movlw	255
  7889  13EA  00E1               	movwf	??___fladd+3
  7890  13EB  085A               	movf	___fladd@a,w
  7891  13EC  00E2               	movwf	??___fladd+4
  7892  13ED  085B               	movf	___fladd@a+1,w
  7893  13EE  00E3               	movwf	??___fladd+5
  7894  13EF  085C               	movf	___fladd@a+2,w
  7895  13F0  00E4               	movwf	??___fladd+6
  7896  13F1  085D               	movf	___fladd@a+3,w
  7897  13F2  00E5               	movwf	??___fladd+7
  7898  13F3  0856               	movf	___fladd@b,w
  7899  13F4  02E2               	subwf	??___fladd+4,f
  7900  13F5  0857               	movf	___fladd@b+1,w
  7901  13F6  1C03               	skipc
  7902  13F7  0F57               	incfsz	___fladd@b+1,w
  7903  13F8  2BFA               	goto	u3411
  7904  13F9  2BFB               	goto	u3412
  7905  13FA                     u3411:
  7906  13FA  02E3               	subwf	??___fladd+5,f
  7907  13FB                     u3412:
  7908  13FB  0858               	movf	___fladd@b+2,w
  7909  13FC  1C03               	skipc
  7910  13FD  0F58               	incfsz	___fladd@b+2,w
  7911  13FE  2C00               	goto	u3413
  7912  13FF  2C01               	goto	u3414
  7913  1400                     u3413:
  7914  1400  02E4               	subwf	??___fladd+6,f
  7915  1401                     u3414:
  7916  1401  0859               	movf	___fladd@b+3,w
  7917  1402  1C03               	skipc
  7918  1403  0F59               	incfsz	___fladd@b+3,w
  7919  1404  2C06               	goto	u3415
  7920  1405  2C07               	goto	u3416
  7921  1406                     u3415:
  7922  1406  02E5               	subwf	??___fladd+7,f
  7923  1407                     u3416:
  7924  1407  0862               	movf	??___fladd+4,w
  7925  1408  07DE               	addwf	??___fladd,f
  7926  1409  0863               	movf	??___fladd+5,w
  7927  140A  1803               	skipnc
  7928  140B  0F63               	incfsz	??___fladd+5,w
  7929  140C  2C0E               	goto	u3420
  7930  140D  2C0F               	goto	u3421
  7931  140E                     u3420:
  7932  140E  07DF               	addwf	??___fladd+1,f
  7933  140F                     u3421:
  7934  140F  0864               	movf	??___fladd+6,w
  7935  1410  1803               	skipnc
  7936  1411  0F64               	incfsz	??___fladd+6,w
  7937  1412  2C14               	goto	u3422
  7938  1413  2C15               	goto	u3423
  7939  1414                     u3422:
  7940  1414  07E0               	addwf	??___fladd+2,f
  7941  1415                     u3423:
  7942  1415  0865               	movf	??___fladd+7,w
  7943  1416  1803               	skipnc
  7944  1417  0A65               	incf	??___fladd+7,w
  7945  1418  07E1               	addwf	??___fladd+3,f
  7946  1419  0861               	movf	??___fladd+3,w
  7947  141A  00D9               	movwf	___fladd@b+3
  7948  141B  0860               	movf	??___fladd+2,w
  7949  141C  00D8               	movwf	___fladd@b+2
  7950  141D  085F               	movf	??___fladd+1,w
  7951  141E  00D7               	movwf	___fladd@b+1
  7952  141F  085E               	movf	??___fladd,w
  7953  1420  00D6               	movwf	___fladd@b
  7954  1421                     l2539:
  7955  1421  3080               	movlw	128
  7956  1422  00DE               	movwf	??___fladd
  7957  1423  085E               	movf	??___fladd,w
  7958  1424  06E6               	xorwf	___fladd@signs,f
  7959  1425  09E9               	comf	___fladd@grs,f
  7960  1426  0AE9               	incf	___fladd@grs,f
  7961  1427                     l2541:
  7962  1427  0869               	movf	___fladd@grs,w
  7963  1428  1D03               	btfss	3,2
  7964  1429  2C2B               	goto	u3431
  7965  142A  2C2C               	goto	u3430
  7966  142B                     u3431:
  7967  142B  2C49               	goto	l728
  7968  142C                     u3430:
  7969  142C                     l2543:
  7970  142C  3001               	movlw	1
  7971  142D  07D6               	addwf	___fladd@b,f
  7972  142E  3000               	movlw	0
  7973  142F  1803               	skipnc
  7974  1430  3001               	movlw	1
  7975  1431  07D7               	addwf	___fladd@b+1,f
  7976  1432  3000               	movlw	0
  7977  1433  1803               	skipnc
  7978  1434  3001               	movlw	1
  7979  1435  07D8               	addwf	___fladd@b+2,f
  7980  1436  3000               	movlw	0
  7981  1437  1803               	skipnc
  7982  1438  3001               	movlw	1
  7983  1439  07D9               	addwf	___fladd@b+3,f
  7984  143A  2C49               	goto	l728
  7985  143B                     l2545:
  7986  143B  085A               	movf	___fladd@a,w
  7987  143C  02D6               	subwf	___fladd@b,f
  7988  143D  085B               	movf	___fladd@a+1,w
  7989  143E  1C03               	skipc
  7990  143F  0F5B               	incfsz	___fladd@a+1,w
  7991  1440  02D7               	subwf	___fladd@b+1,f
  7992  1441  085C               	movf	___fladd@a+2,w
  7993  1442  1C03               	skipc
  7994  1443  0F5C               	incfsz	___fladd@a+2,w
  7995  1444  02D8               	subwf	___fladd@b+2,f
  7996  1445  085D               	movf	___fladd@a+3,w
  7997  1446  1C03               	skipc
  7998  1447  0F5D               	incfsz	___fladd@a+3,w
  7999  1448  02D9               	subwf	___fladd@b+3,f
  8000  1449                     l728:
  8001  1449  0859               	movf	___fladd@b+3,w
  8002  144A  0458               	iorwf	___fladd@b+2,w
  8003  144B  0457               	iorwf	___fladd@b+1,w
  8004  144C  0456               	iorwf	___fladd@b,w
  8005  144D  1D03               	skipz
  8006  144E  2C50               	goto	u3441
  8007  144F  2C51               	goto	u3440
  8008  1450                     u3441:
  8009  1450  2C7D               	goto	l2567
  8010  1451                     u3440:
  8011  1451                     l2547:
  8012  1451  0869               	movf	___fladd@grs,w
  8013  1452  1D03               	btfss	3,2
  8014  1453  2C55               	goto	u3451
  8015  1454  2C56               	goto	u3450
  8016  1455                     u3451:
  8017  1455  2C7D               	goto	l2567
  8018  1456                     u3450:
  8019  1456                     l2549:
  8020  1456  3000               	movlw	0
  8021  1457  00D9               	movwf	?___fladd+3
  8022  1458  3000               	movlw	0
  8023  1459  00D8               	movwf	?___fladd+2
  8024  145A  3000               	movlw	0
  8025  145B  00D7               	movwf	?___fladd+1
  8026  145C  3000               	movlw	0
  8027  145D  00D6               	movwf	?___fladd
  8028  145E  2CFB               	goto	l720
  8029  145F                     l2553:
  8030  145F  3001               	movlw	1
  8031  1460  00DE               	movwf	??___fladd
  8032  1461                     u3465:
  8033  1461  1003               	clrc
  8034  1462  0DD6               	rlf	___fladd@b,f
  8035  1463  0DD7               	rlf	___fladd@b+1,f
  8036  1464  0DD8               	rlf	___fladd@b+2,f
  8037  1465  0DD9               	rlf	___fladd@b+3,f
  8038  1466  0BDE               	decfsz	??___fladd,f
  8039  1467  2C61               	goto	u3465
  8040  1468                     l2555:
  8041  1468  1FE9               	btfss	___fladd@grs,7
  8042  1469  2C6B               	goto	u3471
  8043  146A  2C6C               	goto	u3470
  8044  146B                     u3471:
  8045  146B  2C6D               	goto	l732
  8046  146C                     u3470:
  8047  146C                     l2557:
  8048  146C  1456               	bsf	___fladd@b,0
  8049  146D                     l732:
  8050  146D  1C69               	btfss	___fladd@grs,0
  8051  146E  2C70               	goto	u3481
  8052  146F  2C71               	goto	u3480
  8053  1470                     u3481:
  8054  1470  2C74               	goto	l2561
  8055  1471                     u3480:
  8056  1471                     l2559:
  8057  1471  1403               	setc
  8058  1472  0DE9               	rlf	___fladd@grs,f
  8059  1473  2C76               	goto	l2563
  8060  1474                     l2561:
  8061  1474  1003               	clrc
  8062  1475  0DE9               	rlf	___fladd@grs,f
  8063  1476                     l2563:
  8064  1476  0868               	movf	___fladd@bexp,w
  8065  1477  1903               	btfsc	3,2
  8066  1478  2C7A               	goto	u3491
  8067  1479  2C7B               	goto	u3490
  8068  147A                     u3491:
  8069  147A  2C7D               	goto	l2567
  8070  147B                     u3490:
  8071  147B                     l2565:
  8072  147B  3001               	movlw	1
  8073  147C  02E8               	subwf	___fladd@bexp,f
  8074  147D                     l2567:
  8075  147D  1FD8               	btfss	___fladd@b+2,7
  8076  147E  2C80               	goto	u3501
  8077  147F  2C81               	goto	u3500
  8078  1480                     u3501:
  8079  1480  2C5F               	goto	l2553
  8080  1481                     u3500:
  8081  1481                     l2569:
  8082  1481  01E7               	clrf	___fladd@aexp
  8083  1482                     l2571:
  8084  1482  1FE9               	btfss	___fladd@grs,7
  8085  1483  2C85               	goto	u3511
  8086  1484  2C86               	goto	u3510
  8087  1485                     u3511:
  8088  1485  2C94               	goto	l2579
  8089  1486                     u3510:
  8090  1486                     l2573:
  8091  1486  0869               	movf	___fladd@grs,w
  8092  1487  397F               	andlw	127
  8093  1488  1903               	btfsc	3,2
  8094  1489  2C8B               	goto	u3521
  8095  148A  2C8C               	goto	u3520
  8096  148B                     u3521:
  8097  148B  2C8F               	goto	l738
  8098  148C                     u3520:
  8099  148C                     l2575:
  8100  148C  01E7               	clrf	___fladd@aexp
  8101  148D  0AE7               	incf	___fladd@aexp,f
  8102  148E  2C94               	goto	l2579
  8103  148F                     l738:
  8104  148F  1C56               	btfss	___fladd@b,0
  8105  1490  2C92               	goto	u3531
  8106  1491  2C93               	goto	u3530
  8107  1492                     u3531:
  8108  1492  2C94               	goto	l2579
  8109  1493                     u3530:
  8110  1493  2C8C               	goto	l2575
  8111  1494                     l2579:
  8112  1494  0867               	movf	___fladd@aexp,w
  8113  1495  1903               	btfsc	3,2
  8114  1496  2C98               	goto	u3541
  8115  1497  2C99               	goto	u3540
  8116  1498                     u3541:
  8117  1498  2CCD               	goto	l741
  8118  1499                     u3540:
  8119  1499                     l2581:
  8120  1499  3001               	movlw	1
  8121  149A  07D6               	addwf	___fladd@b,f
  8122  149B  3000               	movlw	0
  8123  149C  1803               	skipnc
  8124  149D  3001               	movlw	1
  8125  149E  07D7               	addwf	___fladd@b+1,f
  8126  149F  3000               	movlw	0
  8127  14A0  1803               	skipnc
  8128  14A1  3001               	movlw	1
  8129  14A2  07D8               	addwf	___fladd@b+2,f
  8130  14A3  3000               	movlw	0
  8131  14A4  1803               	skipnc
  8132  14A5  3001               	movlw	1
  8133  14A6  07D9               	addwf	___fladd@b+3,f
  8134  14A7                     l2583:
  8135  14A7  1C59               	btfss	___fladd@b+3,0
  8136  14A8  2CAA               	goto	u3551
  8137  14A9  2CAB               	goto	u3550
  8138  14AA                     u3551:
  8139  14AA  2CCD               	goto	l741
  8140  14AB                     u3550:
  8141  14AB                     l2585:
  8142  14AB  0856               	movf	___fladd@b,w
  8143  14AC  00DE               	movwf	??___fladd
  8144  14AD  0857               	movf	___fladd@b+1,w
  8145  14AE  00DF               	movwf	??___fladd+1
  8146  14AF  0858               	movf	___fladd@b+2,w
  8147  14B0  00E0               	movwf	??___fladd+2
  8148  14B1  0859               	movf	___fladd@b+3,w
  8149  14B2  00E1               	movwf	??___fladd+3
  8150  14B3  3001               	movlw	1
  8151  14B4  00E2               	movwf	??___fladd+4
  8152  14B5                     u3565:
  8153  14B5  0D61               	rlf	??___fladd+3,w
  8154  14B6  0CE1               	rrf	??___fladd+3,f
  8155  14B7  0CE0               	rrf	??___fladd+2,f
  8156  14B8  0CDF               	rrf	??___fladd+1,f
  8157  14B9  0CDE               	rrf	??___fladd,f
  8158  14BA                     u3560:
  8159  14BA  0BE2               	decfsz	??___fladd+4,f
  8160  14BB  2CB5               	goto	u3565
  8161  14BC  0861               	movf	??___fladd+3,w
  8162  14BD  00D9               	movwf	___fladd@b+3
  8163  14BE  0860               	movf	??___fladd+2,w
  8164  14BF  00D8               	movwf	___fladd@b+2
  8165  14C0  085F               	movf	??___fladd+1,w
  8166  14C1  00D7               	movwf	___fladd@b+1
  8167  14C2  085E               	movf	??___fladd,w
  8168  14C3  00D6               	movwf	___fladd@b
  8169  14C4  0A68               	incf	___fladd@bexp,w
  8170  14C5  1903               	btfsc	3,2
  8171  14C6  2CC8               	goto	u3571
  8172  14C7  2CC9               	goto	u3570
  8173  14C8                     u3571:
  8174  14C8  2CCD               	goto	l741
  8175  14C9                     u3570:
  8176  14C9                     l2587:
  8177  14C9  3001               	movlw	1
  8178  14CA  00DE               	movwf	??___fladd
  8179  14CB  085E               	movf	??___fladd,w
  8180  14CC  07E8               	addwf	___fladd@bexp,f
  8181  14CD                     l741:
  8182  14CD  0A68               	incf	___fladd@bexp,w
  8183  14CE  1903               	btfsc	3,2
  8184  14CF  2CD1               	goto	u3581
  8185  14D0  2CD2               	goto	u3580
  8186  14D1                     u3581:
  8187  14D1  2CD7               	goto	l2591
  8188  14D2                     u3580:
  8189  14D2                     l2589:
  8190  14D2  0868               	movf	___fladd@bexp,w
  8191  14D3  1D03               	btfss	3,2
  8192  14D4  2CD6               	goto	u3591
  8193  14D5  2CD7               	goto	u3590
  8194  14D6                     u3591:
  8195  14D6  2CE5               	goto	l2597
  8196  14D7                     u3590:
  8197  14D7                     l2591:
  8198  14D7  3000               	movlw	0
  8199  14D8  00D9               	movwf	___fladd@b+3
  8200  14D9  3000               	movlw	0
  8201  14DA  00D8               	movwf	___fladd@b+2
  8202  14DB  3000               	movlw	0
  8203  14DC  00D7               	movwf	___fladd@b+1
  8204  14DD  3000               	movlw	0
  8205  14DE  00D6               	movwf	___fladd@b
  8206  14DF                     l2593:
  8207  14DF  0868               	movf	___fladd@bexp,w
  8208  14E0  1D03               	btfss	3,2
  8209  14E1  2CE3               	goto	u3601
  8210  14E2  2CE4               	goto	u3600
  8211  14E3                     u3601:
  8212  14E3  2CE5               	goto	l2597
  8213  14E4                     u3600:
  8214  14E4                     l2595:
  8215  14E4  01E6               	clrf	___fladd@signs
  8216  14E5                     l2597:
  8217  14E5  1C68               	btfss	___fladd@bexp,0
  8218  14E6  2CE8               	goto	u3611
  8219  14E7  2CE9               	goto	u3610
  8220  14E8                     u3611:
  8221  14E8  2CEB               	goto	l2601
  8222  14E9                     u3610:
  8223  14E9                     l2599:
  8224  14E9  17D8               	bsf	___fladd@b+2,7
  8225  14EA  2CEF               	goto	l749
  8226  14EB                     l2601:
  8227  14EB  307F               	movlw	127
  8228  14EC  00DE               	movwf	??___fladd
  8229  14ED  085E               	movf	??___fladd,w
  8230  14EE  05D8               	andwf	___fladd@b+2,f
  8231  14EF                     l749:
  8232  14EF  0868               	movf	___fladd@bexp,w
  8233  14F0  00DE               	movwf	??___fladd
  8234  14F1  1003               	clrc
  8235  14F2  0C5E               	rrf	??___fladd,w
  8236  14F3  00DF               	movwf	??___fladd+1
  8237  14F4  085F               	movf	??___fladd+1,w
  8238  14F5  00D9               	movwf	___fladd@b+3
  8239  14F6                     l2603:
  8240  14F6  1FE6               	btfss	___fladd@signs,7
  8241  14F7  2CF9               	goto	u3621
  8242  14F8  2CFA               	goto	u3620
  8243  14F9                     u3621:
  8244  14F9  2CFB               	goto	l750
  8245  14FA                     u3620:
  8246  14FA                     l2605:
  8247  14FA  17D9               	bsf	___fladd@b+3,7
  8248  14FB                     l750:
  8249  14FB                     l720:
  8250  14FB  0008               	return
  8251  14FC                     __end_of___fladd:
  8252                           
  8253                           	psect	text20
  8254  19B4                     __ptext20:	
  8255 ;; *************** function ___flneg *****************
  8256 ;; Defined at:
  8257 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  f1              4    2[COMMON] unsigned char 
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;		None
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  4    2[COMMON] unsigned char 
  8264 ;; Registers used:
  8265 ;;		wreg
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8271 ;;      Params:         4       0       0       0       0
  8272 ;;      Locals:         0       0       0       0       0
  8273 ;;      Temps:          0       0       0       0       0
  8274 ;;      Totals:         4       0       0       0       0
  8275 ;;Total ram usage:        4 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    1
  8278 ;; This function calls:
  8279 ;;		Nothing
  8280 ;; This function is called by:
  8281 ;;		_sprintf
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           
  8286                           ;psect for function ___flneg
  8287  19B4                     ___flneg:
  8288  19B4                     l3025:	
  8289                           ;incstack = 0
  8290                           ; Regs used in ___flneg: [wreg]
  8291                           
  8292  19B4  0875               	movf	___flneg@f1+3,w
  8293  19B5  0474               	iorwf	___flneg@f1+2,w
  8294  19B6  0473               	iorwf	___flneg@f1+1,w
  8295  19B7  0472               	iorwf	___flneg@f1,w
  8296  19B8  1903               	skipnz
  8297  19B9  29BB               	goto	u4751
  8298  19BA  29BC               	goto	u4750
  8299  19BB                     u4751:
  8300  19BB  29BE               	goto	l3029
  8301  19BC                     u4750:
  8302  19BC                     l3027:
  8303  19BC  3080               	movlw	128
  8304  19BD  06F5               	xorwf	___flneg@f1+3,f
  8305  19BE                     l3029:
  8306  19BE                     l579:
  8307  19BE  0008               	return
  8308  19BF                     __end_of___flneg:
  8309                           
  8310                           	psect	text21
  8311  1DE3                     __ptext21:	
  8312 ;; *************** function ___flge *****************
  8313 ;; Defined at:
  8314 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  ff1             4    2[COMMON] unsigned char 
  8317 ;;  ff2             4    6[COMMON] unsigned char 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;		None
  8320 ;; Return value:  Size  Location     Type
  8321 ;;		None               void
  8322 ;; Registers used:
  8323 ;;		wreg, status,2, status,0
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8329 ;;      Params:         8       0       0       0       0
  8330 ;;      Locals:         0       0       0       0       0
  8331 ;;      Temps:          0       4       0       0       0
  8332 ;;      Totals:         8       4       0       0       0
  8333 ;;Total ram usage:       12 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:    1
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_sprintf
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           
  8344                           ;psect for function ___flge
  8345  1DE3                     ___flge:
  8346  1DE3                     l3005:	
  8347                           ;incstack = 0
  8348                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8349                           
  8350  1DE3  3000               	movlw	0
  8351  1DE4  0572               	andwf	___flge@ff1,w
  8352  1DE5  1283               	bcf	3,5	;RP0=0, select bank0
  8353  1DE6  1303               	bcf	3,6	;RP1=0, select bank0
  8354  1DE7  00A0               	movwf	??___flge
  8355  1DE8  3000               	movlw	0
  8356  1DE9  0573               	andwf	___flge@ff1+1,w
  8357  1DEA  00A1               	movwf	??___flge+1
  8358  1DEB  3080               	movlw	128
  8359  1DEC  0574               	andwf	___flge@ff1+2,w
  8360  1DED  00A2               	movwf	??___flge+2
  8361  1DEE  307F               	movlw	127
  8362  1DEF  0575               	andwf	___flge@ff1+3,w
  8363  1DF0  00A3               	movwf	??___flge+3
  8364  1DF1  0823               	movf	??___flge+3,w
  8365  1DF2  0422               	iorwf	??___flge+2,w
  8366  1DF3  0421               	iorwf	??___flge+1,w
  8367  1DF4  0420               	iorwf	??___flge,w
  8368  1DF5  1D03               	skipz
  8369  1DF6  2DF8               	goto	u4681
  8370  1DF7  2DF9               	goto	u4680
  8371  1DF8                     u4681:
  8372  1DF8  2E01               	goto	l571
  8373  1DF9                     u4680:
  8374  1DF9                     l3007:
  8375  1DF9  3000               	movlw	0
  8376  1DFA  00F5               	movwf	___flge@ff1+3
  8377  1DFB  3000               	movlw	0
  8378  1DFC  00F4               	movwf	___flge@ff1+2
  8379  1DFD  3000               	movlw	0
  8380  1DFE  00F3               	movwf	___flge@ff1+1
  8381  1DFF  3000               	movlw	0
  8382  1E00  00F2               	movwf	___flge@ff1
  8383  1E01                     l571:
  8384  1E01  3000               	movlw	0
  8385  1E02  0576               	andwf	___flge@ff2,w
  8386  1E03  00A0               	movwf	??___flge
  8387  1E04  3000               	movlw	0
  8388  1E05  0577               	andwf	___flge@ff2+1,w
  8389  1E06  00A1               	movwf	??___flge+1
  8390  1E07  3080               	movlw	128
  8391  1E08  0578               	andwf	___flge@ff2+2,w
  8392  1E09  00A2               	movwf	??___flge+2
  8393  1E0A  307F               	movlw	127
  8394  1E0B  0579               	andwf	___flge@ff2+3,w
  8395  1E0C  00A3               	movwf	??___flge+3
  8396  1E0D  0823               	movf	??___flge+3,w
  8397  1E0E  0422               	iorwf	??___flge+2,w
  8398  1E0F  0421               	iorwf	??___flge+1,w
  8399  1E10  0420               	iorwf	??___flge,w
  8400  1E11  1D03               	skipz
  8401  1E12  2E14               	goto	u4691
  8402  1E13  2E15               	goto	u4690
  8403  1E14                     u4691:
  8404  1E14  2E1D               	goto	l3011
  8405  1E15                     u4690:
  8406  1E15                     l3009:
  8407  1E15  3000               	movlw	0
  8408  1E16  00F9               	movwf	___flge@ff2+3
  8409  1E17  3000               	movlw	0
  8410  1E18  00F8               	movwf	___flge@ff2+2
  8411  1E19  3000               	movlw	0
  8412  1E1A  00F7               	movwf	___flge@ff2+1
  8413  1E1B  3000               	movlw	0
  8414  1E1C  00F6               	movwf	___flge@ff2
  8415  1E1D                     l3011:
  8416  1E1D  1FF5               	btfss	___flge@ff1+3,7
  8417  1E1E  2E20               	goto	u4701
  8418  1E1F  2E21               	goto	u4700
  8419  1E20                     u4701:
  8420  1E20  2E45               	goto	l3015
  8421  1E21                     u4700:
  8422  1E21                     l3013:
  8423  1E21  3000               	movlw	0
  8424  1E22  00A0               	movwf	??___flge
  8425  1E23  3000               	movlw	0
  8426  1E24  00A1               	movwf	??___flge+1
  8427  1E25  3000               	movlw	0
  8428  1E26  00A2               	movwf	??___flge+2
  8429  1E27  3080               	movlw	128
  8430  1E28  00A3               	movwf	??___flge+3
  8431  1E29  0872               	movf	___flge@ff1,w
  8432  1E2A  02A0               	subwf	??___flge,f
  8433  1E2B  0873               	movf	___flge@ff1+1,w
  8434  1E2C  1C03               	skipc
  8435  1E2D  0F73               	incfsz	___flge@ff1+1,w
  8436  1E2E  2E30               	goto	u4711
  8437  1E2F  2E31               	goto	u4712
  8438  1E30                     u4711:
  8439  1E30  02A1               	subwf	??___flge+1,f
  8440  1E31                     u4712:
  8441  1E31  0874               	movf	___flge@ff1+2,w
  8442  1E32  1C03               	skipc
  8443  1E33  0F74               	incfsz	___flge@ff1+2,w
  8444  1E34  2E36               	goto	u4713
  8445  1E35  2E37               	goto	u4714
  8446  1E36                     u4713:
  8447  1E36  02A2               	subwf	??___flge+2,f
  8448  1E37                     u4714:
  8449  1E37  0875               	movf	___flge@ff1+3,w
  8450  1E38  1C03               	skipc
  8451  1E39  0F75               	incfsz	___flge@ff1+3,w
  8452  1E3A  2E3C               	goto	u4715
  8453  1E3B  2E3D               	goto	u4716
  8454  1E3C                     u4715:
  8455  1E3C  02A3               	subwf	??___flge+3,f
  8456  1E3D                     u4716:
  8457  1E3D  0823               	movf	??___flge+3,w
  8458  1E3E  00F5               	movwf	___flge@ff1+3
  8459  1E3F  0822               	movf	??___flge+2,w
  8460  1E40  00F4               	movwf	___flge@ff1+2
  8461  1E41  0821               	movf	??___flge+1,w
  8462  1E42  00F3               	movwf	___flge@ff1+1
  8463  1E43  0820               	movf	??___flge,w
  8464  1E44  00F2               	movwf	___flge@ff1
  8465  1E45                     l3015:
  8466  1E45  1FF9               	btfss	___flge@ff2+3,7
  8467  1E46  2E48               	goto	u4721
  8468  1E47  2E49               	goto	u4720
  8469  1E48                     u4721:
  8470  1E48  2E6D               	goto	l574
  8471  1E49                     u4720:
  8472  1E49                     l3017:
  8473  1E49  3000               	movlw	0
  8474  1E4A  00A0               	movwf	??___flge
  8475  1E4B  3000               	movlw	0
  8476  1E4C  00A1               	movwf	??___flge+1
  8477  1E4D  3000               	movlw	0
  8478  1E4E  00A2               	movwf	??___flge+2
  8479  1E4F  3080               	movlw	128
  8480  1E50  00A3               	movwf	??___flge+3
  8481  1E51  0876               	movf	___flge@ff2,w
  8482  1E52  02A0               	subwf	??___flge,f
  8483  1E53  0877               	movf	___flge@ff2+1,w
  8484  1E54  1C03               	skipc
  8485  1E55  0F77               	incfsz	___flge@ff2+1,w
  8486  1E56  2E58               	goto	u4731
  8487  1E57  2E59               	goto	u4732
  8488  1E58                     u4731:
  8489  1E58  02A1               	subwf	??___flge+1,f
  8490  1E59                     u4732:
  8491  1E59  0878               	movf	___flge@ff2+2,w
  8492  1E5A  1C03               	skipc
  8493  1E5B  0F78               	incfsz	___flge@ff2+2,w
  8494  1E5C  2E5E               	goto	u4733
  8495  1E5D  2E5F               	goto	u4734
  8496  1E5E                     u4733:
  8497  1E5E  02A2               	subwf	??___flge+2,f
  8498  1E5F                     u4734:
  8499  1E5F  0879               	movf	___flge@ff2+3,w
  8500  1E60  1C03               	skipc
  8501  1E61  0F79               	incfsz	___flge@ff2+3,w
  8502  1E62  2E64               	goto	u4735
  8503  1E63  2E65               	goto	u4736
  8504  1E64                     u4735:
  8505  1E64  02A3               	subwf	??___flge+3,f
  8506  1E65                     u4736:
  8507  1E65  0823               	movf	??___flge+3,w
  8508  1E66  00F9               	movwf	___flge@ff2+3
  8509  1E67  0822               	movf	??___flge+2,w
  8510  1E68  00F8               	movwf	___flge@ff2+2
  8511  1E69  0821               	movf	??___flge+1,w
  8512  1E6A  00F7               	movwf	___flge@ff2+1
  8513  1E6B  0820               	movf	??___flge,w
  8514  1E6C  00F6               	movwf	___flge@ff2
  8515  1E6D                     l574:
  8516  1E6D  3080               	movlw	128
  8517  1E6E  06F5               	xorwf	___flge@ff1+3,f
  8518  1E6F  3080               	movlw	128
  8519  1E70  06F9               	xorwf	___flge@ff2+3,f
  8520  1E71  0879               	movf	___flge@ff2+3,w
  8521  1E72  0275               	subwf	___flge@ff1+3,w
  8522  1E73  1D03               	skipz
  8523  1E74  2E7F               	goto	u4745
  8524  1E75  0878               	movf	___flge@ff2+2,w
  8525  1E76  0274               	subwf	___flge@ff1+2,w
  8526  1E77  1D03               	skipz
  8527  1E78  2E7F               	goto	u4745
  8528  1E79  0877               	movf	___flge@ff2+1,w
  8529  1E7A  0273               	subwf	___flge@ff1+1,w
  8530  1E7B  1D03               	skipz
  8531  1E7C  2E7F               	goto	u4745
  8532  1E7D  0876               	movf	___flge@ff2,w
  8533  1E7E  0272               	subwf	___flge@ff1,w
  8534  1E7F                     u4745:
  8535  1E7F  1803               	skipnc
  8536  1E80  2E82               	goto	u4741
  8537  1E81  2E83               	goto	u4740
  8538  1E82                     u4741:
  8539  1E82  2E85               	goto	l3021
  8540  1E83                     u4740:
  8541  1E83                     l3019:
  8542  1E83  1003               	clrc
  8543  1E84  2E86               	goto	l575
  8544  1E85                     l3021:
  8545  1E85  1403               	setc
  8546  1E86                     l575:
  8547  1E86  0008               	return
  8548  1E87                     __end_of___flge:
  8549                           
  8550                           	psect	text22
  8551  1BF0                     __ptext22:	
  8552 ;; *************** function ___fleq *****************
  8553 ;; Defined at:
  8554 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  ff1             4    2[COMMON] unsigned char 
  8557 ;;  ff2             4    6[COMMON] unsigned char 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;		None               void
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8569 ;;      Params:         8       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0
  8571 ;;      Temps:          0       4       0       0       0
  8572 ;;      Totals:         8       4       0       0       0
  8573 ;;Total ram usage:       12 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    1
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_sprintf
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           
  8584                           ;psect for function ___fleq
  8585  1BF0                     ___fleq:
  8586  1BF0                     l2993:	
  8587                           ;incstack = 0
  8588                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8589                           
  8590  1BF0  3000               	movlw	0
  8591  1BF1  0572               	andwf	___fleq@ff1,w
  8592  1BF2  1283               	bcf	3,5	;RP0=0, select bank0
  8593  1BF3  1303               	bcf	3,6	;RP1=0, select bank0
  8594  1BF4  00A0               	movwf	??___fleq
  8595  1BF5  3000               	movlw	0
  8596  1BF6  0573               	andwf	___fleq@ff1+1,w
  8597  1BF7  00A1               	movwf	??___fleq+1
  8598  1BF8  3080               	movlw	128
  8599  1BF9  0574               	andwf	___fleq@ff1+2,w
  8600  1BFA  00A2               	movwf	??___fleq+2
  8601  1BFB  307F               	movlw	127
  8602  1BFC  0575               	andwf	___fleq@ff1+3,w
  8603  1BFD  00A3               	movwf	??___fleq+3
  8604  1BFE  0823               	movf	??___fleq+3,w
  8605  1BFF  0422               	iorwf	??___fleq+2,w
  8606  1C00  0421               	iorwf	??___fleq+1,w
  8607  1C01  0420               	iorwf	??___fleq,w
  8608  1C02  1D03               	skipz
  8609  1C03  2C05               	goto	u4651
  8610  1C04  2C06               	goto	u4650
  8611  1C05                     u4651:
  8612  1C05  2C0E               	goto	l566
  8613  1C06                     u4650:
  8614  1C06                     l2995:
  8615  1C06  3000               	movlw	0
  8616  1C07  00F5               	movwf	___fleq@ff1+3
  8617  1C08  3000               	movlw	0
  8618  1C09  00F4               	movwf	___fleq@ff1+2
  8619  1C0A  3000               	movlw	0
  8620  1C0B  00F3               	movwf	___fleq@ff1+1
  8621  1C0C  3000               	movlw	0
  8622  1C0D  00F2               	movwf	___fleq@ff1
  8623  1C0E                     l566:
  8624  1C0E  3000               	movlw	0
  8625  1C0F  0576               	andwf	___fleq@ff2,w
  8626  1C10  00A0               	movwf	??___fleq
  8627  1C11  3000               	movlw	0
  8628  1C12  0577               	andwf	___fleq@ff2+1,w
  8629  1C13  00A1               	movwf	??___fleq+1
  8630  1C14  3080               	movlw	128
  8631  1C15  0578               	andwf	___fleq@ff2+2,w
  8632  1C16  00A2               	movwf	??___fleq+2
  8633  1C17  307F               	movlw	127
  8634  1C18  0579               	andwf	___fleq@ff2+3,w
  8635  1C19  00A3               	movwf	??___fleq+3
  8636  1C1A  0823               	movf	??___fleq+3,w
  8637  1C1B  0422               	iorwf	??___fleq+2,w
  8638  1C1C  0421               	iorwf	??___fleq+1,w
  8639  1C1D  0420               	iorwf	??___fleq,w
  8640  1C1E  1D03               	skipz
  8641  1C1F  2C21               	goto	u4661
  8642  1C20  2C22               	goto	u4660
  8643  1C21                     u4661:
  8644  1C21  2C2A               	goto	l567
  8645  1C22                     u4660:
  8646  1C22                     l2997:
  8647  1C22  3000               	movlw	0
  8648  1C23  00F9               	movwf	___fleq@ff2+3
  8649  1C24  3000               	movlw	0
  8650  1C25  00F8               	movwf	___fleq@ff2+2
  8651  1C26  3000               	movlw	0
  8652  1C27  00F7               	movwf	___fleq@ff2+1
  8653  1C28  3000               	movlw	0
  8654  1C29  00F6               	movwf	___fleq@ff2
  8655  1C2A                     l567:
  8656  1C2A  0879               	movf	___fleq@ff2+3,w
  8657  1C2B  0675               	xorwf	___fleq@ff1+3,w
  8658  1C2C  1D03               	skipz
  8659  1C2D  2C38               	goto	u4675
  8660  1C2E  0878               	movf	___fleq@ff2+2,w
  8661  1C2F  0674               	xorwf	___fleq@ff1+2,w
  8662  1C30  1D03               	skipz
  8663  1C31  2C38               	goto	u4675
  8664  1C32  0877               	movf	___fleq@ff2+1,w
  8665  1C33  0673               	xorwf	___fleq@ff1+1,w
  8666  1C34  1D03               	skipz
  8667  1C35  2C38               	goto	u4675
  8668  1C36  0876               	movf	___fleq@ff2,w
  8669  1C37  0672               	xorwf	___fleq@ff1,w
  8670  1C38                     u4675:
  8671  1C38  1903               	skipnz
  8672  1C39  2C3B               	goto	u4671
  8673  1C3A  2C3C               	goto	u4670
  8674  1C3B                     u4671:
  8675  1C3B  2C3E               	goto	l3001
  8676  1C3C                     u4670:
  8677  1C3C                     l2999:
  8678  1C3C  1003               	clrc
  8679  1C3D  2C3F               	goto	l568
  8680  1C3E                     l3001:
  8681  1C3E  1403               	setc
  8682  1C3F                     l568:
  8683  1C3F  0008               	return
  8684  1C40                     __end_of___fleq:
  8685                           
  8686                           	psect	text23
  8687  1009                     __ptext23:	
  8688 ;; *************** function _USART_WriteStr *****************
  8689 ;; Defined at:
  8690 ;;		line 38 in file "USART.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  a               2    3[COMMON] PTR unsigned char 
  8693 ;;		 -> Lcdvar(20), STR_1(19), 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  i               1    6[COMMON] unsigned char 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8705 ;;      Params:         2       0       0       0       0
  8706 ;;      Locals:         1       0       0       0       0
  8707 ;;      Temps:          1       0       0       0       0
  8708 ;;      Totals:         4       0       0       0       0
  8709 ;;Total ram usage:        4 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    2
  8712 ;; This function calls:
  8713 ;;		_USART_Write
  8714 ;; This function is called by:
  8715 ;;		_main
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           
  8720                           ;psect for function _USART_WriteStr
  8721  1009                     _USART_WriteStr:
  8722  1009                     l3179:	
  8723                           ;incstack = 0
  8724                           ; Regs used in _USART_WriteStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8725                           
  8726                           
  8727                           ;USART.c: 39:     uint8_t i;;USART.c: 40:     for(i=0;a[i]!='\0';i++){
  8728  1009  01F6               	clrf	USART_WriteStr@i
  8729  100A  2820               	goto	l3185
  8730  100B                     l3181:
  8731                           
  8732                           ;USART.c: 41:         USART_Write(a[i]);
  8733  100B  0876               	movf	USART_WriteStr@i,w
  8734  100C  0773               	addwf	USART_WriteStr@a,w
  8735  100D  0084               	movwf	4
  8736  100E  0874               	movf	USART_WriteStr@a+1,w
  8737  100F  1803               	skipnc
  8738  1010  0A74               	incf	USART_WriteStr@a+1,w
  8739  1011  00FF               	movwf	btemp+1
  8740  1012  120A  158A  2000  160A  118A  	fcall	stringtab
  8741  1017  160A  158A  21CB  160A  118A  	fcall	_USART_Write
  8742  101C                     l3183:
  8743                           
  8744                           ;USART.c: 42:     }
  8745  101C  3001               	movlw	1
  8746  101D  00F5               	movwf	??_USART_WriteStr
  8747  101E  0875               	movf	??_USART_WriteStr,w
  8748  101F  07F6               	addwf	USART_WriteStr@i,f
  8749  1020                     l3185:
  8750  1020  0876               	movf	USART_WriteStr@i,w
  8751  1021  0773               	addwf	USART_WriteStr@a,w
  8752  1022  0084               	movwf	4
  8753  1023  0874               	movf	USART_WriteStr@a+1,w
  8754  1024  1803               	skipnc
  8755  1025  0A74               	incf	USART_WriteStr@a+1,w
  8756  1026  1283               	bcf	3,5	;RP0=0, select bank0
  8757  1027  1303               	bcf	3,6	;RP1=0, select bank0
  8758  1028  00FF               	movwf	btemp+1
  8759  1029  120A  158A  2000  160A  118A  	fcall	stringtab
  8760  102E  3A00               	xorlw	0
  8761  102F  1D03               	skipz
  8762  1030  2832               	goto	u5061
  8763  1031  2833               	goto	u5060
  8764  1032                     u5061:
  8765  1032  280B               	goto	l3181
  8766  1033                     u5060:
  8767  1033                     l169:
  8768  1033  0008               	return
  8769  1034                     __end_of_USART_WriteStr:
  8770                           
  8771                           	psect	text24
  8772  19CB                     __ptext24:	
  8773 ;; *************** function _USART_Write *****************
  8774 ;; Defined at:
  8775 ;;		line 33 in file "USART.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  a               1    wreg     unsigned char 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;  a               1    2[COMMON] unsigned char 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		wreg
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8789 ;;      Params:         0       0       0       0       0
  8790 ;;      Locals:         1       0       0       0       0
  8791 ;;      Temps:          0       0       0       0       0
  8792 ;;      Totals:         1       0       0       0       0
  8793 ;;Total ram usage:        1 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    1
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_main
  8800 ;;		_USART_WriteStr
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           
  8805                           ;psect for function _USART_Write
  8806  19CB                     _USART_Write:
  8807                           
  8808                           ;incstack = 0
  8809                           ; Regs used in _USART_Write: [wreg]
  8810                           ;USART_Write@a stored from wreg
  8811  19CB  00F2               	movwf	USART_Write@a
  8812  19CC                     l2753:
  8813  19CC                     l160:	
  8814                           ;USART.c: 34:     while(!TRMT);
  8815                           
  8816  19CC  1683               	bsf	3,5	;RP0=1, select bank1
  8817  19CD  1303               	bcf	3,6	;RP1=0, select bank1
  8818  19CE  1C98               	btfss	24,1	;volatile
  8819  19CF  29D1               	goto	u4001
  8820  19D0  29D2               	goto	u4000
  8821  19D1                     u4001:
  8822  19D1  29CC               	goto	l160
  8823  19D2                     u4000:
  8824  19D2                     l2755:
  8825                           
  8826                           ;USART.c: 35:     TXREG=a;
  8827  19D2  0872               	movf	USART_Write@a,w
  8828  19D3  1283               	bcf	3,5	;RP0=0, select bank0
  8829  19D4  1303               	bcf	3,6	;RP1=0, select bank0
  8830  19D5  0099               	movwf	25	;volatile
  8831  19D6                     l163:
  8832  19D6  0008               	return
  8833  19D7                     __end_of_USART_Write:
  8834                           
  8835                           	psect	text25
  8836  1AA5                     __ptext25:	
  8837 ;; *************** function _Setup *****************
  8838 ;; Defined at:
  8839 ;;		line 66 in file "Master_main.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;		None
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0, pclath, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8853 ;;      Params:         0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0
  8856 ;;      Totals:         0       0       0       0       0
  8857 ;;Total ram usage:        0 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    2
  8860 ;; This function calls:
  8861 ;;		_SPI_MASTER
  8862 ;; This function is called by:
  8863 ;;		_main
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           
  8868                           ;psect for function _Setup
  8869  1AA5                     _Setup:
  8870  1AA5                     l3139:	
  8871                           ;incstack = 0
  8872                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  8873                           
  8874                           
  8875                           ;Master_main.c: 68:     ANSEL = 0b00000011;
  8876  1AA5  3003               	movlw	3
  8877  1AA6  1683               	bsf	3,5	;RP0=1, select bank3
  8878  1AA7  1703               	bsf	3,6	;RP1=1, select bank3
  8879  1AA8  0088               	movwf	8	;volatile
  8880  1AA9                     l3141:
  8881                           
  8882                           ;Master_main.c: 69:     ANSELH = 0;
  8883  1AA9  0189               	clrf	9	;volatile
  8884  1AAA                     l3143:
  8885                           
  8886                           ;Master_main.c: 71:     TRISA = 0b00000011;
  8887  1AAA  3003               	movlw	3
  8888  1AAB  1683               	bsf	3,5	;RP0=1, select bank1
  8889  1AAC  1303               	bcf	3,6	;RP1=0, select bank1
  8890  1AAD  0085               	movwf	5	;volatile
  8891                           
  8892                           ;Master_main.c: 72:     PORTA = 0;
  8893  1AAE  1283               	bcf	3,5	;RP0=0, select bank0
  8894  1AAF  1303               	bcf	3,6	;RP1=0, select bank0
  8895  1AB0  0185               	clrf	5	;volatile
  8896                           
  8897                           ;Master_main.c: 78:     TRISD = 0;
  8898  1AB1  1683               	bsf	3,5	;RP0=1, select bank1
  8899  1AB2  1303               	bcf	3,6	;RP1=0, select bank1
  8900  1AB3  0188               	clrf	8	;volatile
  8901                           
  8902                           ;Master_main.c: 79:     PORTD = 0;
  8903  1AB4  1283               	bcf	3,5	;RP0=0, select bank0
  8904  1AB5  1303               	bcf	3,6	;RP1=0, select bank0
  8905  1AB6  0188               	clrf	8	;volatile
  8906                           
  8907                           ;Master_main.c: 81:     TRISE = 0;
  8908  1AB7  1683               	bsf	3,5	;RP0=1, select bank1
  8909  1AB8  1303               	bcf	3,6	;RP1=0, select bank1
  8910  1AB9  0189               	clrf	9	;volatile
  8911                           
  8912                           ;Master_main.c: 82:     PORTE = 0;
  8913  1ABA  1283               	bcf	3,5	;RP0=0, select bank0
  8914  1ABB  1303               	bcf	3,6	;RP1=0, select bank0
  8915  1ABC  0189               	clrf	9	;volatile
  8916                           
  8917                           ;Master_main.c: 84:     TRISB = 0;
  8918  1ABD  1683               	bsf	3,5	;RP0=1, select bank1
  8919  1ABE  1303               	bcf	3,6	;RP1=0, select bank1
  8920  1ABF  0186               	clrf	6	;volatile
  8921                           
  8922                           ;Master_main.c: 85:     PORTB = 0;
  8923  1AC0  1283               	bcf	3,5	;RP0=0, select bank0
  8924  1AC1  1303               	bcf	3,6	;RP1=0, select bank0
  8925  1AC2  0186               	clrf	6	;volatile
  8926  1AC3                     l3145:
  8927                           
  8928                           ;Master_main.c: 87:     SPI_MASTER();
  8929  1AC3  160A  158A  21BF  160A  158A  	fcall	_SPI_MASTER
  8930  1AC8                     l3147:
  8931                           
  8932                           ;Master_main.c: 89:     TRISCbits.TRISC0 = 0;
  8933  1AC8  1683               	bsf	3,5	;RP0=1, select bank1
  8934  1AC9  1303               	bcf	3,6	;RP1=0, select bank1
  8935  1ACA  1007               	bcf	7,0	;volatile
  8936  1ACB                     l3149:
  8937                           
  8938                           ;Master_main.c: 90:     PORTCbits.RC0 = 0;
  8939  1ACB  1283               	bcf	3,5	;RP0=0, select bank0
  8940  1ACC  1303               	bcf	3,6	;RP1=0, select bank0
  8941  1ACD  1007               	bcf	7,0	;volatile
  8942  1ACE                     l3151:
  8943                           
  8944                           ;Master_main.c: 92:     TRISCbits.TRISC1 = 0;
  8945  1ACE  1683               	bsf	3,5	;RP0=1, select bank1
  8946  1ACF  1303               	bcf	3,6	;RP1=0, select bank1
  8947  1AD0  1087               	bcf	7,1	;volatile
  8948  1AD1                     l3153:
  8949                           
  8950                           ;Master_main.c: 93:     PORTCbits.RC1 = 1;
  8951  1AD1  1283               	bcf	3,5	;RP0=0, select bank0
  8952  1AD2  1303               	bcf	3,6	;RP1=0, select bank0
  8953  1AD3  1487               	bsf	7,1	;volatile
  8954  1AD4                     l3155:
  8955                           
  8956                           ;Master_main.c: 95:     TRISCbits.TRISC2 = 0;
  8957  1AD4  1683               	bsf	3,5	;RP0=1, select bank1
  8958  1AD5  1303               	bcf	3,6	;RP1=0, select bank1
  8959  1AD6  1107               	bcf	7,2	;volatile
  8960  1AD7                     l3157:
  8961                           
  8962                           ;Master_main.c: 96:     PORTCbits.RC2 = 1;
  8963  1AD7  1283               	bcf	3,5	;RP0=0, select bank0
  8964  1AD8  1303               	bcf	3,6	;RP1=0, select bank0
  8965  1AD9  1507               	bsf	7,2	;volatile
  8966  1ADA                     l71:
  8967  1ADA  0008               	return
  8968  1ADB                     __end_of_Setup:
  8969                           
  8970                           	psect	text26
  8971  19BF                     __ptext26:	
  8972 ;; *************** function _SPI_MASTER *****************
  8973 ;; Defined at:
  8974 ;;		line 3 in file "LIB_MASTERSPI.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;		None
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1    wreg      void 
  8981 ;; Registers used:
  8982 ;;		wreg, status,2
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8988 ;;      Params:         0       0       0       0       0
  8989 ;;      Locals:         0       0       0       0       0
  8990 ;;      Temps:          0       0       0       0       0
  8991 ;;      Totals:         0       0       0       0       0
  8992 ;;Total ram usage:        0 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:    1
  8995 ;; This function calls:
  8996 ;;		Nothing
  8997 ;; This function is called by:
  8998 ;;		_Setup
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           
  9003                           ;psect for function _SPI_MASTER
  9004  19BF                     _SPI_MASTER:
  9005  19BF                     l2747:	
  9006                           ;incstack = 0
  9007                           ; Regs used in _SPI_MASTER: [wreg+status,2]
  9008                           
  9009                           
  9010                           ;LIB_MASTERSPI.c: 5:     TRISCbits.TRISC3 = 0;
  9011  19BF  1683               	bsf	3,5	;RP0=1, select bank1
  9012  19C0  1303               	bcf	3,6	;RP1=0, select bank1
  9013  19C1  1187               	bcf	7,3	;volatile
  9014                           
  9015                           ;LIB_MASTERSPI.c: 6:     TRISCbits.TRISC5 = 0;
  9016  19C2  1287               	bcf	7,5	;volatile
  9017  19C3                     l2749:
  9018                           
  9019                           ;LIB_MASTERSPI.c: 7:     SSPCON = 0b00100000;
  9020  19C3  3020               	movlw	32
  9021  19C4  1283               	bcf	3,5	;RP0=0, select bank0
  9022  19C5  1303               	bcf	3,6	;RP1=0, select bank0
  9023  19C6  0094               	movwf	20	;volatile
  9024  19C7                     l2751:
  9025                           
  9026                           ;LIB_MASTERSPI.c: 8:     SSPSTAT = 0;
  9027  19C7  1683               	bsf	3,5	;RP0=1, select bank1
  9028  19C8  1303               	bcf	3,6	;RP1=0, select bank1
  9029  19C9  0194               	clrf	20	;volatile
  9030  19CA                     l184:
  9031  19CA  0008               	return
  9032  19CB                     __end_of_SPI_MASTER:
  9033                           
  9034                           	psect	text27
  9035  199A                     __ptext27:	
  9036 ;; *************** function _Set_BaudRate *****************
  9037 ;; Defined at:
  9038 ;;		line 13 in file "USART.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;		None
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;		None
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      void 
  9045 ;; Registers used:
  9046 ;;		wreg
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9052 ;;      Params:         0       0       0       0       0
  9053 ;;      Locals:         0       0       0       0       0
  9054 ;;      Temps:          0       0       0       0       0
  9055 ;;      Totals:         0       0       0       0       0
  9056 ;;Total ram usage:        0 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:    1
  9059 ;; This function calls:
  9060 ;;		Nothing
  9061 ;; This function is called by:
  9062 ;;		_main
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           
  9066                           
  9067                           ;psect for function _Set_BaudRate
  9068  199A                     _Set_BaudRate:
  9069  199A                     l3173:	
  9070                           ;incstack = 0
  9071                           ; Regs used in _Set_BaudRate: [wreg]
  9072                           
  9073                           
  9074                           ;USART.c: 14:     SPBRG = 12;
  9075  199A  300C               	movlw	12
  9076  199B  1683               	bsf	3,5	;RP0=1, select bank1
  9077  199C  1303               	bcf	3,6	;RP1=0, select bank1
  9078  199D  0099               	movwf	25	;volatile
  9079  199E                     l151:
  9080  199E  0008               	return
  9081  199F                     __end_of_Set_BaudRate:
  9082                           
  9083                           	psect	text28
  9084  1B15                     __ptext28:	
  9085 ;; *************** function _LCD_Write_String *****************
  9086 ;; Defined at:
  9087 ;;		line 67 in file "LCD.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;  a               2    5[COMMON] PTR unsigned char 
  9090 ;;		 -> STR_3(16), Lcdvar(20), 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  i               2    0[BANK0 ] int 
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9102 ;;      Params:         2       0       0       0       0
  9103 ;;      Locals:         0       2       0       0       0
  9104 ;;      Temps:          3       0       0       0       0
  9105 ;;      Totals:         5       2       0       0       0
  9106 ;;Total ram usage:        7 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:    3
  9109 ;; This function calls:
  9110 ;;		_LCD_Write_Char
  9111 ;; This function is called by:
  9112 ;;		_main
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           
  9116                           
  9117                           ;psect for function _LCD_Write_String
  9118  1B15                     _LCD_Write_String:
  9119  1B15                     l3945:	
  9120                           ;incstack = 0
  9121                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9122                           
  9123                           
  9124                           ;LCD.c: 68:  int i;;LCD.c: 69:  for(i=0;a[i]!='\0';i++)
  9125  1B15  1283               	bcf	3,5	;RP0=0, select bank0
  9126  1B16  1303               	bcf	3,6	;RP1=0, select bank0
  9127  1B17  01A0               	clrf	LCD_Write_String@i
  9128  1B18  01A1               	clrf	LCD_Write_String@i+1
  9129  1B19  2B3E               	goto	l3951
  9130  1B1A                     l3947:
  9131                           
  9132                           ;LCD.c: 70:     LCD_Write_Char(a[i]);
  9133  1B1A  0820               	movf	LCD_Write_String@i,w
  9134  1B1B  0775               	addwf	LCD_Write_String@a,w
  9135  1B1C  00F8               	movwf	??_LCD_Write_String+1
  9136  1B1D  0876               	movf	LCD_Write_String@a+1,w
  9137  1B1E  00F7               	movwf	??_LCD_Write_String
  9138  1B1F  1803               	skipnc
  9139  1B20  0AF7               	incf	??_LCD_Write_String,f
  9140  1B21  1FA0               	btfss	LCD_Write_String@i,7
  9141  1B22  2B24               	goto	u6320
  9142  1B23  03F7               	decf	??_LCD_Write_String,f
  9143  1B24                     u6320:
  9144  1B24  0877               	movf	??_LCD_Write_String,w
  9145  1B25  00F9               	movwf	??_LCD_Write_String+2
  9146  1B26  0879               	movf	??_LCD_Write_String+2,w
  9147  1B27  1283               	bcf	3,5	;RP0=0, select bank0
  9148  1B28  1303               	bcf	3,6	;RP1=0, select bank0
  9149  1B29  00FF               	movwf	btemp+1
  9150  1B2A  0878               	movf	??_LCD_Write_String+1,w
  9151  1B2B  0084               	movwf	4
  9152  1B2C  120A  158A  2000  160A  158A  	fcall	stringtab
  9153  1B31  160A  158A  21F7  160A  158A  	fcall	_LCD_Write_Char
  9154  1B36                     l3949:
  9155  1B36  3001               	movlw	1
  9156  1B37  1283               	bcf	3,5	;RP0=0, select bank0
  9157  1B38  1303               	bcf	3,6	;RP1=0, select bank0
  9158  1B39  07A0               	addwf	LCD_Write_String@i,f
  9159  1B3A  1803               	skipnc
  9160  1B3B  0AA1               	incf	LCD_Write_String@i+1,f
  9161  1B3C  3000               	movlw	0
  9162  1B3D  07A1               	addwf	LCD_Write_String@i+1,f
  9163  1B3E                     l3951:
  9164  1B3E  0820               	movf	LCD_Write_String@i,w
  9165  1B3F  0775               	addwf	LCD_Write_String@a,w
  9166  1B40  00F8               	movwf	??_LCD_Write_String+1
  9167  1B41  0876               	movf	LCD_Write_String@a+1,w
  9168  1B42  00F7               	movwf	??_LCD_Write_String
  9169  1B43  1803               	skipnc
  9170  1B44  0AF7               	incf	??_LCD_Write_String,f
  9171  1B45  1FA0               	btfss	LCD_Write_String@i,7
  9172  1B46  2B48               	goto	u6330
  9173  1B47  03F7               	decf	??_LCD_Write_String,f
  9174  1B48                     u6330:
  9175  1B48  0877               	movf	??_LCD_Write_String,w
  9176  1B49  00F9               	movwf	??_LCD_Write_String+2
  9177  1B4A  0879               	movf	??_LCD_Write_String+2,w
  9178  1B4B  1283               	bcf	3,5	;RP0=0, select bank0
  9179  1B4C  1303               	bcf	3,6	;RP1=0, select bank0
  9180  1B4D  00FF               	movwf	btemp+1
  9181  1B4E  0878               	movf	??_LCD_Write_String+1,w
  9182  1B4F  0084               	movwf	4
  9183  1B50  120A  158A  2000  160A  158A  	fcall	stringtab
  9184  1B55  3A00               	xorlw	0
  9185  1B56  1D03               	skipz
  9186  1B57  2B59               	goto	u6341
  9187  1B58  2B5A               	goto	u6340
  9188  1B59                     u6341:
  9189  1B59  2B1A               	goto	l3947
  9190  1B5A                     u6340:
  9191  1B5A                     l126:
  9192  1B5A  0008               	return
  9193  1B5B                     __end_of_LCD_Write_String:
  9194                           
  9195                           	psect	text29
  9196  19F7                     __ptext29:	
  9197 ;; *************** function _LCD_Write_Char *****************
  9198 ;; Defined at:
  9199 ;;		line 30 in file "LCD.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;  a               1    wreg     unsigned char 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;  a               1    4[COMMON] unsigned char 
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  1    wreg      void 
  9206 ;; Registers used:
  9207 ;;		wreg, status,2, status,0, pclath, cstack
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9213 ;;      Params:         0       0       0       0       0
  9214 ;;      Locals:         1       0       0       0       0
  9215 ;;      Temps:          1       0       0       0       0
  9216 ;;      Totals:         2       0       0       0       0
  9217 ;;Total ram usage:        2 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; Hardware stack levels required when called:    2
  9220 ;; This function calls:
  9221 ;;		_LCD_Port
  9222 ;; This function is called by:
  9223 ;;		_LCD_Write_String
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           
  9228                           ;psect for function _LCD_Write_Char
  9229  19F7                     _LCD_Write_Char:
  9230                           
  9231                           ;incstack = 0
  9232                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9233                           ;LCD_Write_Char@a stored from wreg
  9234  19F7  00F4               	movwf	LCD_Write_Char@a
  9235  19F8                     l3607:
  9236                           
  9237                           ;LCD.c: 31:     RE0 = 1;
  9238  19F8  1283               	bcf	3,5	;RP0=0, select bank0
  9239  19F9  1303               	bcf	3,6	;RP1=0, select bank0
  9240  19FA  1409               	bsf	9,0	;volatile
  9241  19FB                     l3609:
  9242                           
  9243                           ;LCD.c: 32:     LCD_Port(a);
  9244  19FB  0874               	movf	LCD_Write_Char@a,w
  9245  19FC  160A  158A  219F  160A  158A  	fcall	_LCD_Port
  9246  1A01                     l3611:
  9247                           
  9248                           ;LCD.c: 33:     RE1 = 1;
  9249  1A01  1283               	bcf	3,5	;RP0=0, select bank0
  9250  1A02  1303               	bcf	3,6	;RP1=0, select bank0
  9251  1A03  1489               	bsf	9,1	;volatile
  9252  1A04                     l3613:
  9253                           
  9254                           ;LCD.c: 34:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9255  1A04  301A               	movlw	26
  9256  1A05  00F3               	movwf	??_LCD_Write_Char
  9257  1A06                     u6427:
  9258  1A06  0BF3               	decfsz	??_LCD_Write_Char,f
  9259  1A07  2A06               	goto	u6427
  9260  1A08  0000               	nop
  9261  1A09                     l3615:
  9262                           
  9263                           ;LCD.c: 35:     RE1 = 0;
  9264  1A09  1283               	bcf	3,5	;RP0=0, select bank0
  9265  1A0A  1303               	bcf	3,6	;RP1=0, select bank0
  9266  1A0B  1089               	bcf	9,1	;volatile
  9267  1A0C                     l3617:
  9268                           
  9269                           ;LCD.c: 36:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  9270  1A0C  3006               	movlw	6
  9271  1A0D  00F3               	movwf	??_LCD_Write_Char
  9272  1A0E                     u6437:
  9273  1A0E  0BF3               	decfsz	??_LCD_Write_Char,f
  9274  1A0F  2A0E               	goto	u6437
  9275  1A10  0000               	nop
  9276  1A11                     l108:
  9277  1A11  0008               	return
  9278  1A12                     __end_of_LCD_Write_Char:
  9279                           
  9280                           	psect	text30
  9281  1A35                     __ptext30:	
  9282 ;; *************** function _LCD_Set_Cursor *****************
  9283 ;; Defined at:
  9284 ;;		line 53 in file "LCD.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;  x               1    wreg     unsigned char 
  9287 ;;  y               1    6[COMMON] unsigned char 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;  x               1    8[COMMON] unsigned char 
  9290 ;;  a               1    9[COMMON] unsigned char 
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  1    wreg      void 
  9293 ;; Registers used:
  9294 ;;		wreg, status,2, status,0, pclath, cstack
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9300 ;;      Params:         1       0       0       0       0
  9301 ;;      Locals:         2       0       0       0       0
  9302 ;;      Temps:          1       0       0       0       0
  9303 ;;      Totals:         4       0       0       0       0
  9304 ;;Total ram usage:        4 bytes
  9305 ;; Hardware stack levels used:    1
  9306 ;; Hardware stack levels required when called:    3
  9307 ;; This function calls:
  9308 ;;		_LCD_Cmd
  9309 ;; This function is called by:
  9310 ;;		_main
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           
  9315                           ;psect for function _LCD_Set_Cursor
  9316  1A35                     _LCD_Set_Cursor:
  9317                           
  9318                           ;incstack = 0
  9319                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9320                           ;LCD_Set_Cursor@x stored from wreg
  9321  1A35  00F8               	movwf	LCD_Set_Cursor@x
  9322  1A36                     l3933:
  9323                           
  9324                           ;LCD.c: 54:  uint8_t a;;LCD.c: 55:  if(x == 1)
  9325  1A36  0378               	decf	LCD_Set_Cursor@x,w
  9326  1A37  1D03               	btfss	3,2
  9327  1A38  2A3A               	goto	u6301
  9328  1A39  2A3B               	goto	u6300
  9329  1A3A                     u6301:
  9330  1A3A  2A47               	goto	l3939
  9331  1A3B                     u6300:
  9332  1A3B                     l3935:
  9333                           
  9334                           ;LCD.c: 56:  {;LCD.c: 57:         a = 0x80 + y;
  9335  1A3B  0876               	movf	LCD_Set_Cursor@y,w
  9336  1A3C  3E80               	addlw	128
  9337  1A3D  00F7               	movwf	??_LCD_Set_Cursor
  9338  1A3E  0877               	movf	??_LCD_Set_Cursor,w
  9339  1A3F  00F9               	movwf	LCD_Set_Cursor@a
  9340  1A40                     l3937:
  9341                           
  9342                           ;LCD.c: 58:   LCD_Cmd(a);
  9343  1A40  0879               	movf	LCD_Set_Cursor@a,w
  9344  1A41  160A  158A  2212  160A  158A  	fcall	_LCD_Cmd
  9345                           
  9346                           ;LCD.c: 59:  }
  9347  1A46  2A58               	goto	l120
  9348  1A47                     l3939:
  9349  1A47  3002               	movlw	2
  9350  1A48  0678               	xorwf	LCD_Set_Cursor@x,w
  9351  1A49  1D03               	btfss	3,2
  9352  1A4A  2A4C               	goto	u6311
  9353  1A4B  2A4D               	goto	u6310
  9354  1A4C                     u6311:
  9355  1A4C  2A58               	goto	l120
  9356  1A4D                     u6310:
  9357  1A4D                     l3941:
  9358                           
  9359                           ;LCD.c: 61:  {;LCD.c: 62:   a = 0xC0 + y;
  9360  1A4D  0876               	movf	LCD_Set_Cursor@y,w
  9361  1A4E  3EC0               	addlw	192
  9362  1A4F  00F7               	movwf	??_LCD_Set_Cursor
  9363  1A50  0877               	movf	??_LCD_Set_Cursor,w
  9364  1A51  00F9               	movwf	LCD_Set_Cursor@a
  9365  1A52                     l3943:
  9366                           
  9367                           ;LCD.c: 63:   LCD_Cmd(a);
  9368  1A52  0879               	movf	LCD_Set_Cursor@a,w
  9369  1A53  160A  158A  2212  160A  158A  	fcall	_LCD_Cmd
  9370  1A58                     l120:
  9371  1A58  0008               	return
  9372  1A59                     __end_of_LCD_Set_Cursor:
  9373                           
  9374                           	psect	text31
  9375  1BA1                     __ptext31:	
  9376 ;; *************** function _LCD_Init *****************
  9377 ;; Defined at:
  9378 ;;		line 10 in file "LCD.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;		None
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;		None
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  1    wreg      void 
  9385 ;; Registers used:
  9386 ;;		wreg, status,2, status,0, pclath, cstack
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9392 ;;      Params:         0       0       0       0       0
  9393 ;;      Locals:         0       0       0       0       0
  9394 ;;      Temps:          2       0       0       0       0
  9395 ;;      Totals:         2       0       0       0       0
  9396 ;;Total ram usage:        2 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; Hardware stack levels required when called:    3
  9399 ;; This function calls:
  9400 ;;		_LCD_Cmd
  9401 ;;		_LCD_Port
  9402 ;; This function is called by:
  9403 ;;		_main
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           
  9408                           ;psect for function _LCD_Init
  9409  1BA1                     _LCD_Init:
  9410  1BA1                     l3657:	
  9411                           ;incstack = 0
  9412                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9413                           
  9414                           
  9415                           ;LCD.c: 11:     RE0=0;
  9416  1BA1  1283               	bcf	3,5	;RP0=0, select bank0
  9417  1BA2  1303               	bcf	3,6	;RP1=0, select bank0
  9418  1BA3  1009               	bcf	9,0	;volatile
  9419                           
  9420                           ;LCD.c: 12:     RE1=0;
  9421  1BA4  1089               	bcf	9,1	;volatile
  9422  1BA5                     l3659:
  9423                           
  9424                           ;LCD.c: 13:     LCD_Port(0x00);
  9425  1BA5  3000               	movlw	0
  9426  1BA6  160A  158A  219F  160A  158A  	fcall	_LCD_Port
  9427  1BAB                     l3661:
  9428                           
  9429                           ;LCD.c: 14:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9430  1BAB  3034               	movlw	52
  9431  1BAC  00F7               	movwf	??_LCD_Init+1
  9432  1BAD  30F1               	movlw	241
  9433  1BAE  00F6               	movwf	??_LCD_Init
  9434  1BAF                     u6447:
  9435  1BAF  0BF6               	decfsz	??_LCD_Init,f
  9436  1BB0  2BAF               	goto	u6447
  9437  1BB1  0BF7               	decfsz	??_LCD_Init+1,f
  9438  1BB2  2BAF               	goto	u6447
  9439  1BB3  2BB4               	nop2
  9440  1BB4                     l3663:
  9441                           
  9442                           ;LCD.c: 15:     LCD_Cmd(0x30);
  9443  1BB4  3030               	movlw	48
  9444  1BB5  160A  158A  2212  160A  158A  	fcall	_LCD_Cmd
  9445                           
  9446                           ;LCD.c: 16:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9447  1BBA  300D               	movlw	13
  9448  1BBB  00F7               	movwf	??_LCD_Init+1
  9449  1BBC  30FB               	movlw	251
  9450  1BBD  00F6               	movwf	??_LCD_Init
  9451  1BBE                     u6457:
  9452  1BBE  0BF6               	decfsz	??_LCD_Init,f
  9453  1BBF  2BBE               	goto	u6457
  9454  1BC0  0BF7               	decfsz	??_LCD_Init+1,f
  9455  1BC1  2BBE               	goto	u6457
  9456  1BC2  2BC3               	nop2
  9457  1BC3                     l3665:
  9458                           
  9459                           ;LCD.c: 17:     LCD_Cmd(0x30);
  9460  1BC3  3030               	movlw	48
  9461  1BC4  160A  158A  2212  160A  158A  	fcall	_LCD_Cmd
  9462  1BC9                     l3667:
  9463                           
  9464                           ;LCD.c: 18:     _delay((unsigned long)((11)*(8000000/4000.0)));
  9465  1BC9  301D               	movlw	29
  9466  1BCA  00F7               	movwf	??_LCD_Init+1
  9467  1BCB  3091               	movlw	145
  9468  1BCC  00F6               	movwf	??_LCD_Init
  9469  1BCD                     u6467:
  9470  1BCD  0BF6               	decfsz	??_LCD_Init,f
  9471  1BCE  2BCD               	goto	u6467
  9472  1BCF  0BF7               	decfsz	??_LCD_Init+1,f
  9473  1BD0  2BCD               	goto	u6467
  9474                           
  9475                           ;LCD.c: 19:     LCD_Cmd(0x30);
  9476  1BD1  3030               	movlw	48
  9477  1BD2  160A  158A  2212  160A  158A  	fcall	_LCD_Cmd
  9478                           
  9479                           ;LCD.c: 20:     LCD_Cmd(0x38);
  9480  1BD7  3038               	movlw	56
  9481  1BD8  160A  158A  2212  160A  158A  	fcall	_LCD_Cmd
  9482                           
  9483                           ;LCD.c: 21:     LCD_Cmd(0x0C);
  9484  1BDD  300C               	movlw	12
  9485  1BDE  160A  158A  2212  160A  158A  	fcall	_LCD_Cmd
  9486                           
  9487                           ;LCD.c: 22:     LCD_Cmd(0x01);
  9488  1BE3  3001               	movlw	1
  9489  1BE4  160A  158A  2212  160A  158A  	fcall	_LCD_Cmd
  9490                           
  9491                           ;LCD.c: 23:     LCD_Cmd(0x06);
  9492  1BE9  3006               	movlw	6
  9493  1BEA  160A  158A  2212  160A  158A  	fcall	_LCD_Cmd
  9494  1BEF                     l102:
  9495  1BEF  0008               	return
  9496  1BF0                     __end_of_LCD_Init:
  9497                           
  9498                           	psect	text32
  9499  08D6                     __ptext32:	
  9500 ;; *************** function _LCD_Clear *****************
  9501 ;; Defined at:
  9502 ;;		line 48 in file "LCD.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;		None
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;		None
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  1    wreg      void 
  9509 ;; Registers used:
  9510 ;;		wreg, status,2, status,0, pclath, cstack
  9511 ;; Tracked objects:
  9512 ;;		On entry : 0/0
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9516 ;;      Params:         0       0       0       0       0
  9517 ;;      Locals:         0       0       0       0       0
  9518 ;;      Temps:          0       0       0       0       0
  9519 ;;      Totals:         0       0       0       0       0
  9520 ;;Total ram usage:        0 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:    3
  9523 ;; This function calls:
  9524 ;;		_LCD_Cmd
  9525 ;; This function is called by:
  9526 ;;		_main
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           
  9531                           ;psect for function _LCD_Clear
  9532  08D6                     _LCD_Clear:
  9533  08D6                     l3669:	
  9534                           ;incstack = 0
  9535                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  9536                           
  9537                           
  9538                           ;LCD.c: 49:     LCD_Cmd(0);
  9539  08D6  3000               	movlw	0
  9540  08D7  160A  158A  2212  120A  158A  	fcall	_LCD_Cmd
  9541                           
  9542                           ;LCD.c: 50:     LCD_Cmd(1);
  9543  08DC  3001               	movlw	1
  9544  08DD  160A  158A  2212  120A  158A  	fcall	_LCD_Cmd
  9545  08E2                     l114:
  9546  08E2  0008               	return
  9547  08E3                     __end_of_LCD_Clear:
  9548                           
  9549                           	psect	text33
  9550  1A12                     __ptext33:	
  9551 ;; *************** function _LCD_Cmd *****************
  9552 ;; Defined at:
  9553 ;;		line 39 in file "LCD.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  a               1    wreg     unsigned char 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  a               1    5[COMMON] unsigned char 
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      void 
  9560 ;; Registers used:
  9561 ;;		wreg, status,2, status,0, pclath, cstack
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9567 ;;      Params:         0       0       0       0       0
  9568 ;;      Locals:         1       0       0       0       0
  9569 ;;      Temps:          2       0       0       0       0
  9570 ;;      Totals:         3       0       0       0       0
  9571 ;;Total ram usage:        3 bytes
  9572 ;; Hardware stack levels used:    1
  9573 ;; Hardware stack levels required when called:    2
  9574 ;; This function calls:
  9575 ;;		_LCD_Port
  9576 ;; This function is called by:
  9577 ;;		_LCD_Init
  9578 ;;		_LCD_Clear
  9579 ;;		_LCD_Set_Cursor
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           
  9584                           ;psect for function _LCD_Cmd
  9585  1A12                     _LCD_Cmd:
  9586                           
  9587                           ;incstack = 0
  9588                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9589                           ;LCD_Cmd@a stored from wreg
  9590  1A12  00F5               	movwf	LCD_Cmd@a
  9591  1A13                     l3595:
  9592                           
  9593                           ;LCD.c: 40:     RE0=0;
  9594  1A13  1283               	bcf	3,5	;RP0=0, select bank0
  9595  1A14  1303               	bcf	3,6	;RP1=0, select bank0
  9596  1A15  1009               	bcf	9,0	;volatile
  9597  1A16                     l3597:
  9598                           
  9599                           ;LCD.c: 41:     LCD_Port(a);
  9600  1A16  0875               	movf	LCD_Cmd@a,w
  9601  1A17  160A  158A  219F  160A  158A  	fcall	_LCD_Port
  9602  1A1C                     l3599:
  9603                           
  9604                           ;LCD.c: 42:     RE1=1;
  9605  1A1C  1283               	bcf	3,5	;RP0=0, select bank0
  9606  1A1D  1303               	bcf	3,6	;RP1=0, select bank0
  9607  1A1E  1489               	bsf	9,1	;volatile
  9608  1A1F                     l3601:
  9609                           
  9610                           ;LCD.c: 43:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9611  1A1F  300B               	movlw	11
  9612  1A20  00F4               	movwf	??_LCD_Cmd+1
  9613  1A21  3062               	movlw	98
  9614  1A22  00F3               	movwf	??_LCD_Cmd
  9615  1A23                     u6477:
  9616  1A23  0BF3               	decfsz	??_LCD_Cmd,f
  9617  1A24  2A23               	goto	u6477
  9618  1A25  0BF4               	decfsz	??_LCD_Cmd+1,f
  9619  1A26  2A23               	goto	u6477
  9620  1A27  0000               	nop
  9621  1A28                     l3603:
  9622                           
  9623                           ;LCD.c: 44:     RE1=0;
  9624  1A28  1283               	bcf	3,5	;RP0=0, select bank0
  9625  1A29  1303               	bcf	3,6	;RP1=0, select bank0
  9626  1A2A  1089               	bcf	9,1	;volatile
  9627  1A2B                     l3605:
  9628                           
  9629                           ;LCD.c: 45:     _delay((unsigned long)((2)*(8000000/4000.0)));
  9630  1A2B  3006               	movlw	6
  9631  1A2C  00F4               	movwf	??_LCD_Cmd+1
  9632  1A2D  3030               	movlw	48
  9633  1A2E  00F3               	movwf	??_LCD_Cmd
  9634  1A2F                     u6487:
  9635  1A2F  0BF3               	decfsz	??_LCD_Cmd,f
  9636  1A30  2A2F               	goto	u6487
  9637  1A31  0BF4               	decfsz	??_LCD_Cmd+1,f
  9638  1A32  2A2F               	goto	u6487
  9639  1A33  0000               	nop
  9640  1A34                     l111:
  9641  1A34  0008               	return
  9642  1A35                     __end_of_LCD_Cmd:
  9643                           
  9644                           	psect	text34
  9645  199F                     __ptext34:	
  9646 ;; *************** function _LCD_Port *****************
  9647 ;; Defined at:
  9648 ;;		line 26 in file "LCD.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  a               1    wreg     unsigned char 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  a               1    2[COMMON] unsigned char 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9662 ;;      Params:         0       0       0       0       0
  9663 ;;      Locals:         1       0       0       0       0
  9664 ;;      Temps:          0       0       0       0       0
  9665 ;;      Totals:         1       0       0       0       0
  9666 ;;Total ram usage:        1 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; Hardware stack levels required when called:    1
  9669 ;; This function calls:
  9670 ;;		Nothing
  9671 ;; This function is called by:
  9672 ;;		_LCD_Init
  9673 ;;		_LCD_Write_Char
  9674 ;;		_LCD_Cmd
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function _LCD_Port
  9680  199F                     _LCD_Port:
  9681                           
  9682                           ;incstack = 0
  9683                           ; Regs used in _LCD_Port: [wreg]
  9684                           ;LCD_Port@a stored from wreg
  9685  199F  00F2               	movwf	LCD_Port@a
  9686  19A0                     l3567:
  9687                           
  9688                           ;LCD.c: 27:     PORTD = a;
  9689  19A0  0872               	movf	LCD_Port@a,w
  9690  19A1  1283               	bcf	3,5	;RP0=0, select bank0
  9691  19A2  1303               	bcf	3,6	;RP1=0, select bank0
  9692  19A3  0088               	movwf	8	;volatile
  9693  19A4                     l105:
  9694  19A4  0008               	return
  9695  19A5                     __end_of_LCD_Port:
  9696                           
  9697                           	psect	text35
  9698  19D7                     __ptext35:	
  9699 ;; *************** function _Init_Trans *****************
  9700 ;; Defined at:
  9701 ;;		line 17 in file "USART.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;		None
  9704 ;; Auto vars:     Size  Location     Type
  9705 ;;		None
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  1    wreg      void 
  9708 ;; Registers used:
  9709 ;;		None
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9715 ;;      Params:         0       0       0       0       0
  9716 ;;      Locals:         0       0       0       0       0
  9717 ;;      Temps:          0       0       0       0       0
  9718 ;;      Totals:         0       0       0       0       0
  9719 ;;Total ram usage:        0 bytes
  9720 ;; Hardware stack levels used:    1
  9721 ;; Hardware stack levels required when called:    1
  9722 ;; This function calls:
  9723 ;;		Nothing
  9724 ;; This function is called by:
  9725 ;;		_main
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           
  9730                           ;psect for function _Init_Trans
  9731  19D7                     _Init_Trans:
  9732  19D7                     l3175:	
  9733                           ;incstack = 0
  9734                           ; Regs used in _Init_Trans: []
  9735                           
  9736                           
  9737                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
  9738  19D7  1683               	bsf	3,5	;RP0=1, select bank1
  9739  19D8  1303               	bcf	3,6	;RP1=0, select bank1
  9740  19D9  1698               	bsf	24,5	;volatile
  9741                           
  9742                           ;USART.c: 19:     PIR1bits.TXIF = 0;
  9743  19DA  1283               	bcf	3,5	;RP0=0, select bank0
  9744  19DB  1303               	bcf	3,6	;RP1=0, select bank0
  9745  19DC  120C               	bcf	12,4	;volatile
  9746                           
  9747                           ;USART.c: 20:     PIE1bits.TXIE = 0;
  9748  19DD  1683               	bsf	3,5	;RP0=1, select bank1
  9749  19DE  1303               	bcf	3,6	;RP1=0, select bank1
  9750  19DF  120C               	bcf	12,4	;volatile
  9751                           
  9752                           ;USART.c: 21:     INTCONbits.GIE = 1;
  9753  19E0  178B               	bsf	11,7	;volatile
  9754                           
  9755                           ;USART.c: 22:     INTCONbits.PEIE = 1;
  9756  19E1  170B               	bsf	11,6	;volatile
  9757                           
  9758                           ;USART.c: 23:     TRISCbits.TRISC6 = 0;
  9759  19E2  1307               	bcf	7,6	;volatile
  9760                           
  9761                           ;USART.c: 24:     TRISCbits.TRISC7 = 1;
  9762  19E3  1787               	bsf	7,7	;volatile
  9763  19E4                     l154:
  9764  19E4  0008               	return
  9765  19E5                     __end_of_Init_Trans:
  9766                           
  9767                           	psect	text36
  9768  19AC                     __ptext36:	
  9769 ;; *************** function _Init_Receive *****************
  9770 ;; Defined at:
  9771 ;;		line 27 in file "USART.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;		None
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;		None
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  1    wreg      void 
  9778 ;; Registers used:
  9779 ;;		None
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9785 ;;      Params:         0       0       0       0       0
  9786 ;;      Locals:         0       0       0       0       0
  9787 ;;      Temps:          0       0       0       0       0
  9788 ;;      Totals:         0       0       0       0       0
  9789 ;;Total ram usage:        0 bytes
  9790 ;; Hardware stack levels used:    1
  9791 ;; Hardware stack levels required when called:    1
  9792 ;; This function calls:
  9793 ;;		Nothing
  9794 ;; This function is called by:
  9795 ;;		_main
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           
  9800                           ;psect for function _Init_Receive
  9801  19AC                     _Init_Receive:
  9802  19AC                     l3177:	
  9803                           ;incstack = 0
  9804                           ; Regs used in _Init_Receive: []
  9805                           
  9806                           
  9807                           ;USART.c: 28:     TXSTAbits.SYNC = 0;
  9808  19AC  1683               	bsf	3,5	;RP0=1, select bank1
  9809  19AD  1303               	bcf	3,6	;RP1=0, select bank1
  9810  19AE  1218               	bcf	24,4	;volatile
  9811                           
  9812                           ;USART.c: 29:     RCSTAbits.SPEN = 1;
  9813  19AF  1283               	bcf	3,5	;RP0=0, select bank0
  9814  19B0  1303               	bcf	3,6	;RP1=0, select bank0
  9815  19B1  1798               	bsf	24,7	;volatile
  9816                           
  9817                           ;USART.c: 30:     RCSTAbits.CREN = 1;
  9818  19B2  1618               	bsf	24,4	;volatile
  9819  19B3                     l157:
  9820  19B3  0008               	return
  9821  19B4                     __end_of_Init_Receive:
  9822                           
  9823                           	psect	text37
  9824  19A5                     __ptext37:	
  9825 ;; *************** function _ISR *****************
  9826 ;; Defined at:
  9827 ;;		line 102 in file "Master_main.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;		None
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1    wreg      void 
  9834 ;; Registers used:
  9835 ;;		None
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9841 ;;      Params:         0       0       0       0       0
  9842 ;;      Locals:         0       0       0       0       0
  9843 ;;      Temps:          2       0       0       0       0
  9844 ;;      Totals:         2       0       0       0       0
  9845 ;;Total ram usage:        2 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; This function calls:
  9848 ;;		Nothing
  9849 ;; This function is called by:
  9850 ;;		Interrupt level 1
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854                           
  9855                           ;psect for function _ISR
  9856  19A5                     _ISR:
  9857  19A5                     i1l76:
  9858  19A5  0871               	movf	??_ISR+1,w
  9859  19A6  008A               	movwf	10
  9860  19A7  0E70               	swapf	??_ISR,w
  9861  19A8  0083               	movwf	3
  9862  19A9  0EFE               	swapf	btemp,f
  9863  19AA  0E7E               	swapf	btemp,w
  9864  19AB  0009               	retfie
  9865  19AC                     __end_of_ISR:
  9866  007E                     btemp	set	126	;btemp
  9867  007E                     wtemp0	set	126
  9868                           
  9869                           	psect	intentry
  9870  0004                     __pintentry:	
  9871                           ;incstack = 0
  9872                           ; Regs used in _ISR: []
  9873                           
  9874  0004                     interrupt_function:
  9875  007E                     saved_w	set	btemp
  9876  0004  00FE               	movwf	btemp
  9877  0005  0E03               	swapf	3,w
  9878  0006  00F0               	movwf	??_ISR
  9879  0007  080A               	movf	10,w
  9880  0008  00F1               	movwf	??_ISR+1
  9881  0009  160A  158A  29A5   	ljmp	_ISR
  9882                           
  9883                           	psect	config
  9884                           
  9885                           ;Config register CONFIG1 @ 0x2007
  9886                           ;	Oscillator Selection bits
  9887                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  9888                           ;	Watchdog Timer Enable bit
  9889                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9890                           ;	Power-up Timer Enable bit
  9891                           ;	PWRTE = OFF, PWRT disabled
  9892                           ;	RE3/MCLR pin function select bit
  9893                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9894                           ;	Code Protection bit
  9895                           ;	CP = OFF, Program memory code protection is disabled
  9896                           ;	Data Code Protection bit
  9897                           ;	CPD = OFF, Data memory code protection is disabled
  9898                           ;	Brown Out Reset Selection bits
  9899                           ;	BOREN = OFF, BOR disabled
  9900                           ;	Internal External Switchover bit
  9901                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9902                           ;	Fail-Safe Clock Monitor Enabled bit
  9903                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9904                           ;	Low Voltage Programming Enable bit
  9905                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9906                           ;	In-Circuit Debugger Mode bit
  9907                           ;	DEBUG = 0x1, unprogrammed default
  9908  2007                     	org	8199
  9909  2007  20D1               	dw	8401
  9910                           
  9911                           ;Config register CONFIG2 @ 0x2008
  9912                           ;	Brown-out Reset Selection bit
  9913                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9914                           ;	Flash Program Memory Self Write Enable bits
  9915                           ;	WRT = OFF, Write protection off
  9916  2008                     	org	8200
  9917  2008  3FFF               	dw	16383
  9918                           
  9919                           	psect	text1_split_1
  9920  0026                     u5960:
  9921  0026                     l3767:
  9922  0026  1683               	bsf	3,5	;RP0=1, select bank1
  9923  0027  1303               	bcf	3,6	;RP1=0, select bank1
  9924  0028  084B               	movf	(sprintf@fval+3)^(0+128),w
  9925  0029  00F5               	movwf	___fleq@ff1+3
  9926  002A  084A               	movf	(sprintf@fval+2)^(0+128),w
  9927  002B  00F4               	movwf	___fleq@ff1+2
  9928  002C  0849               	movf	(sprintf@fval+1)^(0+128),w
  9929  002D  00F3               	movwf	___fleq@ff1+1
  9930  002E  0848               	movf	sprintf@fval^(0+128),w
  9931  002F  00F2               	movwf	___fleq@ff1
  9932  0030  3000               	movlw	0
  9933  0031  00F9               	movwf	___fleq@ff2+3
  9934  0032  3000               	movlw	0
  9935  0033  00F8               	movwf	___fleq@ff2+2
  9936  0034  3000               	movlw	0
  9937  0035  00F7               	movwf	___fleq@ff2+1
  9938  0036  3000               	movlw	0
  9939  0037  00F6               	movwf	___fleq@ff2
  9940  0038  160A  158A  23F0  120A  118A  	fcall	___fleq
  9941  003D  1803               	btfsc	3,0
  9942  003E  2840               	goto	u5971
  9943  003F  2841               	goto	u5970
  9944  0040                     u5971:
  9945  0040  28E9               	goto	l3787
  9946  0041                     u5970:
  9947  0041                     l3769:
  9948  0041  1683               	bsf	3,5	;RP0=1, select bank1
  9949  0042  1303               	bcf	3,6	;RP1=0, select bank1
  9950  0043  084B               	movf	(sprintf@fval+3)^(0+128),w
  9951  0044  1283               	bcf	3,5	;RP0=0, select bank0
  9952  0045  1303               	bcf	3,6	;RP1=0, select bank0
  9953  0046  00D8               	movwf	___fltol@f1+3
  9954  0047  1683               	bsf	3,5	;RP0=1, select bank1
  9955  0048  1303               	bcf	3,6	;RP1=0, select bank1
  9956  0049  084A               	movf	(sprintf@fval+2)^(0+128),w
  9957  004A  1283               	bcf	3,5	;RP0=0, select bank0
  9958  004B  1303               	bcf	3,6	;RP1=0, select bank0
  9959  004C  00D7               	movwf	___fltol@f1+2
  9960  004D  1683               	bsf	3,5	;RP0=1, select bank1
  9961  004E  1303               	bcf	3,6	;RP1=0, select bank1
  9962  004F  0849               	movf	(sprintf@fval+1)^(0+128),w
  9963  0050  1283               	bcf	3,5	;RP0=0, select bank0
  9964  0051  1303               	bcf	3,6	;RP1=0, select bank0
  9965  0052  00D6               	movwf	___fltol@f1+1
  9966  0053  1683               	bsf	3,5	;RP0=1, select bank1
  9967  0054  1303               	bcf	3,6	;RP1=0, select bank1
  9968  0055  0848               	movf	sprintf@fval^(0+128),w
  9969  0056  1283               	bcf	3,5	;RP0=0, select bank0
  9970  0057  1303               	bcf	3,6	;RP1=0, select bank0
  9971  0058  00D5               	movwf	___fltol@f1
  9972  0059  160A  158A  2567  120A  118A  	fcall	___fltol
  9973  005E  1283               	bcf	3,5	;RP0=0, select bank0
  9974  005F  1303               	bcf	3,6	;RP1=0, select bank0
  9975  0060  0858               	movf	?___fltol+3,w
  9976  0061  0457               	iorwf	?___fltol+2,w
  9977  0062  0456               	iorwf	?___fltol+1,w
  9978  0063  0455               	iorwf	?___fltol,w
  9979  0064  1D03               	skipz
  9980  0065  2867               	goto	u5981
  9981  0066  2868               	goto	u5980
  9982  0067                     u5981:
  9983  0067  28E9               	goto	l3787
  9984  0068                     u5980:
  9985  0068                     l3771:
  9986  0068  1683               	bsf	3,5	;RP0=1, select bank1
  9987  0069  1303               	bcf	3,6	;RP1=0, select bank1
  9988  006A  0847               	movf	(sprintf@eexp+1)^(0+128),w
  9989  006B  3A80               	xorlw	128
  9990  006C  00FF               	movwf	btemp+1
  9991  006D  3080               	movlw	128
  9992  006E  027F               	subwf	btemp+1,w
  9993  006F  1D03               	skipz
  9994  0070  2873               	goto	u5995
  9995  0071  3002               	movlw	2
  9996  0072  0246               	subwf	sprintf@eexp^(0+128),w
  9997  0073                     u5995:
  9998  0073  1C03               	skipc
  9999  0074  2876               	goto	u5991
 10000  0075  2877               	goto	u5990
 10001  0076                     u5991:
 10002  0076  28E9               	goto	l3787
 10003  0077                     u5990:
 10004  0077                     l3773:
 10005                           
 10006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10007  0077  1683               	bsf	3,5	;RP0=1, select bank1
 10008  0078  1303               	bcf	3,6	;RP1=0, select bank1
 10009  0079  0845               	movf	(sprintf@tmpval+3)^(0+128),w
 10010  007A  00F5               	movwf	___flge@ff1+3
 10011  007B  0844               	movf	(sprintf@tmpval+2)^(0+128),w
 10012  007C  00F4               	movwf	___flge@ff1+2
 10013  007D  0843               	movf	(sprintf@tmpval+1)^(0+128),w
 10014  007E  00F3               	movwf	___flge@ff1+1
 10015  007F  0842               	movf	sprintf@tmpval^(0+128),w
 10016  0080  00F2               	movwf	___flge@ff1
 10017  0081  3040               	movlw	64
 10018  0082  00F9               	movwf	___flge@ff2+3
 10019  0083  3089               	movlw	137
 10020  0084  00F8               	movwf	___flge@ff2+2
 10021  0085  3070               	movlw	112
 10022  0086  00F7               	movwf	___flge@ff2+1
 10023  0087  305F               	movlw	95
 10024  0088  00F6               	movwf	___flge@ff2
 10025  0089  160A  158A  25E3  120A  118A  	fcall	___flge
 10026  008E  1803               	btfsc	3,0
 10027  008F  2891               	goto	u6001
 10028  0090  2892               	goto	u6000
 10029  0091                     u6001:
 10030  0091  289B               	goto	l3777
 10031  0092                     u6000:
 10032  0092                     l3775:
 10033                           
 10034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10035  0092  30F7               	movlw	247
 10036  0093  1683               	bsf	3,5	;RP0=1, select bank1
 10037  0094  1303               	bcf	3,6	;RP1=0, select bank1
 10038  0095  07C6               	addwf	sprintf@eexp^(0+128),f
 10039  0096  1803               	skipnc
 10040  0097  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
 10041  0098  30FF               	movlw	255
 10042  0099  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
 10043                           
 10044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10045  009A  28A3               	goto	l3779
 10046  009B                     l3777:
 10047                           
 10048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10049  009B  30F8               	movlw	248
 10050  009C  1683               	bsf	3,5	;RP0=1, select bank1
 10051  009D  1303               	bcf	3,6	;RP1=0, select bank1
 10052  009E  07C6               	addwf	sprintf@eexp^(0+128),f
 10053  009F  1803               	skipnc
 10054  00A0  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
 10055  00A1  30FF               	movlw	255
 10056  00A2  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
 10057  00A3                     l3779:
 10058                           
 10059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10060  00A3  0846               	movf	sprintf@eexp^(0+128),w
 10061  00A4  120A  158A  249D  120A  118A  	fcall	_scale
 10062  00A9  1283               	bcf	3,5	;RP0=0, select bank0
 10063  00AA  1303               	bcf	3,6	;RP1=0, select bank0
 10064  00AB  0845               	movf	?_scale+3,w
 10065  00AC  1683               	bsf	3,5	;RP0=1, select bank1
 10066  00AD  1303               	bcf	3,6	;RP1=0, select bank1
 10067  00AE  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 10068  00AF  1283               	bcf	3,5	;RP0=0, select bank0
 10069  00B0  1303               	bcf	3,6	;RP1=0, select bank0
 10070  00B1  0844               	movf	?_scale+2,w
 10071  00B2  1683               	bsf	3,5	;RP0=1, select bank1
 10072  00B3  1303               	bcf	3,6	;RP1=0, select bank1
 10073  00B4  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 10074  00B5  1283               	bcf	3,5	;RP0=0, select bank0
 10075  00B6  1303               	bcf	3,6	;RP1=0, select bank0
 10076  00B7  0843               	movf	?_scale+1,w
 10077  00B8  1683               	bsf	3,5	;RP0=1, select bank1
 10078  00B9  1303               	bcf	3,6	;RP1=0, select bank1
 10079  00BA  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 10080  00BB  1283               	bcf	3,5	;RP0=0, select bank0
 10081  00BC  1303               	bcf	3,6	;RP1=0, select bank0
 10082  00BD  0842               	movf	?_scale,w
 10083  00BE  1683               	bsf	3,5	;RP0=1, select bank1
 10084  00BF  1303               	bcf	3,6	;RP1=0, select bank1
 10085  00C0  00C2               	movwf	sprintf@tmpval^(0+128)
 10086  00C1                     l3781:
 10087  00C1  084B               	movf	(sprintf@fval+3)^(0+128),w
 10088  00C2  00F5               	movwf	__div_to_l_@f1+3
 10089  00C3  084A               	movf	(sprintf@fval+2)^(0+128),w
 10090  00C4  00F4               	movwf	__div_to_l_@f1+2
 10091  00C5  0849               	movf	(sprintf@fval+1)^(0+128),w
 10092  00C6  00F3               	movwf	__div_to_l_@f1+1
 10093  00C7  0848               	movf	sprintf@fval^(0+128),w
 10094  00C8  00F2               	movwf	__div_to_l_@f1
 10095  00C9  0845               	movf	(sprintf@tmpval+3)^(0+128),w
 10096  00CA  00F9               	movwf	__div_to_l_@f2+3
 10097  00CB  0844               	movf	(sprintf@tmpval+2)^(0+128),w
 10098  00CC  00F8               	movwf	__div_to_l_@f2+2
 10099  00CD  0843               	movf	(sprintf@tmpval+1)^(0+128),w
 10100  00CE  00F7               	movwf	__div_to_l_@f2+1
 10101  00CF  0842               	movf	sprintf@tmpval^(0+128),w
 10102  00D0  00F6               	movwf	__div_to_l_@f2
 10103  00D1  160A  118A  2034  120A  118A  	fcall	__div_to_l_
 10104  00D6  0875               	movf	?__div_to_l_+3,w
 10105  00D7  1683               	bsf	3,5	;RP0=1, select bank1
 10106  00D8  1303               	bcf	3,6	;RP1=0, select bank1
 10107  00D9  00BD               	movwf	(sprintf@val+3)^(0+128)
 10108  00DA  0874               	movf	?__div_to_l_+2,w
 10109  00DB  00BC               	movwf	(sprintf@val+2)^(0+128)
 10110  00DC  0873               	movf	?__div_to_l_+1,w
 10111  00DD  00BB               	movwf	(sprintf@val+1)^(0+128)
 10112  00DE  0872               	movf	?__div_to_l_,w
 10113  00DF  00BA               	movwf	sprintf@val^(0+128)
 10114  00E0                     l3785:
 10115                           
 10116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10117  00E0  3000               	movlw	0
 10118  00E1  00CB               	movwf	(sprintf@fval+3)^(0+128)
 10119  00E2  3000               	movlw	0
 10120  00E3  00CA               	movwf	(sprintf@fval+2)^(0+128)
 10121  00E4  3000               	movlw	0
 10122  00E5  00C9               	movwf	(sprintf@fval+1)^(0+128)
 10123  00E6  3000               	movlw	0
 10124  00E7  00C8               	movwf	sprintf@fval^(0+128)
 10125                           
 10126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10127  00E8  294F               	goto	l3793
 10128  00E9                     l3787:
 10129                           
 10130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10131  00E9  1683               	bsf	3,5	;RP0=1, select bank1
 10132  00EA  1303               	bcf	3,6	;RP1=0, select bank1
 10133  00EB  084B               	movf	(sprintf@fval+3)^(0+128),w
 10134  00EC  1283               	bcf	3,5	;RP0=0, select bank0
 10135  00ED  1303               	bcf	3,6	;RP1=0, select bank0
 10136  00EE  00D8               	movwf	___fltol@f1+3
 10137  00EF  1683               	bsf	3,5	;RP0=1, select bank1
 10138  00F0  1303               	bcf	3,6	;RP1=0, select bank1
 10139  00F1  084A               	movf	(sprintf@fval+2)^(0+128),w
 10140  00F2  1283               	bcf	3,5	;RP0=0, select bank0
 10141  00F3  1303               	bcf	3,6	;RP1=0, select bank0
 10142  00F4  00D7               	movwf	___fltol@f1+2
 10143  00F5  1683               	bsf	3,5	;RP0=1, select bank1
 10144  00F6  1303               	bcf	3,6	;RP1=0, select bank1
 10145  00F7  0849               	movf	(sprintf@fval+1)^(0+128),w
 10146  00F8  1283               	bcf	3,5	;RP0=0, select bank0
 10147  00F9  1303               	bcf	3,6	;RP1=0, select bank0
 10148  00FA  00D6               	movwf	___fltol@f1+1
 10149  00FB  1683               	bsf	3,5	;RP0=1, select bank1
 10150  00FC  1303               	bcf	3,6	;RP1=0, select bank1
 10151  00FD  0848               	movf	sprintf@fval^(0+128),w
 10152  00FE  1283               	bcf	3,5	;RP0=0, select bank0
 10153  00FF  1303               	bcf	3,6	;RP1=0, select bank0
 10154  0100  00D5               	movwf	___fltol@f1
 10155  0101  160A  158A  2567  120A  118A  	fcall	___fltol
 10156  0106  1283               	bcf	3,5	;RP0=0, select bank0
 10157  0107  1303               	bcf	3,6	;RP1=0, select bank0
 10158  0108  0858               	movf	?___fltol+3,w
 10159  0109  1683               	bsf	3,5	;RP0=1, select bank1
 10160  010A  1303               	bcf	3,6	;RP1=0, select bank1
 10161  010B  00BD               	movwf	(sprintf@val+3)^(0+128)
 10162  010C  1283               	bcf	3,5	;RP0=0, select bank0
 10163  010D  1303               	bcf	3,6	;RP1=0, select bank0
 10164  010E  0857               	movf	?___fltol+2,w
 10165  010F  1683               	bsf	3,5	;RP0=1, select bank1
 10166  0110  1303               	bcf	3,6	;RP1=0, select bank1
 10167  0111  00BC               	movwf	(sprintf@val+2)^(0+128)
 10168  0112  1283               	bcf	3,5	;RP0=0, select bank0
 10169  0113  1303               	bcf	3,6	;RP1=0, select bank0
 10170  0114  0856               	movf	?___fltol+1,w
 10171  0115  1683               	bsf	3,5	;RP0=1, select bank1
 10172  0116  1303               	bcf	3,6	;RP1=0, select bank1
 10173  0117  00BB               	movwf	(sprintf@val+1)^(0+128)
 10174  0118  1283               	bcf	3,5	;RP0=0, select bank0
 10175  0119  1303               	bcf	3,6	;RP1=0, select bank0
 10176  011A  0855               	movf	?___fltol,w
 10177  011B  1683               	bsf	3,5	;RP0=1, select bank1
 10178  011C  1303               	bcf	3,6	;RP1=0, select bank1
 10179  011D  00BA               	movwf	sprintf@val^(0+128)
 10180  011E                     l3789:
 10181                           
 10182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10183  011E  083D               	movf	(sprintf@val+3)^(0+128),w
 10184  011F  00F5               	movwf	___xxtofl@val+3
 10185  0120  083C               	movf	(sprintf@val+2)^(0+128),w
 10186  0121  00F4               	movwf	___xxtofl@val+2
 10187  0122  083B               	movf	(sprintf@val+1)^(0+128),w
 10188  0123  00F3               	movwf	___xxtofl@val+1
 10189  0124  083A               	movf	sprintf@val^(0+128),w
 10190  0125  00F2               	movwf	___xxtofl@val
 10191  0126  3000               	movlw	0
 10192  0127  160A  158A  2687  120A  118A  	fcall	___xxtofl
 10193  012C  0875               	movf	?___xxtofl+3,w
 10194  012D  1683               	bsf	3,5	;RP0=1, select bank1
 10195  012E  1303               	bcf	3,6	;RP1=0, select bank1
 10196  012F  00A3               	movwf	(___flsub@a+3)^(0+128)
 10197  0130  0874               	movf	?___xxtofl+2,w
 10198  0131  00A2               	movwf	(___flsub@a+2)^(0+128)
 10199  0132  0873               	movf	?___xxtofl+1,w
 10200  0133  00A1               	movwf	(___flsub@a+1)^(0+128)
 10201  0134  0872               	movf	?___xxtofl,w
 10202  0135  00A0               	movwf	___flsub@a^(0+128)
 10203  0136  084B               	movf	(sprintf@fval+3)^(0+128),w
 10204  0137  00A7               	movwf	(___flsub@b+3)^(0+128)
 10205  0138  084A               	movf	(sprintf@fval+2)^(0+128),w
 10206  0139  00A6               	movwf	(___flsub@b+2)^(0+128)
 10207  013A  0849               	movf	(sprintf@fval+1)^(0+128),w
 10208  013B  00A5               	movwf	(___flsub@b+1)^(0+128)
 10209  013C  0848               	movf	sprintf@fval^(0+128),w
 10210  013D  00A4               	movwf	___flsub@b^(0+128)
 10211  013E  120A  118A  27AF  120A  118A  	fcall	___flsub
 10212  0143  1683               	bsf	3,5	;RP0=1, select bank1
 10213  0144  1303               	bcf	3,6	;RP1=0, select bank1
 10214  0145  0823               	movf	(?___flsub+3)^(0+128),w
 10215  0146  00CB               	movwf	(sprintf@fval+3)^(0+128)
 10216  0147  0822               	movf	(?___flsub+2)^(0+128),w
 10217  0148  00CA               	movwf	(sprintf@fval+2)^(0+128)
 10218  0149  0821               	movf	(?___flsub+1)^(0+128),w
 10219  014A  00C9               	movwf	(sprintf@fval+1)^(0+128)
 10220  014B  0820               	movf	?___flsub^(0+128),w
 10221  014C  00C8               	movwf	sprintf@fval^(0+128)
 10222  014D                     l3791:
 10223                           
 10224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10225  014D  01C6               	clrf	sprintf@eexp^(0+128)
 10226  014E  01C7               	clrf	(sprintf@eexp+1)^(0+128)
 10227  014F                     l3793:
 10228                           
 10229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10230  014F  01CF               	clrf	sprintf@c^(0+128)
 10231  0150  0ACF               	incf	sprintf@c^(0+128),f
 10232  0151                     l3799:
 10233                           
 10234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10235  0151  084F               	movf	sprintf@c^(0+128),w
 10236  0152  1283               	bcf	3,5	;RP0=0, select bank0
 10237  0153  1303               	bcf	3,6	;RP1=0, select bank0
 10238  0154  00EA               	movwf	??_sprintf
 10239  0155  3001               	movlw	1
 10240  0156                     u6015:
 10241  0156  1003               	clrc
 10242  0157  0DEA               	rlf	??_sprintf,f
 10243  0158  3EFF               	addlw	-1
 10244  0159  1D03               	skipz
 10245  015A  2956               	goto	u6015
 10246  015B  1003               	clrc
 10247  015C  0D6A               	rlf	??_sprintf,w
 10248  015D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10249  015E  0084               	movwf	4
 10250  015F  120A  158A  200A  120A  118A  	fcall	stringdir
 10251  0164  00EB               	movwf	??_sprintf+1
 10252  0165  120A  158A  200A  120A  118A  	fcall	stringdir
 10253  016A  00EC               	movwf	??_sprintf+2
 10254  016B  120A  158A  200A  120A  118A  	fcall	stringdir
 10255  0170  00ED               	movwf	??_sprintf+3
 10256  0171  120A  158A  200A  120A  118A  	fcall	stringdir
 10257  0176  00EE               	movwf	??_sprintf+4
 10258  0177  086E               	movf	??_sprintf+4,w
 10259  0178  1683               	bsf	3,5	;RP0=1, select bank1
 10260  0179  1303               	bcf	3,6	;RP1=0, select bank1
 10261  017A  023D               	subwf	(sprintf@val+3)^(0+128),w
 10262  017B  1D03               	skipz
 10263  017C  2993               	goto	u6025
 10264  017D  1283               	bcf	3,5	;RP0=0, select bank0
 10265  017E  1303               	bcf	3,6	;RP1=0, select bank0
 10266  017F  086D               	movf	??_sprintf+3,w
 10267  0180  1683               	bsf	3,5	;RP0=1, select bank1
 10268  0181  1303               	bcf	3,6	;RP1=0, select bank1
 10269  0182  023C               	subwf	(sprintf@val+2)^(0+128),w
 10270  0183  1D03               	skipz
 10271  0184  2993               	goto	u6025
 10272  0185  1283               	bcf	3,5	;RP0=0, select bank0
 10273  0186  1303               	bcf	3,6	;RP1=0, select bank0
 10274  0187  086C               	movf	??_sprintf+2,w
 10275  0188  1683               	bsf	3,5	;RP0=1, select bank1
 10276  0189  1303               	bcf	3,6	;RP1=0, select bank1
 10277  018A  023B               	subwf	(sprintf@val+1)^(0+128),w
 10278  018B  1D03               	skipz
 10279  018C  2993               	goto	u6025
 10280  018D  1283               	bcf	3,5	;RP0=0, select bank0
 10281  018E  1303               	bcf	3,6	;RP1=0, select bank0
 10282  018F  086B               	movf	??_sprintf+1,w
 10283  0190  1683               	bsf	3,5	;RP0=1, select bank1
 10284  0191  1303               	bcf	3,6	;RP1=0, select bank1
 10285  0192  023A               	subwf	sprintf@val^(0+128),w
 10286  0193                     u6025:
 10287  0193  1803               	skipnc
 10288  0194  2996               	goto	u6021
 10289  0195  2997               	goto	u6020
 10290  0196                     u6021:
 10291  0196  2998               	goto	l3803
 10292  0197                     u6020:
 10293  0197  29A6               	goto	l3805
 10294  0198                     l3803:
 10295  0198  3001               	movlw	1
 10296  0199  1283               	bcf	3,5	;RP0=0, select bank0
 10297  019A  1303               	bcf	3,6	;RP1=0, select bank0
 10298  019B  00EA               	movwf	??_sprintf
 10299  019C  086A               	movf	??_sprintf,w
 10300  019D  1683               	bsf	3,5	;RP0=1, select bank1
 10301  019E  1303               	bcf	3,6	;RP1=0, select bank1
 10302  019F  07CF               	addwf	sprintf@c^(0+128),f
 10303  01A0  300A               	movlw	10
 10304  01A1  064F               	xorwf	sprintf@c^(0+128),w
 10305  01A2  1D03               	btfss	3,2
 10306  01A3  29A5               	goto	u6031
 10307  01A4  29A6               	goto	u6030
 10308  01A5                     u6031:
 10309  01A5  2951               	goto	l3799
 10310  01A6                     u6030:
 10311  01A6                     l3805:
 10312                           
 10313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10314  01A6  084F               	movf	sprintf@c^(0+128),w
 10315  01A7  074D               	addwf	sprintf@prec^(0+128),w
 10316  01A8  1283               	bcf	3,5	;RP0=0, select bank0
 10317  01A9  1303               	bcf	3,6	;RP1=0, select bank0
 10318  01AA  00EA               	movwf	??_sprintf
 10319  01AB  1683               	bsf	3,5	;RP0=1, select bank1
 10320  01AC  1303               	bcf	3,6	;RP1=0, select bank1
 10321  01AD  084E               	movf	(sprintf@prec+1)^(0+128),w
 10322  01AE  1803               	skipnc
 10323  01AF  0A4E               	incf	(sprintf@prec+1)^(0+128),w
 10324  01B0  1283               	bcf	3,5	;RP0=0, select bank0
 10325  01B1  1303               	bcf	3,6	;RP1=0, select bank0
 10326  01B2  00EB               	movwf	??_sprintf+1
 10327  01B3  1683               	bsf	3,5	;RP0=1, select bank1
 10328  01B4  1303               	bcf	3,6	;RP1=0, select bank1
 10329  01B5  0846               	movf	sprintf@eexp^(0+128),w
 10330  01B6  1283               	bcf	3,5	;RP0=0, select bank0
 10331  01B7  1303               	bcf	3,6	;RP1=0, select bank0
 10332  01B8  076A               	addwf	??_sprintf,w
 10333  01B9  00EC               	movwf	??_sprintf+2
 10334  01BA  1683               	bsf	3,5	;RP0=1, select bank1
 10335  01BB  1303               	bcf	3,6	;RP1=0, select bank1
 10336  01BC  0847               	movf	(sprintf@eexp+1)^(0+128),w
 10337  01BD  1803               	skipnc
 10338  01BE  0A47               	incf	(sprintf@eexp+1)^(0+128),w
 10339  01BF  1283               	bcf	3,5	;RP0=0, select bank0
 10340  01C0  1303               	bcf	3,6	;RP1=0, select bank0
 10341  01C1  076B               	addwf	??_sprintf+1,w
 10342  01C2  00ED               	movwf	??_sprintf+3
 10343  01C3  086C               	movf	??_sprintf+2,w
 10344  01C4  1683               	bsf	3,5	;RP0=1, select bank1
 10345  01C5  1303               	bcf	3,6	;RP1=0, select bank1
 10346  01C6  02C0               	subwf	sprintf@width^(0+128),f
 10347  01C7  1283               	bcf	3,5	;RP0=0, select bank0
 10348  01C8  1303               	bcf	3,6	;RP1=0, select bank0
 10349  01C9  086D               	movf	??_sprintf+3,w
 10350  01CA  1683               	bsf	3,5	;RP0=1, select bank1
 10351  01CB  1303               	bcf	3,6	;RP1=0, select bank1
 10352  01CC  1C03               	skipc
 10353  01CD  03C1               	decf	(sprintf@width+1)^(0+128),f
 10354  01CE  02C1               	subwf	(sprintf@width+1)^(0+128),f
 10355                           
 10356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10357  01CF  084D               	movf	sprintf@prec^(0+128),w
 10358  01D0  044E               	iorwf	(sprintf@prec+1)^(0+128),w
 10359  01D1  1903               	btfsc	3,2
 10360  01D2  29D4               	goto	u6041
 10361  01D3  29D5               	goto	u6040
 10362  01D4                     u6041:
 10363  01D4  29DB               	goto	l3809
 10364  01D5                     u6040:
 10365  01D5                     l3807:
 10366                           
 10367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10368  01D5  30FF               	movlw	255
 10369  01D6  07C0               	addwf	sprintf@width^(0+128),f
 10370  01D7  1803               	skipnc
 10371  01D8  0AC1               	incf	(sprintf@width+1)^(0+128),f
 10372  01D9  30FF               	movlw	255
 10373  01DA  07C1               	addwf	(sprintf@width+1)^(0+128),f
 10374  01DB                     l3809:
 10375                           
 10376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10377  01DB  3003               	movlw	3
 10378  01DC  053E               	andwf	sprintf@flag^(0+128),w
 10379  01DD  1283               	bcf	3,5	;RP0=0, select bank0
 10380  01DE  1303               	bcf	3,6	;RP1=0, select bank0
 10381  01DF  00EA               	movwf	??_sprintf
 10382  01E0  3000               	movlw	0
 10383  01E1  1683               	bsf	3,5	;RP0=1, select bank1
 10384  01E2  1303               	bcf	3,6	;RP1=0, select bank1
 10385  01E3  053F               	andwf	(sprintf@flag+1)^(0+128),w
 10386  01E4  1283               	bcf	3,5	;RP0=0, select bank0
 10387  01E5  1303               	bcf	3,6	;RP1=0, select bank0
 10388  01E6  00EB               	movwf	??_sprintf+1
 10389  01E7  086A               	movf	??_sprintf,w
 10390  01E8  046B               	iorwf	??_sprintf+1,w
 10391  01E9  1903               	btfsc	3,2
 10392  01EA  29EC               	goto	u6051
 10393  01EB  29ED               	goto	u6050
 10394  01EC                     u6051:
 10395  01EC  2A0A               	goto	l3819
 10396  01ED                     u6050:
 10397  01ED                     l3811:
 10398                           
 10399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10400  01ED  30FF               	movlw	255
 10401  01EE  1683               	bsf	3,5	;RP0=1, select bank1
 10402  01EF  1303               	bcf	3,6	;RP1=0, select bank1
 10403  01F0  07C0               	addwf	sprintf@width^(0+128),f
 10404  01F1  1803               	skipnc
 10405  01F2  0AC1               	incf	(sprintf@width+1)^(0+128),f
 10406  01F3  30FF               	movlw	255
 10407  01F4  07C1               	addwf	(sprintf@width+1)^(0+128),f
 10408  01F5  2A0A               	goto	l3819
 10409  01F6                     l3813:
 10410                           
 10411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10412  01F6  3020               	movlw	32
 10413  01F7  1283               	bcf	3,5	;RP0=0, select bank0
 10414  01F8  1303               	bcf	3,6	;RP1=0, select bank0
 10415  01F9  00EA               	movwf	??_sprintf
 10416  01FA  1683               	bsf	3,5	;RP0=1, select bank1
 10417  01FB  1303               	bcf	3,6	;RP1=0, select bank1
 10418  01FC  084C               	movf	sprintf@sp^(0+128),w
 10419  01FD  0084               	movwf	4
 10420  01FE  1283               	bcf	3,5	;RP0=0, select bank0
 10421  01FF  1303               	bcf	3,6	;RP1=0, select bank0
 10422  0200  086A               	movf	??_sprintf,w
 10423  0201  1783               	bsf	3,7	;select IRP bank2
 10424  0202  0080               	movwf	0
 10425  0203                     l3815:
 10426  0203  3001               	movlw	1
 10427  0204  00EA               	movwf	??_sprintf
 10428  0205  086A               	movf	??_sprintf,w
 10429  0206  1683               	bsf	3,5	;RP0=1, select bank1
 10430  0207  1303               	bcf	3,6	;RP1=0, select bank1
 10431  0208  07CC               	addwf	sprintf@sp^(0+128),f
 10432  0209  29ED               	goto	l3811
 10433  020A                     l3819:
 10434                           
 10435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10436  020A  1683               	bsf	3,5	;RP0=1, select bank1
 10437  020B  1303               	bcf	3,6	;RP1=0, select bank1
 10438  020C  0841               	movf	(sprintf@width+1)^(0+128),w
 10439  020D  3A80               	xorlw	128
 10440  020E  00FF               	movwf	btemp+1
 10441  020F  3080               	movlw	128
 10442  0210  027F               	subwf	btemp+1,w
 10443  0211  1D03               	skipz
 10444  0212  2A15               	goto	u6065
 10445  0213  3001               	movlw	1
 10446  0214  0240               	subwf	sprintf@width^(0+128),w
 10447  0215                     u6065:
 10448  0215  1803               	skipnc
 10449  0216  2A18               	goto	u6061
 10450  0217  2A19               	goto	u6060
 10451  0218                     u6061:
 10452  0218  29F6               	goto	l3813
 10453  0219                     u6060:
 10454  0219                     l3821:
 10455                           
 10456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10457  0219  3003               	movlw	3
 10458  021A  1683               	bsf	3,5	;RP0=1, select bank1
 10459  021B  1303               	bcf	3,6	;RP1=0, select bank1
 10460  021C  053E               	andwf	sprintf@flag^(0+128),w
 10461  021D  1283               	bcf	3,5	;RP0=0, select bank0
 10462  021E  1303               	bcf	3,6	;RP1=0, select bank0
 10463  021F  00EA               	movwf	??_sprintf
 10464  0220  3000               	movlw	0
 10465  0221  1683               	bsf	3,5	;RP0=1, select bank1
 10466  0222  1303               	bcf	3,6	;RP1=0, select bank1
 10467  0223  053F               	andwf	(sprintf@flag+1)^(0+128),w
 10468  0224  1283               	bcf	3,5	;RP0=0, select bank0
 10469  0225  1303               	bcf	3,6	;RP1=0, select bank0
 10470  0226  00EB               	movwf	??_sprintf+1
 10471  0227  086A               	movf	??_sprintf,w
 10472  0228  046B               	iorwf	??_sprintf+1,w
 10473  0229  1903               	btfsc	3,2
 10474  022A  2A2C               	goto	u6071
 10475  022B  2A2D               	goto	u6070
 10476  022C                     u6071:
 10477  022C  2AB1               	goto	l346
 10478  022D                     u6070:
 10479  022D                     l3823:
 10480                           
 10481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10482  022D  302D               	movlw	45
 10483  022E  00EA               	movwf	??_sprintf
 10484  022F  1683               	bsf	3,5	;RP0=1, select bank1
 10485  0230  1303               	bcf	3,6	;RP1=0, select bank1
 10486  0231  084C               	movf	sprintf@sp^(0+128),w
 10487  0232  0084               	movwf	4
 10488  0233  1283               	bcf	3,5	;RP0=0, select bank0
 10489  0234  1303               	bcf	3,6	;RP1=0, select bank0
 10490  0235  086A               	movf	??_sprintf,w
 10491  0236  1783               	bsf	3,7	;select IRP bank2
 10492  0237  0080               	movwf	0
 10493  0238                     l3825:
 10494  0238  3001               	movlw	1
 10495  0239  00EA               	movwf	??_sprintf
 10496  023A  086A               	movf	??_sprintf,w
 10497  023B  1683               	bsf	3,5	;RP0=1, select bank1
 10498  023C  1303               	bcf	3,6	;RP1=0, select bank1
 10499  023D  07CC               	addwf	sprintf@sp^(0+128),f
 10500  023E  2AB1               	goto	l346
 10501  023F                     l3827:
 10502                           
 10503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10504  023F  084F               	movf	sprintf@c^(0+128),w
 10505  0240  1283               	bcf	3,5	;RP0=0, select bank0
 10506  0241  1303               	bcf	3,6	;RP1=0, select bank0
 10507  0242  00EA               	movwf	??_sprintf
 10508  0243  3001               	movlw	1
 10509  0244                     u6085:
 10510  0244  1003               	clrc
 10511  0245  0DEA               	rlf	??_sprintf,f
 10512  0246  3EFF               	addlw	-1
 10513  0247  1D03               	skipz
 10514  0248  2A44               	goto	u6085
 10515  0249  1003               	clrc
 10516  024A  0D6A               	rlf	??_sprintf,w
 10517  024B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10518  024C  0084               	movwf	4
 10519  024D  120A  158A  200A  120A  118A  	fcall	stringdir
 10520  0252  00F2               	movwf	___lldiv@divisor
 10521  0253  120A  158A  200A  120A  118A  	fcall	stringdir
 10522  0258  00F3               	movwf	___lldiv@divisor+1
 10523  0259  120A  158A  200A  120A  118A  	fcall	stringdir
 10524  025E  00F4               	movwf	___lldiv@divisor+2
 10525  025F  120A  158A  200A  120A  118A  	fcall	stringdir
 10526  0264  00F5               	movwf	___lldiv@divisor+3
 10527  0265  1683               	bsf	3,5	;RP0=1, select bank1
 10528  0266  1303               	bcf	3,6	;RP1=0, select bank1
 10529  0267  083D               	movf	(sprintf@val+3)^(0+128),w
 10530  0268  00F9               	movwf	___lldiv@dividend+3
 10531  0269  083C               	movf	(sprintf@val+2)^(0+128),w
 10532  026A  00F8               	movwf	___lldiv@dividend+2
 10533  026B  083B               	movf	(sprintf@val+1)^(0+128),w
 10534  026C  00F7               	movwf	___lldiv@dividend+1
 10535  026D  083A               	movf	sprintf@val^(0+128),w
 10536  026E  00F6               	movwf	___lldiv@dividend
 10537  026F  160A  158A  2496  120A  118A  	fcall	___lldiv
 10538  0274  0875               	movf	?___lldiv+3,w
 10539  0275  1683               	bsf	3,5	;RP0=1, select bank1
 10540  0276  1303               	bcf	3,6	;RP1=0, select bank1
 10541  0277  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 10542  0278  0874               	movf	?___lldiv+2,w
 10543  0279  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 10544  027A  0873               	movf	?___lldiv+1,w
 10545  027B  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 10546  027C  0872               	movf	?___lldiv,w
 10547  027D  00C2               	movwf	sprintf@tmpval^(0+128)
 10548  027E                     l3829:
 10549                           
 10550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10551  027E  3000               	movlw	0
 10552  027F  00F5               	movwf	___llmod@divisor+3
 10553  0280  3000               	movlw	0
 10554  0281  00F4               	movwf	___llmod@divisor+2
 10555  0282  3000               	movlw	0
 10556  0283  00F3               	movwf	___llmod@divisor+1
 10557  0284  300A               	movlw	10
 10558  0285  00F2               	movwf	___llmod@divisor
 10559  0286  0845               	movf	(sprintf@tmpval+3)^(0+128),w
 10560  0287  00F9               	movwf	___llmod@dividend+3
 10561  0288  0844               	movf	(sprintf@tmpval+2)^(0+128),w
 10562  0289  00F8               	movwf	___llmod@dividend+2
 10563  028A  0843               	movf	(sprintf@tmpval+1)^(0+128),w
 10564  028B  00F7               	movwf	___llmod@dividend+1
 10565  028C  0842               	movf	sprintf@tmpval^(0+128),w
 10566  028D  00F6               	movwf	___llmod@dividend
 10567  028E  160A  158A  2440  120A  118A  	fcall	___llmod
 10568  0293  0875               	movf	?___llmod+3,w
 10569  0294  1683               	bsf	3,5	;RP0=1, select bank1
 10570  0295  1303               	bcf	3,6	;RP1=0, select bank1
 10571  0296  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 10572  0297  0874               	movf	?___llmod+2,w
 10573  0298  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 10574  0299  0873               	movf	?___llmod+1,w
 10575  029A  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 10576  029B  0872               	movf	?___llmod,w
 10577  029C  00C2               	movwf	sprintf@tmpval^(0+128)
 10578  029D                     l3831:
 10579                           
 10580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10581  029D  0842               	movf	sprintf@tmpval^(0+128),w
 10582  029E  3E30               	addlw	48
 10583  029F  1283               	bcf	3,5	;RP0=0, select bank0
 10584  02A0  1303               	bcf	3,6	;RP1=0, select bank0
 10585  02A1  00EA               	movwf	??_sprintf
 10586  02A2  1683               	bsf	3,5	;RP0=1, select bank1
 10587  02A3  1303               	bcf	3,6	;RP1=0, select bank1
 10588  02A4  084C               	movf	sprintf@sp^(0+128),w
 10589  02A5  0084               	movwf	4
 10590  02A6  1283               	bcf	3,5	;RP0=0, select bank0
 10591  02A7  1303               	bcf	3,6	;RP1=0, select bank0
 10592  02A8  086A               	movf	??_sprintf,w
 10593  02A9  1783               	bsf	3,7	;select IRP bank2
 10594  02AA  0080               	movwf	0
 10595  02AB  3001               	movlw	1
 10596  02AC  00EA               	movwf	??_sprintf
 10597  02AD  086A               	movf	??_sprintf,w
 10598  02AE  1683               	bsf	3,5	;RP0=1, select bank1
 10599  02AF  1303               	bcf	3,6	;RP1=0, select bank1
 10600  02B0  07CC               	addwf	sprintf@sp^(0+128),f
 10601  02B1                     l346:	
 10602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10603                           
 10604                           
 10605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10606  02B1  3001               	movlw	1
 10607  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10608  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10609  02B4  02CF               	subwf	sprintf@c^(0+128),f
 10610  02B5  0A4F               	incf	sprintf@c^(0+128),w
 10611  02B6  1D03               	btfss	3,2
 10612  02B7  2AB9               	goto	u6091
 10613  02B8  2ABA               	goto	u6090
 10614  02B9                     u6091:
 10615  02B9  2A3F               	goto	l3827
 10616  02BA                     u6090:
 10617  02BA  2AD4               	goto	l3839
 10618  02BB                     l3833:
 10619                           
 10620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10621  02BB  3030               	movlw	48
 10622  02BC  1283               	bcf	3,5	;RP0=0, select bank0
 10623  02BD  1303               	bcf	3,6	;RP1=0, select bank0
 10624  02BE  00EA               	movwf	??_sprintf
 10625  02BF  1683               	bsf	3,5	;RP0=1, select bank1
 10626  02C0  1303               	bcf	3,6	;RP1=0, select bank1
 10627  02C1  084C               	movf	sprintf@sp^(0+128),w
 10628  02C2  0084               	movwf	4
 10629  02C3  1283               	bcf	3,5	;RP0=0, select bank0
 10630  02C4  1303               	bcf	3,6	;RP1=0, select bank0
 10631  02C5  086A               	movf	??_sprintf,w
 10632  02C6  1783               	bsf	3,7	;select IRP bank2
 10633  02C7  0080               	movwf	0
 10634  02C8                     l3835:
 10635  02C8  3001               	movlw	1
 10636  02C9  00EA               	movwf	??_sprintf
 10637  02CA  086A               	movf	??_sprintf,w
 10638  02CB  1683               	bsf	3,5	;RP0=1, select bank1
 10639  02CC  1303               	bcf	3,6	;RP1=0, select bank1
 10640  02CD  07CC               	addwf	sprintf@sp^(0+128),f
 10641  02CE                     l3837:
 10642                           
 10643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10644  02CE  30FF               	movlw	255
 10645  02CF  07C6               	addwf	sprintf@eexp^(0+128),f
 10646  02D0  1803               	skipnc
 10647  02D1  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
 10648  02D2  30FF               	movlw	255
 10649  02D3  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
 10650  02D4                     l3839:
 10651                           
 10652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10653  02D4  0847               	movf	(sprintf@eexp+1)^(0+128),w
 10654  02D5  3A80               	xorlw	128
 10655  02D6  00FF               	movwf	btemp+1
 10656  02D7  3080               	movlw	128
 10657  02D8  027F               	subwf	btemp+1,w
 10658  02D9  1D03               	skipz
 10659  02DA  2ADD               	goto	u6105
 10660  02DB  3001               	movlw	1
 10661  02DC  0246               	subwf	sprintf@eexp^(0+128),w
 10662  02DD                     u6105:
 10663  02DD  1803               	skipnc
 10664  02DE  2AE0               	goto	u6101
 10665  02DF  2AE1               	goto	u6100
 10666  02E0                     u6101:
 10667  02E0  2ABB               	goto	l3833
 10668  02E1                     u6100:
 10669  02E1                     l3841:
 10670                           
 10671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10672  02E1  1683               	bsf	3,5	;RP0=1, select bank1
 10673  02E2  1303               	bcf	3,6	;RP1=0, select bank1
 10674  02E3  084E               	movf	(sprintf@prec+1)^(0+128),w
 10675  02E4  3A80               	xorlw	128
 10676  02E5  00FF               	movwf	btemp+1
 10677  02E6  3080               	movlw	128
 10678  02E7  027F               	subwf	btemp+1,w
 10679  02E8  1D03               	skipz
 10680  02E9  2AEC               	goto	u6115
 10681  02EA  3009               	movlw	9
 10682  02EB  024D               	subwf	sprintf@prec^(0+128),w
 10683  02EC                     u6115:
 10684  02EC  1C03               	skipc
 10685  02ED  2AEF               	goto	u6111
 10686  02EE  2AF0               	goto	u6110
 10687  02EF                     u6111:
 10688  02EF  2AF9               	goto	l3845
 10689  02F0                     u6110:
 10690  02F0                     l3843:
 10691                           
 10692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10693  02F0  3008               	movlw	8
 10694  02F1  1283               	bcf	3,5	;RP0=0, select bank0
 10695  02F2  1303               	bcf	3,6	;RP1=0, select bank0
 10696  02F3  00EA               	movwf	??_sprintf
 10697  02F4  086A               	movf	??_sprintf,w
 10698  02F5  1683               	bsf	3,5	;RP0=1, select bank1
 10699  02F6  1303               	bcf	3,6	;RP1=0, select bank1
 10700  02F7  00CF               	movwf	sprintf@c^(0+128)
 10701  02F8  2B03               	goto	l353
 10702  02F9                     l3845:
 10703                           
 10704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10705  02F9  1683               	bsf	3,5	;RP0=1, select bank1
 10706  02FA  1303               	bcf	3,6	;RP1=0, select bank1
 10707  02FB  084D               	movf	sprintf@prec^(0+128),w
 10708  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 10709  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 10710  02FE  00EA               	movwf	??_sprintf
 10711  02FF  086A               	movf	??_sprintf,w
 10712  0300  1683               	bsf	3,5	;RP0=1, select bank1
 10713  0301  1303               	bcf	3,6	;RP1=0, select bank1
 10714  0302  00CF               	movwf	sprintf@c^(0+128)
 10715  0303                     l353:
 10716                           
 10717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10718  0303  084F               	movf	sprintf@c^(0+128),w
 10719  0304  1283               	bcf	3,5	;RP0=0, select bank0
 10720  0305  1303               	bcf	3,6	;RP1=0, select bank0
 10721  0306  00EA               	movwf	??_sprintf
 10722  0307  01EB               	clrf	??_sprintf+1
 10723  0308  086A               	movf	??_sprintf,w
 10724  0309  1683               	bsf	3,5	;RP0=1, select bank1
 10725  030A  1303               	bcf	3,6	;RP1=0, select bank1
 10726  030B  02CD               	subwf	sprintf@prec^(0+128),f
 10727  030C  1283               	bcf	3,5	;RP0=0, select bank0
 10728  030D  1303               	bcf	3,6	;RP1=0, select bank0
 10729  030E  086B               	movf	??_sprintf+1,w
 10730  030F  1683               	bsf	3,5	;RP0=1, select bank1
 10731  0310  1303               	bcf	3,6	;RP1=0, select bank1
 10732  0311  1C03               	skipc
 10733  0312  03CE               	decf	(sprintf@prec+1)^(0+128),f
 10734  0313  02CE               	subwf	(sprintf@prec+1)^(0+128),f
 10735  0314                     l3847:
 10736                           
 10737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10738  0314  084F               	movf	sprintf@c^(0+128),w
 10739  0315  1903               	btfsc	3,2
 10740  0316  2B18               	goto	u6121
 10741  0317  2B19               	goto	u6120
 10742  0318                     u6121:
 10743  0318  2B2C               	goto	l3853
 10744  0319                     u6120:
 10745  0319                     l3849:
 10746                           
 10747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10748  0319  302E               	movlw	46
 10749  031A  1283               	bcf	3,5	;RP0=0, select bank0
 10750  031B  1303               	bcf	3,6	;RP1=0, select bank0
 10751  031C  00EA               	movwf	??_sprintf
 10752  031D  1683               	bsf	3,5	;RP0=1, select bank1
 10753  031E  1303               	bcf	3,6	;RP1=0, select bank1
 10754  031F  084C               	movf	sprintf@sp^(0+128),w
 10755  0320  0084               	movwf	4
 10756  0321  1283               	bcf	3,5	;RP0=0, select bank0
 10757  0322  1303               	bcf	3,6	;RP1=0, select bank0
 10758  0323  086A               	movf	??_sprintf,w
 10759  0324  1783               	bsf	3,7	;select IRP bank2
 10760  0325  0080               	movwf	0
 10761  0326                     l3851:
 10762  0326  3001               	movlw	1
 10763  0327  00EA               	movwf	??_sprintf
 10764  0328  086A               	movf	??_sprintf,w
 10765  0329  1683               	bsf	3,5	;RP0=1, select bank1
 10766  032A  1303               	bcf	3,6	;RP1=0, select bank1
 10767  032B  07CC               	addwf	sprintf@sp^(0+128),f
 10768  032C                     l3853:
 10769                           
 10770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10771  032C  084F               	movf	sprintf@c^(0+128),w
 10772  032D  120A  158A  249D  120A  118A  	fcall	_scale
 10773  0332  1283               	bcf	3,5	;RP0=0, select bank0
 10774  0333  1303               	bcf	3,6	;RP1=0, select bank0
 10775  0334  0845               	movf	?_scale+3,w
 10776  0335  1683               	bsf	3,5	;RP0=1, select bank1
 10777  0336  1303               	bcf	3,6	;RP1=0, select bank1
 10778  0337  00B8               	movwf	(_sprintf$1196+3)^(0+128)
 10779  0338  1283               	bcf	3,5	;RP0=0, select bank0
 10780  0339  1303               	bcf	3,6	;RP1=0, select bank0
 10781  033A  0844               	movf	?_scale+2,w
 10782  033B  1683               	bsf	3,5	;RP0=1, select bank1
 10783  033C  1303               	bcf	3,6	;RP1=0, select bank1
 10784  033D  00B7               	movwf	(_sprintf$1196+2)^(0+128)
 10785  033E  1283               	bcf	3,5	;RP0=0, select bank0
 10786  033F  1303               	bcf	3,6	;RP1=0, select bank0
 10787  0340  0843               	movf	?_scale+1,w
 10788  0341  1683               	bsf	3,5	;RP0=1, select bank1
 10789  0342  1303               	bcf	3,6	;RP1=0, select bank1
 10790  0343  00B6               	movwf	(_sprintf$1196+1)^(0+128)
 10791  0344  1283               	bcf	3,5	;RP0=0, select bank0
 10792  0345  1303               	bcf	3,6	;RP1=0, select bank0
 10793  0346  0842               	movf	?_scale,w
 10794  0347  1683               	bsf	3,5	;RP0=1, select bank1
 10795  0348  1303               	bcf	3,6	;RP1=0, select bank1
 10796  0349  00B5               	movwf	_sprintf$1196^(0+128)
 10797  034A                     l3855:
 10798                           
 10799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10800  034A  0838               	movf	(_sprintf$1196+3)^(0+128),w
 10801  034B  1283               	bcf	3,5	;RP0=0, select bank0
 10802  034C  1303               	bcf	3,6	;RP1=0, select bank0
 10803  034D  00AF               	movwf	___flmul@a+3
 10804  034E  1683               	bsf	3,5	;RP0=1, select bank1
 10805  034F  1303               	bcf	3,6	;RP1=0, select bank1
 10806  0350  0837               	movf	(_sprintf$1196+2)^(0+128),w
 10807  0351  1283               	bcf	3,5	;RP0=0, select bank0
 10808  0352  1303               	bcf	3,6	;RP1=0, select bank0
 10809  0353  00AE               	movwf	___flmul@a+2
 10810  0354  1683               	bsf	3,5	;RP0=1, select bank1
 10811  0355  1303               	bcf	3,6	;RP1=0, select bank1
 10812  0356  0836               	movf	(_sprintf$1196+1)^(0+128),w
 10813  0357  1283               	bcf	3,5	;RP0=0, select bank0
 10814  0358  1303               	bcf	3,6	;RP1=0, select bank0
 10815  0359  00AD               	movwf	___flmul@a+1
 10816  035A  1683               	bsf	3,5	;RP0=1, select bank1
 10817  035B  1303               	bcf	3,6	;RP1=0, select bank1
 10818  035C  0835               	movf	_sprintf$1196^(0+128),w
 10819  035D  1283               	bcf	3,5	;RP0=0, select bank0
 10820  035E  1303               	bcf	3,6	;RP1=0, select bank0
 10821  035F  00AC               	movwf	___flmul@a
 10822  0360  1683               	bsf	3,5	;RP0=1, select bank1
 10823  0361  1303               	bcf	3,6	;RP1=0, select bank1
 10824  0362  084B               	movf	(sprintf@fval+3)^(0+128),w
 10825  0363  1283               	bcf	3,5	;RP0=0, select bank0
 10826  0364  1303               	bcf	3,6	;RP1=0, select bank0
 10827  0365  00AB               	movwf	___flmul@b+3
 10828  0366  1683               	bsf	3,5	;RP0=1, select bank1
 10829  0367  1303               	bcf	3,6	;RP1=0, select bank1
 10830  0368  084A               	movf	(sprintf@fval+2)^(0+128),w
 10831  0369  1283               	bcf	3,5	;RP0=0, select bank0
 10832  036A  1303               	bcf	3,6	;RP1=0, select bank0
 10833  036B  00AA               	movwf	___flmul@b+2
 10834  036C  1683               	bsf	3,5	;RP0=1, select bank1
 10835  036D  1303               	bcf	3,6	;RP1=0, select bank1
 10836  036E  0849               	movf	(sprintf@fval+1)^(0+128),w
 10837  036F  1283               	bcf	3,5	;RP0=0, select bank0
 10838  0370  1303               	bcf	3,6	;RP1=0, select bank0
 10839  0371  00A9               	movwf	___flmul@b+1
 10840  0372  1683               	bsf	3,5	;RP0=1, select bank1
 10841  0373  1303               	bcf	3,6	;RP1=0, select bank1
 10842  0374  0848               	movf	sprintf@fval^(0+128),w
 10843  0375  1283               	bcf	3,5	;RP0=0, select bank0
 10844  0376  1303               	bcf	3,6	;RP1=0, select bank0
 10845  0377  00A8               	movwf	___flmul@b
 10846  0378  120A  158A  213C  120A  118A  	fcall	___flmul
 10847  037D  1283               	bcf	3,5	;RP0=0, select bank0
 10848  037E  1303               	bcf	3,6	;RP1=0, select bank0
 10849  037F  082B               	movf	?___flmul+3,w
 10850  0380  00D8               	movwf	___fltol@f1+3
 10851  0381  082A               	movf	?___flmul+2,w
 10852  0382  00D7               	movwf	___fltol@f1+2
 10853  0383  0829               	movf	?___flmul+1,w
 10854  0384  00D6               	movwf	___fltol@f1+1
 10855  0385  0828               	movf	?___flmul,w
 10856  0386  00D5               	movwf	___fltol@f1
 10857  0387  160A  158A  2567  120A  118A  	fcall	___fltol
 10858  038C  1283               	bcf	3,5	;RP0=0, select bank0
 10859  038D  1303               	bcf	3,6	;RP1=0, select bank0
 10860  038E  0858               	movf	?___fltol+3,w
 10861  038F  1683               	bsf	3,5	;RP0=1, select bank1
 10862  0390  1303               	bcf	3,6	;RP1=0, select bank1
 10863  0391  00BD               	movwf	(sprintf@val+3)^(0+128)
 10864  0392  1283               	bcf	3,5	;RP0=0, select bank0
 10865  0393  1303               	bcf	3,6	;RP1=0, select bank0
 10866  0394  0857               	movf	?___fltol+2,w
 10867  0395  1683               	bsf	3,5	;RP0=1, select bank1
 10868  0396  1303               	bcf	3,6	;RP1=0, select bank1
 10869  0397  00BC               	movwf	(sprintf@val+2)^(0+128)
 10870  0398  1283               	bcf	3,5	;RP0=0, select bank0
 10871  0399  1303               	bcf	3,6	;RP1=0, select bank0
 10872  039A  0856               	movf	?___fltol+1,w
 10873  039B  1683               	bsf	3,5	;RP0=1, select bank1
 10874  039C  1303               	bcf	3,6	;RP1=0, select bank1
 10875  039D  00BB               	movwf	(sprintf@val+1)^(0+128)
 10876  039E  1283               	bcf	3,5	;RP0=0, select bank0
 10877  039F  1303               	bcf	3,6	;RP1=0, select bank0
 10878  03A0  0855               	movf	?___fltol,w
 10879  03A1  1683               	bsf	3,5	;RP0=1, select bank1
 10880  03A2  1303               	bcf	3,6	;RP1=0, select bank1
 10881  03A3  00BA               	movwf	sprintf@val^(0+128)
 10882                           
 10883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10884  03A4  2C56               	goto	l3865
 10885  03A5                     l3857:
 10886                           
 10887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10888  03A5  084F               	movf	sprintf@c^(0+128),w
 10889  03A6  1283               	bcf	3,5	;RP0=0, select bank0
 10890  03A7  1303               	bcf	3,6	;RP1=0, select bank0
 10891  03A8  00EA               	movwf	??_sprintf
 10892  03A9  3001               	movlw	1
 10893  03AA                     u6135:
 10894  03AA  1003               	clrc
 10895  03AB  0DEA               	rlf	??_sprintf,f
 10896  03AC  3EFF               	addlw	-1
 10897  03AD  1D03               	skipz
 10898  03AE  2BAA               	goto	u6135
 10899  03AF  1003               	clrc
 10900  03B0  0D6A               	rlf	??_sprintf,w
 10901  03B1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10902  03B2  0084               	movwf	4
 10903  03B3  120A  158A  200A  120A  118A  	fcall	stringdir
 10904  03B8  00F2               	movwf	___lldiv@divisor
 10905  03B9  120A  158A  200A  120A  118A  	fcall	stringdir
 10906  03BE  00F3               	movwf	___lldiv@divisor+1
 10907  03BF  120A  158A  200A  120A  118A  	fcall	stringdir
 10908  03C4  00F4               	movwf	___lldiv@divisor+2
 10909  03C5  120A  158A  200A  120A  118A  	fcall	stringdir
 10910  03CA  00F5               	movwf	___lldiv@divisor+3
 10911  03CB  1683               	bsf	3,5	;RP0=1, select bank1
 10912  03CC  1303               	bcf	3,6	;RP1=0, select bank1
 10913  03CD  083D               	movf	(sprintf@val+3)^(0+128),w
 10914  03CE  00F9               	movwf	___lldiv@dividend+3
 10915  03CF  083C               	movf	(sprintf@val+2)^(0+128),w
 10916  03D0  00F8               	movwf	___lldiv@dividend+2
 10917  03D1  083B               	movf	(sprintf@val+1)^(0+128),w
 10918  03D2  00F7               	movwf	___lldiv@dividend+1
 10919  03D3  083A               	movf	sprintf@val^(0+128),w
 10920  03D4  00F6               	movwf	___lldiv@dividend
 10921  03D5  160A  158A  2496  120A  118A  	fcall	___lldiv
 10922  03DA  0875               	movf	?___lldiv+3,w
 10923  03DB  1683               	bsf	3,5	;RP0=1, select bank1
 10924  03DC  1303               	bcf	3,6	;RP1=0, select bank1
 10925  03DD  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 10926  03DE  0874               	movf	?___lldiv+2,w
 10927  03DF  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 10928  03E0  0873               	movf	?___lldiv+1,w
 10929  03E1  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 10930  03E2  0872               	movf	?___lldiv,w
 10931  03E3  00C2               	movwf	sprintf@tmpval^(0+128)
 10932  03E4                     l3859:
 10933                           
 10934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10935  03E4  3000               	movlw	0
 10936  03E5  00F5               	movwf	___llmod@divisor+3
 10937  03E6  3000               	movlw	0
 10938  03E7  00F4               	movwf	___llmod@divisor+2
 10939  03E8  3000               	movlw	0
 10940  03E9  00F3               	movwf	___llmod@divisor+1
 10941  03EA  300A               	movlw	10
 10942  03EB  00F2               	movwf	___llmod@divisor
 10943  03EC  0845               	movf	(sprintf@tmpval+3)^(0+128),w
 10944  03ED  00F9               	movwf	___llmod@dividend+3
 10945  03EE  0844               	movf	(sprintf@tmpval+2)^(0+128),w
 10946  03EF  00F8               	movwf	___llmod@dividend+2
 10947  03F0  0843               	movf	(sprintf@tmpval+1)^(0+128),w
 10948  03F1  00F7               	movwf	___llmod@dividend+1
 10949  03F2  0842               	movf	sprintf@tmpval^(0+128),w
 10950  03F3  00F6               	movwf	___llmod@dividend
 10951  03F4  160A  158A  2440  120A  118A  	fcall	___llmod
 10952  03F9  0875               	movf	?___llmod+3,w
 10953  03FA  1683               	bsf	3,5	;RP0=1, select bank1
 10954  03FB  1303               	bcf	3,6	;RP1=0, select bank1
 10955  03FC  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 10956  03FD  0874               	movf	?___llmod+2,w
 10957  03FE  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 10958  03FF  0873               	movf	?___llmod+1,w
 10959  0400  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 10960  0401  0872               	movf	?___llmod,w
 10961  0402  00C2               	movwf	sprintf@tmpval^(0+128)
 10962  0403                     l3861:
 10963                           
 10964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10965  0403  0842               	movf	sprintf@tmpval^(0+128),w
 10966  0404  3E30               	addlw	48
 10967  0405  1283               	bcf	3,5	;RP0=0, select bank0
 10968  0406  1303               	bcf	3,6	;RP1=0, select bank0
 10969  0407  00EA               	movwf	??_sprintf
 10970  0408  1683               	bsf	3,5	;RP0=1, select bank1
 10971  0409  1303               	bcf	3,6	;RP1=0, select bank1
 10972  040A  084C               	movf	sprintf@sp^(0+128),w
 10973  040B  0084               	movwf	4
 10974  040C  1283               	bcf	3,5	;RP0=0, select bank0
 10975  040D  1303               	bcf	3,6	;RP1=0, select bank0
 10976  040E  086A               	movf	??_sprintf,w
 10977  040F  1783               	bsf	3,7	;select IRP bank2
 10978  0410  0080               	movwf	0
 10979  0411  3001               	movlw	1
 10980  0412  00EA               	movwf	??_sprintf
 10981  0413  086A               	movf	??_sprintf,w
 10982  0414  1683               	bsf	3,5	;RP0=1, select bank1
 10983  0415  1303               	bcf	3,6	;RP1=0, select bank1
 10984  0416  07CC               	addwf	sprintf@sp^(0+128),f
 10985  0417                     l3863:
 10986                           
 10987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10988  0417  084F               	movf	sprintf@c^(0+128),w
 10989  0418  1283               	bcf	3,5	;RP0=0, select bank0
 10990  0419  1303               	bcf	3,6	;RP1=0, select bank0
 10991  041A  00EA               	movwf	??_sprintf
 10992  041B  3001               	movlw	1
 10993  041C                     u6145:
 10994  041C  1003               	clrc
 10995  041D  0DEA               	rlf	??_sprintf,f
 10996  041E  3EFF               	addlw	-1
 10997  041F  1D03               	skipz
 10998  0420  2C1C               	goto	u6145
 10999  0421  1003               	clrc
 11000  0422  0D6A               	rlf	??_sprintf,w
 11001  0423  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11002  0424  0084               	movwf	4
 11003  0425  120A  158A  200A  120A  118A  	fcall	stringdir
 11004  042A  00F2               	movwf	___llmod@divisor
 11005  042B  120A  158A  200A  120A  118A  	fcall	stringdir
 11006  0430  00F3               	movwf	___llmod@divisor+1
 11007  0431  120A  158A  200A  120A  118A  	fcall	stringdir
 11008  0436  00F4               	movwf	___llmod@divisor+2
 11009  0437  120A  158A  200A  120A  118A  	fcall	stringdir
 11010  043C  00F5               	movwf	___llmod@divisor+3
 11011  043D  1683               	bsf	3,5	;RP0=1, select bank1
 11012  043E  1303               	bcf	3,6	;RP1=0, select bank1
 11013  043F  083D               	movf	(sprintf@val+3)^(0+128),w
 11014  0440  00F9               	movwf	___llmod@dividend+3
 11015  0441  083C               	movf	(sprintf@val+2)^(0+128),w
 11016  0442  00F8               	movwf	___llmod@dividend+2
 11017  0443  083B               	movf	(sprintf@val+1)^(0+128),w
 11018  0444  00F7               	movwf	___llmod@dividend+1
 11019  0445  083A               	movf	sprintf@val^(0+128),w
 11020  0446  00F6               	movwf	___llmod@dividend
 11021  0447  160A  158A  2440  120A  118A  	fcall	___llmod
 11022  044C  0875               	movf	?___llmod+3,w
 11023  044D  1683               	bsf	3,5	;RP0=1, select bank1
 11024  044E  1303               	bcf	3,6	;RP1=0, select bank1
 11025  044F  00BD               	movwf	(sprintf@val+3)^(0+128)
 11026  0450  0874               	movf	?___llmod+2,w
 11027  0451  00BC               	movwf	(sprintf@val+2)^(0+128)
 11028  0452  0873               	movf	?___llmod+1,w
 11029  0453  00BB               	movwf	(sprintf@val+1)^(0+128)
 11030  0454  0872               	movf	?___llmod,w
 11031  0455  00BA               	movwf	sprintf@val^(0+128)
 11032  0456                     l3865:
 11033                           
 11034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11035  0456  3001               	movlw	1
 11036  0457  02CF               	subwf	sprintf@c^(0+128),f
 11037  0458  0A4F               	incf	sprintf@c^(0+128),w
 11038  0459  1D03               	btfss	3,2
 11039  045A  2C5C               	goto	u6151
 11040  045B  2C5D               	goto	u6150
 11041  045C                     u6151:
 11042  045C  2BA5               	goto	l3857
 11043  045D                     u6150:
 11044  045D  2C77               	goto	l3873
 11045  045E                     l3867:
 11046                           
 11047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11048  045E  3030               	movlw	48
 11049  045F  1283               	bcf	3,5	;RP0=0, select bank0
 11050  0460  1303               	bcf	3,6	;RP1=0, select bank0
 11051  0461  00EA               	movwf	??_sprintf
 11052  0462  1683               	bsf	3,5	;RP0=1, select bank1
 11053  0463  1303               	bcf	3,6	;RP1=0, select bank1
 11054  0464  084C               	movf	sprintf@sp^(0+128),w
 11055  0465  0084               	movwf	4
 11056  0466  1283               	bcf	3,5	;RP0=0, select bank0
 11057  0467  1303               	bcf	3,6	;RP1=0, select bank0
 11058  0468  086A               	movf	??_sprintf,w
 11059  0469  1783               	bsf	3,7	;select IRP bank2
 11060  046A  0080               	movwf	0
 11061  046B                     l3869:
 11062  046B  3001               	movlw	1
 11063  046C  00EA               	movwf	??_sprintf
 11064  046D  086A               	movf	??_sprintf,w
 11065  046E  1683               	bsf	3,5	;RP0=1, select bank1
 11066  046F  1303               	bcf	3,6	;RP1=0, select bank1
 11067  0470  07CC               	addwf	sprintf@sp^(0+128),f
 11068  0471                     l3871:
 11069                           
 11070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11071  0471  30FF               	movlw	255
 11072  0472  07CD               	addwf	sprintf@prec^(0+128),f
 11073  0473  1803               	skipnc
 11074  0474  0ACE               	incf	(sprintf@prec+1)^(0+128),f
 11075  0475  30FF               	movlw	255
 11076  0476  07CE               	addwf	(sprintf@prec+1)^(0+128),f
 11077  0477                     l3873:
 11078                           
 11079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11080  0477  084D               	movf	sprintf@prec^(0+128),w
 11081  0478  044E               	iorwf	(sprintf@prec+1)^(0+128),w
 11082  0479  1D03               	btfss	3,2
 11083  047A  2C7C               	goto	u6161
 11084  047B  2C7D               	goto	u6160
 11085  047C                     u6161:
 11086  047C  2C5E               	goto	l3867
 11087  047D                     u6160:
 11088  047D  2D81               	goto	l3921
 11089  047E                     l3875:
 11090                           
 11091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11092  047E  1683               	bsf	3,5	;RP0=1, select bank1
 11093  047F  1303               	bcf	3,6	;RP1=0, select bank1
 11094  0480  084D               	movf	sprintf@prec^(0+128),w
 11095  0481  044E               	iorwf	(sprintf@prec+1)^(0+128),w
 11096  0482  1D03               	btfss	3,2
 11097  0483  2C85               	goto	u6171
 11098  0484  2C86               	goto	u6170
 11099  0485                     u6171:
 11100  0485  2C94               	goto	l361
 11101  0486                     u6170:
 11102  0486                     l3877:
 11103  0486  083D               	movf	(sprintf@val+3)^(0+128),w
 11104  0487  043C               	iorwf	(sprintf@val+2)^(0+128),w
 11105  0488  043B               	iorwf	(sprintf@val+1)^(0+128),w
 11106  0489  043A               	iorwf	sprintf@val^(0+128),w
 11107  048A  1D03               	skipz
 11108  048B  2C8D               	goto	u6181
 11109  048C  2C8E               	goto	u6180
 11110  048D                     u6181:
 11111  048D  2C94               	goto	l361
 11112  048E                     u6180:
 11113  048E                     l3879:
 11114                           
 11115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11116  048E  3001               	movlw	1
 11117  048F  07CD               	addwf	sprintf@prec^(0+128),f
 11118  0490  1803               	skipnc
 11119  0491  0ACE               	incf	(sprintf@prec+1)^(0+128),f
 11120  0492  3000               	movlw	0
 11121  0493  07CE               	addwf	(sprintf@prec+1)^(0+128),f
 11122  0494                     l361:
 11123                           
 11124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11125  0494  084E               	movf	(sprintf@prec+1)^(0+128),w
 11126  0495  3A80               	xorlw	128
 11127  0496  3C80               	sublw	128
 11128  0497  1D03               	skipz
 11129  0498  2C9B               	goto	u6195
 11130  0499  084D               	movf	sprintf@prec^(0+128),w
 11131  049A  024F               	subwf	sprintf@c^(0+128),w
 11132  049B                     u6195:
 11133  049B  1803               	skipnc
 11134  049C  2C9E               	goto	u6191
 11135  049D  2C9F               	goto	u6190
 11136  049E                     u6191:
 11137  049E  2CAA               	goto	l3883
 11138  049F                     u6190:
 11139  049F                     l3881:
 11140                           
 11141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11142  049F  1683               	bsf	3,5	;RP0=1, select bank1
 11143  04A0  1303               	bcf	3,6	;RP1=0, select bank1
 11144  04A1  084D               	movf	sprintf@prec^(0+128),w
 11145  04A2  1283               	bcf	3,5	;RP0=0, select bank0
 11146  04A3  1303               	bcf	3,6	;RP1=0, select bank0
 11147  04A4  00EA               	movwf	??_sprintf
 11148  04A5  086A               	movf	??_sprintf,w
 11149  04A6  1683               	bsf	3,5	;RP0=1, select bank1
 11150  04A7  1303               	bcf	3,6	;RP1=0, select bank1
 11151  04A8  00CF               	movwf	sprintf@c^(0+128)
 11152  04A9  2CCE               	goto	l3887
 11153  04AA                     l3883:
 11154  04AA  1683               	bsf	3,5	;RP0=1, select bank1
 11155  04AB  1303               	bcf	3,6	;RP1=0, select bank1
 11156  04AC  084E               	movf	(sprintf@prec+1)^(0+128),w
 11157  04AD  3A80               	xorlw	128
 11158  04AE  1283               	bcf	3,5	;RP0=0, select bank0
 11159  04AF  1303               	bcf	3,6	;RP1=0, select bank0
 11160  04B0  00EA               	movwf	??_sprintf
 11161  04B1  3080               	movlw	128
 11162  04B2  026A               	subwf	??_sprintf,w
 11163  04B3  1D03               	skipz
 11164  04B4  2CB9               	goto	u6205
 11165  04B5  1683               	bsf	3,5	;RP0=1, select bank1
 11166  04B6  1303               	bcf	3,6	;RP1=0, select bank1
 11167  04B7  084F               	movf	sprintf@c^(0+128),w
 11168  04B8  024D               	subwf	sprintf@prec^(0+128),w
 11169  04B9                     u6205:
 11170  04B9  1803               	skipnc
 11171  04BA  2CBC               	goto	u6201
 11172  04BB  2CBD               	goto	u6200
 11173  04BC                     u6201:
 11174  04BC  2CCE               	goto	l3887
 11175  04BD                     u6200:
 11176  04BD                     l3885:
 11177                           
 11178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11179  04BD  1683               	bsf	3,5	;RP0=1, select bank1
 11180  04BE  1303               	bcf	3,6	;RP1=0, select bank1
 11181  04BF  084F               	movf	sprintf@c^(0+128),w
 11182  04C0  1283               	bcf	3,5	;RP0=0, select bank0
 11183  04C1  1303               	bcf	3,6	;RP1=0, select bank0
 11184  04C2  00EA               	movwf	??_sprintf
 11185  04C3  01EB               	clrf	??_sprintf+1
 11186  04C4  086A               	movf	??_sprintf,w
 11187  04C5  1683               	bsf	3,5	;RP0=1, select bank1
 11188  04C6  1303               	bcf	3,6	;RP1=0, select bank1
 11189  04C7  00CD               	movwf	sprintf@prec^(0+128)
 11190  04C8  1283               	bcf	3,5	;RP0=0, select bank0
 11191  04C9  1303               	bcf	3,6	;RP1=0, select bank0
 11192  04CA  086B               	movf	??_sprintf+1,w
 11193  04CB  1683               	bsf	3,5	;RP0=1, select bank1
 11194  04CC  1303               	bcf	3,6	;RP1=0, select bank1
 11195  04CD  00CE               	movwf	(sprintf@prec+1)^(0+128)
 11196  04CE                     l3887:
 11197                           
 11198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11199  04CE  1683               	bsf	3,5	;RP0=1, select bank1
 11200  04CF  1303               	bcf	3,6	;RP1=0, select bank1
 11201  04D0  0840               	movf	sprintf@width^(0+128),w
 11202  04D1  0441               	iorwf	(sprintf@width+1)^(0+128),w
 11203  04D2  1903               	btfsc	3,2
 11204  04D3  2CD5               	goto	u6211
 11205  04D4  2CD6               	goto	u6210
 11206  04D5                     u6211:
 11207  04D5  2CF0               	goto	l3893
 11208  04D6                     u6210:
 11209  04D6                     l3889:
 11210  04D6  3003               	movlw	3
 11211  04D7  053E               	andwf	sprintf@flag^(0+128),w
 11212  04D8  1283               	bcf	3,5	;RP0=0, select bank0
 11213  04D9  1303               	bcf	3,6	;RP1=0, select bank0
 11214  04DA  00EA               	movwf	??_sprintf
 11215  04DB  3000               	movlw	0
 11216  04DC  1683               	bsf	3,5	;RP0=1, select bank1
 11217  04DD  1303               	bcf	3,6	;RP1=0, select bank1
 11218  04DE  053F               	andwf	(sprintf@flag+1)^(0+128),w
 11219  04DF  1283               	bcf	3,5	;RP0=0, select bank0
 11220  04E0  1303               	bcf	3,6	;RP1=0, select bank0
 11221  04E1  00EB               	movwf	??_sprintf+1
 11222  04E2  086A               	movf	??_sprintf,w
 11223  04E3  046B               	iorwf	??_sprintf+1,w
 11224  04E4  1903               	btfsc	3,2
 11225  04E5  2CE7               	goto	u6221
 11226  04E6  2CE8               	goto	u6220
 11227  04E7                     u6221:
 11228  04E7  2CF0               	goto	l3893
 11229  04E8                     u6220:
 11230  04E8                     l3891:
 11231                           
 11232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11233  04E8  30FF               	movlw	255
 11234  04E9  1683               	bsf	3,5	;RP0=1, select bank1
 11235  04EA  1303               	bcf	3,6	;RP1=0, select bank1
 11236  04EB  07C0               	addwf	sprintf@width^(0+128),f
 11237  04EC  1803               	skipnc
 11238  04ED  0AC1               	incf	(sprintf@width+1)^(0+128),f
 11239  04EE  30FF               	movlw	255
 11240  04EF  07C1               	addwf	(sprintf@width+1)^(0+128),f
 11241  04F0                     l3893:
 11242                           
 11243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11244  04F0  1683               	bsf	3,5	;RP0=1, select bank1
 11245  04F1  1303               	bcf	3,6	;RP1=0, select bank1
 11246  04F2  1F3F               	btfss	(sprintf@flag+1)^(0+128),6
 11247  04F3  2CF5               	goto	u6231
 11248  04F4  2CF6               	goto	u6230
 11249  04F5                     u6231:
 11250  04F5  2D19               	goto	l3901
 11251  04F6                     u6230:
 11252  04F6                     l3895:
 11253                           
 11254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11255  04F6  084E               	movf	(sprintf@prec+1)^(0+128),w
 11256  04F7  3A80               	xorlw	128
 11257  04F8  1283               	bcf	3,5	;RP0=0, select bank0
 11258  04F9  1303               	bcf	3,6	;RP1=0, select bank0
 11259  04FA  00EA               	movwf	??_sprintf
 11260  04FB  1683               	bsf	3,5	;RP0=1, select bank1
 11261  04FC  1303               	bcf	3,6	;RP1=0, select bank1
 11262  04FD  0841               	movf	(sprintf@width+1)^(0+128),w
 11263  04FE  3A80               	xorlw	128
 11264  04FF  1283               	bcf	3,5	;RP0=0, select bank0
 11265  0500  1303               	bcf	3,6	;RP1=0, select bank0
 11266  0501  026A               	subwf	??_sprintf,w
 11267  0502  1D03               	skipz
 11268  0503  2D08               	goto	u6245
 11269  0504  1683               	bsf	3,5	;RP0=1, select bank1
 11270  0505  1303               	bcf	3,6	;RP1=0, select bank1
 11271  0506  0840               	movf	sprintf@width^(0+128),w
 11272  0507  024D               	subwf	sprintf@prec^(0+128),w
 11273  0508                     u6245:
 11274  0508  1803               	skipnc
 11275  0509  2D0B               	goto	u6241
 11276  050A  2D0C               	goto	u6240
 11277  050B                     u6241:
 11278  050B  2D15               	goto	l3899
 11279  050C                     u6240:
 11280  050C                     l3897:
 11281                           
 11282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11283  050C  1683               	bsf	3,5	;RP0=1, select bank1
 11284  050D  1303               	bcf	3,6	;RP1=0, select bank1
 11285  050E  084D               	movf	sprintf@prec^(0+128),w
 11286  050F  02C0               	subwf	sprintf@width^(0+128),f
 11287  0510  084E               	movf	(sprintf@prec+1)^(0+128),w
 11288  0511  1C03               	skipc
 11289  0512  03C1               	decf	(sprintf@width+1)^(0+128),f
 11290  0513  02C1               	subwf	(sprintf@width+1)^(0+128),f
 11291  0514  2D19               	goto	l3901
 11292  0515                     l3899:
 11293                           
 11294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11295  0515  1683               	bsf	3,5	;RP0=1, select bank1
 11296  0516  1303               	bcf	3,6	;RP1=0, select bank1
 11297  0517  01C0               	clrf	sprintf@width^(0+128)
 11298  0518  01C1               	clrf	(sprintf@width+1)^(0+128)
 11299  0519                     l3901:
 11300                           
 11301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11302  0519  0841               	movf	(sprintf@width+1)^(0+128),w
 11303  051A  3A80               	xorlw	128
 11304  051B  3C80               	sublw	128
 11305  051C  1D03               	skipz
 11306  051D  2D20               	goto	u6255
 11307  051E  0840               	movf	sprintf@width^(0+128),w
 11308  051F  024F               	subwf	sprintf@c^(0+128),w
 11309  0520                     u6255:
 11310  0520  1803               	skipnc
 11311  0521  2D23               	goto	u6251
 11312  0522  2D24               	goto	u6250
 11313  0523                     u6251:
 11314  0523  2D38               	goto	l3905
 11315  0524                     u6250:
 11316  0524                     l3903:
 11317                           
 11318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11319  0524  1683               	bsf	3,5	;RP0=1, select bank1
 11320  0525  1303               	bcf	3,6	;RP1=0, select bank1
 11321  0526  084F               	movf	sprintf@c^(0+128),w
 11322  0527  1283               	bcf	3,5	;RP0=0, select bank0
 11323  0528  1303               	bcf	3,6	;RP1=0, select bank0
 11324  0529  00EA               	movwf	??_sprintf
 11325  052A  01EB               	clrf	??_sprintf+1
 11326  052B  086A               	movf	??_sprintf,w
 11327  052C  1683               	bsf	3,5	;RP0=1, select bank1
 11328  052D  1303               	bcf	3,6	;RP1=0, select bank1
 11329  052E  02C0               	subwf	sprintf@width^(0+128),f
 11330  052F  1283               	bcf	3,5	;RP0=0, select bank0
 11331  0530  1303               	bcf	3,6	;RP1=0, select bank0
 11332  0531  086B               	movf	??_sprintf+1,w
 11333  0532  1683               	bsf	3,5	;RP0=1, select bank1
 11334  0533  1303               	bcf	3,6	;RP1=0, select bank1
 11335  0534  1C03               	skipc
 11336  0535  03C1               	decf	(sprintf@width+1)^(0+128),f
 11337  0536  02C1               	subwf	(sprintf@width+1)^(0+128),f
 11338  0537  2D3C               	goto	l3907
 11339  0538                     l3905:
 11340                           
 11341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11342  0538  1683               	bsf	3,5	;RP0=1, select bank1
 11343  0539  1303               	bcf	3,6	;RP1=0, select bank1
 11344  053A  01C0               	clrf	sprintf@width^(0+128)
 11345  053B  01C1               	clrf	(sprintf@width+1)^(0+128)
 11346  053C                     l3907:
 11347                           
 11348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11349  053C  0840               	movf	sprintf@width^(0+128),w
 11350  053D  0441               	iorwf	(sprintf@width+1)^(0+128),w
 11351  053E  1903               	btfsc	3,2
 11352  053F  2D41               	goto	u6261
 11353  0540  2D42               	goto	u6260
 11354  0541                     u6261:
 11355  0541  2D61               	goto	l3915
 11356  0542                     u6260:
 11357  0542                     l3909:
 11358                           
 11359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11360  0542  3020               	movlw	32
 11361  0543  1283               	bcf	3,5	;RP0=0, select bank0
 11362  0544  1303               	bcf	3,6	;RP1=0, select bank0
 11363  0545  00EA               	movwf	??_sprintf
 11364  0546  1683               	bsf	3,5	;RP0=1, select bank1
 11365  0547  1303               	bcf	3,6	;RP1=0, select bank1
 11366  0548  084C               	movf	sprintf@sp^(0+128),w
 11367  0549  0084               	movwf	4
 11368  054A  1283               	bcf	3,5	;RP0=0, select bank0
 11369  054B  1303               	bcf	3,6	;RP1=0, select bank0
 11370  054C  086A               	movf	??_sprintf,w
 11371  054D  1783               	bsf	3,7	;select IRP bank2
 11372  054E  0080               	movwf	0
 11373  054F                     l3911:
 11374  054F  3001               	movlw	1
 11375  0550  00EA               	movwf	??_sprintf
 11376  0551  086A               	movf	??_sprintf,w
 11377  0552  1683               	bsf	3,5	;RP0=1, select bank1
 11378  0553  1303               	bcf	3,6	;RP1=0, select bank1
 11379  0554  07CC               	addwf	sprintf@sp^(0+128),f
 11380  0555                     l3913:
 11381  0555  30FF               	movlw	255
 11382  0556  07C0               	addwf	sprintf@width^(0+128),f
 11383  0557  1803               	skipnc
 11384  0558  0AC1               	incf	(sprintf@width+1)^(0+128),f
 11385  0559  30FF               	movlw	255
 11386  055A  07C1               	addwf	(sprintf@width+1)^(0+128),f
 11387  055B  0840               	movf	sprintf@width^(0+128),w
 11388  055C  0441               	iorwf	(sprintf@width+1)^(0+128),w
 11389  055D  1D03               	btfss	3,2
 11390  055E  2D60               	goto	u6271
 11391  055F  2D61               	goto	u6270
 11392  0560                     u6271:
 11393  0560  2D42               	goto	l3909
 11394  0561                     u6270:
 11395  0561                     l3915:
 11396                           
 11397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11398  0561  3003               	movlw	3
 11399  0562  053E               	andwf	sprintf@flag^(0+128),w
 11400  0563  1283               	bcf	3,5	;RP0=0, select bank0
 11401  0564  1303               	bcf	3,6	;RP1=0, select bank0
 11402  0565  00EA               	movwf	??_sprintf
 11403  0566  3000               	movlw	0
 11404  0567  1683               	bsf	3,5	;RP0=1, select bank1
 11405  0568  1303               	bcf	3,6	;RP1=0, select bank1
 11406  0569  053F               	andwf	(sprintf@flag+1)^(0+128),w
 11407  056A  1283               	bcf	3,5	;RP0=0, select bank0
 11408  056B  1303               	bcf	3,6	;RP1=0, select bank0
 11409  056C  00EB               	movwf	??_sprintf+1
 11410  056D  086A               	movf	??_sprintf,w
 11411  056E  046B               	iorwf	??_sprintf+1,w
 11412  056F  1903               	btfsc	3,2
 11413  0570  2D72               	goto	u6281
 11414  0571  2D73               	goto	u6280
 11415  0572                     u6281:
 11416  0572  2D81               	goto	l3921
 11417  0573                     u6280:
 11418  0573                     l3917:
 11419                           
 11420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11421  0573  302D               	movlw	45
 11422  0574  00EA               	movwf	??_sprintf
 11423  0575  1683               	bsf	3,5	;RP0=1, select bank1
 11424  0576  1303               	bcf	3,6	;RP1=0, select bank1
 11425  0577  084C               	movf	sprintf@sp^(0+128),w
 11426  0578  0084               	movwf	4
 11427  0579  1283               	bcf	3,5	;RP0=0, select bank0
 11428  057A  1303               	bcf	3,6	;RP1=0, select bank0
 11429  057B  086A               	movf	??_sprintf,w
 11430  057C  1783               	bsf	3,7	;select IRP bank2
 11431  057D  0080               	movwf	0
 11432  057E  160A  118A  2D1D   	goto	l3677
 11433  0581                     l3921:
 11434                           
 11435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11436  0581  3001               	movlw	1
 11437  0582  1683               	bsf	3,5	;RP0=1, select bank1
 11438  0583  1303               	bcf	3,6	;RP1=0, select bank1
 11439  0584  07A8               	addwf	sprintf@f^(0+128),f
 11440  0585  30FF               	movlw	-1
 11441  0586  0728               	addwf	sprintf@f^(0+128),w
 11442  0587  0084               	movwf	4
 11443  0588  120A  158A  200A  120A  118A  	fcall	stringdir
 11444  058D  1283               	bcf	3,5	;RP0=0, select bank0
 11445  058E  1303               	bcf	3,6	;RP1=0, select bank0
 11446  058F  00EA               	movwf	??_sprintf
 11447  0590  086A               	movf	??_sprintf,w
 11448  0591  1683               	bsf	3,5	;RP0=1, select bank1
 11449  0592  1303               	bcf	3,6	;RP1=0, select bank1
 11450  0593  00CF               	movwf	sprintf@c^(0+128)
 11451  0594  084F               	movf	sprintf@c^(0+128),w
 11452  0595  1D03               	btfss	3,2
 11453  0596  2D98               	goto	u6291
 11454  0597  2D9B               	goto	u6290
 11455  0598                     u6291:
 11456  0598  160A  118A  2D0A   	goto	l3673
 11457  059B                     u6290:
 11458  059B                     l3923:
 11459                           
 11460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11461  059B  1683               	bsf	3,5	;RP0=1, select bank1
 11462  059C  1303               	bcf	3,6	;RP1=0, select bank1
 11463  059D  084C               	movf	sprintf@sp^(0+128),w
 11464  059E  0084               	movwf	4
 11465  059F  1783               	bsf	3,7	;select IRP bank2
 11466  05A0  0180               	clrf	0
 11467  05A1                     l376:
 11468  05A1  0008               	return
 11469  05A2                     __end_of_sprintf:

Data Sizes:
    Strings     54
    Constant    144
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     79      79
    BANK1            80     52      67
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> Lcdvar(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    USART_WriteStr@a	PTR unsigned char  size(2) Largest target is 20
		 -> Lcdvar(BANK3[20]), STR_1(CODE[19]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), Lcdvar(BANK3[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    _USART_WriteStr->_USART_Write
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   39752
                                             48 BANK1      4     4      0
                       _Init_Receive
                         _Init_Trans
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                       _Set_BaudRate
                              _Setup
                        _USART_Write
                     _USART_WriteStr
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    37     13   33334
                                             74 BANK0      5     5      0
                                              8 BANK1     40    27     13
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6291
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _USART_WriteStr                                       4     2      2     264
                                              3 COMMON     4     2      2
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
                         _SPI_MASTER
 ---------------------------------------------------------------------------------
 (2) _SPI_MASTER                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Set_BaudRate                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     372
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      62
                                              3 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     434
                                              6 COMMON     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      93
                                              6 COMMON     2     2      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      62
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      62
                                              3 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Trans                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Receive
   _Init_Trans
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Init
     _LCD_Cmd
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _Set_BaudRate
   _Setup
     _SPI_MASTER
   _USART_Write
   _USART_WriteStr
     _USART_Write
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B2       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     34      43       7       83.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      14       9       20.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B2      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 19:39:11 2021

                        pc 0002                _SSPSTATbits 0094                         l71 1ADA  
                       l82 1122                         l83 113F                         _S1 00DC  
                       l84 115C                         _S2 00D8                         _S3 00D4  
             ___awdiv@sign 0025                         fsr 0004        ___wmul@multiplicand 0074  
      __Umul8_16@word_mpld 0078                        l102 1BEF                        l111 1A34  
                      l120 1A58                        l105 19A4                        l114 08E2  
                      l108 1A11                        l126 1B5A                        l151 199E  
                      l160 19CC                        l154 19E4                        l163 19D6  
                      l315 15EB                        l157 19B3                        l184 19CA  
                      l416 1CFD                        l169 1033                        l601 1FC2  
                      l361 0494                        l353 0303                        l346 02B1  
                      l380 1A65                        l533 1D66                        l293 0FFF  
                      l382 1A7D                        l550 10F1                        l286 07AE  
                      l711 137E                        l551 1056                        l720 14FB  
                      l608 1FF2                        l376 05A1                        l713 1355  
                      l561 10E4                        l554 10B4                        l546 093B  
                      l571 1E01                        l707 12D7                        l803 0C9C  
                      l732 146D                        l636 1C95                        l741 14CD  
                      l566 1C0E                        l574 1E6D                        l750 14FB  
                      l590 1DCD                        l822 1A92                        l567 1C2A  
                      l575 1E86                        l583 1DE2                        l815 0C90  
                      l568 1C3F                        l728 1449                        l824 1AA4  
                      l753 07FE                        l593 1DE2                        l809 0C08  
                      l738 148F                        l579 19BE                        l860 1F0C  
                      l749 14EF                        l861 1F18                        l853 1EF0  
                      l597 1FFF                        l598 1F71                        l686 1BA0  
                      l847 1EAB                        l696 1B14                        l849 1F42  
                      l867 19F6                        _RE0 0048                        _RE1 0049  
                      _ISR 19A5                        fsr0 0004                        indf 0000  
             ___awmod@sign 0078               ___flmul@aexp 003A               ___flmul@bexp 003B  
             ___flmul@sign 0035               ___flmul@temp 0040               ___flmul@prod 003C  
   __end_of_USART_WriteStr 1034            __end_of_LCD_Cmd 1A35                       ?_ISR 0070  
           _LCD_Set_Cursor 1A35               ___fltol@exp1 005F                       l3001 1C3E  
                     l3011 1E1D                       l3021 1E85                       l3013 1E21  
                     l3005 1DE3                       l3101 1EA3                       l2301 1D21  
                     l3015 1E45                       l3007 1DF9                       l3111 1ECE  
                     l3103 1EB3                       l2311 1D44                       l2303 1D24  
                     l3017 1E49                       l3009 1E15                       l3025 19B4  
                     l3041 1D92                       l3033 1D67                       l3121 1F02  
                     l3113 1ED5                       l2401 1AF3                       l2321 1D5D  
                     l2313 1D4A                       l2305 1D2B                       l4001 1202  
                     l3019 1E83                       l3027 19BC                       l3043 1D93  
                     l3035 1D74                       l3131 1F35                       l3123 1F06  
                     l3115 1ED9                       l3107 1EBC                       l2403 1AFD  
                     l2323 1D62                       l2315 1D4B                       l2307 1D2F  
                     l2331 08E8                       l4011 1240                       l4003 1226  
                     l3141 1AA9                       l3029 19BE                       l2501 1364  
                     l2421 1286                       l2413 1274                       l3045 1D9B  
                     l3133 1F39                       l3125 1F10                       l3117 1EE7  
                     l3109 1EC1                       l2405 1B03                       l2317 1D52  
                     l2309 1D33                       l2341 08FE                       l2333 08ED  
                     l4013 1248                       l4005 122F                       l3151 1ACE  
                     l3143 1AAA                       l2511 1382                       l2503 1368  
                     l2423 128B                       l2431 129B                       l2415 127B  
                     l3063 1DC2                       l3055 1DA9                       l3047 1D9D  
                     l3039 1D7D                       l3135 1F3A                       l3127 1F1A  
                     l3119 1EF7                       l2271 1A88                       l2407 1B0A  
                     l2319 1D58                       l2351 091A                       l2343 0901  
                     l2335 08EF                       l2327 08E3                       l4015 1251  
                     l4007 1235                       l3153 1AD1                       l3145 1AC3  
                     l2601 14EB                       l2521 13AB                       l2513 1387  
                     l2505 1369                       l2441 12B5                       l2433 12A3  
                     l2425 1290                       l2417 1281                       l3065 1DD2  
                     l3049 1DA1                       l3057 1DBB                       l3129 1F30  
                     l2273 1A8C                       l2409 1B10                       l2361 0937  
                     l2353 0920                       l2345 0908                       l2337 08F3  
                     l2329 08E4                       l4017 1259                       l4009 123B  
                     l3155 1AD4                       l3147 1AC8                       l3139 1AA5  
                     l2603 14F6                       l2531 13BF                       l2523 13AF  
                     l2507 1372                       l2451 12CC                       l2443 12B9  
                     l2435 12A8                       l2427 1298                       l2419 1285  
                     l3091 07B3                       l3067 1DD7                       l2275 1A9B  
                     l2267 1A7F                       l2611 0949                       l2291 1D0C  
                     l2283 1CFE                       l2355 0927                       l2347 090C  
                     l2339 08F8                       l4051 1605                       l4019 1262  
                     l3173 199A                       l3157 1AD7                       l3149 1ACB  
                     l3181 100B                       l2605 14FA                       l2541 1427  
                     l2533 13C8                       l2525 13B8                       l2517 1390  
                     l2509 1376                       l2461 12E5                       l2453 12CD  
                     l2445 12BA                       l2437 12AE                       l2429 1299  
                     l2277 1AA0                       l2269 1A81                       l2701 0BE2  
                     l2621 0960                       l2613 094D                       l2293 1D10  
                     l2285 1D01                       l2349 0910                       l2357 092D  
                     l3175 19D7                       l3183 101C                       l2543 142C  
                     l2527 13BA                       l2519 13A7                       l2535 13CD  
                     l2471 12F9                       l2463 12E9                       l2447 12BF  
                     l2455 12CF                       l2439 12AF                       l3095 1E8A  
                     l2711 0C05                       l2703 0BE8                       l2631 0979  
                     l2623 0962                       l2615 094E                       l2607 093C  
                     l2391 1ADB                       l2295 1D15                       l2287 1D05  
                     l2359 0932                       l3177 19AC                       l3601 1A1F  
                     l3185 1020                       l2561 1474                       l2553 145F  
                     l2537 13E3                       l2545 143B                       l2529 13BE  
                     l2481 130D                       l2473 12FD                       l2465 12ED  
                     l2457 12DD                       l2449 12C4                       l3089 07AF  
                     l3097 1E8F                       l2721 0C24                       l2705 0BEC  
                     l2641 098E                       l2633 097A                       l2625 096A  
                     l2617 0953                       l2609 0943                       l2393 1AE1  
                     l2297 1D19                       l2289 1D0A                       l2801 0CA4  
                     l3603 1A28                       l3611 1A01                       l3179 1009  
                     l2571 1482                       l2563 1476                       l2555 1468  
                     l2547 1451                       l2539 1421                       l2483 1311  
                     l2475 1301                       l2467 12F1                       l2459 12E1  
                     l2491 1321                       l3099 1E93                       l2731 0C6A  
                     l2723 0C3D                       l2715 0C0D                       l2707 0BED  
                     l2651 09A9                       l2643 0996                       l2635 097F  
                     l2627 096F                       l2619 0958                       l2395 1AE4  
                     l2299 1D1B                       l2811 0D97                       l2803 0CA6  
                     l3605 1A2B                       l3613 1A04                       l2581 1499  
                     l2573 1486                       l2565 147B                       l2557 146C  
                     l2549 1456                       l2493 1322                       l2485 1315  
                     l2477 1305                       l2469 12F5                       l2741 0C89  
                     l2733 0C74                       l2717 0C12                       l2725 0C43  
                     l2709 0BF1                       l2661 0A2B                       l2653 09B9  
                     l2645 099B                       l2637 0984                       l2629 0975  
                     l2397 1AEB                       l3621 05AB                       l2813 0D9E  
                     l2805 0CAD                       l2821 0E53                       l3701 159E  
                     l3615 1A09                       l3607 19F8                       l2751 19C7  
                     l2591 14D7                       l2583 14A7                       l2575 148C  
                     l2559 1471                       l2567 147D                       l2495 1339  
                     l2487 1319                       l2479 1309                       l2903 1034  
                     l2743 0C94                       l2735 0C76                       l2727 0C50  
                     l2719 0C20                       l2671 0A99                       l2663 0A47  
                     l2655 09C6                       l2647 09A0                       l2639 098C  
                     l2399 1AEF                       l2831 0F4B                       l2823 0E5A  
                     l3711 15E9                       l3703 15B3                       l3617 1A0C  
                     l3609 19FB                       l2753 19CC                       l2593 14DF  
                     l2585 14AB                       l2569 1481                       l2497 1359  
                     l2489 131D                       l3641 1C4D                       l2921 1072  
                     l2905 1041                       l2737 0C84                       l2729 0C5B  
                     l2681 0B29                       l2673 0AA9                       l2665 0A63  
                     l2657 09E3                       l3633 076B                       l2841 19E7  
                     l2817 0E26                       l3721 1627                       l3705 15CE  
                     l2747 19BF                       l2755 19D2                       l2595 14E4  
                     l2587 14C9                       l2579 1494                       l2499 1362  
                     l3651 1C87                       l3643 1C5A                       l2931 10A5  
                     l2923 107B                       l2915 1057                       l2851 1F43  
                     l2739 0C88                       l2691 0BBD                       l2683 0B39  
                     l2675 0AC6                       l2667 0A6C                       l2659 09FF  
                     l3571 1B5F                       l3627 06BA                       l3619 05A5  
                     l2843 19ED                       l2835 0FD3                       l3811 01ED  
                     l3803 0198                       l3731 1673                       l3723 162B  
                     l3715 15EF                       l3707 15D6                       l3661 1BAB  
                     l2749 19C3                       l2597 14E5                       l2589 14D2  
                     l3645 1C5E                       l3653 1C8D                       l3637 1C40  
                     l2941 10C0                       l2933 10AE                       l2925 1084  
                     l2917 105F                       l2909 104A                       l2853 1F56  
                     l2693 0BCB                       l2685 0B66                       l2677 0ADF  
                     l2669 0A7C                       l3581 1B77                       l3573 1B65  
                     l3629 06C0                       l2845 19F3                       l2829 0F44  
                     l3901 0519                       l3821 0219                       l3813 01F6  
                     l3805 01A6                       l3741 16A5                       l3733 1677  
                     l3725 1639                       l3717 160D                       l3709 15E7  
                     l3567 19A0                       l3663 1BB4                       l2599 14E9  
                     l3647 1C70                       l3639 1C48                       l2951 10E9  
                     l2935 10B8                       l2943 10D2                       l2927 1096  
                     l2919 1070                       l2871 1F92                       l2863 1F72  
                     l2695 0BD4                       l2687 0B8C                       l2679 0AFC  
                     l3583 1B88                       l3575 1B68                       l3591 1B9C  
                     l2847 19F5                       l2839 19E6                       l3911 054F  
                     l3903 0524                       l3831 029D                       l3823 022D  
                     l3815 0203                       l3807 01D5                       l3751 1704  
                     l3743 16B8                       l3735 167B                       l3727 1641  
                     l3719 1621                       l3671 14FF                       l3665 1BC3  
                     l3657 1BA1                       l3649 1C7E                       l2961 1A6C  
                     l2929 10A4                       l2881 1FBC                       l2873 1F9B  
                     l2865 1F78                       l2857 1F5F                       l2697 0BD8  
                     l2689 0BB4                       l3585 1B8E                       l3577 1B6F  
                     l3569 1B5B                       l3913 0555                       l3905 0538  
                     l3841 02E1                       l3833 02BB                       l3825 0238  
                     l3809 01DB                       l3753 174F                       l3745 16DB  
                     l3737 1694                       l3761 1794                       l3729 165A  
                     l3681 1528                       l3673 150A                       l3921 0581  
                     l3595 1A13                       l3667 1BC9                       l3659 1BA5  
                     l2971 1CA8                       l2963 1A73                       l2955 1A59  
                     l2883 1FC6                       l2891 1FE0                       l2875 1FA9  
                     l2867 1F87                       l2699 0BD9                       l3587 1B8F  
                     l3579 1B73                       l3915 0561                       l3907 053C  
                     l3851 0326                       l3843 02F0                       l3835 02C8  
                     l3827 023F                       l3819 020A                       l3771 0068  
                     l3763 17A3                       l3755 1768                       l3747 16DF  
                     l3739 169F                       l3923 059B                       l3691 1574  
                     l3683 1538                       l3675 1510                       l3597 1A16  
                     l3669 08D6                       l3941 1A4D                       l3933 1A36  
                     l2981 1CD7                       l2973 1CAB                       l2965 1A79  
                     l2957 1A5B                       l2949 10D9                       l2877 1FB3  
                     l2869 1F89                       l3589 1B96                       l3917 0573  
                     l3909 0542                       l3861 0403                       l3853 032C  
                     l3845 02F9                       l3837 02CE                       l3829 027E  
                     l3781 00C1                       l3773 0077                       l3765 17EA  
                     l3757 1771                       l3749 16E5                       l3685 153C  
                     l3693 1584                       l3677 151D                       l3599 1A1C  
                     l3943 1A52                       l3935 1A3B                       l3951 1B3E  
                     l2983 1CE5                       l2975 1CB8                       l2959 1A5F  
                     l2879 1FB4                       l2799 0CA0                       l3871 0471  
                     l3863 0417                       l3855 034A                       l3847 0314  
                     l3839 02D4                       l3791 014D                       l3775 0092  
                     l3767 0026                       l3759 178C                       l3695 1592  
                     l3687 1551                       l3679 1524                       l3937 1A40  
                     l3945 1B15                       l2993 1BF0                       l2985 1CE6  
                     l2977 1CBC                       l2969 1C96                       l2897 1FE7  
                     l2889 1FCE                       l3881 049F                       l3873 0477  
                     l3857 03A5                       l3865 0456                       l3849 0319  
                     l3793 014F                       l3785 00E0                       l3777 009B  
                     l3769 0041                       l3697 1593                       l3689 156C  
                     l3961 1113                       l3953 10F2                       l3939 1A47  
                     l3947 1B1A                       l2995 1C06                       l2987 1CEF  
                     l2979 1CC5                       l2899 1FF7                       l3891 04E8  
                     l3883 04AA                       l3867 045E                       l3859 03E4  
                     l3779 00A3                       l3787 00E9                       l3875 047E  
                     l3699 159B                       l3971 1130                       l3963 1114  
                     l3955 1106                       l3949 1B36                       l2997 1C22  
                     l2989 1CF5                       l3893 04F0                       l3885 04BD  
                     l3877 0486                       l3869 046B                       l3789 011E  
                     l3981 114D                       l3973 1131                       l3965 111A  
                     l3957 110B                       l2999 1C3C                       l3895 04F6  
                     l3887 04CE                       l3879 048E                       l3799 0151  
                     l3991 11B3                       l3983 114E                       l3975 1137  
                     l3967 112C                       l3959 1110                       l3897 050C  
                     l3889 04D6                       l3993 11D0                       l3985 1154  
                     l3977 1149                       l3969 112F                       l3899 0515  
                     l3995 11ED                       l3987 1166                       l3979 114C  
                     l3997 11F6                       l3989 116F                       l3999 11FC  
                     STR_1 08A0                       STR_2 08B3                       STR_3 08C6  
                     u3000 091A                       u3001 0919                       u3020 092D  
                     u3021 092C                       u3005 0916                       u3110 1AE1  
                     u3030 0932                       u3111 1AE0                       u3031 0931  
                     u3015 0921                       u4000 19D2                       u3200 12AE  
                     u4001 19D1                       u3201 12AD                       u3210 12B9  
                     u3130 1AF3                       u3211 12B8                       u3131 1AF2  
                     u3300 1368                       u3220 12BF                       u3140 1AFD  
                     u4100 0CAD                       u3301 1367                       u3221 12BE  
                     u3141 1AFC                       u3125 1AE5                       u4101 0CAC  
                     u3230 12C4                       u3231 12C3                       u3400 13E3  
                     u3320 137E                       u3240 12DD                       u5000 1F06  
                     u3160 1B10                       u3401 13E2                       u3321 137D  
                     u3241 12DC                       u5001 1F05                       u3161 1B0F  
                     u3145 1AF9                       u3330 1382                       u3250 12E1  
                     u3170 1285                       u5010 1F0C                       u3411 13FA  
                     u3403 13DF                       u3331 1381                       u3315 136B  
                     u3251 12E0                       u3171 1284                       u5011 1F0B  
                     u3155 1B04                       u4115 0CCF                       u3500 1481  
                     u3420 140E                       u3412 13FB                       u3340 1387  
                     u3260 1339                       u3180 128B                       u5020 1F10  
                     u4220 0F4B                       u4140 0D9E                       u3501 1480  
                     u3421 140F                       u3413 1400                       u3341 1386  
                     u3261 1338                       u3181 128A                       u5021 1F0F  
                     u4221 0F4A                       u4205 0EB8                       u4141 0D9D  
                     u4125 0D0B                       u3510 1486                       u3430 142C  
                     u3422 1414                       u3414 1401                       u3270 1344  
                     u3190 1290                       u5030 1F25                       u4310 1FA9  
                     u3511 1485                       u3431 142B                       u3423 1415  
                     u3415 1406                       u3351 1399                       u3271 1342  
                     u3191 128F                       u4311 1FA8                       u4215 0F03  
                     u4135 0D56                       u3600 14E4                       u3520 148C  
                     u3440 1451                       u3416 1407                       u3360 13AB  
                     u3352 13A0                       u3280 1345                       u5040 1F35  
                     u4400 1FF7                       u6000 0092                       u3601 14E3  
                     u3521 148B                       u3441 1450                       u3361 13AA  
                     u3353 13A7                       u3265 1335                       u5041 1F34  
                     u4401 1FF6                       u4305 1F94                       u6001 0091  
                     u3610 14E9                       u3530 1493                       u3450 1456  
                     u3370 13AF                       u3290 1359                       u5050 1F39  
                     u4410 1041                       u4330 1FC2                       u4090 0CA4  
                     u3611 14E8                       u3531 1492                       u3451 1455  
                     u3371 13AE                       u3291 1358                       u5051 1F38  
                     u5035 1F20                       u4411 1040                       u4331 1FC1  
                     u4315 1FA5                       u4235 0F5E                       u4155 0DB1  
                     u4091 0CA3                       u5060 1033                       u3620 14FA  
                     u3540 1499                       u3380 13BE                       u4500 10D1  
                     u4420 1055                       u4340 1FC6                       u2820 1A8C  
                     u3700 09A0                       u4260 19ED                       u4180 0E5A  
                     u6100 02E1                       u6020 0197                       u5061 1032  
                     u3621 14F9                       u3541 1498                       u3381 13BD  
                     u4501 10D0                       u4421 1054                       u4341 1FC5  
                     u4325 1FB5                       u2821 1A8B                       u3701 099F  
                     u4261 19EC                       u4245 0F9A                       u4181 0E59  
                     u4165 0DED                       u6101 02E0                       u6021 0196  
                     u3550 14AB                       u3470 146C                       u4510 10D8  
                     u4350 1FCD                       u3630 094D                       u4270 19F3  
                     u2910 1D44                       u6110 02F0                       u6030 01A6  
                     u3551 14AA                       u3471 146B                       u4511 10D7  
                     u4351 1FCC                       u3711 09F1                       u3631 094C  
                     u4271 19F2                       u2911 1D43                       u4255 0FD6  
                     u4175 0E29                       u6111 02EF                       u6031 01A5  
                     u6015 0156                       u3560 14BA                       u3480 1471  
                     u4600 1CBC                       u4440 1096                       u4280 1F56  
                     u2840 1AA0                       u3712 09F8                       u3640 0953  
                     u6200 04BD                       u6120 0319                       u6040 01D5  
                     u3481 1470                       u3465 1461                       u4601 1CBB  
                     u4441 1095                       u4281 1F55                       u2841 1A9F  
                     u3801 0B1B                       u3721 0A0D                       u3713 09FF  
                     u3641 0952                       u2905 1D34                       u6201 04BC  
                     u6121 0318                       u6105 02DD                       u6041 01D4  
                     u6025 0193                       u3570 14C9                       u3490 147B  
                     u4530 10E9                       u4370 1FDF                       u4290 1F70  
                     u3802 0B22                       u3722 0A14                       u3650 0958  
                     u2930 1D58                       u2850 1D05                       u6210 04D6  
                     u6050 01ED                       u3571 14C8                       u3491 147A  
                     u3395 13C1                       u4531 10E8                       u4435 107D  
                     u4371 1FDE                       u4291 1F6F                       u2835 1A93  
                     u3811 0B48                       u3803 0B29                       u3731 0A39  
                     u3723 0A1B                       u3651 0957                       u2931 1D57  
                     u2915 1D40                       u2851 1D04                       u4195 0E7C  
                     u6211 04D5                       u6115 02EC                       u6051 01EC  
                     u6300 1A3B                       u4700 1E21                       u3580 14D2  
                     u4620 1CD7                       u4540 1A5F                       u4460 10B4  
                     u4380 1FE6                       u3900 0BEC                       u3820 0B72  
                     u3812 0B4F                       u3732 0A40                       u3660 0979  
                     u2940 1D5D                       u2860 1D10                       u6220 04E8  
                     u6060 0219                       u6301 1A3A                       u4701 1E20  
                     u3581 14D1                       u3565 14B5                       u4621 1CD6  
                     u4541 1A5E                       u4525 10DB                       u4461 10B3  
                     u4445 1092                       u4381 1FE5                       u4365 1FCF  
                     u3901 0BEB                       u3813 0B56                       u3741 0A55  
                     u3733 0A47                       u3661 0978                       u2941 1D5C  
                     u2925 1D4C                       u2861 1D0F                       u6221 04E7  
                     u6205 04B9                       u6061 0218                       u6310 1A4D  
                     u3590 14D7                       u4470 10B8                       u3910 0BF1  
                     u3742 0A5C                       u3670 097F                       u2870 1D21  
                     u2950 08E8                       u6230 04F6                       u6150 045D  
                     u6070 022D                       u6311 1A4C                       u4711 1E30  
                     u3591 14D6                       u4615 1CBE                       u4471 10B7  
                     u4455 10A7                       u3911 0BF0                       u3831 0B7E  
                     u3743 0A63                       u3671 097E                       u2871 1D20  
                     u2951 08E7                       u6231 04F5                       u6151 045C  
                     u6135 03AA                       u6071 022C                       u6320 1B24  
                     u4720 1E49                       u4712 1E31                       u4640 1CF5  
                     u4480 10BF                       u3920 0C05                       u3840 0B9A  
                     u3832 0B85                       u3680 0984                       u2960 08F3  
                     u6240 050C                       u6160 047D                       u4721 1E48  
                     u4713 1E36                       u4641 1CF4                       u4625 1CD3  
                     u4481 10BE                       u3921 0C04                       u3833 0B8C  
                     u3825 0B6D                       u3761 0A8B                       u3681 0983  
                     u2961 08F2                       u6241 050B                       u6161 047C  
                     u6145 041C                       u6065 0215                       u6330 1B48  
                     u4650 1C06                       u4714 1E37                       u4810 1DBA  
                     u4570 1A79                       u3930 0C0C                       u3762 0A92  
                     u3690 099B                       u2890 1D33                       u2970 08FE  
                     u6250 0524                       u6170 0486                       u6090 02BA  
                     u4651 1C05                       u4731 1E58                       u4715 1E3C  
                     u4811 1DB9                       u4635 1CE7                       u4571 1A78  
                     u4555 1A66                       u4395 1FE9                       u3931 0C0B  
                     u3851 0BA6                       u3771 0AB8                       u3763 0A99  
                     u3755 0A65                       u3691 099A                       u2891 1D32  
                     u2971 08FD                       u6251 0523                       u6171 0485  
                     u6091 02B9                       u6340 1B5A                       u4660 1C22  
                     u4740 1E83                       u4732 1E59                       u4716 1E3D  
                     u4820 1DC1                       u4580 1CA8                       u3940 0C12  
                     u3852 0BAD                       u3772 0ABF                       u5620 1B65  
                     u6260 0542                       u6180 048E                       _RCIF 0065  
                     u6341 1B59                       u4661 1C21                       u4741 1E82  
                     u4733 1E5E                       u4821 1DC0                       u4805 1DAA  
                     u4581 1CA7                       u4565 1A6D                       u3941 0C11  
                     u3853 0BB4                       u3845 0B95                       u3773 0AC6  
                     u5621 1B64                       u2885 1D25                       u6261 0541  
                     u6245 0508                       u6181 048D                       u6085 0244  
                     u4670 1C3C                       u4734 1E5F                       u4750 19BC  
                     u3950 0C24                       u2990 0910                       u6270 0561  
                     u6190 049F                       u6350 111A                       u4671 1C3B  
                     u4735 1E64                       u4751 19BB                       u4495 10C1  
                     u3951 0C23                       u3791 0AEE                       u2991 090F  
                     u6271 0560                       u6255 0520                       u6191 049E  
                     u6407 1162                       u6351 1119                       u4736 1E65  
                     u4680 1DF9                       u4840 1DD2                       u4760 1D74  
                     u5800 1C70                       u4920 1E8F                       u3960 0C33  
                     u3880 0BD8                       u3792 0AF5                       u5640 1B77  
                     u6280 0573                       u6360 1137                       u4745 1E7F  
                     u4681 1DF8                       u4841 1DD1                       u4761 1D73  
                     u5801 1C6F                       u4921 1E8E                       u3881 0BD7  
                     u3865 0BB6                       u3793 0AFC                       u3785 0AC8  
                     u5641 1B76                       u5705 05C8                       u2985 0902  
                     u6281 0572                       u6417 126A                       u6361 1136  
                     u4690 1E15                       u4850 1DD7                       u4770 1D8B  
                     u4930 1E93                       u3970 0C50                       u5730 06C0  
                     u6290 059B                       u6370 1154                       u6427 1A06  
                     u4675 1C38                       u4691 1E14                       u4851 1DD6  
                     u4835 1DC4                       u4595 1CAD                       u4931 1E92  
                     u3971 0C4F                       u3875 0BCD                       u5635 1B69  
                     u5731 06BF                       u5715 0624                       u6291 0598  
                     u6195 049B                       u6371 1153                       i1l76 19A5  
                     u4780 1DA1                       u5820 1C8D                       u4940 1EB3  
                     u3980 0C6A                       u5660 1B88                       u5900 165A  
                     u6437 1A0E                       u4781 1DA0                       u5821 1C8C  
                     u5805 1C6C                       u4941 1EB2                       u3981 0C69  
                     u3965 0C2E                       u5661 1B87                       u5725 0679  
                     u5901 1659                       u4790 1DA8                       u3990 0C88  
                     u5910 1694                       u5830 1510                       u6447 1BAF  
                     u4791 1DA7                       u4775 1D86                       u5815 1C7F  
                     u3991 0C87                       u3975 0C4C                       u3895 0BDB  
                     u5655 1B78                       u5911 1693                       u5831 150F  
                     u4960 1ED4                       u5680 1B9C                       u5920 16DF  
                     u5840 1538                       u6457 1BBE                       u4961 1ED3  
                     u3985 0C66                       u5681 1B9B                       u5665 1B84  
                     u5745 06DD                       u5921 16DE                       u5841 1537  
                     u5770 1C48                       u5690 05AB                       u5930 1768  
                     u5850 1584                       u6467 1BCD                       u5771 1C47  
                     u4955 1EC6                       u5675 1B90                       u5755 072A  
                     u5691 05AA                       u5931 1767                       u5851 1583  
                     u6387 1128                       u4980 1EF6                       u5940 178C  
                     u5860 1592                       u6477 1A23                       u4981 1EF5  
                     u5765 0776                       u5941 178B                       u5861 1591  
                     u6397 1145                       u5790 1C5E                       u5950 17A3  
                     u5870 15E6                       u6487 1A2F                       u5791 1C5D  
                     u4975 1EE8                       u5951 17A2                       u5871 15E5  
                     u5960 0026                       u5880 1621                       u5785 1C4F  
                     u5961 17FA                       u5881 161E                       u5970 0041  
                     u5890 1627                       u4995 1EFB                       u5971 0040  
                     u5955 179F                       u5891 1626                       u5980 0068  
                     u5981 0067                       u5965 17F5                       u5990 0077  
                     u5991 0076                       u5995 0073                       _TRMT 04C1  
        ?_LCD_Write_String 0075                       _cont 00E1                       _main 10F2  
       __size_of_LCD_Clear 000D                       btemp 007E                       start 000C  
       ??_LCD_Write_String 0077               _sprintf$1196 00B5              ?_Init_Receive 0070  
                    ??_ISR 0070           __end_of_LCD_Init 1BF0           __end_of_LCD_Port 19A5  
            ___fltol@sign1 005E            __end_of___fladd 14FC                      ?_main 0070  
          __end_of___awdiv 1D67            __end_of___flneg 19BF            __end_of___awmod 093C  
          __end_of___flmul 0C9D            __end_of___flsub 07FF            __end_of___fltol 1DE3  
                    _ANSEL 0188            __end_of___lldiv 1CFE            ___awdiv@divisor 0020  
          __end_of___llmod 1C96            __end_of___lwdiv 1BA1            __end_of___lwmod 1B15  
          ___awdiv@counter 0024                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
   __end_of_LCD_Set_Cursor 1A59                      _Setup 1AA5            __end_of_dpowers 08A0  
          ?_USART_WriteStr 0073                      _scale 0C9D            __end_of_isdigit 19F7  
                    pclath 000A                ?_SPI_MASTER 0070                      status 0003  
                    wtemp0 007E            __end_of_sprintf 05A2               USART_Write@a 0072  
           _LCD_Write_Char 19F7            __initialization 000F             ??_Init_Receive 0072  
               _Init_Trans 19D7               __end_of_main 1274                     ??_main 00D0  
        __end_of_LCD_Clear 08E3                  ??_LCD_Cmd 0073       __size_of__tdiv_to_l_ 00BD  
          ?_LCD_Set_Cursor 0076                     ?_Setup 0070           ___llmod@dividend 0076  
                   ?_scale 0042           ___awdiv@dividend 0022                     _ANSELH 0189  
                   _SSPBUF 0013                     _SSPCON 0014           __end_of___xxtofl 1F43  
   __end_of_LCD_Write_Char 1A12                     _Lcdvar 0190           __end_of__powers_ 0844  
                   ___flge 1DE3                     ___fleq 1BF0                  ??___fladd 005E  
                   _adcvar 00E2                     ___wmul 1A59                  ??___awdiv 0079  
                ??___flneg 0076                  ??___awmod 0076                  ??___flmul 0030  
                ??___flsub 007B                  ??___fltol 0059                  ??___lldiv 007A  
                ??___llmod 007A                  ??___lwdiv 0078                  ??___lwmod 0076  
                   _fround 05A2           ___awdiv@quotient 0026            ___awmod@divisor 0072  
          ___awmod@counter 0077        __size_of_SPI_MASTER 000C              ?_Set_BaudRate 0070  
                ??_isdigit 0072         __size_of__Umul8_16 0027                     saved_w 007E  
                ??_sprintf 006A            LCD_Set_Cursor@a 0079            LCD_Set_Cursor@x 0078  
          LCD_Set_Cursor@y 0076                 ___flge@ff1 0072                 ___flge@ff2 0076  
             ___xxtofl@arg 0022               ___xxtofl@exp 0021               ___xxtofl@val 0072  
               ___fleq@ff1 0072                 ___fleq@ff2 0076    __end_of__initialization 0022  
                ?_LCD_Init 0070                 ___flneg@f1 0072                  ?_LCD_Port 0070  
               ___fltol@f1 0055            ?_LCD_Write_Char 0070               ?_USART_Write 0070  
           __pcstackCOMMON 0070                ?_Init_Trans 0070              __end_of_Setup 1ADB  
                LCD_Port@a 0072              __end_of_scale 1000             ??_Set_BaudRate 0072  
               __div_to_l_ 1034                    ??_Setup 0072       __end_of_Init_Receive 19B4  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0046  
          __div_to_l_@quot 0020               sprintf@width 00C0                 __pbssBANK1 00D4  
               __pbssBANK3 0190                 ??_LCD_Init 0076                 ??_LCD_Port 0072  
            __div_to_l_@f1 0072              __div_to_l_@f2 0076          __end_of__Umul8_16 1AA5  
               __pmaintext 10F2                    ?___flge 0072                    ?___fleq 0072  
                  ?___wmul 0072                 __pintentry 0004                    ?_fround 0042  
__size_of_LCD_Write_String 0046           ??_USART_WriteStr 0075                    _LCD_Cmd 1A12  
                ?___xxtofl 0072        __size_of_Init_Trans 000E                    _SSPSTAT 0094  
               __stringtab 0800               ??_SPI_MASTER 0072          __end_of__npowers_ 0878  
               _scale$1195 0050            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 1274                    ___awdiv 1CFE                    ___flneg 19B4  
                  ___awmod 08E3                    ___flmul 093C                    ___flsub 07AF  
                  ___fltol 1D67                    ___lldiv 1C96            __size_of___wmul 0025  
                  ___llmod 1C40                    ___lwdiv 1B5B                    ___lwmod 1ADB  
          __size_of_fround 020D           ??_LCD_Set_Cursor 0077                    __ptext1 14FC  
                  __ptext2 0C9D                    __ptext3 08E3                    __ptext4 1CFE  
                  __ptext5 19E5                    __ptext6 05A2                    __ptext7 1ADB  
                  __ptext8 1B5B                    __ptext9 093C               __size_of_ISR 0007  
              ?__div_to_l_ 0072         __end_of_SPI_MASTER 19CB                    _dpowers 0878  
                  _isdigit 19E5                 ??___xxtofl 0076                    _receive 007B  
         ___awmod@dividend 0074                  _LCD_Clear 08D6                    _sprintf 14FC  
                  clrloop0 1002       end_of_initialization 0022       __end_of_Set_BaudRate 199F  
          ___lldiv@divisor 0072            ___lldiv@counter 0024                  _RCSTAbits 0018  
                  psplit$0 C0033       __size_of_USART_Write 000C                 _temp_value 00E0  
           __tdiv_to_l_@f1 0072             __tdiv_to_l_@f2 0076              ??__tdiv_to_l_ 0020  
                _PORTCbits 0007      __size_of_Init_Receive 0008                ___fladd@grs 0069  
            ___xxtofl@sign 0020                  _TRISCbits 0087                 ?_LCD_Clear 0070  
        LCD_Write_String@a 0075          LCD_Write_String@i 0020           ??_LCD_Write_Char 0073  
              ___flmul@grs 0036                  _TXSTAbits 0098          __size_of_LCD_Init 004F  
      __size_of__div_to_l_ 00BE          __size_of_LCD_Port 0006               ??_Init_Trans 0072  
             _Init_Receive 19AC             __end_of___flge 1E87             __end_of___fleq 1C40  
           __end_of___wmul 1A7E           _LCD_Write_String 1B15          pnum$text1_split_1 0033  
           __end_of_fround 07AF        start_initialization 000F                __end_of_ISR 19AC  
      __end_of__tdiv_to_l_ 2000         __end_of_Init_Trans 19E5            ___llmod@divisor 0072  
          ___llmod@counter 0020                   ??___flge 0020                   ??___fleq 0020  
                 ??___wmul 0076                  __Umul8_16 1A7E            LCD_Write_Char@a 0074  
                 ??_fround 0046              sprintf@tmpval 00C2                  ___fladd@a 005A  
                ___fladd@b 0056                 fround@prec 0055                   ?_LCD_Cmd 0070  
                ___flmul@a 002C                  ___flmul@b 0028                __pbssCOMMON 007B  
                 LCD_Cmd@a 0075                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
              ??_LCD_Clear 0076          __size_of___xxtofl 00BC               _isdigit$1017 0072  
    __size_of_Set_BaudRate 0005                sprintf@flag 00BE                sprintf@eexp 00C6  
              sprintf@fval 00C8                sprintf@prec 00CD           ___lwdiv@dividend 0022  
                 ?___fladd 0056                   ?___awdiv 0020                   ?___flneg 0072  
                 ?___awmod 0072                   ?___flmul 0028                   ?___flsub 00A0  
                 ?___fltol 0055                   ?___lldiv 0072                   ?___llmod 0072  
                __npowers_ 0844                 ?__Umul8_16 0072                   ?___lwdiv 0020  
                 ?___lwmod 0072                  __pstrings 0800                __tdiv_to_l_ 1F43  
             ??__div_to_l_ 007A               _Set_BaudRate 199A                   ?_isdigit 0070  
           __size_of_Setup 0036           ___lwdiv@quotient 0025                   ?_sprintf 00A8  
           __size_of_scale 0363          interrupt_function 0004                   _LCD_Init 1BA1  
           ___wmul@product 0076                   _LCD_Port 199F                  clear_ram0 1001  
                 _PIE1bits 008C                   _PIR1bits 000C         __end_of__div_to_l_ 10F2  
              __stringbase 080F          ___wmul@multiplier 0072           __size_of_LCD_Cmd 0023  
 __end_of_LCD_Write_String 1B5B    __size_of_USART_WriteStr 002B              ??_USART_Write 0072  
              ??__Umul8_16 0074           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0068  
         __size_of___llmod 0056           __size_of___lwdiv 0046           __size_of___lwmod 003A  
              _fround$1193 0051                _fround$1194 004D         __end_of__stringtab 0810  
               sprintf@val 00BA                   ___xxtofl 1E87           __size_of_isdigit 0012  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0024                   __ptext10 1A7E  
                 __ptext11 1F43                   __ptext20 19B4                   __ptext12 1034  
                 __ptext21 1DE3                   __ptext13 1E87                   __ptext30 1A35  
                 __ptext22 1BF0                   __ptext14 1A59                   __ptext31 1BA1  
                 __ptext23 1009                   __ptext15 1C40                   __ptext32 08D6  
                 __ptext24 19CB                   __ptext16 1C96                   __ptext33 1A12  
                 __ptext25 1AA5                   __ptext17 1D67                   __ptext34 199F  
                 __ptext26 19BF                   __ptext18 07AF                   __ptext35 19D7  
                 __ptext27 199A                   __ptext19 1274                   __ptext36 19AC  
                 __ptext28 1B15                   __ptext37 19A5                   __ptext29 19F7  
                 __powers_ 0810    __size_of_LCD_Set_Cursor 0024           __size_of_sprintf F0A6  
            __size_of_main 0182                  pnum$text1 000C        __end_of_USART_Write 19D7  
               _INTCONbits 000B                   isdigit@c 0073                   scale@scl 0054  
                 intlevel1 0000                  sprintf@ap 00B9           __tdiv_to_l_@exp1 0029  
         __tdiv_to_l_@cntr 0028                  sprintf@sp 00CC           __tdiv_to_l_@quot 0024  
         ___lwmod@dividend 0074           ___lldiv@dividend 0076                  stringcode 080A  
  __size_of_LCD_Write_Char 001B               ?__tdiv_to_l_ 0072     __Umul8_16@multiplicand 0072  
                 sprintf@c 00CF                   sprintf@f 00A8           ___lldiv@quotient 0020  
          ___lwmod@divisor 0072            ___lwmod@counter 0077                   stringdir 080A  
                 stringtab 0800              ___fladd@signs 0066             _USART_WriteStr 1009  
               _SPI_MASTER 19BF               ___fladd@aexp 0067               ___fladd@bexp 0068  
     __Umul8_16@multiplier 007A            USART_WriteStr@a 0073            USART_WriteStr@i 0076  
              _USART_Write 19CB          __Umul8_16@product 0076  
