

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 20:34:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0107                     	;# 
   152  0108                     	;# 
   153  0109                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0185                     	;# 
   160  0187                     	;# 
   161  0188                     	;# 
   162  0189                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  0105                     	;# 
   229  0107                     	;# 
   230  0108                     	;# 
   231  0109                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0187                     	;# 
   239  0188                     	;# 
   240  0189                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0008                     	;# 
   330  0009                     	;# 
   331  000A                     	;# 
   332  000B                     	;# 
   333  000C                     	;# 
   334  000D                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0013                     	;# 
   342  0014                     	;# 
   343  0015                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001D                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  0081                     	;# 
   357  0085                     	;# 
   358  0086                     	;# 
   359  0087                     	;# 
   360  0088                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  008F                     	;# 
   366  0090                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0094                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  0105                     	;# 
   385  0107                     	;# 
   386  0108                     	;# 
   387  0109                     	;# 
   388  010C                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  010E                     	;# 
   392  010F                     	;# 
   393  0185                     	;# 
   394  0187                     	;# 
   395  0188                     	;# 
   396  0189                     	;# 
   397  018C                     	;# 
   398  018D                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000D                     	;# 
   413  000E                     	;# 
   414  000E                     	;# 
   415  000F                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0015                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001B                     	;# 
   430  001C                     	;# 
   431  001D                     	;# 
   432  001E                     	;# 
   433  001F                     	;# 
   434  0081                     	;# 
   435  0085                     	;# 
   436  0086                     	;# 
   437  0087                     	;# 
   438  0088                     	;# 
   439  0089                     	;# 
   440  008C                     	;# 
   441  008D                     	;# 
   442  008E                     	;# 
   443  008F                     	;# 
   444  0090                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0095                     	;# 
   452  0096                     	;# 
   453  0097                     	;# 
   454  0098                     	;# 
   455  0099                     	;# 
   456  009A                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  009F                     	;# 
   462  0105                     	;# 
   463  0107                     	;# 
   464  0108                     	;# 
   465  0109                     	;# 
   466  010C                     	;# 
   467  010C                     	;# 
   468  010D                     	;# 
   469  010E                     	;# 
   470  010F                     	;# 
   471  0185                     	;# 
   472  0187                     	;# 
   473  0188                     	;# 
   474  0189                     	;# 
   475  018C                     	;# 
   476  018D                     	;# 
   477                           
   478                           	psect	strings
   479  0800                     __pstrings:
   480  0800                     stringtab:
   481  0800                     __stringtab:
   482                           
   483                           ;	String table - string pointers are 1 byte each
   484  0800  1BFF               	btfsc	btemp+1,7
   485  0801  280A               	ljmp	stringcode
   486  0802  1383               	bcf	3,7
   487  0803  187F               	btfsc	btemp+1,0
   488  0804  1783               	bsf	3,7
   489  0805  0800               	movf	0,w
   490  0806  0A84               	incf	4,f
   491  0807  1903               	skipnz
   492  0808  0AFF               	incf	btemp+1,f
   493  0809  0008               	return
   494  080A                     stringcode:
   495  080A                     stringdir:
   496  080A  3008               	movlw	high stringdir
   497  080B  008A               	movwf	10
   498  080C  0804               	movf	4,w
   499  080D  0A84               	incf	4,f
   500  080E  0782               	addwf	2,f
   501  080F                     __stringbase:
   502  080F  3400               	retlw	0
   503  0810                     __end_of__stringtab:
   504  0810                     __powers_:
   505  0810  3400               	retlw	0
   506  0811  3400               	retlw	0
   507  0812  3480               	retlw	128
   508  0813  343F               	retlw	63
   509  0814  3400               	retlw	0
   510  0815  3400               	retlw	0
   511  0816  3420               	retlw	32
   512  0817  3441               	retlw	65
   513  0818  3400               	retlw	0
   514  0819  3400               	retlw	0
   515  081A  34C8               	retlw	200
   516  081B  3442               	retlw	66
   517  081C  3400               	retlw	0
   518  081D  3400               	retlw	0
   519  081E  347A               	retlw	122
   520  081F  3444               	retlw	68
   521  0820  3400               	retlw	0
   522  0821  3440               	retlw	64
   523  0822  341C               	retlw	28
   524  0823  3446               	retlw	70
   525  0824  3400               	retlw	0
   526  0825  3450               	retlw	80
   527  0826  34C3               	retlw	195
   528  0827  3447               	retlw	71
   529  0828  3400               	retlw	0
   530  0829  3424               	retlw	36
   531  082A  3474               	retlw	116
   532  082B  3449               	retlw	73
   533  082C  3480               	retlw	128
   534  082D  3496               	retlw	150
   535  082E  3418               	retlw	24
   536  082F  344B               	retlw	75
   537  0830  3420               	retlw	32
   538  0831  34BC               	retlw	188
   539  0832  34BE               	retlw	190
   540  0833  344C               	retlw	76
   541  0834  3428               	retlw	40
   542  0835  346B               	retlw	107
   543  0836  346E               	retlw	110
   544  0837  344E               	retlw	78
   545  0838  34F9               	retlw	249
   546  0839  3402               	retlw	2
   547  083A  3415               	retlw	21
   548  083B  3450               	retlw	80
   549  083C  34EC               	retlw	236
   550  083D  3478               	retlw	120
   551  083E  34AD               	retlw	173
   552  083F  3460               	retlw	96
   553  0840  34CA               	retlw	202
   554  0841  34F2               	retlw	242
   555  0842  3449               	retlw	73
   556  0843  3471               	retlw	113
   557  0844                     __end_of__powers_:
   558  0844                     __npowers_:
   559  0844  3400               	retlw	0
   560  0845  3400               	retlw	0
   561  0846  3480               	retlw	128
   562  0847  343F               	retlw	63
   563  0848  34CD               	retlw	205
   564  0849  34CC               	retlw	204
   565  084A  34CC               	retlw	204
   566  084B  343D               	retlw	61
   567  084C  340A               	retlw	10
   568  084D  34D7               	retlw	215
   569  084E  3423               	retlw	35
   570  084F  343C               	retlw	60
   571  0850  346F               	retlw	111
   572  0851  3412               	retlw	18
   573  0852  3483               	retlw	131
   574  0853  343A               	retlw	58
   575  0854  3417               	retlw	23
   576  0855  34B7               	retlw	183
   577  0856  34D1               	retlw	209
   578  0857  3438               	retlw	56
   579  0858  34AC               	retlw	172
   580  0859  34C5               	retlw	197
   581  085A  3427               	retlw	39
   582  085B  3437               	retlw	55
   583  085C  34BD               	retlw	189
   584  085D  3437               	retlw	55
   585  085E  3486               	retlw	134
   586  085F  3435               	retlw	53
   587  0860  3495               	retlw	149
   588  0861  34BF               	retlw	191
   589  0862  34D6               	retlw	214
   590  0863  3433               	retlw	51
   591  0864  3477               	retlw	119
   592  0865  34CC               	retlw	204
   593  0866  342B               	retlw	43
   594  0867  3432               	retlw	50
   595  0868  345F               	retlw	95
   596  0869  3470               	retlw	112
   597  086A  3489               	retlw	137
   598  086B  3430               	retlw	48
   599  086C  34FF               	retlw	255
   600  086D  34E6               	retlw	230
   601  086E  34DB               	retlw	219
   602  086F  342E               	retlw	46
   603  0870  3408               	retlw	8
   604  0871  34E5               	retlw	229
   605  0872  343C               	retlw	60
   606  0873  341E               	retlw	30
   607  0874  3460               	retlw	96
   608  0875  3442               	retlw	66
   609  0876  34A2               	retlw	162
   610  0877  340D               	retlw	13
   611  0878                     __end_of__npowers_:
   612  0878                     _dpowers:
   613  0878  3401               	retlw	1
   614  0879  3400               	retlw	0
   615  087A  3400               	retlw	0
   616  087B  3400               	retlw	0
   617  087C  340A               	retlw	10
   618  087D  3400               	retlw	0
   619  087E  3400               	retlw	0
   620  087F  3400               	retlw	0
   621  0880  3464               	retlw	100
   622  0881  3400               	retlw	0
   623  0882  3400               	retlw	0
   624  0883  3400               	retlw	0
   625  0884  34E8               	retlw	232
   626  0885  3403               	retlw	3
   627  0886  3400               	retlw	0
   628  0887  3400               	retlw	0
   629  0888  3410               	retlw	16
   630  0889  3427               	retlw	39
   631  088A  3400               	retlw	0
   632  088B  3400               	retlw	0
   633  088C  34A0               	retlw	160
   634  088D  3486               	retlw	134
   635  088E  3401               	retlw	1
   636  088F  3400               	retlw	0
   637  0890  3440               	retlw	64
   638  0891  3442               	retlw	66
   639  0892  340F               	retlw	15
   640  0893  3400               	retlw	0
   641  0894  3480               	retlw	128
   642  0895  3496               	retlw	150
   643  0896  3498               	retlw	152
   644  0897  3400               	retlw	0
   645  0898  3400               	retlw	0
   646  0899  34E1               	retlw	225
   647  089A  34F5               	retlw	245
   648  089B  3405               	retlw	5
   649  089C  3400               	retlw	0
   650  089D  34CA               	retlw	202
   651  089E  349A               	retlw	154
   652  089F  343B               	retlw	59
   653  08A0                     __end_of_dpowers:
   654  0014                     _SSPCON	set	20
   655  001A                     _RCREG	set	26
   656  0019                     _TXREG	set	25
   657  0018                     _RCSTAbits	set	24
   658  000B                     _INTCONbits	set	11
   659  000C                     _PIR1bits	set	12
   660  0013                     _SSPBUF	set	19
   661  0007                     _PORTCbits	set	7
   662  0006                     _PORTB	set	6
   663  0009                     _PORTE	set	9
   664  0008                     _PORTD	set	8
   665  0005                     _PORTA	set	5
   666  0065                     _RCIF	set	101
   667  0049                     _RE1	set	73
   668  0048                     _RE0	set	72
   669  0094                     _SSPSTAT	set	148
   670  0087                     _TRISCbits	set	135
   671  008C                     _PIE1bits	set	140
   672  0098                     _TXSTAbits	set	152
   673  0099                     _SPBRG	set	153
   674  0094                     _SSPSTATbits	set	148
   675  0086                     _TRISB	set	134
   676  0089                     _TRISE	set	137
   677  0088                     _TRISD	set	136
   678  0085                     _TRISA	set	133
   679  04C1                     _TRMT	set	1217
   680  0189                     _ANSELH	set	393
   681  0188                     _ANSEL	set	392
   682  08A0                     STR_2:
   683  08A0  3425               	retlw	37	;'%'
   684  08A1  3431               	retlw	49	;'1'
   685  08A2  342E               	retlw	46	;'.'
   686  08A3  3432               	retlw	50	;'2'
   687  08A4  3466               	retlw	102	;'f'
   688  08A5  3420               	retlw	32	;' '
   689  08A6  3425               	retlw	37	;'%'
   690  08A7  3431               	retlw	49	;'1'
   691  08A8  342E               	retlw	46	;'.'
   692  08A9  3432               	retlw	50	;'2'
   693  08AA  3466               	retlw	102	;'f'
   694  08AB  3420               	retlw	32	;' '
   695  08AC  3420               	retlw	32	;' '
   696  08AD  3420               	retlw	32	;' '
   697  08AE  3425               	retlw	37	;'%'
   698  08AF  3431               	retlw	49	;'1'
   699  08B0  342E               	retlw	46	;'.'
   700  08B1  3432               	retlw	50	;'2'
   701  08B2  3466               	retlw	102	;'f'
   702  08B3  3400               	retlw	0
   703  08B4                     STR_1:
   704  08B4  3441               	retlw	65	;'A'
   705  08B5  3444               	retlw	68	;'D'
   706  08B6  3443               	retlw	67	;'C'
   707  08B7  3420               	retlw	32	;' '
   708  08B8  3420               	retlw	32	;' '
   709  08B9  3443               	retlw	67	;'C'
   710  08BA  344F               	retlw	79	;'O'
   711  08BB  344E               	retlw	78	;'N'
   712  08BC  3454               	retlw	84	;'T'
   713  08BD  3420               	retlw	32	;' '
   714  08BE  3420               	retlw	32	;' '
   715  08BF  3420               	retlw	32	;' '
   716  08C0  3454               	retlw	84	;'T'
   717  08C1  3445               	retlw	69	;'E'
   718  08C2  344D               	retlw	77	;'M'
   719  08C3  3450               	retlw	80	;'P'
   720  08C4  3420               	retlw	32	;' '
   721  08C5  340A               	retlw	10
   722  08C6  3400               	retlw	0
   723  08C7                     STR_3:
   724  08C7  3441               	retlw	65	;'A'
   725  08C8  3444               	retlw	68	;'D'
   726  08C9  3443               	retlw	67	;'C'
   727  08CA  3420               	retlw	32	;' '
   728  08CB  3420               	retlw	32	;' '
   729  08CC  3443               	retlw	67	;'C'
   730  08CD  344F               	retlw	79	;'O'
   731  08CE  344E               	retlw	78	;'N'
   732  08CF  3454               	retlw	84	;'T'
   733  08D0  3420               	retlw	32	;' '
   734  08D1  3420               	retlw	32	;' '
   735  08D2  3454               	retlw	84	;'T'
   736  08D3  3445               	retlw	69	;'E'
   737  08D4  344D               	retlw	77	;'M'
   738  08D5  3450               	retlw	80	;'P'
   739  08D6  3400               	retlw	0
   740                           
   741                           	psect	cinit
   742  07E7                     start_initialization:	
   743                           ; #config settings
   744                           
   745  07E7                     __initialization:
   746                           
   747                           ; Clear objects allocated to BANK0
   748  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   749  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   750  07E9  01EE               	clrf	__pbssBANK0& (0+127)
   751                           
   752                           ; Clear objects allocated to BANK1
   753  07EA  1383               	bcf	3,7	;select IRP bank0
   754  07EB  30D1               	movlw	low __pbssBANK1
   755  07EC  0084               	movwf	4
   756  07ED  30E0               	movlw	low (__pbssBANK1+15)
   757  07EE  160A  158A  2302  120A  118A  	fcall	clear_ram0
   758                           
   759                           ; Clear objects allocated to BANK3
   760  07F3  1783               	bsf	3,7	;select IRP bank2
   761  07F4  3090               	movlw	low __pbssBANK3
   762  07F5  0084               	movwf	4
   763  07F6  30A4               	movlw	low (__pbssBANK3+20)
   764  07F7  160A  158A  2302  120A  118A  	fcall	clear_ram0
   765  07FC                     end_of_initialization:	
   766                           ;End of C runtime variable initialization code
   767                           
   768  07FC                     __end_of__initialization:
   769  07FC  0183               	clrf	3
   770  07FD  160A  118A  29EB   	ljmp	_main	;jump to C main() function
   771                           
   772                           	psect	bssBANK0
   773  006E                     __pbssBANK0:
   774  006E                     _receive:
   775  006E                     	ds	1
   776                           
   777                           	psect	bssBANK1
   778  00D1                     __pbssBANK1:
   779  00D1                     _S3:
   780  00D1                     	ds	4
   781  00D5                     _S2:
   782  00D5                     	ds	4
   783  00D9                     _S1:
   784  00D9                     	ds	4
   785  00DD                     _temp_value:
   786  00DD                     	ds	1
   787  00DE                     _cont:
   788  00DE                     	ds	1
   789  00DF                     _adcvar:
   790  00DF                     	ds	1
   791                           
   792                           	psect	bssBANK3
   793  0190                     __pbssBANK3:
   794  0190                     _Lcdvar:
   795  0190                     	ds	20
   796                           
   797                           	psect	clrtext
   798  1B02                     clear_ram0:	
   799                           ;	Called with FSR containing the base address, and
   800                           ;	W with the last address+1
   801                           
   802  1B02  0064               	clrwdt	;clear the watchdog before getting into this loop
   803  1B03                     clrloop0:
   804  1B03  0180               	clrf	0	;clear RAM location pointed to by FSR
   805  1B04  0A84               	incf	4,f	;increment pointer
   806  1B05  0604               	xorwf	4,w	;XOR with final address
   807  1B06  1903               	btfsc	3,2	;have we reached the end yet?
   808  1B07  3400               	retlw	0	;all done for this memory range, return
   809  1B08  0604               	xorwf	4,w	;XOR again to restore value
   810  1B09  2B03               	goto	clrloop0	;do the next byte
   811                           
   812                           	psect	cstackBANK1
   813  00A0                     __pcstackBANK1:
   814  00A0                     ?_sprintf:
   815  00A0                     sprintf@f:	
   816                           ; 2 bytes @ 0x0
   817                           
   818                           
   819                           ; 1 bytes @ 0x0
   820  00A0                     	ds	13
   821  00AD                     ??_sprintf:
   822                           
   823                           ; 1 bytes @ 0xD
   824  00AD                     	ds	5
   825  00B2                     _sprintf$1188:
   826                           
   827                           ; 4 bytes @ 0x12
   828  00B2                     	ds	4
   829  00B6                     sprintf@ap:
   830                           
   831                           ; 1 bytes @ 0x16
   832  00B6                     	ds	1
   833  00B7                     sprintf@val:
   834                           
   835                           ; 4 bytes @ 0x17
   836  00B7                     	ds	4
   837  00BB                     sprintf@flag:
   838                           
   839                           ; 2 bytes @ 0x1B
   840  00BB                     	ds	2
   841  00BD                     sprintf@width:
   842                           
   843                           ; 2 bytes @ 0x1D
   844  00BD                     	ds	2
   845  00BF                     sprintf@tmpval:
   846                           
   847                           ; 4 bytes @ 0x1F
   848  00BF                     	ds	4
   849  00C3                     sprintf@eexp:
   850                           
   851                           ; 2 bytes @ 0x23
   852  00C3                     	ds	2
   853  00C5                     sprintf@fval:
   854                           
   855                           ; 4 bytes @ 0x25
   856  00C5                     	ds	4
   857  00C9                     sprintf@sp:
   858                           
   859                           ; 1 bytes @ 0x29
   860  00C9                     	ds	1
   861  00CA                     sprintf@prec:
   862                           
   863                           ; 2 bytes @ 0x2A
   864  00CA                     	ds	2
   865  00CC                     sprintf@c:
   866                           
   867                           ; 1 bytes @ 0x2C
   868  00CC                     	ds	1
   869  00CD                     ??_main:
   870                           
   871                           ; 1 bytes @ 0x2D
   872  00CD                     	ds	4
   873                           
   874                           	psect	cstackCOMMON
   875  0070                     __pcstackCOMMON:
   876  0070                     ?_isdigit:
   877  0070                     ?___fleq:	
   878                           ; 1 bit 
   879                           
   880  0070                     ?___flge:	
   881                           ; 1 bit 
   882                           
   883  0070                     ?_SPI_MASTER:	
   884                           ; 1 bit 
   885                           
   886  0070                     ??_SPI_MASTER:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_LCD_Init:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_LCD_Clear:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_Set_BaudRate:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ??_Set_BaudRate:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_Init_Trans:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ??_Init_Trans:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?_Init_Receive:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ??_Init_Receive:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ?_USART_Write:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ??_USART_Write:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?_LCD_Port:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ??_LCD_Port:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ?_LCD_Cmd:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ??_isdigit:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_Setup:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ??_Setup:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ?_main:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_LCD_Write_Char:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?__Umul8_16:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ?___wmul:	
   947                           ; 2 bytes @ 0x0
   948                           
   949  0070                     ?___awmod:	
   950                           ; 2 bytes @ 0x0
   951                           
   952  0070                     ?___lwmod:	
   953                           ; 2 bytes @ 0x0
   954                           
   955  0070                     ?__tdiv_to_l_:	
   956                           ; 2 bytes @ 0x0
   957                           
   958  0070                     ?__div_to_l_:	
   959                           ; 4 bytes @ 0x0
   960                           
   961  0070                     ?___lldiv:	
   962                           ; 4 bytes @ 0x0
   963                           
   964  0070                     ?___flneg:	
   965                           ; 4 bytes @ 0x0
   966                           
   967  0070                     ?___llmod:	
   968                           ; 4 bytes @ 0x0
   969                           
   970  0070                     ?___xxtofl:	
   971                           ; 4 bytes @ 0x0
   972                           
   973  0070                     LCD_Port@a:	
   974                           ; 4 bytes @ 0x0
   975                           
   976  0070                     USART_Write@a:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0070                     __Umul8_16@multiplicand:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0070                     _isdigit$1012:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ___wmul@multiplier:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ___awmod@divisor:	
   989                           ; 2 bytes @ 0x0
   990                           
   991  0070                     ___lwmod@divisor:	
   992                           ; 2 bytes @ 0x0
   993                           
   994  0070                     ___lldiv@divisor:	
   995                           ; 2 bytes @ 0x0
   996                           
   997  0070                     __div_to_l_@f1:	
   998                           ; 4 bytes @ 0x0
   999                           
  1000  0070                     ___fleq@ff1:	
  1001                           ; 4 bytes @ 0x0
  1002                           
  1003  0070                     ___flge@ff1:	
  1004                           ; 4 bytes @ 0x0
  1005                           
  1006  0070                     ___flneg@f1:	
  1007                           ; 4 bytes @ 0x0
  1008                           
  1009  0070                     __tdiv_to_l_@f1:	
  1010                           ; 4 bytes @ 0x0
  1011                           
  1012  0070                     ___llmod@divisor:	
  1013                           ; 4 bytes @ 0x0
  1014                           
  1015  0070                     ___xxtofl@val:	
  1016                           ; 4 bytes @ 0x0
  1017                           
  1018                           
  1019                           ; 4 bytes @ 0x0
  1020  0070                     	ds	1
  1021  0071                     ?_USART_WriteStr:
  1022  0071                     ??_LCD_Cmd:	
  1023                           ; 1 bytes @ 0x1
  1024                           
  1025  0071                     ??_LCD_Write_Char:	
  1026                           ; 1 bytes @ 0x1
  1027                           
  1028  0071                     isdigit@c:	
  1029                           ; 1 bytes @ 0x1
  1030                           
  1031  0071                     USART_WriteStr@a:	
  1032                           ; 1 bytes @ 0x1
  1033                           
  1034                           
  1035                           ; 2 bytes @ 0x1
  1036  0071                     	ds	1
  1037  0072                     ??__Umul8_16:
  1038  0072                     LCD_Write_Char@a:	
  1039                           ; 1 bytes @ 0x2
  1040                           
  1041  0072                     ___wmul@multiplicand:	
  1042                           ; 1 bytes @ 0x2
  1043                           
  1044  0072                     ___awmod@dividend:	
  1045                           ; 2 bytes @ 0x2
  1046                           
  1047  0072                     ___lwmod@dividend:	
  1048                           ; 2 bytes @ 0x2
  1049                           
  1050                           
  1051                           ; 2 bytes @ 0x2
  1052  0072                     	ds	1
  1053  0073                     ??_USART_WriteStr:
  1054  0073                     ?_LCD_Write_String:	
  1055                           ; 1 bytes @ 0x3
  1056                           
  1057  0073                     LCD_Cmd@a:	
  1058                           ; 1 bytes @ 0x3
  1059                           
  1060  0073                     LCD_Write_String@a:	
  1061                           ; 1 bytes @ 0x3
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0x3
  1065  0073                     	ds	1
  1066  0074                     ??_LCD_Init:
  1067  0074                     ??_LCD_Clear:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070  0074                     ?_LCD_Set_Cursor:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073  0074                     ??___wmul:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076  0074                     ??___awmod:	
  1077                           ; 1 bytes @ 0x4
  1078                           
  1079  0074                     ??___flneg:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082  0074                     ??___lwmod:	
  1083                           ; 1 bytes @ 0x4
  1084                           
  1085  0074                     ??___xxtofl:	
  1086                           ; 1 bytes @ 0x4
  1087                           
  1088  0074                     LCD_Set_Cursor@y:	
  1089                           ; 1 bytes @ 0x4
  1090                           
  1091  0074                     USART_WriteStr@i:	
  1092                           ; 1 bytes @ 0x4
  1093                           
  1094  0074                     ___wmul@product:	
  1095                           ; 1 bytes @ 0x4
  1096                           
  1097  0074                     __Umul8_16@product:	
  1098                           ; 2 bytes @ 0x4
  1099                           
  1100  0074                     ___lldiv@dividend:	
  1101                           ; 2 bytes @ 0x4
  1102                           
  1103  0074                     __div_to_l_@f2:	
  1104                           ; 4 bytes @ 0x4
  1105                           
  1106  0074                     ___fleq@ff2:	
  1107                           ; 4 bytes @ 0x4
  1108                           
  1109  0074                     ___flge@ff2:	
  1110                           ; 4 bytes @ 0x4
  1111                           
  1112  0074                     __tdiv_to_l_@f2:	
  1113                           ; 4 bytes @ 0x4
  1114                           
  1115  0074                     ___llmod@dividend:	
  1116                           ; 4 bytes @ 0x4
  1117                           
  1118                           
  1119                           ; 4 bytes @ 0x4
  1120  0074                     	ds	1
  1121  0075                     ??_LCD_Set_Cursor:
  1122  0075                     ??_LCD_Write_String:	
  1123                           ; 1 bytes @ 0x5
  1124                           
  1125  0075                     ___awmod@counter:	
  1126                           ; 1 bytes @ 0x5
  1127                           
  1128  0075                     ___lwmod@counter:	
  1129                           ; 1 bytes @ 0x5
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0x5
  1133  0075                     	ds	1
  1134  0076                     ?___lwdiv:
  1135  0076                     LCD_Set_Cursor@x:	
  1136                           ; 2 bytes @ 0x6
  1137                           
  1138  0076                     ___awmod@sign:	
  1139                           ; 1 bytes @ 0x6
  1140                           
  1141  0076                     ___lwdiv@divisor:	
  1142                           ; 1 bytes @ 0x6
  1143                           
  1144  0076                     __Umul8_16@word_mpld:	
  1145                           ; 2 bytes @ 0x6
  1146                           
  1147                           
  1148                           ; 2 bytes @ 0x6
  1149  0076                     	ds	1
  1150  0077                     ?___awdiv:
  1151  0077                     LCD_Set_Cursor@a:	
  1152                           ; 2 bytes @ 0x7
  1153                           
  1154  0077                     ___awdiv@divisor:	
  1155                           ; 1 bytes @ 0x7
  1156                           
  1157                           
  1158                           ; 2 bytes @ 0x7
  1159  0077                     	ds	1
  1160  0078                     ??__tdiv_to_l_:
  1161  0078                     ??__div_to_l_:	
  1162                           ; 1 bytes @ 0x8
  1163                           
  1164  0078                     ??___lldiv:	
  1165                           ; 1 bytes @ 0x8
  1166                           
  1167  0078                     ??___fleq:	
  1168                           ; 1 bytes @ 0x8
  1169                           
  1170  0078                     ??___flge:	
  1171                           ; 1 bytes @ 0x8
  1172                           
  1173  0078                     ??___llmod:	
  1174                           ; 1 bytes @ 0x8
  1175                           
  1176  0078                     __Umul8_16@multiplier:	
  1177                           ; 1 bytes @ 0x8
  1178                           
  1179  0078                     ___xxtofl@sign:	
  1180                           ; 1 bytes @ 0x8
  1181                           
  1182  0078                     LCD_Write_String@i:	
  1183                           ; 1 bytes @ 0x8
  1184                           
  1185  0078                     ___lwdiv@dividend:	
  1186                           ; 2 bytes @ 0x8
  1187                           
  1188                           
  1189                           ; 2 bytes @ 0x8
  1190  0078                     	ds	1
  1191  0079                     ___llmod@counter:
  1192  0079                     ___xxtofl@exp:	
  1193                           ; 1 bytes @ 0x9
  1194                           
  1195  0079                     ___awdiv@dividend:	
  1196                           ; 1 bytes @ 0x9
  1197                           
  1198  0079                     ___lldiv@quotient:	
  1199                           ; 2 bytes @ 0x9
  1200                           
  1201                           
  1202                           ; 4 bytes @ 0x9
  1203  0079                     	ds	1
  1204  007A                     ??___lwdiv:
  1205  007A                     ___xxtofl@arg:	
  1206                           ; 1 bytes @ 0xA
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0xA
  1210  007A                     	ds	1
  1211  007B                     ??___awdiv:
  1212  007B                     ___lwdiv@quotient:	
  1213                           ; 1 bytes @ 0xB
  1214                           
  1215                           
  1216                           ; 2 bytes @ 0xB
  1217  007B                     	ds	2
  1218  007D                     ___lldiv@counter:
  1219  007D                     ___lwdiv@counter:	
  1220                           ; 1 bytes @ 0xD
  1221                           
  1222                           
  1223                           ; 1 bytes @ 0xD
  1224  007D                     	ds	1
  1225  007E                     ??___flsub:
  1226                           
  1227                           	psect	cstackBANK0
  1228  0020                     __pcstackBANK0:	
  1229                           ; 1 bytes @ 0xE
  1230                           
  1231  0020                     ___awdiv@counter:
  1232  0020                     __div_to_l_@quot:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0020                     __tdiv_to_l_@quot:	
  1236                           ; 4 bytes @ 0x0
  1237                           
  1238                           
  1239                           ; 4 bytes @ 0x0
  1240  0020                     	ds	1
  1241  0021                     ___awdiv@sign:
  1242                           
  1243                           ; 1 bytes @ 0x1
  1244  0021                     	ds	1
  1245  0022                     ___awdiv@quotient:
  1246                           
  1247                           ; 2 bytes @ 0x2
  1248  0022                     	ds	2
  1249  0024                     ?___flmul:
  1250  0024                     __div_to_l_@cntr:	
  1251                           ; 4 bytes @ 0x4
  1252                           
  1253  0024                     __tdiv_to_l_@cntr:	
  1254                           ; 1 bytes @ 0x4
  1255                           
  1256  0024                     ___flmul@b:	
  1257                           ; 1 bytes @ 0x4
  1258                           
  1259                           
  1260                           ; 4 bytes @ 0x4
  1261  0024                     	ds	1
  1262  0025                     __div_to_l_@exp1:
  1263  0025                     __tdiv_to_l_@exp1:	
  1264                           ; 1 bytes @ 0x5
  1265                           
  1266                           
  1267                           ; 1 bytes @ 0x5
  1268  0025                     	ds	3
  1269  0028                     ___flmul@a:
  1270                           
  1271                           ; 4 bytes @ 0x8
  1272  0028                     	ds	4
  1273  002C                     ??___flmul:
  1274                           
  1275                           ; 1 bytes @ 0xC
  1276  002C                     	ds	5
  1277  0031                     ___flmul@sign:
  1278                           
  1279                           ; 1 bytes @ 0x11
  1280  0031                     	ds	1
  1281  0032                     ___flmul@grs:
  1282                           
  1283                           ; 4 bytes @ 0x12
  1284  0032                     	ds	4
  1285  0036                     ___flmul@aexp:
  1286                           
  1287                           ; 1 bytes @ 0x16
  1288  0036                     	ds	1
  1289  0037                     ___flmul@bexp:
  1290                           
  1291                           ; 1 bytes @ 0x17
  1292  0037                     	ds	1
  1293  0038                     ___flmul@prod:
  1294                           
  1295                           ; 4 bytes @ 0x18
  1296  0038                     	ds	4
  1297  003C                     ___flmul@temp:
  1298                           
  1299                           ; 2 bytes @ 0x1C
  1300  003C                     	ds	2
  1301  003E                     ?_fround:
  1302  003E                     ?_scale:	
  1303                           ; 4 bytes @ 0x1E
  1304                           
  1305                           
  1306                           ; 4 bytes @ 0x1E
  1307  003E                     	ds	4
  1308  0042                     ??_fround:
  1309  0042                     ??_scale:	
  1310                           ; 1 bytes @ 0x22
  1311                           
  1312                           
  1313                           ; 1 bytes @ 0x22
  1314  0042                     	ds	7
  1315  0049                     _fround$1186:
  1316                           
  1317                           ; 4 bytes @ 0x29
  1318  0049                     	ds	3
  1319  004C                     _scale$1187:
  1320                           
  1321                           ; 4 bytes @ 0x2C
  1322  004C                     	ds	1
  1323  004D                     _fround$1185:
  1324                           
  1325                           ; 4 bytes @ 0x2D
  1326  004D                     	ds	3
  1327  0050                     scale@scl:
  1328                           
  1329                           ; 1 bytes @ 0x30
  1330  0050                     	ds	1
  1331  0051                     ?___fltol:
  1332  0051                     fround@prec:	
  1333                           ; 4 bytes @ 0x31
  1334                           
  1335  0051                     ___fltol@f1:	
  1336                           ; 1 bytes @ 0x31
  1337                           
  1338                           
  1339                           ; 4 bytes @ 0x31
  1340  0051                     	ds	1
  1341  0052                     ?___fladd:
  1342  0052                     ___fladd@b:	
  1343                           ; 4 bytes @ 0x32
  1344                           
  1345                           
  1346                           ; 4 bytes @ 0x32
  1347  0052                     	ds	3
  1348  0055                     ??___fltol:
  1349                           
  1350                           ; 1 bytes @ 0x35
  1351  0055                     	ds	1
  1352  0056                     ___fladd@a:
  1353                           
  1354                           ; 4 bytes @ 0x36
  1355  0056                     	ds	4
  1356  005A                     ??___fladd:
  1357  005A                     ___fltol@sign1:	
  1358                           ; 1 bytes @ 0x3A
  1359                           
  1360                           
  1361                           ; 1 bytes @ 0x3A
  1362  005A                     	ds	1
  1363  005B                     ___fltol@exp1:
  1364                           
  1365                           ; 1 bytes @ 0x3B
  1366  005B                     	ds	7
  1367  0062                     ___fladd@signs:
  1368                           
  1369                           ; 1 bytes @ 0x42
  1370  0062                     	ds	1
  1371  0063                     ___fladd@aexp:
  1372                           
  1373                           ; 1 bytes @ 0x43
  1374  0063                     	ds	1
  1375  0064                     ___fladd@bexp:
  1376                           
  1377                           ; 1 bytes @ 0x44
  1378  0064                     	ds	1
  1379  0065                     ___fladd@grs:
  1380                           
  1381                           ; 1 bytes @ 0x45
  1382  0065                     	ds	1
  1383  0066                     ?___flsub:
  1384  0066                     ___flsub@a:	
  1385                           ; 4 bytes @ 0x46
  1386                           
  1387                           
  1388                           ; 4 bytes @ 0x46
  1389  0066                     	ds	4
  1390  006A                     ___flsub@b:
  1391                           
  1392                           ; 4 bytes @ 0x4A
  1393  006A                     	ds	4
  1394                           
  1395                           	psect	maintext
  1396  11EB                     __pmaintext:	
  1397 ;;
  1398 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1399 ;;
  1400 ;; *************** function _main *****************
  1401 ;; Defined at:
  1402 ;;		line 91 in file "Master_main.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : B00/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0
  1418 ;;      Temps:          0       0       4       0       0
  1419 ;;      Totals:         0       0       4       0       0
  1420 ;;Total ram usage:        4 bytes
  1421 ;; Hardware stack levels required when called:    4
  1422 ;; This function calls:
  1423 ;;		_Init_Receive
  1424 ;;		_Init_Trans
  1425 ;;		_LCD_Clear
  1426 ;;		_LCD_Init
  1427 ;;		_LCD_Set_Cursor
  1428 ;;		_LCD_Write_String
  1429 ;;		_Set_BaudRate
  1430 ;;		_Setup
  1431 ;;		_USART_Write
  1432 ;;		_USART_WriteStr
  1433 ;;		___flmul
  1434 ;;		___xxtofl
  1435 ;;		_sprintf
  1436 ;; This function is called by:
  1437 ;;		Startup code after reset
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _main
  1443  11EB                     _main:
  1444  11EB                     l3440:	
  1445                           ;incstack = 0
  1446                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1447                           
  1448                           
  1449                           ;Master_main.c: 93:     Setup();
  1450  11EB  160A  158A  23B8  160A  118A  	fcall	_Setup
  1451                           
  1452                           ;Master_main.c: 94:     LCD_Init();
  1453  11F0  160A  158A  2585  160A  118A  	fcall	_LCD_Init
  1454                           
  1455                           ;Master_main.c: 95:     LCD_Clear();
  1456  11F5  160A  158A  2321  160A  118A  	fcall	_LCD_Clear
  1457                           
  1458                           ;Master_main.c: 96:     Set_BaudRate();
  1459  11FA  160A  118A  2000  160A  118A  	fcall	_Set_BaudRate
  1460  11FF                     l3442:
  1461                           
  1462                           ;Master_main.c: 97:     Init_Trans();
  1463  11FF  160A  158A  232E  160A  118A  	fcall	_Init_Trans
  1464  1204                     l3444:
  1465                           
  1466                           ;Master_main.c: 98:     Init_Receive();
  1467  1204  160A  158A  22FA  160A  118A  	fcall	_Init_Receive
  1468  1209                     l3446:
  1469                           
  1470                           ;Master_main.c: 103:         PORTCbits.RC0 = 0;
  1471  1209  1283               	bcf	3,5	;RP0=0, select bank0
  1472  120A  1303               	bcf	3,6	;RP1=0, select bank0
  1473  120B  1007               	bcf	7,0	;volatile
  1474  120C                     l3448:
  1475                           
  1476                           ;Master_main.c: 104:         SSPBUF = 0;
  1477  120C  0193               	clrf	19	;volatile
  1478  120D                     l3450:
  1479                           
  1480                           ;Master_main.c: 106:         if(SSPSTATbits.BF == 0){
  1481  120D  1683               	bsf	3,5	;RP0=1, select bank1
  1482  120E  1303               	bcf	3,6	;RP1=0, select bank1
  1483  120F  1814               	btfsc	20,0	;volatile
  1484  1210  2A12               	goto	u5591
  1485  1211  2A13               	goto	u5590
  1486  1212                     u5591:
  1487  1212  2A1B               	goto	l75
  1488  1213                     u5590:
  1489  1213                     l3452:
  1490                           
  1491                           ;Master_main.c: 107:             adcvar = SSPBUF;
  1492  1213  1283               	bcf	3,5	;RP0=0, select bank0
  1493  1214  1303               	bcf	3,6	;RP1=0, select bank0
  1494  1215  0813               	movf	19,w	;volatile
  1495  1216  1683               	bsf	3,5	;RP0=1, select bank1
  1496  1217  1303               	bcf	3,6	;RP1=0, select bank1
  1497  1218  00CD               	movwf	??_main^(0+128)
  1498  1219  084D               	movf	??_main^(0+128),w
  1499  121A  00DF               	movwf	_adcvar^(0+128)
  1500  121B                     l75:	
  1501                           ;Master_main.c: 108:         }
  1502                           
  1503                           
  1504                           ;Master_main.c: 110:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1505  121B  3003               	movlw	3
  1506  121C  1683               	bsf	3,5	;RP0=1, select bank1
  1507  121D  1303               	bcf	3,6	;RP1=0, select bank1
  1508  121E  00CE               	movwf	(??_main^(0+128)+1)
  1509  121F  3097               	movlw	151
  1510  1220  00CD               	movwf	??_main^(0+128)
  1511  1221                     u5627:
  1512  1221  0BCD               	decfsz	??_main^(0+128),f
  1513  1222  2A21               	goto	u5627
  1514  1223  0BCE               	decfsz	(??_main^(0+128)+1),f
  1515  1224  2A21               	goto	u5627
  1516  1225                     l3454:
  1517                           
  1518                           ;Master_main.c: 111:         PORTCbits.RC0 = 1;
  1519  1225  1283               	bcf	3,5	;RP0=0, select bank0
  1520  1226  1303               	bcf	3,6	;RP1=0, select bank0
  1521  1227  1407               	bsf	7,0	;volatile
  1522  1228                     l3456:
  1523                           
  1524                           ;Master_main.c: 114:         PORTCbits.RC1 = 0;
  1525  1228  1087               	bcf	7,1	;volatile
  1526  1229                     l3458:
  1527                           
  1528                           ;Master_main.c: 115:         SSPBUF = 0;
  1529  1229  0193               	clrf	19	;volatile
  1530  122A                     l3460:
  1531                           
  1532                           ;Master_main.c: 116:         if(SSPSTATbits.BF == 0){
  1533  122A  1683               	bsf	3,5	;RP0=1, select bank1
  1534  122B  1303               	bcf	3,6	;RP1=0, select bank1
  1535  122C  1814               	btfsc	20,0	;volatile
  1536  122D  2A2F               	goto	u5601
  1537  122E  2A30               	goto	u5600
  1538  122F                     u5601:
  1539  122F  2A38               	goto	l76
  1540  1230                     u5600:
  1541  1230                     l3462:
  1542                           
  1543                           ;Master_main.c: 117:             cont = SSPBUF;
  1544  1230  1283               	bcf	3,5	;RP0=0, select bank0
  1545  1231  1303               	bcf	3,6	;RP1=0, select bank0
  1546  1232  0813               	movf	19,w	;volatile
  1547  1233  1683               	bsf	3,5	;RP0=1, select bank1
  1548  1234  1303               	bcf	3,6	;RP1=0, select bank1
  1549  1235  00CD               	movwf	??_main^(0+128)
  1550  1236  084D               	movf	??_main^(0+128),w
  1551  1237  00DE               	movwf	_cont^(0+128)
  1552  1238                     l76:	
  1553                           ;Master_main.c: 118:         }
  1554                           
  1555                           
  1556                           ;Master_main.c: 119:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1557  1238  3003               	movlw	3
  1558  1239  1683               	bsf	3,5	;RP0=1, select bank1
  1559  123A  1303               	bcf	3,6	;RP1=0, select bank1
  1560  123B  00CE               	movwf	(??_main^(0+128)+1)
  1561  123C  3097               	movlw	151
  1562  123D  00CD               	movwf	??_main^(0+128)
  1563  123E                     u5637:
  1564  123E  0BCD               	decfsz	??_main^(0+128),f
  1565  123F  2A3E               	goto	u5637
  1566  1240  0BCE               	decfsz	(??_main^(0+128)+1),f
  1567  1241  2A3E               	goto	u5637
  1568  1242                     l3464:
  1569                           
  1570                           ;Master_main.c: 120:         PORTCbits.RC1 = 1;
  1571  1242  1283               	bcf	3,5	;RP0=0, select bank0
  1572  1243  1303               	bcf	3,6	;RP1=0, select bank0
  1573  1244  1487               	bsf	7,1	;volatile
  1574  1245                     l3466:
  1575                           
  1576                           ;Master_main.c: 122:         PORTCbits.RC2 = 0;
  1577  1245  1107               	bcf	7,2	;volatile
  1578  1246                     l3468:
  1579                           
  1580                           ;Master_main.c: 123:         SSPBUF = 0;
  1581  1246  0193               	clrf	19	;volatile
  1582  1247                     l3470:
  1583                           
  1584                           ;Master_main.c: 124:         if(SSPSTATbits.BF == 0){
  1585  1247  1683               	bsf	3,5	;RP0=1, select bank1
  1586  1248  1303               	bcf	3,6	;RP1=0, select bank1
  1587  1249  1814               	btfsc	20,0	;volatile
  1588  124A  2A4C               	goto	u5611
  1589  124B  2A4D               	goto	u5610
  1590  124C                     u5611:
  1591  124C  2A55               	goto	l77
  1592  124D                     u5610:
  1593  124D                     l3472:
  1594                           
  1595                           ;Master_main.c: 125:             temp_value = SSPBUF;
  1596  124D  1283               	bcf	3,5	;RP0=0, select bank0
  1597  124E  1303               	bcf	3,6	;RP1=0, select bank0
  1598  124F  0813               	movf	19,w	;volatile
  1599  1250  1683               	bsf	3,5	;RP0=1, select bank1
  1600  1251  1303               	bcf	3,6	;RP1=0, select bank1
  1601  1252  00CD               	movwf	??_main^(0+128)
  1602  1253  084D               	movf	??_main^(0+128),w
  1603  1254  00DD               	movwf	_temp_value^(0+128)
  1604  1255                     l77:	
  1605                           ;Master_main.c: 126:         }
  1606                           
  1607                           
  1608                           ;Master_main.c: 127:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1609  1255  3003               	movlw	3
  1610  1256  1683               	bsf	3,5	;RP0=1, select bank1
  1611  1257  1303               	bcf	3,6	;RP1=0, select bank1
  1612  1258  00CE               	movwf	(??_main^(0+128)+1)
  1613  1259  3097               	movlw	151
  1614  125A  00CD               	movwf	??_main^(0+128)
  1615  125B                     u5647:
  1616  125B  0BCD               	decfsz	??_main^(0+128),f
  1617  125C  2A5B               	goto	u5647
  1618  125D  0BCE               	decfsz	(??_main^(0+128)+1),f
  1619  125E  2A5B               	goto	u5647
  1620  125F                     l3474:
  1621                           
  1622                           ;Master_main.c: 128:         PORTCbits.RC2 = 1;
  1623  125F  1283               	bcf	3,5	;RP0=0, select bank0
  1624  1260  1303               	bcf	3,6	;RP1=0, select bank0
  1625  1261  1507               	bsf	7,2	;volatile
  1626                           
  1627                           ;Master_main.c: 132:         PORTB = temp_value;
  1628  1262  1683               	bsf	3,5	;RP0=1, select bank1
  1629  1263  1303               	bcf	3,6	;RP1=0, select bank1
  1630  1264  085D               	movf	_temp_value^(0+128),w
  1631  1265  1283               	bcf	3,5	;RP0=0, select bank0
  1632  1266  1303               	bcf	3,6	;RP1=0, select bank0
  1633  1267  0086               	movwf	6	;volatile
  1634  1268                     l3476:
  1635                           
  1636                           ;Master_main.c: 134:         S1 = adcvar*(0.0196);
  1637  1268  303C               	movlw	60
  1638  1269  00A7               	movwf	___flmul@b+3
  1639  126A  30A0               	movlw	160
  1640  126B  00A6               	movwf	___flmul@b+2
  1641  126C  3090               	movlw	144
  1642  126D  00A5               	movwf	___flmul@b+1
  1643  126E  302E               	movlw	46
  1644  126F  00A4               	movwf	___flmul@b
  1645  1270  1683               	bsf	3,5	;RP0=1, select bank1
  1646  1271  1303               	bcf	3,6	;RP1=0, select bank1
  1647  1272  085F               	movf	_adcvar^(0+128),w
  1648  1273  00CD               	movwf	??_main^(0+128)
  1649  1274  01CE               	clrf	(??_main^(0+128)+1)
  1650  1275  01CF               	clrf	(??_main^(0+128)+2)
  1651  1276  01D0               	clrf	(??_main^(0+128)+3)
  1652  1277  0850               	movf	(??_main+3)^(0+128),w
  1653  1278  00F3               	movwf	___xxtofl@val+3
  1654  1279  084F               	movf	(??_main+2)^(0+128),w
  1655  127A  00F2               	movwf	___xxtofl@val+2
  1656  127B  084E               	movf	(??_main+1)^(0+128),w
  1657  127C  00F1               	movwf	___xxtofl@val+1
  1658  127D  084D               	movf	??_main^(0+128),w
  1659  127E  00F0               	movwf	___xxtofl@val
  1660  127F  3001               	movlw	1
  1661  1280  160A  158A  2746  160A  118A  	fcall	___xxtofl
  1662  1285  0873               	movf	?___xxtofl+3,w
  1663  1286  1283               	bcf	3,5	;RP0=0, select bank0
  1664  1287  1303               	bcf	3,6	;RP1=0, select bank0
  1665  1288  00AB               	movwf	___flmul@a+3
  1666  1289  0872               	movf	?___xxtofl+2,w
  1667  128A  00AA               	movwf	___flmul@a+2
  1668  128B  0871               	movf	?___xxtofl+1,w
  1669  128C  00A9               	movwf	___flmul@a+1
  1670  128D  0870               	movf	?___xxtofl,w
  1671  128E  00A8               	movwf	___flmul@a
  1672  128F  120A  158A  249F  160A  118A  	fcall	___flmul
  1673  1294  1283               	bcf	3,5	;RP0=0, select bank0
  1674  1295  1303               	bcf	3,6	;RP1=0, select bank0
  1675  1296  0827               	movf	?___flmul+3,w
  1676  1297  1683               	bsf	3,5	;RP0=1, select bank1
  1677  1298  1303               	bcf	3,6	;RP1=0, select bank1
  1678  1299  00DC               	movwf	(_S1+3)^(0+128)
  1679  129A  1283               	bcf	3,5	;RP0=0, select bank0
  1680  129B  1303               	bcf	3,6	;RP1=0, select bank0
  1681  129C  0826               	movf	?___flmul+2,w
  1682  129D  1683               	bsf	3,5	;RP0=1, select bank1
  1683  129E  1303               	bcf	3,6	;RP1=0, select bank1
  1684  129F  00DB               	movwf	(_S1+2)^(0+128)
  1685  12A0  1283               	bcf	3,5	;RP0=0, select bank0
  1686  12A1  1303               	bcf	3,6	;RP1=0, select bank0
  1687  12A2  0825               	movf	?___flmul+1,w
  1688  12A3  1683               	bsf	3,5	;RP0=1, select bank1
  1689  12A4  1303               	bcf	3,6	;RP1=0, select bank1
  1690  12A5  00DA               	movwf	(_S1+1)^(0+128)
  1691  12A6  1283               	bcf	3,5	;RP0=0, select bank0
  1692  12A7  1303               	bcf	3,6	;RP1=0, select bank0
  1693  12A8  0824               	movf	?___flmul,w
  1694  12A9  1683               	bsf	3,5	;RP0=1, select bank1
  1695  12AA  1303               	bcf	3,6	;RP1=0, select bank1
  1696  12AB  00D9               	movwf	_S1^(0+128)
  1697  12AC                     l3478:
  1698                           
  1699                           ;Master_main.c: 137:         S2 = cont;
  1700  12AC  085E               	movf	_cont^(0+128),w
  1701  12AD  00CD               	movwf	??_main^(0+128)
  1702  12AE  01CE               	clrf	(??_main^(0+128)+1)
  1703  12AF  01CF               	clrf	(??_main^(0+128)+2)
  1704  12B0  01D0               	clrf	(??_main^(0+128)+3)
  1705  12B1  0850               	movf	(??_main+3)^(0+128),w
  1706  12B2  00F3               	movwf	___xxtofl@val+3
  1707  12B3  084F               	movf	(??_main+2)^(0+128),w
  1708  12B4  00F2               	movwf	___xxtofl@val+2
  1709  12B5  084E               	movf	(??_main+1)^(0+128),w
  1710  12B6  00F1               	movwf	___xxtofl@val+1
  1711  12B7  084D               	movf	??_main^(0+128),w
  1712  12B8  00F0               	movwf	___xxtofl@val
  1713  12B9  3000               	movlw	0
  1714  12BA  160A  158A  2746  160A  118A  	fcall	___xxtofl
  1715  12BF  0873               	movf	?___xxtofl+3,w
  1716  12C0  1683               	bsf	3,5	;RP0=1, select bank1
  1717  12C1  1303               	bcf	3,6	;RP1=0, select bank1
  1718  12C2  00D8               	movwf	(_S2+3)^(0+128)
  1719  12C3  0872               	movf	?___xxtofl+2,w
  1720  12C4  00D7               	movwf	(_S2+2)^(0+128)
  1721  12C5  0871               	movf	?___xxtofl+1,w
  1722  12C6  00D6               	movwf	(_S2+1)^(0+128)
  1723  12C7  0870               	movf	?___xxtofl,w
  1724  12C8  00D5               	movwf	_S2^(0+128)
  1725  12C9                     l3480:
  1726                           
  1727                           ;Master_main.c: 140:         S3 = temp_value*(2);
  1728  12C9  085D               	movf	_temp_value^(0+128),w
  1729  12CA  00CD               	movwf	??_main^(0+128)
  1730  12CB  01CE               	clrf	(??_main^(0+128)+1)
  1731  12CC  1003               	clrc
  1732  12CD  0D4D               	rlf	??_main^(0+128),w
  1733  12CE  00F0               	movwf	___xxtofl@val
  1734  12CF  0D4E               	rlf	(??_main+1)^(0+128),w
  1735  12D0  00F1               	movwf	___xxtofl@val+1
  1736  12D1  01F2               	clrf	___xxtofl@val+2
  1737  12D2  1BF1               	btfsc	___xxtofl@val+1,7
  1738  12D3  03F2               	decf	___xxtofl@val+2,f
  1739  12D4  0872               	movf	___xxtofl@val+2,w
  1740  12D5  00F3               	movwf	___xxtofl@val+3
  1741  12D6  3001               	movlw	1
  1742  12D7  160A  158A  2746  160A  118A  	fcall	___xxtofl
  1743  12DC  0873               	movf	?___xxtofl+3,w
  1744  12DD  1683               	bsf	3,5	;RP0=1, select bank1
  1745  12DE  1303               	bcf	3,6	;RP1=0, select bank1
  1746  12DF  00D4               	movwf	(_S3+3)^(0+128)
  1747  12E0  0872               	movf	?___xxtofl+2,w
  1748  12E1  00D3               	movwf	(_S3+2)^(0+128)
  1749  12E2  0871               	movf	?___xxtofl+1,w
  1750  12E3  00D2               	movwf	(_S3+1)^(0+128)
  1751  12E4  0870               	movf	?___xxtofl,w
  1752  12E5  00D1               	movwf	_S3^(0+128)
  1753  12E6                     l3482:
  1754                           
  1755                           ;Master_main.c: 142:         USART_WriteStr("ADC  CONT   TEMP \n");
  1756  12E6  30A5               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1757  12E7  00F1               	movwf	USART_WriteStr@a
  1758  12E8  3080               	movlw	128
  1759  12E9  00F2               	movwf	USART_WriteStr@a+1
  1760  12EA  160A  158A  244C  160A  118A  	fcall	_USART_WriteStr
  1761  12EF                     l3484:
  1762                           
  1763                           ;Master_main.c: 143:         USART_Write(13);
  1764  12EF  300D               	movlw	13
  1765  12F0  160A  158A  2315  160A  118A  	fcall	_USART_Write
  1766  12F5                     l3486:
  1767                           
  1768                           ;Master_main.c: 144:         USART_Write(10);
  1769  12F5  300A               	movlw	10
  1770  12F6  160A  158A  2315  160A  118A  	fcall	_USART_Write
  1771  12FB                     l3488:
  1772                           
  1773                           ;Master_main.c: 146:         sprintf(Lcdvar, "%1.2f %1.2f   %1.2f", S1,S2,S3);
  1774  12FB  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1775  12FC  1683               	bsf	3,5	;RP0=1, select bank1
  1776  12FD  1303               	bcf	3,6	;RP1=0, select bank1
  1777  12FE  00CD               	movwf	??_main^(0+128)
  1778  12FF  084D               	movf	??_main^(0+128),w
  1779  1300  00A0               	movwf	sprintf@f^(0+128)
  1780  1301  085C               	movf	(_S1+3)^(0+128),w
  1781  1302  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1782  1303  085B               	movf	(_S1+2)^(0+128),w
  1783  1304  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1784  1305  085A               	movf	(_S1+1)^(0+128),w
  1785  1306  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1786  1307  0859               	movf	_S1^(0+128),w
  1787  1308  00A1               	movwf	(?_sprintf^(0+128)+1)
  1788  1309  0858               	movf	(_S2+3)^(0+128),w
  1789  130A  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1790  130B  0857               	movf	(_S2+2)^(0+128),w
  1791  130C  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1792  130D  0856               	movf	(_S2+1)^(0+128),w
  1793  130E  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1794  130F  0855               	movf	_S2^(0+128),w
  1795  1310  00A5               	movwf	(?_sprintf^(0+128)+5)
  1796  1311  0854               	movf	(_S3+3)^(0+128),w
  1797  1312  00AC               	movwf	((?_sprintf+3)^(0+128)+9)
  1798  1313  0853               	movf	(_S3+2)^(0+128),w
  1799  1314  00AB               	movwf	((?_sprintf+2)^(0+128)+9)
  1800  1315  0852               	movf	(_S3+1)^(0+128),w
  1801  1316  00AA               	movwf	((?_sprintf+1)^(0+128)+9)
  1802  1317  0851               	movf	_S3^(0+128),w
  1803  1318  00A9               	movwf	(?_sprintf^(0+128)+9)
  1804  1319  3090               	movlw	(low (_Lcdvar| (0+256)))& (0+255)
  1805  131A  120A  118A  206C  160A  118A  	fcall	_sprintf
  1806  131F                     l3490:
  1807                           
  1808                           ;Master_main.c: 149:         USART_WriteStr(Lcdvar);
  1809  131F  3090               	movlw	(low (_Lcdvar| (0+256)))& (0+255)
  1810  1320  00F1               	movwf	USART_WriteStr@a
  1811  1321  3001               	movlw	1
  1812  1322  00F2               	movwf	USART_WriteStr@a+1
  1813  1323  160A  158A  244C  160A  118A  	fcall	_USART_WriteStr
  1814  1328                     l3492:
  1815                           
  1816                           ;Master_main.c: 150:         USART_Write(13);
  1817  1328  300D               	movlw	13
  1818  1329  160A  158A  2315  160A  118A  	fcall	_USART_Write
  1819  132E                     l3494:
  1820                           
  1821                           ;Master_main.c: 151:         USART_Write(10);
  1822  132E  300A               	movlw	10
  1823  132F  160A  158A  2315  160A  118A  	fcall	_USART_Write
  1824  1334                     l3496:
  1825                           
  1826                           ;Master_main.c: 154:         LCD_Clear();
  1827  1334  160A  158A  2321  160A  118A  	fcall	_LCD_Clear
  1828  1339                     l3498:
  1829                           
  1830                           ;Master_main.c: 155:         LCD_Set_Cursor(1,1);
  1831  1339  01F4               	clrf	LCD_Set_Cursor@y
  1832  133A  0AF4               	incf	LCD_Set_Cursor@y,f
  1833  133B  3001               	movlw	1
  1834  133C  160A  158A  2394  160A  118A  	fcall	_LCD_Set_Cursor
  1835  1341                     l3500:
  1836                           
  1837                           ;Master_main.c: 156:         LCD_Write_String("ADC  CONT  TEMP");
  1838  1341  30B8               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1839  1342  00F3               	movwf	LCD_Write_String@a
  1840  1343  3080               	movlw	128
  1841  1344  00F4               	movwf	LCD_Write_String@a+1
  1842  1345  160A  158A  24B1  160A  118A  	fcall	_LCD_Write_String
  1843  134A                     l3502:
  1844                           
  1845                           ;Master_main.c: 157:         LCD_Set_Cursor(2,1);
  1846  134A  01F4               	clrf	LCD_Set_Cursor@y
  1847  134B  0AF4               	incf	LCD_Set_Cursor@y,f
  1848  134C  3002               	movlw	2
  1849  134D  160A  158A  2394  160A  118A  	fcall	_LCD_Set_Cursor
  1850  1352                     l3504:
  1851                           
  1852                           ;Master_main.c: 158:         LCD_Write_String(Lcdvar);
  1853  1352  3090               	movlw	(low (_Lcdvar| (0+256)))& (0+255)
  1854  1353  00F3               	movwf	LCD_Write_String@a
  1855  1354  3001               	movlw	1
  1856  1355  00F4               	movwf	LCD_Write_String@a+1
  1857  1356  160A  158A  24B1  160A  118A  	fcall	_LCD_Write_String
  1858  135B                     l3506:
  1859                           
  1860                           ;Master_main.c: 160:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1861  135B  3006               	movlw	6
  1862  135C  1683               	bsf	3,5	;RP0=1, select bank1
  1863  135D  1303               	bcf	3,6	;RP1=0, select bank1
  1864  135E  00CF               	movwf	(??_main^(0+128)+2)
  1865  135F  3013               	movlw	19
  1866  1360  00CE               	movwf	(??_main^(0+128)+1)
  1867  1361  30AD               	movlw	173
  1868  1362  00CD               	movwf	??_main^(0+128)
  1869  1363                     u5657:
  1870  1363  0BCD               	decfsz	??_main^(0+128),f
  1871  1364  2B63               	goto	u5657
  1872  1365  0BCE               	decfsz	(??_main^(0+128)+1),f
  1873  1366  2B63               	goto	u5657
  1874  1367  0BCF               	decfsz	(??_main^(0+128)+2),f
  1875  1368  2B63               	goto	u5657
  1876  1369  2A09               	goto	l3446
  1877  136A  120A  118A  2800   	ljmp	start
  1878  136D                     __end_of_main:
  1879                           
  1880                           	psect	text1
  1881  006C                     __ptext1:	
  1882 ;; *************** function _sprintf *****************
  1883 ;; Defined at:
  1884 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  sp              1    wreg     PTR unsigned char 
  1887 ;;		 -> Lcdvar(20), 
  1888 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1889 ;;		 -> STR_2(20), 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1892 ;;		 -> Lcdvar(20), 
  1893 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1894 ;;  tmpval          4   31[BANK1 ] struct .
  1895 ;;  val             4   23[BANK1 ] unsigned long 
  1896 ;;  prec            2   42[BANK1 ] int 
  1897 ;;  eexp            2   35[BANK1 ] int 
  1898 ;;  width           2   29[BANK1 ] int 
  1899 ;;  flag            2   27[BANK1 ] unsigned short 
  1900 ;;  cp              2    0        PTR const unsigned char 
  1901 ;;  len             2    0        unsigned int 
  1902 ;;  c               1   44[BANK1 ] unsigned char 
  1903 ;;  ap              1   22[BANK1 ] PTR void [1]
  1904 ;;		 -> ?_sprintf(2), 
  1905 ;;  d               1    0        unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  2    0[BANK1 ] int 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1915 ;;      Params:         0       0      13       0       0
  1916 ;;      Locals:         0       0      27       0       0
  1917 ;;      Temps:          0       0       5       0       0
  1918 ;;      Totals:         0       0      45       0       0
  1919 ;;Total ram usage:       45 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    3
  1922 ;; This function calls:
  1923 ;;		___awdiv
  1924 ;;		___fladd
  1925 ;;		___fleq
  1926 ;;		___flge
  1927 ;;		___flmul
  1928 ;;		___flneg
  1929 ;;		___flsub
  1930 ;;		___fltol
  1931 ;;		___lldiv
  1932 ;;		___llmod
  1933 ;;		___wmul
  1934 ;;		___xxtofl
  1935 ;;		__div_to_l_
  1936 ;;		__tdiv_to_l_
  1937 ;;		_fround
  1938 ;;		_isdigit
  1939 ;;		_scale
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _sprintf
  1947  006C                     _sprintf:
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1951                           ;sprintf@sp stored from wreg
  1952  006C  1683               	bsf	3,5	;RP0=1, select bank1
  1953  006D  1303               	bcf	3,6	;RP1=0, select bank1
  1954  006E  00C9               	movwf	sprintf@sp^(0+128)
  1955  006F                     l3158:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1958  006F  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1959  0070  00AD               	movwf	??_sprintf^(0+128)
  1960  0071  082D               	movf	??_sprintf^(0+128),w
  1961  0072  00B6               	movwf	sprintf@ap^(0+128)
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1964  0073  2FD0               	goto	l3408
  1965  0074                     l3160:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1968  0074  3025               	movlw	37
  1969  0075  064C               	xorwf	sprintf@c^(0+128),w
  1970  0076  1903               	btfsc	3,2
  1971  0077  2879               	goto	u5071
  1972  0078  287A               	goto	u5070
  1973  0079                     u5071:
  1974  0079  2886               	goto	l3166
  1975  007A                     u5070:
  1976  007A                     l3162:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1979  007A  084C               	movf	sprintf@c^(0+128),w
  1980  007B  00AD               	movwf	??_sprintf^(0+128)
  1981  007C  0849               	movf	sprintf@sp^(0+128),w
  1982  007D  0084               	movwf	4
  1983  007E  082D               	movf	??_sprintf^(0+128),w
  1984  007F  1783               	bsf	3,7	;select IRP bank2
  1985  0080  0080               	movwf	0
  1986  0081                     l3164:
  1987  0081  3001               	movlw	1
  1988  0082  00AD               	movwf	??_sprintf^(0+128)
  1989  0083  082D               	movf	??_sprintf^(0+128),w
  1990  0084  07C9               	addwf	sprintf@sp^(0+128),f
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1993  0085  2FD0               	goto	l3408
  1994  0086                     l3166:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1997  0086  01BD               	clrf	sprintf@width^(0+128)
  1998  0087  01BE               	clrf	(sprintf@width+1)^(0+128)
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2001  0088  01BB               	clrf	sprintf@flag^(0+128)
  2002  0089  01BC               	clrf	(sprintf@flag+1)^(0+128)
  2003  008A                     l3168:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2006  008A  0820               	movf	sprintf@f^(0+128),w
  2007  008B  0084               	movwf	4
  2008  008C  120A  158A  200A  120A  118A  	fcall	stringdir
  2009  0091  160A  118A  2005  120A  118A  	fcall	_isdigit
  2010  0096  1C03               	btfss	3,0
  2011  0097  2899               	goto	u5081
  2012  0098  289A               	goto	u5080
  2013  0099                     u5081:
  2014  0099  28DA               	goto	l3180
  2015  009A                     u5080:
  2016  009A                     l3170:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2019  009A  1683               	bsf	3,5	;RP0=1, select bank1
  2020  009B  1303               	bcf	3,6	;RP1=0, select bank1
  2021  009C  01BD               	clrf	sprintf@width^(0+128)
  2022  009D  01BE               	clrf	(sprintf@width+1)^(0+128)
  2023  009E                     l3172:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2026  009E  300A               	movlw	10
  2027  009F  00F0               	movwf	___wmul@multiplier
  2028  00A0  3000               	movlw	0
  2029  00A1  00F1               	movwf	___wmul@multiplier+1
  2030  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  2031  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  2032  00A4  083E               	movf	(sprintf@width+1)^(0+128),w
  2033  00A5  00F3               	movwf	___wmul@multiplicand+1
  2034  00A6  083D               	movf	sprintf@width^(0+128),w
  2035  00A7  00F2               	movwf	___wmul@multiplicand
  2036  00A8  160A  158A  2400  120A  118A  	fcall	___wmul
  2037  00AD  0871               	movf	?___wmul+1,w
  2038  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  2039  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  2040  00B0  00BE               	movwf	(sprintf@width+1)^(0+128)
  2041  00B1  0870               	movf	?___wmul,w
  2042  00B2  00BD               	movwf	sprintf@width^(0+128)
  2043  00B3                     l3174:
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2046  00B3  0820               	movf	sprintf@f^(0+128),w
  2047  00B4  0084               	movwf	4
  2048  00B5  120A  158A  200A  120A  118A  	fcall	stringdir
  2049  00BA  3ED0               	addlw	208
  2050  00BB  00AD               	movwf	??_sprintf^(0+128)
  2051  00BC  30FF               	movlw	255
  2052  00BD  1803               	skipnc
  2053  00BE  3000               	movlw	0
  2054  00BF  00AE               	movwf	(??_sprintf^(0+128)+1)
  2055  00C0  082D               	movf	??_sprintf^(0+128),w
  2056  00C1  07BD               	addwf	sprintf@width^(0+128),f
  2057  00C2  1803               	skipnc
  2058  00C3  0ABE               	incf	(sprintf@width+1)^(0+128),f
  2059  00C4  082E               	movf	(??_sprintf+1)^(0+128),w
  2060  00C5  07BE               	addwf	(sprintf@width+1)^(0+128),f
  2061  00C6                     l3176:
  2062  00C6  3001               	movlw	1
  2063  00C7  00AD               	movwf	??_sprintf^(0+128)
  2064  00C8  082D               	movf	??_sprintf^(0+128),w
  2065  00C9  07A0               	addwf	sprintf@f^(0+128),f
  2066  00CA                     l3178:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2069  00CA  0820               	movf	sprintf@f^(0+128),w
  2070  00CB  0084               	movwf	4
  2071  00CC  120A  158A  200A  120A  118A  	fcall	stringdir
  2072  00D1  160A  118A  2005  120A  118A  	fcall	_isdigit
  2073  00D6  1803               	btfsc	3,0
  2074  00D7  28D9               	goto	u5091
  2075  00D8  28DA               	goto	u5090
  2076  00D9                     u5091:
  2077  00D9  289E               	goto	l3172
  2078  00DA                     u5090:
  2079  00DA                     l3180:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2082  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  2083  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  2084  00DC  0820               	movf	sprintf@f^(0+128),w
  2085  00DD  0084               	movwf	4
  2086  00DE  120A  158A  200A  120A  118A  	fcall	stringdir
  2087  00E3  3A2E               	xorlw	46
  2088  00E4  1D03               	skipz
  2089  00E5  28E7               	goto	u5101
  2090  00E6  28E8               	goto	u5100
  2091  00E7                     u5101:
  2092  00E7  292D               	goto	l3196
  2093  00E8                     u5100:
  2094  00E8                     l3182:
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2097  00E8  173C               	bsf	(sprintf@flag^(0+128)+1),6
  2098  00E9                     l3184:
  2099                           
  2100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2101  00E9  3001               	movlw	1
  2102  00EA  00AD               	movwf	??_sprintf^(0+128)
  2103  00EB  082D               	movf	??_sprintf^(0+128),w
  2104  00EC  07A0               	addwf	sprintf@f^(0+128),f
  2105  00ED                     l3186:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2108  00ED  01CA               	clrf	sprintf@prec^(0+128)
  2109  00EE  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2112  00EF  291C               	goto	l3194
  2113  00F0                     l3188:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2116  00F0  300A               	movlw	10
  2117  00F1  00F0               	movwf	___wmul@multiplier
  2118  00F2  3000               	movlw	0
  2119  00F3  00F1               	movwf	___wmul@multiplier+1
  2120  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  2121  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  2122  00F6  084B               	movf	(sprintf@prec+1)^(0+128),w
  2123  00F7  00F3               	movwf	___wmul@multiplicand+1
  2124  00F8  084A               	movf	sprintf@prec^(0+128),w
  2125  00F9  00F2               	movwf	___wmul@multiplicand
  2126  00FA  160A  158A  2400  120A  118A  	fcall	___wmul
  2127  00FF  0871               	movf	?___wmul+1,w
  2128  0100  1683               	bsf	3,5	;RP0=1, select bank1
  2129  0101  1303               	bcf	3,6	;RP1=0, select bank1
  2130  0102  00CB               	movwf	(sprintf@prec+1)^(0+128)
  2131  0103  0870               	movf	?___wmul,w
  2132  0104  00CA               	movwf	sprintf@prec^(0+128)
  2133  0105                     l3190:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2136  0105  0820               	movf	sprintf@f^(0+128),w
  2137  0106  0084               	movwf	4
  2138  0107  120A  158A  200A  120A  118A  	fcall	stringdir
  2139  010C  3ED0               	addlw	208
  2140  010D  00AD               	movwf	??_sprintf^(0+128)
  2141  010E  30FF               	movlw	255
  2142  010F  1803               	skipnc
  2143  0110  3000               	movlw	0
  2144  0111  00AE               	movwf	(??_sprintf^(0+128)+1)
  2145  0112  082D               	movf	??_sprintf^(0+128),w
  2146  0113  07CA               	addwf	sprintf@prec^(0+128),f
  2147  0114  1803               	skipnc
  2148  0115  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  2149  0116  082E               	movf	(??_sprintf+1)^(0+128),w
  2150  0117  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  2151  0118                     l3192:
  2152  0118  3001               	movlw	1
  2153  0119  00AD               	movwf	??_sprintf^(0+128)
  2154  011A  082D               	movf	??_sprintf^(0+128),w
  2155  011B  07A0               	addwf	sprintf@f^(0+128),f
  2156  011C                     l3194:
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2159  011C  0820               	movf	sprintf@f^(0+128),w
  2160  011D  0084               	movwf	4
  2161  011E  120A  158A  200A  120A  118A  	fcall	stringdir
  2162  0123  160A  118A  2005  120A  118A  	fcall	_isdigit
  2163  0128  1803               	btfsc	3,0
  2164  0129  292B               	goto	u5111
  2165  012A  292C               	goto	u5110
  2166  012B                     u5111:
  2167  012B  28F0               	goto	l3188
  2168  012C                     u5110:
  2169  012C  2933               	goto	l3202
  2170  012D                     l3196:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2173  012D  01CA               	clrf	sprintf@prec^(0+128)
  2174  012E  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2175  012F                     l3198:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2178  012F  163C               	bsf	(sprintf@flag^(0+128)+1),4
  2179  0130  2933               	goto	l3202
  2180  0131                     l310:	
  2181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2182                           
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2185  0131  153C               	bsf	(sprintf@flag^(0+128)+1),2
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2188  0132  294F               	goto	l3204
  2189  0133                     l3202:
  2190  0133  3001               	movlw	1
  2191  0134  1683               	bsf	3,5	;RP0=1, select bank1
  2192  0135  1303               	bcf	3,6	;RP1=0, select bank1
  2193  0136  07A0               	addwf	sprintf@f^(0+128),f
  2194  0137  30FF               	movlw	-1
  2195  0138  0720               	addwf	sprintf@f^(0+128),w
  2196  0139  0084               	movwf	4
  2197  013A  120A  158A  200A  120A  118A  	fcall	stringdir
  2198  013F  00CC               	movwf	sprintf@c^(0+128)
  2199  0140  00AD               	movwf	??_sprintf^(0+128)
  2200  0141  01AE               	clrf	(??_sprintf^(0+128)+1)
  2201                           
  2202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2203                           ; Switch size 1, requested type "simple"
  2204                           ; Number of cases is 1, Range of values is 0 to 0
  2205                           ; switch strategies available:
  2206                           ; Name         Instructions Cycles
  2207                           ; simple_byte            4     3 (average)
  2208                           ; direct_byte           11     8 (fixed)
  2209                           ; jumptable            260     6 (fixed)
  2210                           ;	Chosen strategy is simple_byte
  2211  0142  082E               	movf	(??_sprintf+1)^(0+128),w
  2212  0143  3A00               	xorlw	0	; case 0
  2213  0144  1903               	skipnz
  2214  0145  2947               	goto	l3538
  2215  0146  2FD0               	goto	l3408
  2216  0147                     l3538:
  2217                           
  2218                           ; Switch size 1, requested type "simple"
  2219                           ; Number of cases is 2, Range of values is 0 to 102
  2220                           ; switch strategies available:
  2221                           ; Name         Instructions Cycles
  2222                           ; simple_byte            7     4 (average)
  2223                           ; jumptable            260     6 (fixed)
  2224                           ;	Chosen strategy is simple_byte
  2225  0147  082D               	movf	??_sprintf^(0+128),w
  2226  0148  3A00               	xorlw	0	; case 0
  2227  0149  1903               	skipnz
  2228  014A  2FE2               	goto	l3410
  2229  014B  3A66               	xorlw	102	; case 102
  2230  014C  1903               	skipnz
  2231  014D  2931               	goto	l310
  2232  014E  2FD0               	goto	l3408
  2233  014F                     l3204:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2236  014F  3000               	movlw	0
  2237  0150  053B               	andwf	sprintf@flag^(0+128),w
  2238  0151  00AD               	movwf	??_sprintf^(0+128)
  2239  0152  3007               	movlw	7
  2240  0153  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2241  0154  00AE               	movwf	(??_sprintf+1)^(0+128)
  2242  0155  082D               	movf	??_sprintf^(0+128),w
  2243  0156  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2244  0157  1903               	btfsc	3,2
  2245  0158  295A               	goto	u5121
  2246  0159  295B               	goto	u5120
  2247  015A                     u5121:
  2248  015A  2F0D               	goto	l3362
  2249  015B                     u5120:
  2250  015B                     l3206:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2253  015B  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  2254  015C  295E               	goto	u5131
  2255  015D  295F               	goto	u5130
  2256  015E                     u5131:
  2257  015E  2963               	goto	l3210
  2258  015F                     u5130:
  2259  015F                     l3208:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2262  015F  3006               	movlw	6
  2263  0160  00CA               	movwf	sprintf@prec^(0+128)
  2264  0161  3000               	movlw	0
  2265  0162  00CB               	movwf	(sprintf@prec^(0+128)+1)
  2266  0163                     l3210:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2269  0163  0836               	movf	sprintf@ap^(0+128),w
  2270  0164  0084               	movwf	4
  2271  0165  1383               	bcf	3,7	;select IRP bank0
  2272  0166  0800               	movf	0,w
  2273  0167  00C5               	movwf	sprintf@fval^(0+128)
  2274  0168  0A84               	incf	4,f
  2275  0169  0800               	movf	0,w
  2276  016A  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2277  016B  0A84               	incf	4,f
  2278  016C  0800               	movf	0,w
  2279  016D  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2280  016E  0A84               	incf	4,f
  2281  016F  0800               	movf	0,w
  2282  0170  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2283  0171                     l3212:
  2284  0171  3004               	movlw	4
  2285  0172  00AD               	movwf	??_sprintf^(0+128)
  2286  0173  082D               	movf	??_sprintf^(0+128),w
  2287  0174  07B6               	addwf	sprintf@ap^(0+128),f
  2288  0175                     l3214:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2291  0175  0848               	movf	(sprintf@fval+3)^(0+128),w
  2292  0176  00F3               	movwf	___flge@ff1+3
  2293  0177  0847               	movf	(sprintf@fval+2)^(0+128),w
  2294  0178  00F2               	movwf	___flge@ff1+2
  2295  0179  0846               	movf	(sprintf@fval+1)^(0+128),w
  2296  017A  00F1               	movwf	___flge@ff1+1
  2297  017B  0845               	movf	sprintf@fval^(0+128),w
  2298  017C  00F0               	movwf	___flge@ff1
  2299  017D  3000               	movlw	0
  2300  017E  00F7               	movwf	___flge@ff2+3
  2301  017F  3000               	movlw	0
  2302  0180  00F6               	movwf	___flge@ff2+2
  2303  0181  3000               	movlw	0
  2304  0182  00F5               	movwf	___flge@ff2+1
  2305  0183  3000               	movlw	0
  2306  0184  00F4               	movwf	___flge@ff2
  2307  0185  160A  158A  26A4  120A  118A  	fcall	___flge
  2308  018A  1803               	btfsc	3,0
  2309  018B  298D               	goto	u5141
  2310  018C  298E               	goto	u5140
  2311  018D                     u5141:
  2312  018D  29AB               	goto	l3220
  2313  018E                     u5140:
  2314  018E                     l3216:
  2315                           
  2316                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2317  018E  1683               	bsf	3,5	;RP0=1, select bank1
  2318  018F  1303               	bcf	3,6	;RP1=0, select bank1
  2319  0190  0848               	movf	(sprintf@fval+3)^(0+128),w
  2320  0191  00F3               	movwf	___flneg@f1+3
  2321  0192  0847               	movf	(sprintf@fval+2)^(0+128),w
  2322  0193  00F2               	movwf	___flneg@f1+2
  2323  0194  0846               	movf	(sprintf@fval+1)^(0+128),w
  2324  0195  00F1               	movwf	___flneg@f1+1
  2325  0196  0845               	movf	sprintf@fval^(0+128),w
  2326  0197  00F0               	movwf	___flneg@f1
  2327  0198  160A  158A  230A  120A  118A  	fcall	___flneg
  2328  019D  0873               	movf	?___flneg+3,w
  2329  019E  1683               	bsf	3,5	;RP0=1, select bank1
  2330  019F  1303               	bcf	3,6	;RP1=0, select bank1
  2331  01A0  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2332  01A1  0872               	movf	?___flneg+2,w
  2333  01A2  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2334  01A3  0871               	movf	?___flneg+1,w
  2335  01A4  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2336  01A5  0870               	movf	?___flneg,w
  2337  01A6  00C5               	movwf	sprintf@fval^(0+128)
  2338  01A7                     l3218:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2341  01A7  3003               	movlw	3
  2342  01A8  04BB               	iorwf	sprintf@flag^(0+128),f
  2343  01A9  3000               	movlw	0
  2344  01AA  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2345  01AB                     l3220:
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2348  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2349  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2350  01AD  01C3               	clrf	sprintf@eexp^(0+128)
  2351  01AE  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2352  01AF                     l3222:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2355  01AF  0848               	movf	(sprintf@fval+3)^(0+128),w
  2356  01B0  00F3               	movwf	___fleq@ff1+3
  2357  01B1  0847               	movf	(sprintf@fval+2)^(0+128),w
  2358  01B2  00F2               	movwf	___fleq@ff1+2
  2359  01B3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2360  01B4  00F1               	movwf	___fleq@ff1+1
  2361  01B5  0845               	movf	sprintf@fval^(0+128),w
  2362  01B6  00F0               	movwf	___fleq@ff1
  2363  01B7  3000               	movlw	0
  2364  01B8  00F7               	movwf	___fleq@ff2+3
  2365  01B9  3000               	movlw	0
  2366  01BA  00F6               	movwf	___fleq@ff2+2
  2367  01BB  3000               	movlw	0
  2368  01BC  00F5               	movwf	___fleq@ff2+1
  2369  01BD  3000               	movlw	0
  2370  01BE  00F4               	movwf	___fleq@ff2
  2371  01BF  160A  158A  2537  120A  118A  	fcall	___fleq
  2372  01C4  1803               	btfsc	3,0
  2373  01C5  29C7               	goto	u5151
  2374  01C6  29C8               	goto	u5150
  2375  01C7                     u5151:
  2376  01C7  2AB8               	goto	l3248
  2377  01C8                     u5150:
  2378  01C8                     l3224:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2381  01C8  1003               	clrc
  2382  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  2383  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  2384  01CB  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2385  01CC  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2386  01CD  3E82               	addlw	130
  2387  01CE  00C3               	movwf	sprintf@eexp^(0+128)
  2388  01CF  30FF               	movlw	255
  2389  01D0  1803               	skipnc
  2390  01D1  3000               	movlw	0
  2391  01D2  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2392  01D3                     l3226:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2395  01D3  30FF               	movlw	255
  2396  01D4  07C3               	addwf	sprintf@eexp^(0+128),f
  2397  01D5  1803               	skipnc
  2398  01D6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2399  01D7  30FF               	movlw	255
  2400  01D8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2401  01D9                     l3228:
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2404  01D9  3003               	movlw	3
  2405  01DA  00F0               	movwf	___wmul@multiplier
  2406  01DB  3000               	movlw	0
  2407  01DC  00F1               	movwf	___wmul@multiplier+1
  2408  01DD  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2409  01DE  00F3               	movwf	___wmul@multiplicand+1
  2410  01DF  0843               	movf	sprintf@eexp^(0+128),w
  2411  01E0  00F2               	movwf	___wmul@multiplicand
  2412  01E1  160A  158A  2400  120A  118A  	fcall	___wmul
  2413  01E6  0871               	movf	?___wmul+1,w
  2414  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  2415  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  2416  01E9  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2417  01EA  0870               	movf	?___wmul,w
  2418  01EB  00C3               	movwf	sprintf@eexp^(0+128)
  2419  01EC                     l3230:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2422  01EC  300A               	movlw	10
  2423  01ED  00F7               	movwf	___awdiv@divisor
  2424  01EE  3000               	movlw	0
  2425  01EF  00F8               	movwf	___awdiv@divisor+1
  2426  01F0  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2427  01F1  00FA               	movwf	___awdiv@dividend+1
  2428  01F2  0843               	movf	sprintf@eexp^(0+128),w
  2429  01F3  00F9               	movwf	___awdiv@dividend
  2430  01F4  120A  118A  2003  120A  118A  	fcall	___awdiv
  2431  01F9  0878               	movf	?___awdiv+1,w
  2432  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  2433  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  2434  01FC  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2435  01FD  0877               	movf	?___awdiv,w
  2436  01FE  00C3               	movwf	sprintf@eexp^(0+128)
  2437  01FF                     l3232:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2440  01FF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2441  0200  2A02               	goto	u5161
  2442  0201  2A03               	goto	u5160
  2443  0202                     u5161:
  2444  0202  2A09               	goto	l3236
  2445  0203                     u5160:
  2446  0203                     l3234:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2449  0203  30FF               	movlw	255
  2450  0204  07C3               	addwf	sprintf@eexp^(0+128),f
  2451  0205  1803               	skipnc
  2452  0206  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2453  0207  30FF               	movlw	255
  2454  0208  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2455  0209                     l3236:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2458  0209  0343               	decf	sprintf@eexp^(0+128),w
  2459  020A  3AFF               	xorlw	255
  2460  020B  120A  158A  2140  120A  118A  	fcall	_scale
  2461  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0212  0841               	movf	?_scale+3,w
  2464  0213  1683               	bsf	3,5	;RP0=1, select bank1
  2465  0214  1303               	bcf	3,6	;RP1=0, select bank1
  2466  0215  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2467  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0217  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0218  0840               	movf	?_scale+2,w
  2470  0219  1683               	bsf	3,5	;RP0=1, select bank1
  2471  021A  1303               	bcf	3,6	;RP1=0, select bank1
  2472  021B  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2473  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2474  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2475  021E  083F               	movf	?_scale+1,w
  2476  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0221  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2479  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2480  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2481  0224  083E               	movf	?_scale,w
  2482  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2483  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2484  0227  00BF               	movwf	sprintf@tmpval^(0+128)
  2485  0228                     l3238:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2488  0228  0848               	movf	(sprintf@fval+3)^(0+128),w
  2489  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2490  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2491  022B  00A7               	movwf	___flmul@b+3
  2492  022C  1683               	bsf	3,5	;RP0=1, select bank1
  2493  022D  1303               	bcf	3,6	;RP1=0, select bank1
  2494  022E  0847               	movf	(sprintf@fval+2)^(0+128),w
  2495  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0231  00A6               	movwf	___flmul@b+2
  2498  0232  1683               	bsf	3,5	;RP0=1, select bank1
  2499  0233  1303               	bcf	3,6	;RP1=0, select bank1
  2500  0234  0846               	movf	(sprintf@fval+1)^(0+128),w
  2501  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0237  00A5               	movwf	___flmul@b+1
  2504  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2506  023A  0845               	movf	sprintf@fval^(0+128),w
  2507  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2508  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2509  023D  00A4               	movwf	___flmul@b
  2510  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2511  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2512  0240  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2513  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0243  00AB               	movwf	___flmul@a+3
  2516  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2517  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0246  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2519  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0249  00AA               	movwf	___flmul@a+2
  2522  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2523  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2524  024C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2525  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2526  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2527  024F  00A9               	movwf	___flmul@a+1
  2528  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2529  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2530  0252  083F               	movf	sprintf@tmpval^(0+128),w
  2531  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0255  00A8               	movwf	___flmul@a
  2534  0256  120A  158A  249F  120A  118A  	fcall	___flmul
  2535  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2536  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2537  025D  0827               	movf	?___flmul+3,w
  2538  025E  1683               	bsf	3,5	;RP0=1, select bank1
  2539  025F  1303               	bcf	3,6	;RP1=0, select bank1
  2540  0260  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2541  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0262  1303               	bcf	3,6	;RP1=0, select bank0
  2543  0263  0826               	movf	?___flmul+2,w
  2544  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2545  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2546  0266  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2547  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0269  0825               	movf	?___flmul+1,w
  2550  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2551  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2552  026C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2553  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2554  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2555  026F  0824               	movf	?___flmul,w
  2556  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2557  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2558  0272  00BF               	movwf	sprintf@tmpval^(0+128)
  2559  0273                     l3240:
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2562  0273  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2563  0274  00F3               	movwf	___flge@ff1+3
  2564  0275  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2565  0276  00F2               	movwf	___flge@ff1+2
  2566  0277  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2567  0278  00F1               	movwf	___flge@ff1+1
  2568  0279  083F               	movf	sprintf@tmpval^(0+128),w
  2569  027A  00F0               	movwf	___flge@ff1
  2570  027B  303F               	movlw	63
  2571  027C  00F7               	movwf	___flge@ff2+3
  2572  027D  3080               	movlw	128
  2573  027E  00F6               	movwf	___flge@ff2+2
  2574  027F  3000               	movlw	0
  2575  0280  00F5               	movwf	___flge@ff2+1
  2576  0281  3000               	movlw	0
  2577  0282  00F4               	movwf	___flge@ff2
  2578  0283  160A  158A  26A4  120A  118A  	fcall	___flge
  2579  0288  1803               	btfsc	3,0
  2580  0289  2A8B               	goto	u5171
  2581  028A  2A8C               	goto	u5170
  2582  028B                     u5171:
  2583  028B  2A95               	goto	l3244
  2584  028C                     u5170:
  2585  028C                     l3242:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2588  028C  30FF               	movlw	255
  2589  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2590  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2591  028F  07C3               	addwf	sprintf@eexp^(0+128),f
  2592  0290  1803               	skipnc
  2593  0291  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2594  0292  30FF               	movlw	255
  2595  0293  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2596  0294  2AB8               	goto	l3248
  2597  0295                     l3244:
  2598  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0297  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2601  0298  00F3               	movwf	___flge@ff1+3
  2602  0299  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2603  029A  00F2               	movwf	___flge@ff1+2
  2604  029B  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2605  029C  00F1               	movwf	___flge@ff1+1
  2606  029D  083F               	movf	sprintf@tmpval^(0+128),w
  2607  029E  00F0               	movwf	___flge@ff1
  2608  029F  3041               	movlw	65
  2609  02A0  00F7               	movwf	___flge@ff2+3
  2610  02A1  3020               	movlw	32
  2611  02A2  00F6               	movwf	___flge@ff2+2
  2612  02A3  3000               	movlw	0
  2613  02A4  00F5               	movwf	___flge@ff2+1
  2614  02A5  3000               	movlw	0
  2615  02A6  00F4               	movwf	___flge@ff2
  2616  02A7  160A  158A  26A4  120A  118A  	fcall	___flge
  2617  02AC  1C03               	btfss	3,0
  2618  02AD  2AAF               	goto	u5181
  2619  02AE  2AB0               	goto	u5180
  2620  02AF                     u5181:
  2621  02AF  2AB8               	goto	l3248
  2622  02B0                     u5180:
  2623  02B0                     l3246:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2626  02B0  3001               	movlw	1
  2627  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2628  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2629  02B3  07C3               	addwf	sprintf@eexp^(0+128),f
  2630  02B4  1803               	skipnc
  2631  02B5  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2632  02B6  3000               	movlw	0
  2633  02B7  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2634  02B8                     l3248:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2637  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2638  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2639  02BA  084B               	movf	(sprintf@prec+1)^(0+128),w
  2640  02BB  3A80               	xorlw	128
  2641  02BC  00FF               	movwf	btemp+1
  2642  02BD  3080               	movlw	128
  2643  02BE  027F               	subwf	btemp+1,w
  2644  02BF  1D03               	skipz
  2645  02C0  2AC3               	goto	u5195
  2646  02C1  300D               	movlw	13
  2647  02C2  024A               	subwf	sprintf@prec^(0+128),w
  2648  02C3                     u5195:
  2649  02C3  1803               	skipnc
  2650  02C4  2AC6               	goto	u5191
  2651  02C5  2AC7               	goto	u5190
  2652  02C6                     u5191:
  2653  02C6  2B0E               	goto	l3252
  2654  02C7                     u5190:
  2655  02C7                     l3250:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2658  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2659  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2660  02C9  084A               	movf	sprintf@prec^(0+128),w
  2661  02CA  160A  118A  236D  120A  118A  	fcall	_fround
  2662  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2663  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2664  02D1  0841               	movf	?_fround+3,w
  2665  02D2  00D5               	movwf	___fladd@b+3
  2666  02D3  0840               	movf	?_fround+2,w
  2667  02D4  00D4               	movwf	___fladd@b+2
  2668  02D5  083F               	movf	?_fround+1,w
  2669  02D6  00D3               	movwf	___fladd@b+1
  2670  02D7  083E               	movf	?_fround,w
  2671  02D8  00D2               	movwf	___fladd@b
  2672  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2673  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2674  02DB  0848               	movf	(sprintf@fval+3)^(0+128),w
  2675  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2676  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2677  02DE  00D9               	movwf	___fladd@a+3
  2678  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  2679  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  2680  02E1  0847               	movf	(sprintf@fval+2)^(0+128),w
  2681  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2682  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2683  02E4  00D8               	movwf	___fladd@a+2
  2684  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2685  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2686  02E7  0846               	movf	(sprintf@fval+1)^(0+128),w
  2687  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2688  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2689  02EA  00D7               	movwf	___fladd@a+1
  2690  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2691  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2692  02ED  0845               	movf	sprintf@fval^(0+128),w
  2693  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2694  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2695  02F0  00D6               	movwf	___fladd@a
  2696  02F1  160A  118A  2578  120A  118A  	fcall	___fladd
  2697  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2698  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2699  02F8  0855               	movf	?___fladd+3,w
  2700  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  2701  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  2702  02FB  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2703  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2704  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2705  02FE  0854               	movf	?___fladd+2,w
  2706  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2707  0300  1303               	bcf	3,6	;RP1=0, select bank1
  2708  0301  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2709  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0304  0853               	movf	?___fladd+1,w
  2712  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2713  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2714  0307  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2715  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2717  030A  0852               	movf	?___fladd,w
  2718  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2719  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2720  030D  00C5               	movwf	sprintf@fval^(0+128)
  2721  030E                     l3252:
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2724  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2725  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2726  0310  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2727  0311  3A80               	xorlw	128
  2728  0312  00FF               	movwf	btemp+1
  2729  0313  3080               	movlw	128
  2730  0314  027F               	subwf	btemp+1,w
  2731  0315  1D03               	skipz
  2732  0316  2B19               	goto	u5205
  2733  0317  300A               	movlw	10
  2734  0318  0243               	subwf	sprintf@eexp^(0+128),w
  2735  0319                     u5205:
  2736  0319  1803               	skipnc
  2737  031A  2B1C               	goto	u5201
  2738  031B  2B1D               	goto	u5200
  2739  031C                     u5201:
  2740  031C  2B6E               	goto	l3260
  2741  031D                     u5200:
  2742  031D                     l3254:
  2743  031D  1683               	bsf	3,5	;RP0=1, select bank1
  2744  031E  1303               	bcf	3,6	;RP1=0, select bank1
  2745  031F  0848               	movf	(sprintf@fval+3)^(0+128),w
  2746  0320  00F3               	movwf	___fleq@ff1+3
  2747  0321  0847               	movf	(sprintf@fval+2)^(0+128),w
  2748  0322  00F2               	movwf	___fleq@ff1+2
  2749  0323  0846               	movf	(sprintf@fval+1)^(0+128),w
  2750  0324  00F1               	movwf	___fleq@ff1+1
  2751  0325  0845               	movf	sprintf@fval^(0+128),w
  2752  0326  00F0               	movwf	___fleq@ff1
  2753  0327  3000               	movlw	0
  2754  0328  00F7               	movwf	___fleq@ff2+3
  2755  0329  3000               	movlw	0
  2756  032A  00F6               	movwf	___fleq@ff2+2
  2757  032B  3000               	movlw	0
  2758  032C  00F5               	movwf	___fleq@ff2+1
  2759  032D  3000               	movlw	0
  2760  032E  00F4               	movwf	___fleq@ff2
  2761  032F  160A  158A  2537  120A  118A  	fcall	___fleq
  2762  0334  1803               	btfsc	3,0
  2763  0335  2B37               	goto	u5211
  2764  0336  2B38               	goto	u5210
  2765  0337                     u5211:
  2766  0337  2BE0               	goto	l3274
  2767  0338                     u5210:
  2768  0338                     l3256:
  2769  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2770  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2771  033A  0848               	movf	(sprintf@fval+3)^(0+128),w
  2772  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2773  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2774  033D  00D4               	movwf	___fltol@f1+3
  2775  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2776  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2777  0340  0847               	movf	(sprintf@fval+2)^(0+128),w
  2778  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0343  00D3               	movwf	___fltol@f1+2
  2781  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2782  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2783  0346  0846               	movf	(sprintf@fval+1)^(0+128),w
  2784  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0349  00D2               	movwf	___fltol@f1+1
  2787  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2788  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2789  034C  0845               	movf	sprintf@fval^(0+128),w
  2790  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2791  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2792  034F  00D1               	movwf	___fltol@f1
  2793  0350  160A  158A  2628  120A  118A  	fcall	___fltol
  2794  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0357  0854               	movf	?___fltol+3,w
  2797  0358  0453               	iorwf	?___fltol+2,w
  2798  0359  0452               	iorwf	?___fltol+1,w
  2799  035A  0451               	iorwf	?___fltol,w
  2800  035B  1D03               	skipz
  2801  035C  2B5E               	goto	u5221
  2802  035D  2B5F               	goto	u5220
  2803  035E                     u5221:
  2804  035E  2BE0               	goto	l3274
  2805  035F                     u5220:
  2806  035F                     l3258:
  2807  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2808  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2809  0361  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2810  0362  3A80               	xorlw	128
  2811  0363  00FF               	movwf	btemp+1
  2812  0364  3080               	movlw	128
  2813  0365  027F               	subwf	btemp+1,w
  2814  0366  1D03               	skipz
  2815  0367  2B6A               	goto	u5235
  2816  0368  3002               	movlw	2
  2817  0369  0243               	subwf	sprintf@eexp^(0+128),w
  2818  036A                     u5235:
  2819  036A  1C03               	skipc
  2820  036B  2B6D               	goto	u5231
  2821  036C  2B6E               	goto	u5230
  2822  036D                     u5231:
  2823  036D  2BE0               	goto	l3274
  2824  036E                     u5230:
  2825  036E                     l3260:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2828  036E  1683               	bsf	3,5	;RP0=1, select bank1
  2829  036F  1303               	bcf	3,6	;RP1=0, select bank1
  2830  0370  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2831  0371  00F3               	movwf	___flge@ff1+3
  2832  0372  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2833  0373  00F2               	movwf	___flge@ff1+2
  2834  0374  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2835  0375  00F1               	movwf	___flge@ff1+1
  2836  0376  083F               	movf	sprintf@tmpval^(0+128),w
  2837  0377  00F0               	movwf	___flge@ff1
  2838  0378  3040               	movlw	64
  2839  0379  00F7               	movwf	___flge@ff2+3
  2840  037A  3089               	movlw	137
  2841  037B  00F6               	movwf	___flge@ff2+2
  2842  037C  3070               	movlw	112
  2843  037D  00F5               	movwf	___flge@ff2+1
  2844  037E  305F               	movlw	95
  2845  037F  00F4               	movwf	___flge@ff2
  2846  0380  160A  158A  26A4  120A  118A  	fcall	___flge
  2847  0385  1803               	btfsc	3,0
  2848  0386  2B88               	goto	u5241
  2849  0387  2B89               	goto	u5240
  2850  0388                     u5241:
  2851  0388  2B92               	goto	l3264
  2852  0389                     u5240:
  2853  0389                     l3262:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2856  0389  30F7               	movlw	247
  2857  038A  1683               	bsf	3,5	;RP0=1, select bank1
  2858  038B  1303               	bcf	3,6	;RP1=0, select bank1
  2859  038C  07C3               	addwf	sprintf@eexp^(0+128),f
  2860  038D  1803               	skipnc
  2861  038E  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2862  038F  30FF               	movlw	255
  2863  0390  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2866  0391  2B9A               	goto	l3266
  2867  0392                     l3264:
  2868                           
  2869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2870  0392  30F8               	movlw	248
  2871  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2872  0394  1303               	bcf	3,6	;RP1=0, select bank1
  2873  0395  07C3               	addwf	sprintf@eexp^(0+128),f
  2874  0396  1803               	skipnc
  2875  0397  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2876  0398  30FF               	movlw	255
  2877  0399  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2878  039A                     l3266:
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2881  039A  0843               	movf	sprintf@eexp^(0+128),w
  2882  039B  120A  158A  2140  120A  118A  	fcall	_scale
  2883  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2884  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2885  03A2  0841               	movf	?_scale+3,w
  2886  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  2887  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  2888  03A5  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2889  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2890  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2891  03A8  0840               	movf	?_scale+2,w
  2892  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2893  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  2894  03AB  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2895  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2896  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2897  03AE  083F               	movf	?_scale+1,w
  2898  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2899  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2900  03B1  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2901  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2902  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2903  03B4  083E               	movf	?_scale,w
  2904  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2905  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2906  03B7  00BF               	movwf	sprintf@tmpval^(0+128)
  2907  03B8                     l3268:
  2908  03B8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2909  03B9  00F3               	movwf	__div_to_l_@f1+3
  2910  03BA  0847               	movf	(sprintf@fval+2)^(0+128),w
  2911  03BB  00F2               	movwf	__div_to_l_@f1+2
  2912  03BC  0846               	movf	(sprintf@fval+1)^(0+128),w
  2913  03BD  00F1               	movwf	__div_to_l_@f1+1
  2914  03BE  0845               	movf	sprintf@fval^(0+128),w
  2915  03BF  00F0               	movwf	__div_to_l_@f1
  2916  03C0  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2917  03C1  00F7               	movwf	__div_to_l_@f2+3
  2918  03C2  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2919  03C3  00F6               	movwf	__div_to_l_@f2+2
  2920  03C4  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2921  03C5  00F5               	movwf	__div_to_l_@f2+1
  2922  03C6  083F               	movf	sprintf@tmpval^(0+128),w
  2923  03C7  00F4               	movwf	__div_to_l_@f2
  2924  03C8  160A  118A  212D  120A  118A  	fcall	__div_to_l_
  2925  03CD  0873               	movf	?__div_to_l_+3,w
  2926  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  2927  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  2928  03D0  00BA               	movwf	(sprintf@val+3)^(0+128)
  2929  03D1  0872               	movf	?__div_to_l_+2,w
  2930  03D2  00B9               	movwf	(sprintf@val+2)^(0+128)
  2931  03D3  0871               	movf	?__div_to_l_+1,w
  2932  03D4  00B8               	movwf	(sprintf@val+1)^(0+128)
  2933  03D5  0870               	movf	?__div_to_l_,w
  2934  03D6  00B7               	movwf	sprintf@val^(0+128)
  2935  03D7                     l3272:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2938  03D7  3000               	movlw	0
  2939  03D8  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2940  03D9  3000               	movlw	0
  2941  03DA  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2942  03DB  3000               	movlw	0
  2943  03DC  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2944  03DD  3000               	movlw	0
  2945  03DE  00C5               	movwf	sprintf@fval^(0+128)
  2946                           
  2947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2948  03DF  2C64               	goto	l3280
  2949  03E0                     l3274:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2952  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2953  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2954  03E2  0848               	movf	(sprintf@fval+3)^(0+128),w
  2955  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2956  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2957  03E5  00D4               	movwf	___fltol@f1+3
  2958  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2959  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2960  03E8  0847               	movf	(sprintf@fval+2)^(0+128),w
  2961  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2962  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2963  03EB  00D3               	movwf	___fltol@f1+2
  2964  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2965  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2966  03EE  0846               	movf	(sprintf@fval+1)^(0+128),w
  2967  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2968  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2969  03F1  00D2               	movwf	___fltol@f1+1
  2970  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2971  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2972  03F4  0845               	movf	sprintf@fval^(0+128),w
  2973  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2974  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2975  03F7  00D1               	movwf	___fltol@f1
  2976  03F8  160A  158A  2628  120A  118A  	fcall	___fltol
  2977  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2978  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2979  03FF  0854               	movf	?___fltol+3,w
  2980  0400  1683               	bsf	3,5	;RP0=1, select bank1
  2981  0401  1303               	bcf	3,6	;RP1=0, select bank1
  2982  0402  00BA               	movwf	(sprintf@val+3)^(0+128)
  2983  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0405  0853               	movf	?___fltol+2,w
  2986  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2987  0407  1303               	bcf	3,6	;RP1=0, select bank1
  2988  0408  00B9               	movwf	(sprintf@val+2)^(0+128)
  2989  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2990  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2991  040B  0852               	movf	?___fltol+1,w
  2992  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2993  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2994  040E  00B8               	movwf	(sprintf@val+1)^(0+128)
  2995  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2996  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2997  0411  0851               	movf	?___fltol,w
  2998  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2999  0413  1303               	bcf	3,6	;RP1=0, select bank1
  3000  0414  00B7               	movwf	sprintf@val^(0+128)
  3001  0415                     l3276:
  3002                           
  3003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3004  0415  083A               	movf	(sprintf@val+3)^(0+128),w
  3005  0416  00F3               	movwf	___xxtofl@val+3
  3006  0417  0839               	movf	(sprintf@val+2)^(0+128),w
  3007  0418  00F2               	movwf	___xxtofl@val+2
  3008  0419  0838               	movf	(sprintf@val+1)^(0+128),w
  3009  041A  00F1               	movwf	___xxtofl@val+1
  3010  041B  0837               	movf	sprintf@val^(0+128),w
  3011  041C  00F0               	movwf	___xxtofl@val
  3012  041D  3000               	movlw	0
  3013  041E  160A  158A  2746  120A  118A  	fcall	___xxtofl
  3014  0423  0873               	movf	?___xxtofl+3,w
  3015  0424  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0425  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0426  00E9               	movwf	___flsub@a+3
  3018  0427  0872               	movf	?___xxtofl+2,w
  3019  0428  00E8               	movwf	___flsub@a+2
  3020  0429  0871               	movf	?___xxtofl+1,w
  3021  042A  00E7               	movwf	___flsub@a+1
  3022  042B  0870               	movf	?___xxtofl,w
  3023  042C  00E6               	movwf	___flsub@a
  3024  042D  1683               	bsf	3,5	;RP0=1, select bank1
  3025  042E  1303               	bcf	3,6	;RP1=0, select bank1
  3026  042F  0848               	movf	(sprintf@fval+3)^(0+128),w
  3027  0430  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0431  1303               	bcf	3,6	;RP1=0, select bank0
  3029  0432  00ED               	movwf	___flsub@b+3
  3030  0433  1683               	bsf	3,5	;RP0=1, select bank1
  3031  0434  1303               	bcf	3,6	;RP1=0, select bank1
  3032  0435  0847               	movf	(sprintf@fval+2)^(0+128),w
  3033  0436  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0437  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0438  00EC               	movwf	___flsub@b+2
  3036  0439  1683               	bsf	3,5	;RP0=1, select bank1
  3037  043A  1303               	bcf	3,6	;RP1=0, select bank1
  3038  043B  0846               	movf	(sprintf@fval+1)^(0+128),w
  3039  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3040  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3041  043E  00EB               	movwf	___flsub@b+1
  3042  043F  1683               	bsf	3,5	;RP0=1, select bank1
  3043  0440  1303               	bcf	3,6	;RP1=0, select bank1
  3044  0441  0845               	movf	sprintf@fval^(0+128),w
  3045  0442  1283               	bcf	3,5	;RP0=0, select bank0
  3046  0443  1303               	bcf	3,6	;RP1=0, select bank0
  3047  0444  00EA               	movwf	___flsub@b
  3048  0445  160A  158A  23DC  120A  118A  	fcall	___flsub
  3049  044A  1283               	bcf	3,5	;RP0=0, select bank0
  3050  044B  1303               	bcf	3,6	;RP1=0, select bank0
  3051  044C  0869               	movf	?___flsub+3,w
  3052  044D  1683               	bsf	3,5	;RP0=1, select bank1
  3053  044E  1303               	bcf	3,6	;RP1=0, select bank1
  3054  044F  00C8               	movwf	(sprintf@fval+3)^(0+128)
  3055  0450  1283               	bcf	3,5	;RP0=0, select bank0
  3056  0451  1303               	bcf	3,6	;RP1=0, select bank0
  3057  0452  0868               	movf	?___flsub+2,w
  3058  0453  1683               	bsf	3,5	;RP0=1, select bank1
  3059  0454  1303               	bcf	3,6	;RP1=0, select bank1
  3060  0455  00C7               	movwf	(sprintf@fval+2)^(0+128)
  3061  0456  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0457  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0458  0867               	movf	?___flsub+1,w
  3064  0459  1683               	bsf	3,5	;RP0=1, select bank1
  3065  045A  1303               	bcf	3,6	;RP1=0, select bank1
  3066  045B  00C6               	movwf	(sprintf@fval+1)^(0+128)
  3067  045C  1283               	bcf	3,5	;RP0=0, select bank0
  3068  045D  1303               	bcf	3,6	;RP1=0, select bank0
  3069  045E  0866               	movf	?___flsub,w
  3070  045F  1683               	bsf	3,5	;RP0=1, select bank1
  3071  0460  1303               	bcf	3,6	;RP1=0, select bank1
  3072  0461  00C5               	movwf	sprintf@fval^(0+128)
  3073  0462                     l3278:
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3076  0462  01C3               	clrf	sprintf@eexp^(0+128)
  3077  0463  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  3078  0464                     l3280:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3081  0464  01CC               	clrf	sprintf@c^(0+128)
  3082  0465  0ACC               	incf	sprintf@c^(0+128),f
  3083  0466                     l3286:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3086  0466  084C               	movf	sprintf@c^(0+128),w
  3087  0467  00AD               	movwf	??_sprintf^(0+128)
  3088  0468  3001               	movlw	1
  3089  0469                     u5255:
  3090  0469  1003               	clrc
  3091  046A  0DAD               	rlf	??_sprintf^(0+128),f
  3092  046B  3EFF               	addlw	-1
  3093  046C  1D03               	skipz
  3094  046D  2C69               	goto	u5255
  3095  046E  1003               	clrc
  3096  046F  0D2D               	rlf	??_sprintf^(0+128),w
  3097  0470  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3098  0471  0084               	movwf	4
  3099  0472  120A  158A  200A  120A  118A  	fcall	stringdir
  3100  0477  00AE               	movwf	(??_sprintf+1)^(0+128)
  3101  0478  120A  158A  200A  120A  118A  	fcall	stringdir
  3102  047D  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  3103  047E  120A  158A  200A  120A  118A  	fcall	stringdir
  3104  0483  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  3105  0484  120A  158A  200A  120A  118A  	fcall	stringdir
  3106  0489  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  3107  048A  0831               	movf	(??_sprintf+4)^(0+128),w
  3108  048B  023A               	subwf	(sprintf@val+3)^(0+128),w
  3109  048C  1D03               	skipz
  3110  048D  2C98               	goto	u5265
  3111  048E  0830               	movf	(??_sprintf+3)^(0+128),w
  3112  048F  0239               	subwf	(sprintf@val+2)^(0+128),w
  3113  0490  1D03               	skipz
  3114  0491  2C98               	goto	u5265
  3115  0492  082F               	movf	(??_sprintf+2)^(0+128),w
  3116  0493  0238               	subwf	(sprintf@val+1)^(0+128),w
  3117  0494  1D03               	skipz
  3118  0495  2C98               	goto	u5265
  3119  0496  082E               	movf	(??_sprintf+1)^(0+128),w
  3120  0497  0237               	subwf	sprintf@val^(0+128),w
  3121  0498                     u5265:
  3122  0498  1803               	skipnc
  3123  0499  2C9B               	goto	u5261
  3124  049A  2C9C               	goto	u5260
  3125  049B                     u5261:
  3126  049B  2C9D               	goto	l3290
  3127  049C                     u5260:
  3128  049C  2CA7               	goto	l3292
  3129  049D                     l3290:
  3130  049D  3001               	movlw	1
  3131  049E  00AD               	movwf	??_sprintf^(0+128)
  3132  049F  082D               	movf	??_sprintf^(0+128),w
  3133  04A0  07CC               	addwf	sprintf@c^(0+128),f
  3134  04A1  300A               	movlw	10
  3135  04A2  064C               	xorwf	sprintf@c^(0+128),w
  3136  04A3  1D03               	btfss	3,2
  3137  04A4  2CA6               	goto	u5271
  3138  04A5  2CA7               	goto	u5270
  3139  04A6                     u5271:
  3140  04A6  2C66               	goto	l3286
  3141  04A7                     u5270:
  3142  04A7                     l3292:
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3145  04A7  084C               	movf	sprintf@c^(0+128),w
  3146  04A8  074A               	addwf	sprintf@prec^(0+128),w
  3147  04A9  00AD               	movwf	??_sprintf^(0+128)
  3148  04AA  084B               	movf	(sprintf@prec+1)^(0+128),w
  3149  04AB  1803               	skipnc
  3150  04AC  0A4B               	incf	(sprintf@prec+1)^(0+128),w
  3151  04AD  00AE               	movwf	(??_sprintf^(0+128)+1)
  3152  04AE  0843               	movf	sprintf@eexp^(0+128),w
  3153  04AF  072D               	addwf	??_sprintf^(0+128),w
  3154  04B0  00AF               	movwf	(??_sprintf+2)^(0+128)
  3155  04B1  0844               	movf	(sprintf@eexp+1)^(0+128),w
  3156  04B2  1803               	skipnc
  3157  04B3  0A44               	incf	(sprintf@eexp+1)^(0+128),w
  3158  04B4  072E               	addwf	(??_sprintf+1)^(0+128),w
  3159  04B5  00B0               	movwf	(??_sprintf+3)^(0+128)
  3160  04B6  082F               	movf	(??_sprintf+2)^(0+128),w
  3161  04B7  02BD               	subwf	sprintf@width^(0+128),f
  3162  04B8  0830               	movf	(??_sprintf+3)^(0+128),w
  3163  04B9  1C03               	skipc
  3164  04BA  03BE               	decf	(sprintf@width+1)^(0+128),f
  3165  04BB  02BE               	subwf	(sprintf@width+1)^(0+128),f
  3166                           
  3167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  3168  04BC  084A               	movf	sprintf@prec^(0+128),w
  3169  04BD  044B               	iorwf	(sprintf@prec+1)^(0+128),w
  3170  04BE  1903               	btfsc	3,2
  3171  04BF  2CC1               	goto	u5281
  3172  04C0  2CC2               	goto	u5280
  3173  04C1                     u5281:
  3174  04C1  2CC8               	goto	l3296
  3175  04C2                     u5280:
  3176  04C2                     l3294:
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3179  04C2  30FF               	movlw	255
  3180  04C3  07BD               	addwf	sprintf@width^(0+128),f
  3181  04C4  1803               	skipnc
  3182  04C5  0ABE               	incf	(sprintf@width+1)^(0+128),f
  3183  04C6  30FF               	movlw	255
  3184  04C7  07BE               	addwf	(sprintf@width+1)^(0+128),f
  3185  04C8                     l3296:
  3186                           
  3187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3188  04C8  3003               	movlw	3
  3189  04C9  053B               	andwf	sprintf@flag^(0+128),w
  3190  04CA  00AD               	movwf	??_sprintf^(0+128)
  3191  04CB  3000               	movlw	0
  3192  04CC  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3193  04CD  00AE               	movwf	(??_sprintf+1)^(0+128)
  3194  04CE  082D               	movf	??_sprintf^(0+128),w
  3195  04CF  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3196  04D0  1903               	btfsc	3,2
  3197  04D1  2CD3               	goto	u5291
  3198  04D2  2CD4               	goto	u5290
  3199  04D3                     u5291:
  3200  04D3  2CE9               	goto	l3306
  3201  04D4                     u5290:
  3202  04D4                     l3298:
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3205  04D4  30FF               	movlw	255
  3206  04D5  07BD               	addwf	sprintf@width^(0+128),f
  3207  04D6  1803               	skipnc
  3208  04D7  0ABE               	incf	(sprintf@width+1)^(0+128),f
  3209  04D8  30FF               	movlw	255
  3210  04D9  07BE               	addwf	(sprintf@width+1)^(0+128),f
  3211  04DA  2CE9               	goto	l3306
  3212  04DB                     l3300:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3215  04DB  3020               	movlw	32
  3216  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  3217  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  3218  04DE  00AD               	movwf	??_sprintf^(0+128)
  3219  04DF  0849               	movf	sprintf@sp^(0+128),w
  3220  04E0  0084               	movwf	4
  3221  04E1  082D               	movf	??_sprintf^(0+128),w
  3222  04E2  1783               	bsf	3,7	;select IRP bank2
  3223  04E3  0080               	movwf	0
  3224  04E4                     l3302:
  3225  04E4  3001               	movlw	1
  3226  04E5  00AD               	movwf	??_sprintf^(0+128)
  3227  04E6  082D               	movf	??_sprintf^(0+128),w
  3228  04E7  07C9               	addwf	sprintf@sp^(0+128),f
  3229  04E8  2CD4               	goto	l3298
  3230  04E9                     l3306:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3233  04E9  083E               	movf	(sprintf@width+1)^(0+128),w
  3234  04EA  3A80               	xorlw	128
  3235  04EB  00FF               	movwf	btemp+1
  3236  04EC  3080               	movlw	128
  3237  04ED  027F               	subwf	btemp+1,w
  3238  04EE  1D03               	skipz
  3239  04EF  2CF2               	goto	u5305
  3240  04F0  3001               	movlw	1
  3241  04F1  023D               	subwf	sprintf@width^(0+128),w
  3242  04F2                     u5305:
  3243  04F2  1803               	skipnc
  3244  04F3  2CF5               	goto	u5301
  3245  04F4  2CF6               	goto	u5300
  3246  04F5                     u5301:
  3247  04F5  2CDB               	goto	l3300
  3248  04F6                     u5300:
  3249  04F6                     l3308:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3252  04F6  3003               	movlw	3
  3253  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  3254  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  3255  04F9  053B               	andwf	sprintf@flag^(0+128),w
  3256  04FA  00AD               	movwf	??_sprintf^(0+128)
  3257  04FB  3000               	movlw	0
  3258  04FC  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3259  04FD  00AE               	movwf	(??_sprintf+1)^(0+128)
  3260  04FE  082D               	movf	??_sprintf^(0+128),w
  3261  04FF  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3262  0500  1903               	btfsc	3,2
  3263  0501  2D03               	goto	u5311
  3264  0502  2D04               	goto	u5310
  3265  0503                     u5311:
  3266  0503  2D76               	goto	l341
  3267  0504                     u5310:
  3268  0504                     l3310:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3271  0504  302D               	movlw	45
  3272  0505  00AD               	movwf	??_sprintf^(0+128)
  3273  0506  0849               	movf	sprintf@sp^(0+128),w
  3274  0507  0084               	movwf	4
  3275  0508  082D               	movf	??_sprintf^(0+128),w
  3276  0509  1783               	bsf	3,7	;select IRP bank2
  3277  050A  0080               	movwf	0
  3278  050B                     l3312:
  3279  050B  3001               	movlw	1
  3280  050C  00AD               	movwf	??_sprintf^(0+128)
  3281  050D  082D               	movf	??_sprintf^(0+128),w
  3282  050E  07C9               	addwf	sprintf@sp^(0+128),f
  3283  050F  2D76               	goto	l341
  3284  0510                     l3314:
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3287  0510  084C               	movf	sprintf@c^(0+128),w
  3288  0511  00AD               	movwf	??_sprintf^(0+128)
  3289  0512  3001               	movlw	1
  3290  0513                     u5325:
  3291  0513  1003               	clrc
  3292  0514  0DAD               	rlf	??_sprintf^(0+128),f
  3293  0515  3EFF               	addlw	-1
  3294  0516  1D03               	skipz
  3295  0517  2D13               	goto	u5325
  3296  0518  1003               	clrc
  3297  0519  0D2D               	rlf	??_sprintf^(0+128),w
  3298  051A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3299  051B  0084               	movwf	4
  3300  051C  120A  158A  200A  120A  118A  	fcall	stringdir
  3301  0521  00F0               	movwf	___lldiv@divisor
  3302  0522  120A  158A  200A  120A  118A  	fcall	stringdir
  3303  0527  00F1               	movwf	___lldiv@divisor+1
  3304  0528  120A  158A  200A  120A  118A  	fcall	stringdir
  3305  052D  00F2               	movwf	___lldiv@divisor+2
  3306  052E  120A  158A  200A  120A  118A  	fcall	stringdir
  3307  0533  00F3               	movwf	___lldiv@divisor+3
  3308  0534  083A               	movf	(sprintf@val+3)^(0+128),w
  3309  0535  00F7               	movwf	___lldiv@dividend+3
  3310  0536  0839               	movf	(sprintf@val+2)^(0+128),w
  3311  0537  00F6               	movwf	___lldiv@dividend+2
  3312  0538  0838               	movf	(sprintf@val+1)^(0+128),w
  3313  0539  00F5               	movwf	___lldiv@dividend+1
  3314  053A  0837               	movf	sprintf@val^(0+128),w
  3315  053B  00F4               	movwf	___lldiv@dividend
  3316  053C  120A  158A  20DA  120A  118A  	fcall	___lldiv
  3317  0541  0873               	movf	?___lldiv+3,w
  3318  0542  1683               	bsf	3,5	;RP0=1, select bank1
  3319  0543  1303               	bcf	3,6	;RP1=0, select bank1
  3320  0544  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3321  0545  0872               	movf	?___lldiv+2,w
  3322  0546  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3323  0547  0871               	movf	?___lldiv+1,w
  3324  0548  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3325  0549  0870               	movf	?___lldiv,w
  3326  054A  00BF               	movwf	sprintf@tmpval^(0+128)
  3327  054B                     l3316:
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3330  054B  3000               	movlw	0
  3331  054C  00F3               	movwf	___llmod@divisor+3
  3332  054D  3000               	movlw	0
  3333  054E  00F2               	movwf	___llmod@divisor+2
  3334  054F  3000               	movlw	0
  3335  0550  00F1               	movwf	___llmod@divisor+1
  3336  0551  300A               	movlw	10
  3337  0552  00F0               	movwf	___llmod@divisor
  3338  0553  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3339  0554  00F7               	movwf	___llmod@dividend+3
  3340  0555  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3341  0556  00F6               	movwf	___llmod@dividend+2
  3342  0557  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3343  0558  00F5               	movwf	___llmod@dividend+1
  3344  0559  083F               	movf	sprintf@tmpval^(0+128),w
  3345  055A  00F4               	movwf	___llmod@dividend
  3346  055B  160A  158A  25D4  120A  118A  	fcall	___llmod
  3347  0560  0873               	movf	?___llmod+3,w
  3348  0561  1683               	bsf	3,5	;RP0=1, select bank1
  3349  0562  1303               	bcf	3,6	;RP1=0, select bank1
  3350  0563  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3351  0564  0872               	movf	?___llmod+2,w
  3352  0565  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3353  0566  0871               	movf	?___llmod+1,w
  3354  0567  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3355  0568  0870               	movf	?___llmod,w
  3356  0569  00BF               	movwf	sprintf@tmpval^(0+128)
  3357  056A                     l3318:
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3360  056A  083F               	movf	sprintf@tmpval^(0+128),w
  3361  056B  3E30               	addlw	48
  3362  056C  00AD               	movwf	??_sprintf^(0+128)
  3363  056D  0849               	movf	sprintf@sp^(0+128),w
  3364  056E  0084               	movwf	4
  3365  056F  082D               	movf	??_sprintf^(0+128),w
  3366  0570  1783               	bsf	3,7	;select IRP bank2
  3367  0571  0080               	movwf	0
  3368  0572  3001               	movlw	1
  3369  0573  00AD               	movwf	??_sprintf^(0+128)
  3370  0574  082D               	movf	??_sprintf^(0+128),w
  3371  0575  07C9               	addwf	sprintf@sp^(0+128),f
  3372  0576                     l341:	
  3373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3374                           
  3375                           
  3376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3377  0576  3001               	movlw	1
  3378  0577  02CC               	subwf	sprintf@c^(0+128),f
  3379  0578  0A4C               	incf	sprintf@c^(0+128),w
  3380  0579  1D03               	btfss	3,2
  3381  057A  2D7C               	goto	u5331
  3382  057B  2D7D               	goto	u5330
  3383  057C                     u5331:
  3384  057C  2D10               	goto	l3314
  3385  057D                     u5330:
  3386  057D  2D91               	goto	l3326
  3387  057E                     l3320:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3390  057E  3030               	movlw	48
  3391  057F  1683               	bsf	3,5	;RP0=1, select bank1
  3392  0580  1303               	bcf	3,6	;RP1=0, select bank1
  3393  0581  00AD               	movwf	??_sprintf^(0+128)
  3394  0582  0849               	movf	sprintf@sp^(0+128),w
  3395  0583  0084               	movwf	4
  3396  0584  082D               	movf	??_sprintf^(0+128),w
  3397  0585  1783               	bsf	3,7	;select IRP bank2
  3398  0586  0080               	movwf	0
  3399  0587                     l3322:
  3400  0587  3001               	movlw	1
  3401  0588  00AD               	movwf	??_sprintf^(0+128)
  3402  0589  082D               	movf	??_sprintf^(0+128),w
  3403  058A  07C9               	addwf	sprintf@sp^(0+128),f
  3404  058B                     l3324:
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3407  058B  30FF               	movlw	255
  3408  058C  07C3               	addwf	sprintf@eexp^(0+128),f
  3409  058D  1803               	skipnc
  3410  058E  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  3411  058F  30FF               	movlw	255
  3412  0590  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  3413  0591                     l3326:
  3414                           
  3415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3416  0591  0844               	movf	(sprintf@eexp+1)^(0+128),w
  3417  0592  3A80               	xorlw	128
  3418  0593  00FF               	movwf	btemp+1
  3419  0594  3080               	movlw	128
  3420  0595  027F               	subwf	btemp+1,w
  3421  0596  1D03               	skipz
  3422  0597  2D9A               	goto	u5345
  3423  0598  3001               	movlw	1
  3424  0599  0243               	subwf	sprintf@eexp^(0+128),w
  3425  059A                     u5345:
  3426  059A  1803               	skipnc
  3427  059B  2D9D               	goto	u5341
  3428  059C  2D9E               	goto	u5340
  3429  059D                     u5341:
  3430  059D  2D7E               	goto	l3320
  3431  059E                     u5340:
  3432  059E                     l3328:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3435  059E  1683               	bsf	3,5	;RP0=1, select bank1
  3436  059F  1303               	bcf	3,6	;RP1=0, select bank1
  3437  05A0  084B               	movf	(sprintf@prec+1)^(0+128),w
  3438  05A1  3A80               	xorlw	128
  3439  05A2  00FF               	movwf	btemp+1
  3440  05A3  3080               	movlw	128
  3441  05A4  027F               	subwf	btemp+1,w
  3442  05A5  1D03               	skipz
  3443  05A6  2DA9               	goto	u5355
  3444  05A7  3009               	movlw	9
  3445  05A8  024A               	subwf	sprintf@prec^(0+128),w
  3446  05A9                     u5355:
  3447  05A9  1C03               	skipc
  3448  05AA  2DAC               	goto	u5351
  3449  05AB  2DAD               	goto	u5350
  3450  05AC                     u5351:
  3451  05AC  2DB4               	goto	l3332
  3452  05AD                     u5350:
  3453  05AD                     l3330:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3456  05AD  3008               	movlw	8
  3457  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  3458  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  3459  05B0  00AD               	movwf	??_sprintf^(0+128)
  3460  05B1  082D               	movf	??_sprintf^(0+128),w
  3461  05B2  00CC               	movwf	sprintf@c^(0+128)
  3462  05B3  2DBA               	goto	l348
  3463  05B4                     l3332:
  3464                           
  3465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3466  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  3467  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  3468  05B6  084A               	movf	sprintf@prec^(0+128),w
  3469  05B7  00AD               	movwf	??_sprintf^(0+128)
  3470  05B8  082D               	movf	??_sprintf^(0+128),w
  3471  05B9  00CC               	movwf	sprintf@c^(0+128)
  3472  05BA                     l348:
  3473                           
  3474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3475  05BA  084C               	movf	sprintf@c^(0+128),w
  3476  05BB  00AD               	movwf	??_sprintf^(0+128)
  3477  05BC  01AE               	clrf	(??_sprintf^(0+128)+1)
  3478  05BD  082D               	movf	??_sprintf^(0+128),w
  3479  05BE  02CA               	subwf	sprintf@prec^(0+128),f
  3480  05BF  082E               	movf	(??_sprintf+1)^(0+128),w
  3481  05C0  1C03               	skipc
  3482  05C1  03CB               	decf	(sprintf@prec+1)^(0+128),f
  3483  05C2  02CB               	subwf	(sprintf@prec+1)^(0+128),f
  3484  05C3                     l3334:
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3487  05C3  084C               	movf	sprintf@c^(0+128),w
  3488  05C4  1903               	btfsc	3,2
  3489  05C5  2DC7               	goto	u5361
  3490  05C6  2DC8               	goto	u5360
  3491  05C7                     u5361:
  3492  05C7  2DD3               	goto	l3340
  3493  05C8                     u5360:
  3494  05C8                     l3336:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3497  05C8  302E               	movlw	46
  3498  05C9  00AD               	movwf	??_sprintf^(0+128)
  3499  05CA  0849               	movf	sprintf@sp^(0+128),w
  3500  05CB  0084               	movwf	4
  3501  05CC  082D               	movf	??_sprintf^(0+128),w
  3502  05CD  1783               	bsf	3,7	;select IRP bank2
  3503  05CE  0080               	movwf	0
  3504  05CF                     l3338:
  3505  05CF  3001               	movlw	1
  3506  05D0  00AD               	movwf	??_sprintf^(0+128)
  3507  05D1  082D               	movf	??_sprintf^(0+128),w
  3508  05D2  07C9               	addwf	sprintf@sp^(0+128),f
  3509  05D3                     l3340:
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3512  05D3  084C               	movf	sprintf@c^(0+128),w
  3513  05D4  120A  158A  2140  120A  118A  	fcall	_scale
  3514  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3515  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3516  05DB  0841               	movf	?_scale+3,w
  3517  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  3518  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  3519  05DE  00B5               	movwf	(_sprintf$1188+3)^(0+128)
  3520  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3521  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  3522  05E1  0840               	movf	?_scale+2,w
  3523  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3524  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  3525  05E4  00B4               	movwf	(_sprintf$1188+2)^(0+128)
  3526  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3527  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3528  05E7  083F               	movf	?_scale+1,w
  3529  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  3530  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  3531  05EA  00B3               	movwf	(_sprintf$1188+1)^(0+128)
  3532  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3533  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3534  05ED  083E               	movf	?_scale,w
  3535  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3536  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3537  05F0  00B2               	movwf	_sprintf$1188^(0+128)
  3538  05F1                     l3342:
  3539                           
  3540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3541  05F1  0835               	movf	(_sprintf$1188+3)^(0+128),w
  3542  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  3543  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  3544  05F4  00AB               	movwf	___flmul@a+3
  3545  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  3546  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  3547  05F7  0834               	movf	(_sprintf$1188+2)^(0+128),w
  3548  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3549  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3550  05FA  00AA               	movwf	___flmul@a+2
  3551  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3552  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  3553  05FD  0833               	movf	(_sprintf$1188+1)^(0+128),w
  3554  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3555  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3556  0600  00A9               	movwf	___flmul@a+1
  3557  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3558  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3559  0603  0832               	movf	_sprintf$1188^(0+128),w
  3560  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3561  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3562  0606  00A8               	movwf	___flmul@a
  3563  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3564  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3565  0609  0848               	movf	(sprintf@fval+3)^(0+128),w
  3566  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3567  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3568  060C  00A7               	movwf	___flmul@b+3
  3569  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3570  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3571  060F  0847               	movf	(sprintf@fval+2)^(0+128),w
  3572  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3573  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3574  0612  00A6               	movwf	___flmul@b+2
  3575  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3576  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3577  0615  0846               	movf	(sprintf@fval+1)^(0+128),w
  3578  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3579  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3580  0618  00A5               	movwf	___flmul@b+1
  3581  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3582  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3583  061B  0845               	movf	sprintf@fval^(0+128),w
  3584  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3585  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3586  061E  00A4               	movwf	___flmul@b
  3587  061F  120A  158A  249F  120A  118A  	fcall	___flmul
  3588  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3589  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3590  0626  0827               	movf	?___flmul+3,w
  3591  0627  00D4               	movwf	___fltol@f1+3
  3592  0628  0826               	movf	?___flmul+2,w
  3593  0629  00D3               	movwf	___fltol@f1+2
  3594  062A  0825               	movf	?___flmul+1,w
  3595  062B  00D2               	movwf	___fltol@f1+1
  3596  062C  0824               	movf	?___flmul,w
  3597  062D  00D1               	movwf	___fltol@f1
  3598  062E  160A  158A  2628  120A  118A  	fcall	___fltol
  3599  0633  1283               	bcf	3,5	;RP0=0, select bank0
  3600  0634  1303               	bcf	3,6	;RP1=0, select bank0
  3601  0635  0854               	movf	?___fltol+3,w
  3602  0636  1683               	bsf	3,5	;RP0=1, select bank1
  3603  0637  1303               	bcf	3,6	;RP1=0, select bank1
  3604  0638  00BA               	movwf	(sprintf@val+3)^(0+128)
  3605  0639  1283               	bcf	3,5	;RP0=0, select bank0
  3606  063A  1303               	bcf	3,6	;RP1=0, select bank0
  3607  063B  0853               	movf	?___fltol+2,w
  3608  063C  1683               	bsf	3,5	;RP0=1, select bank1
  3609  063D  1303               	bcf	3,6	;RP1=0, select bank1
  3610  063E  00B9               	movwf	(sprintf@val+2)^(0+128)
  3611  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0641  0852               	movf	?___fltol+1,w
  3614  0642  1683               	bsf	3,5	;RP0=1, select bank1
  3615  0643  1303               	bcf	3,6	;RP1=0, select bank1
  3616  0644  00B8               	movwf	(sprintf@val+1)^(0+128)
  3617  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3619  0647  0851               	movf	?___fltol,w
  3620  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3621  0649  1303               	bcf	3,6	;RP1=0, select bank1
  3622  064A  00B7               	movwf	sprintf@val^(0+128)
  3623                           
  3624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3625  064B  2EED               	goto	l3352
  3626  064C                     l3344:
  3627                           
  3628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3629  064C  084C               	movf	sprintf@c^(0+128),w
  3630  064D  00AD               	movwf	??_sprintf^(0+128)
  3631  064E  3001               	movlw	1
  3632  064F                     u5375:
  3633  064F  1003               	clrc
  3634  0650  0DAD               	rlf	??_sprintf^(0+128),f
  3635  0651  3EFF               	addlw	-1
  3636  0652  1D03               	skipz
  3637  0653  2E4F               	goto	u5375
  3638  0654  1003               	clrc
  3639  0655  0D2D               	rlf	??_sprintf^(0+128),w
  3640  0656  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3641  0657  0084               	movwf	4
  3642  0658  120A  158A  200A  120A  118A  	fcall	stringdir
  3643  065D  00F0               	movwf	___lldiv@divisor
  3644  065E  120A  158A  200A  120A  118A  	fcall	stringdir
  3645  0663  00F1               	movwf	___lldiv@divisor+1
  3646  0664  120A  158A  200A  120A  118A  	fcall	stringdir
  3647  0669  00F2               	movwf	___lldiv@divisor+2
  3648  066A  120A  158A  200A  120A  118A  	fcall	stringdir
  3649  066F  00F3               	movwf	___lldiv@divisor+3
  3650  0670  083A               	movf	(sprintf@val+3)^(0+128),w
  3651  0671  00F7               	movwf	___lldiv@dividend+3
  3652  0672  0839               	movf	(sprintf@val+2)^(0+128),w
  3653  0673  00F6               	movwf	___lldiv@dividend+2
  3654  0674  0838               	movf	(sprintf@val+1)^(0+128),w
  3655  0675  00F5               	movwf	___lldiv@dividend+1
  3656  0676  0837               	movf	sprintf@val^(0+128),w
  3657  0677  00F4               	movwf	___lldiv@dividend
  3658  0678  120A  158A  20DA  120A  118A  	fcall	___lldiv
  3659  067D  0873               	movf	?___lldiv+3,w
  3660  067E  1683               	bsf	3,5	;RP0=1, select bank1
  3661  067F  1303               	bcf	3,6	;RP1=0, select bank1
  3662  0680  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3663  0681  0872               	movf	?___lldiv+2,w
  3664  0682  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3665  0683  0871               	movf	?___lldiv+1,w
  3666  0684  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3667  0685  0870               	movf	?___lldiv,w
  3668  0686  00BF               	movwf	sprintf@tmpval^(0+128)
  3669  0687                     l3346:
  3670                           
  3671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3672  0687  3000               	movlw	0
  3673  0688  00F3               	movwf	___llmod@divisor+3
  3674  0689  3000               	movlw	0
  3675  068A  00F2               	movwf	___llmod@divisor+2
  3676  068B  3000               	movlw	0
  3677  068C  00F1               	movwf	___llmod@divisor+1
  3678  068D  300A               	movlw	10
  3679  068E  00F0               	movwf	___llmod@divisor
  3680  068F  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3681  0690  00F7               	movwf	___llmod@dividend+3
  3682  0691  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3683  0692  00F6               	movwf	___llmod@dividend+2
  3684  0693  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3685  0694  00F5               	movwf	___llmod@dividend+1
  3686  0695  083F               	movf	sprintf@tmpval^(0+128),w
  3687  0696  00F4               	movwf	___llmod@dividend
  3688  0697  160A  158A  25D4  120A  118A  	fcall	___llmod
  3689  069C  0873               	movf	?___llmod+3,w
  3690  069D  1683               	bsf	3,5	;RP0=1, select bank1
  3691  069E  1303               	bcf	3,6	;RP1=0, select bank1
  3692  069F  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3693  06A0  0872               	movf	?___llmod+2,w
  3694  06A1  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3695  06A2  0871               	movf	?___llmod+1,w
  3696  06A3  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3697  06A4  0870               	movf	?___llmod,w
  3698  06A5  00BF               	movwf	sprintf@tmpval^(0+128)
  3699  06A6                     l3348:
  3700                           
  3701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3702  06A6  083F               	movf	sprintf@tmpval^(0+128),w
  3703  06A7  3E30               	addlw	48
  3704  06A8  00AD               	movwf	??_sprintf^(0+128)
  3705  06A9  0849               	movf	sprintf@sp^(0+128),w
  3706  06AA  0084               	movwf	4
  3707  06AB  082D               	movf	??_sprintf^(0+128),w
  3708  06AC  1783               	bsf	3,7	;select IRP bank2
  3709  06AD  0080               	movwf	0
  3710  06AE  3001               	movlw	1
  3711  06AF  00AD               	movwf	??_sprintf^(0+128)
  3712  06B0  082D               	movf	??_sprintf^(0+128),w
  3713  06B1  07C9               	addwf	sprintf@sp^(0+128),f
  3714  06B2                     l3350:
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3717  06B2  084C               	movf	sprintf@c^(0+128),w
  3718  06B3  00AD               	movwf	??_sprintf^(0+128)
  3719  06B4  3001               	movlw	1
  3720  06B5                     u5385:
  3721  06B5  1003               	clrc
  3722  06B6  0DAD               	rlf	??_sprintf^(0+128),f
  3723  06B7  3EFF               	addlw	-1
  3724  06B8  1D03               	skipz
  3725  06B9  2EB5               	goto	u5385
  3726  06BA  1003               	clrc
  3727  06BB  0D2D               	rlf	??_sprintf^(0+128),w
  3728  06BC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3729  06BD  0084               	movwf	4
  3730  06BE  120A  158A  200A  120A  118A  	fcall	stringdir
  3731  06C3  00F0               	movwf	___llmod@divisor
  3732  06C4  120A  158A  200A  120A  118A  	fcall	stringdir
  3733  06C9  00F1               	movwf	___llmod@divisor+1
  3734  06CA  120A  158A  200A  120A  118A  	fcall	stringdir
  3735  06CF  00F2               	movwf	___llmod@divisor+2
  3736  06D0  120A  158A  200A  120A  118A  	fcall	stringdir
  3737  06D5  00F3               	movwf	___llmod@divisor+3
  3738  06D6  083A               	movf	(sprintf@val+3)^(0+128),w
  3739  06D7  00F7               	movwf	___llmod@dividend+3
  3740  06D8  0839               	movf	(sprintf@val+2)^(0+128),w
  3741  06D9  00F6               	movwf	___llmod@dividend+2
  3742  06DA  0838               	movf	(sprintf@val+1)^(0+128),w
  3743  06DB  00F5               	movwf	___llmod@dividend+1
  3744  06DC  0837               	movf	sprintf@val^(0+128),w
  3745  06DD  00F4               	movwf	___llmod@dividend
  3746  06DE  160A  158A  25D4  120A  118A  	fcall	___llmod
  3747  06E3  0873               	movf	?___llmod+3,w
  3748  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  3749  06E5  1303               	bcf	3,6	;RP1=0, select bank1
  3750  06E6  00BA               	movwf	(sprintf@val+3)^(0+128)
  3751  06E7  0872               	movf	?___llmod+2,w
  3752  06E8  00B9               	movwf	(sprintf@val+2)^(0+128)
  3753  06E9  0871               	movf	?___llmod+1,w
  3754  06EA  00B8               	movwf	(sprintf@val+1)^(0+128)
  3755  06EB  0870               	movf	?___llmod,w
  3756  06EC  00B7               	movwf	sprintf@val^(0+128)
  3757  06ED                     l3352:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3760  06ED  3001               	movlw	1
  3761  06EE  02CC               	subwf	sprintf@c^(0+128),f
  3762  06EF  0A4C               	incf	sprintf@c^(0+128),w
  3763  06F0  1D03               	btfss	3,2
  3764  06F1  2EF3               	goto	u5391
  3765  06F2  2EF4               	goto	u5390
  3766  06F3                     u5391:
  3767  06F3  2E4C               	goto	l3344
  3768  06F4                     u5390:
  3769  06F4  2F06               	goto	l3360
  3770  06F5                     l3354:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3773  06F5  3030               	movlw	48
  3774  06F6  00AD               	movwf	??_sprintf^(0+128)
  3775  06F7  0849               	movf	sprintf@sp^(0+128),w
  3776  06F8  0084               	movwf	4
  3777  06F9  082D               	movf	??_sprintf^(0+128),w
  3778  06FA  1783               	bsf	3,7	;select IRP bank2
  3779  06FB  0080               	movwf	0
  3780  06FC                     l3356:
  3781  06FC  3001               	movlw	1
  3782  06FD  00AD               	movwf	??_sprintf^(0+128)
  3783  06FE  082D               	movf	??_sprintf^(0+128),w
  3784  06FF  07C9               	addwf	sprintf@sp^(0+128),f
  3785  0700                     l3358:
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3788  0700  30FF               	movlw	255
  3789  0701  07CA               	addwf	sprintf@prec^(0+128),f
  3790  0702  1803               	skipnc
  3791  0703  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  3792  0704  30FF               	movlw	255
  3793  0705  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  3794  0706                     l3360:
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3797  0706  084A               	movf	sprintf@prec^(0+128),w
  3798  0707  044B               	iorwf	(sprintf@prec+1)^(0+128),w
  3799  0708  1D03               	btfss	3,2
  3800  0709  2F0B               	goto	u5401
  3801  070A  2F0C               	goto	u5400
  3802  070B                     u5401:
  3803  070B  2EF5               	goto	l3354
  3804  070C                     u5400:
  3805  070C  2FD0               	goto	l3408
  3806  070D                     l3362:
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3809  070D  084A               	movf	sprintf@prec^(0+128),w
  3810  070E  044B               	iorwf	(sprintf@prec+1)^(0+128),w
  3811  070F  1D03               	btfss	3,2
  3812  0710  2F12               	goto	u5411
  3813  0711  2F13               	goto	u5410
  3814  0712                     u5411:
  3815  0712  2F21               	goto	l356
  3816  0713                     u5410:
  3817  0713                     l3364:
  3818  0713  083A               	movf	(sprintf@val+3)^(0+128),w
  3819  0714  0439               	iorwf	(sprintf@val+2)^(0+128),w
  3820  0715  0438               	iorwf	(sprintf@val+1)^(0+128),w
  3821  0716  0437               	iorwf	sprintf@val^(0+128),w
  3822  0717  1D03               	skipz
  3823  0718  2F1A               	goto	u5421
  3824  0719  2F1B               	goto	u5420
  3825  071A                     u5421:
  3826  071A  2F21               	goto	l356
  3827  071B                     u5420:
  3828  071B                     l3366:
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3831  071B  3001               	movlw	1
  3832  071C  07CA               	addwf	sprintf@prec^(0+128),f
  3833  071D  1803               	skipnc
  3834  071E  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  3835  071F  3000               	movlw	0
  3836  0720  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  3837  0721                     l356:
  3838                           
  3839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3840  0721  084B               	movf	(sprintf@prec+1)^(0+128),w
  3841  0722  3A80               	xorlw	128
  3842  0723  3C80               	sublw	128
  3843  0724  1D03               	skipz
  3844  0725  2F28               	goto	u5435
  3845  0726  084A               	movf	sprintf@prec^(0+128),w
  3846  0727  024C               	subwf	sprintf@c^(0+128),w
  3847  0728                     u5435:
  3848  0728  1803               	skipnc
  3849  0729  2F2B               	goto	u5431
  3850  072A  2F2C               	goto	u5430
  3851  072B                     u5431:
  3852  072B  2F33               	goto	l3370
  3853  072C                     u5430:
  3854  072C                     l3368:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3857  072C  1683               	bsf	3,5	;RP0=1, select bank1
  3858  072D  1303               	bcf	3,6	;RP1=0, select bank1
  3859  072E  084A               	movf	sprintf@prec^(0+128),w
  3860  072F  00AD               	movwf	??_sprintf^(0+128)
  3861  0730  082D               	movf	??_sprintf^(0+128),w
  3862  0731  00CC               	movwf	sprintf@c^(0+128)
  3863  0732  2F4B               	goto	l3374
  3864  0733                     l3370:
  3865  0733  1683               	bsf	3,5	;RP0=1, select bank1
  3866  0734  1303               	bcf	3,6	;RP1=0, select bank1
  3867  0735  084B               	movf	(sprintf@prec+1)^(0+128),w
  3868  0736  3A80               	xorlw	128
  3869  0737  00AD               	movwf	??_sprintf^(0+128)
  3870  0738  3080               	movlw	128
  3871  0739  022D               	subwf	??_sprintf^(0+128),w
  3872  073A  1D03               	skipz
  3873  073B  2F3E               	goto	u5445
  3874  073C  084C               	movf	sprintf@c^(0+128),w
  3875  073D  024A               	subwf	sprintf@prec^(0+128),w
  3876  073E                     u5445:
  3877  073E  1803               	skipnc
  3878  073F  2F41               	goto	u5441
  3879  0740  2F42               	goto	u5440
  3880  0741                     u5441:
  3881  0741  2F4B               	goto	l3374
  3882  0742                     u5440:
  3883  0742                     l3372:
  3884                           
  3885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3886  0742  1683               	bsf	3,5	;RP0=1, select bank1
  3887  0743  1303               	bcf	3,6	;RP1=0, select bank1
  3888  0744  084C               	movf	sprintf@c^(0+128),w
  3889  0745  00AD               	movwf	??_sprintf^(0+128)
  3890  0746  01AE               	clrf	(??_sprintf^(0+128)+1)
  3891  0747  082D               	movf	??_sprintf^(0+128),w
  3892  0748  00CA               	movwf	sprintf@prec^(0+128)
  3893  0749  082E               	movf	(??_sprintf+1)^(0+128),w
  3894  074A  00CB               	movwf	(sprintf@prec+1)^(0+128)
  3895  074B                     l3374:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3898  074B  1683               	bsf	3,5	;RP0=1, select bank1
  3899  074C  1303               	bcf	3,6	;RP1=0, select bank1
  3900  074D  083D               	movf	sprintf@width^(0+128),w
  3901  074E  043E               	iorwf	(sprintf@width+1)^(0+128),w
  3902  074F  1903               	btfsc	3,2
  3903  0750  2F52               	goto	u5451
  3904  0751  2F53               	goto	u5450
  3905  0752                     u5451:
  3906  0752  2F65               	goto	l3380
  3907  0753                     u5450:
  3908  0753                     l3376:
  3909  0753  3003               	movlw	3
  3910  0754  053B               	andwf	sprintf@flag^(0+128),w
  3911  0755  00AD               	movwf	??_sprintf^(0+128)
  3912  0756  3000               	movlw	0
  3913  0757  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3914  0758  00AE               	movwf	(??_sprintf+1)^(0+128)
  3915  0759  082D               	movf	??_sprintf^(0+128),w
  3916  075A  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3917  075B  1903               	btfsc	3,2
  3918  075C  2F5E               	goto	u5461
  3919  075D  2F5F               	goto	u5460
  3920  075E                     u5461:
  3921  075E  2F65               	goto	l3380
  3922  075F                     u5460:
  3923  075F                     l3378:
  3924                           
  3925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3926  075F  30FF               	movlw	255
  3927  0760  07BD               	addwf	sprintf@width^(0+128),f
  3928  0761  1803               	skipnc
  3929  0762  0ABE               	incf	(sprintf@width+1)^(0+128),f
  3930  0763  30FF               	movlw	255
  3931  0764  07BE               	addwf	(sprintf@width+1)^(0+128),f
  3932  0765                     l3380:
  3933                           
  3934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3935  0765  1F3C               	btfss	(sprintf@flag+1)^(0+128),6
  3936  0766  2F68               	goto	u5471
  3937  0767  2F69               	goto	u5470
  3938  0768                     u5471:
  3939  0768  2F84               	goto	l3388
  3940  0769                     u5470:
  3941  0769                     l3382:
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3944  0769  084B               	movf	(sprintf@prec+1)^(0+128),w
  3945  076A  3A80               	xorlw	128
  3946  076B  00AD               	movwf	??_sprintf^(0+128)
  3947  076C  083E               	movf	(sprintf@width+1)^(0+128),w
  3948  076D  3A80               	xorlw	128
  3949  076E  022D               	subwf	??_sprintf^(0+128),w
  3950  076F  1D03               	skipz
  3951  0770  2F73               	goto	u5485
  3952  0771  083D               	movf	sprintf@width^(0+128),w
  3953  0772  024A               	subwf	sprintf@prec^(0+128),w
  3954  0773                     u5485:
  3955  0773  1803               	skipnc
  3956  0774  2F76               	goto	u5481
  3957  0775  2F77               	goto	u5480
  3958  0776                     u5481:
  3959  0776  2F80               	goto	l3386
  3960  0777                     u5480:
  3961  0777                     l3384:
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3964  0777  1683               	bsf	3,5	;RP0=1, select bank1
  3965  0778  1303               	bcf	3,6	;RP1=0, select bank1
  3966  0779  084A               	movf	sprintf@prec^(0+128),w
  3967  077A  02BD               	subwf	sprintf@width^(0+128),f
  3968  077B  084B               	movf	(sprintf@prec+1)^(0+128),w
  3969  077C  1C03               	skipc
  3970  077D  03BE               	decf	(sprintf@width+1)^(0+128),f
  3971  077E  02BE               	subwf	(sprintf@width+1)^(0+128),f
  3972  077F  2F84               	goto	l3388
  3973  0780                     l3386:
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3976  0780  1683               	bsf	3,5	;RP0=1, select bank1
  3977  0781  1303               	bcf	3,6	;RP1=0, select bank1
  3978  0782  01BD               	clrf	sprintf@width^(0+128)
  3979  0783  01BE               	clrf	(sprintf@width+1)^(0+128)
  3980  0784                     l3388:
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3983  0784  083E               	movf	(sprintf@width+1)^(0+128),w
  3984  0785  3A80               	xorlw	128
  3985  0786  3C80               	sublw	128
  3986  0787  1D03               	skipz
  3987  0788  2F8B               	goto	u5495
  3988  0789  083D               	movf	sprintf@width^(0+128),w
  3989  078A  024C               	subwf	sprintf@c^(0+128),w
  3990  078B                     u5495:
  3991  078B  1803               	skipnc
  3992  078C  2F8E               	goto	u5491
  3993  078D  2F8F               	goto	u5490
  3994  078E                     u5491:
  3995  078E  2F9B               	goto	l3392
  3996  078F                     u5490:
  3997  078F                     l3390:
  3998                           
  3999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4000  078F  1683               	bsf	3,5	;RP0=1, select bank1
  4001  0790  1303               	bcf	3,6	;RP1=0, select bank1
  4002  0791  084C               	movf	sprintf@c^(0+128),w
  4003  0792  00AD               	movwf	??_sprintf^(0+128)
  4004  0793  01AE               	clrf	(??_sprintf^(0+128)+1)
  4005  0794  082D               	movf	??_sprintf^(0+128),w
  4006  0795  02BD               	subwf	sprintf@width^(0+128),f
  4007  0796  082E               	movf	(??_sprintf+1)^(0+128),w
  4008  0797  1C03               	skipc
  4009  0798  03BE               	decf	(sprintf@width+1)^(0+128),f
  4010  0799  02BE               	subwf	(sprintf@width+1)^(0+128),f
  4011  079A  2F9F               	goto	l3394
  4012  079B                     l3392:
  4013                           
  4014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4015  079B  1683               	bsf	3,5	;RP0=1, select bank1
  4016  079C  1303               	bcf	3,6	;RP1=0, select bank1
  4017  079D  01BD               	clrf	sprintf@width^(0+128)
  4018  079E  01BE               	clrf	(sprintf@width+1)^(0+128)
  4019  079F                     l3394:
  4020                           
  4021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4022  079F  083D               	movf	sprintf@width^(0+128),w
  4023  07A0  043E               	iorwf	(sprintf@width+1)^(0+128),w
  4024  07A1  1903               	btfsc	3,2
  4025  07A2  2FA4               	goto	u5501
  4026  07A3  2FA5               	goto	u5500
  4027  07A4                     u5501:
  4028  07A4  2FBC               	goto	l3402
  4029  07A5                     u5500:
  4030  07A5                     l3396:
  4031                           
  4032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4033  07A5  3020               	movlw	32
  4034  07A6  00AD               	movwf	??_sprintf^(0+128)
  4035  07A7  0849               	movf	sprintf@sp^(0+128),w
  4036  07A8  0084               	movwf	4
  4037  07A9  082D               	movf	??_sprintf^(0+128),w
  4038  07AA  1783               	bsf	3,7	;select IRP bank2
  4039  07AB  0080               	movwf	0
  4040  07AC                     l3398:
  4041  07AC  3001               	movlw	1
  4042  07AD  00AD               	movwf	??_sprintf^(0+128)
  4043  07AE  082D               	movf	??_sprintf^(0+128),w
  4044  07AF  07C9               	addwf	sprintf@sp^(0+128),f
  4045  07B0                     l3400:
  4046  07B0  30FF               	movlw	255
  4047  07B1  07BD               	addwf	sprintf@width^(0+128),f
  4048  07B2  1803               	skipnc
  4049  07B3  0ABE               	incf	(sprintf@width+1)^(0+128),f
  4050  07B4  30FF               	movlw	255
  4051  07B5  07BE               	addwf	(sprintf@width+1)^(0+128),f
  4052  07B6  083D               	movf	sprintf@width^(0+128),w
  4053  07B7  043E               	iorwf	(sprintf@width+1)^(0+128),w
  4054  07B8  1D03               	btfss	3,2
  4055  07B9  2FBB               	goto	u5511
  4056  07BA  2FBC               	goto	u5510
  4057  07BB                     u5511:
  4058  07BB  2FA5               	goto	l3396
  4059  07BC                     u5510:
  4060  07BC                     l3402:
  4061                           
  4062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4063  07BC  3003               	movlw	3
  4064  07BD  053B               	andwf	sprintf@flag^(0+128),w
  4065  07BE  00AD               	movwf	??_sprintf^(0+128)
  4066  07BF  3000               	movlw	0
  4067  07C0  053C               	andwf	(sprintf@flag+1)^(0+128),w
  4068  07C1  00AE               	movwf	(??_sprintf+1)^(0+128)
  4069  07C2  082D               	movf	??_sprintf^(0+128),w
  4070  07C3  042E               	iorwf	(??_sprintf^(0+128)+1),w
  4071  07C4  1903               	btfsc	3,2
  4072  07C5  2FC7               	goto	u5521
  4073  07C6  2FC8               	goto	u5520
  4074  07C7                     u5521:
  4075  07C7  2FD0               	goto	l3408
  4076  07C8                     u5520:
  4077  07C8                     l3404:
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4080  07C8  302D               	movlw	45
  4081  07C9  00AD               	movwf	??_sprintf^(0+128)
  4082  07CA  0849               	movf	sprintf@sp^(0+128),w
  4083  07CB  0084               	movwf	4
  4084  07CC  082D               	movf	??_sprintf^(0+128),w
  4085  07CD  1783               	bsf	3,7	;select IRP bank2
  4086  07CE  0080               	movwf	0
  4087  07CF  2881               	goto	l3164
  4088  07D0                     l3408:
  4089                           
  4090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4091  07D0  3001               	movlw	1
  4092  07D1  07A0               	addwf	sprintf@f^(0+128),f
  4093  07D2  30FF               	movlw	-1
  4094  07D3  0720               	addwf	sprintf@f^(0+128),w
  4095  07D4  0084               	movwf	4
  4096  07D5  120A  158A  200A  120A  118A  	fcall	stringdir
  4097  07DA  00AD               	movwf	??_sprintf^(0+128)
  4098  07DB  082D               	movf	??_sprintf^(0+128),w
  4099  07DC  00CC               	movwf	sprintf@c^(0+128)
  4100  07DD  084C               	movf	sprintf@c^(0+128),w
  4101  07DE  1D03               	btfss	3,2
  4102  07DF  2FE1               	goto	u5531
  4103  07E0  2FE2               	goto	u5530
  4104  07E1                     u5531:
  4105  07E1  2874               	goto	l3160
  4106  07E2                     u5530:
  4107  07E2                     l3410:
  4108                           
  4109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4110  07E2  0849               	movf	sprintf@sp^(0+128),w
  4111  07E3  0084               	movwf	4
  4112  07E4  1783               	bsf	3,7	;select IRP bank2
  4113  07E5  0180               	clrf	0
  4114  07E6                     l371:
  4115  07E6  0008               	return
  4116  07E7                     __end_of_sprintf:
  4117                           
  4118                           	psect	text2
  4119  0940                     __ptext2:	
  4120 ;; *************** function _scale *****************
  4121 ;; Defined at:
  4122 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  scl             1    wreg     char 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  scl             1   48[BANK0 ] char 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  4   30[BANK0 ] char 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4136 ;;      Params:         0       4       0       0       0
  4137 ;;      Locals:         0       5       0       0       0
  4138 ;;      Temps:          0      10       0       0       0
  4139 ;;      Totals:         0      19       0       0       0
  4140 ;;Total ram usage:       19 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    2
  4143 ;; This function calls:
  4144 ;;		___awdiv
  4145 ;;		___awmod
  4146 ;;		___flmul
  4147 ;; This function is called by:
  4148 ;;		_sprintf
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function _scale
  4154  0940                     _scale:
  4155                           
  4156                           ;incstack = 0
  4157                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4158                           ;scale@scl stored from wreg
  4159  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4160  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4161  0942  00D0               	movwf	scale@scl
  4162  0943                     l2782:
  4163                           
  4164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4165  0943  1FD0               	btfss	scale@scl,7
  4166  0944  2946               	goto	u4091
  4167  0945  2947               	goto	u4090
  4168  0946                     u4091:
  4169  0946  2AF4               	goto	l2804
  4170  0947                     u4090:
  4171  0947                     l2784:
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4174  0947  09D0               	comf	scale@scl,f
  4175  0948  0AD0               	incf	scale@scl,f
  4176  0949                     l2786:
  4177                           
  4178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4179  0949  0850               	movf	scale@scl,w
  4180  094A  3A80               	xorlw	128
  4181  094B  3E12               	addlw	-238
  4182  094C  1C03               	skipc
  4183  094D  294F               	goto	u4101
  4184  094E  2950               	goto	u4100
  4185  094F                     u4101:
  4186  094F  2A38               	goto	l2794
  4187  0950                     u4100:
  4188  0950                     l2788:
  4189                           
  4190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4191  0950  300A               	movlw	10
  4192  0951  00F7               	movwf	___awdiv@divisor
  4193  0952  3000               	movlw	0
  4194  0953  00F8               	movwf	___awdiv@divisor+1
  4195  0954  0850               	movf	scale@scl,w
  4196  0955  00F2               	movwf	___awmod@dividend
  4197  0956  01F3               	clrf	___awmod@dividend+1
  4198  0957  1BF2               	btfsc	___awmod@dividend,7
  4199  0958  03F3               	decf	___awmod@dividend+1,f
  4200  0959  3064               	movlw	100
  4201  095A  00F0               	movwf	___awmod@divisor
  4202  095B  3000               	movlw	0
  4203  095C  00F1               	movwf	___awmod@divisor+1
  4204  095D  160A  118A  2017  120A  158A  	fcall	___awmod
  4205  0962  0871               	movf	?___awmod+1,w
  4206  0963  00FA               	movwf	___awdiv@dividend+1
  4207  0964  0870               	movf	?___awmod,w
  4208  0965  00F9               	movwf	___awdiv@dividend
  4209  0966  120A  118A  2003  120A  158A  	fcall	___awdiv
  4210  096B  0877               	movf	?___awdiv,w
  4211  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4212  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4213  096E  00C2               	movwf	??_scale
  4214  096F  3001               	movlw	1
  4215  0970                     u4115:
  4216  0970  1003               	clrc
  4217  0971  0DC2               	rlf	??_scale,f
  4218  0972  3EFF               	addlw	-1
  4219  0973  1D03               	skipz
  4220  0974  2970               	goto	u4115
  4221  0975  1003               	clrc
  4222  0976  0D42               	rlf	??_scale,w
  4223  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4224  0978  0084               	movwf	4
  4225  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  4226  097E  00C3               	movwf	??_scale+1
  4227  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  4228  0984  00C4               	movwf	??_scale+2
  4229  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  4230  098A  00C5               	movwf	??_scale+3
  4231  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  4232  0990  00C6               	movwf	??_scale+4
  4233  0991  0846               	movf	??_scale+4,w
  4234  0992  00A7               	movwf	___flmul@b+3
  4235  0993  0845               	movf	??_scale+3,w
  4236  0994  00A6               	movwf	___flmul@b+2
  4237  0995  0844               	movf	??_scale+2,w
  4238  0996  00A5               	movwf	___flmul@b+1
  4239  0997  0843               	movf	??_scale+1,w
  4240  0998  00A4               	movwf	___flmul@b
  4241  0999  3064               	movlw	100
  4242  099A  00F7               	movwf	___awdiv@divisor
  4243  099B  3000               	movlw	0
  4244  099C  00F8               	movwf	___awdiv@divisor+1
  4245  099D  0850               	movf	scale@scl,w
  4246  099E  00F9               	movwf	___awdiv@dividend
  4247  099F  01FA               	clrf	___awdiv@dividend+1
  4248  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4249  09A1  03FA               	decf	___awdiv@dividend+1,f
  4250  09A2  120A  118A  2003  120A  158A  	fcall	___awdiv
  4251  09A7  0877               	movf	?___awdiv,w
  4252  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4253  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4254  09AA  00C7               	movwf	??_scale+5
  4255  09AB  3001               	movlw	1
  4256  09AC                     u4125:
  4257  09AC  1003               	clrc
  4258  09AD  0DC7               	rlf	??_scale+5,f
  4259  09AE  3EFF               	addlw	-1
  4260  09AF  1D03               	skipz
  4261  09B0  29AC               	goto	u4125
  4262  09B1  1003               	clrc
  4263  09B2  0D47               	rlf	??_scale+5,w
  4264  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4265  09B4  0084               	movwf	4
  4266  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  4267  09BA  00C8               	movwf	??_scale+6
  4268  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  4269  09C0  00C9               	movwf	??_scale+7
  4270  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  4271  09C6  00CA               	movwf	??_scale+8
  4272  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  4273  09CC  00CB               	movwf	??_scale+9
  4274  09CD  084B               	movf	??_scale+9,w
  4275  09CE  00AB               	movwf	___flmul@a+3
  4276  09CF  084A               	movf	??_scale+8,w
  4277  09D0  00AA               	movwf	___flmul@a+2
  4278  09D1  0849               	movf	??_scale+7,w
  4279  09D2  00A9               	movwf	___flmul@a+1
  4280  09D3  0848               	movf	??_scale+6,w
  4281  09D4  00A8               	movwf	___flmul@a
  4282  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4283  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4284  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4285  09DC  0827               	movf	?___flmul+3,w
  4286  09DD  00CF               	movwf	_scale$1187+3
  4287  09DE  0826               	movf	?___flmul+2,w
  4288  09DF  00CE               	movwf	_scale$1187+2
  4289  09E0  0825               	movf	?___flmul+1,w
  4290  09E1  00CD               	movwf	_scale$1187+1
  4291  09E2  0824               	movf	?___flmul,w
  4292  09E3  00CC               	movwf	_scale$1187
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4295  09E4  300A               	movlw	10
  4296  09E5  00F0               	movwf	___awmod@divisor
  4297  09E6  3000               	movlw	0
  4298  09E7  00F1               	movwf	___awmod@divisor+1
  4299  09E8  0850               	movf	scale@scl,w
  4300  09E9  00F2               	movwf	___awmod@dividend
  4301  09EA  01F3               	clrf	___awmod@dividend+1
  4302  09EB  1BF2               	btfsc	___awmod@dividend,7
  4303  09EC  03F3               	decf	___awmod@dividend+1,f
  4304  09ED  160A  118A  2017  120A  158A  	fcall	___awmod
  4305  09F2  0870               	movf	?___awmod,w
  4306  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4307  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4308  09F5  00C2               	movwf	??_scale
  4309  09F6  3001               	movlw	1
  4310  09F7                     u4135:
  4311  09F7  1003               	clrc
  4312  09F8  0DC2               	rlf	??_scale,f
  4313  09F9  3EFF               	addlw	-1
  4314  09FA  1D03               	skipz
  4315  09FB  29F7               	goto	u4135
  4316  09FC  1003               	clrc
  4317  09FD  0D42               	rlf	??_scale,w
  4318  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4319  09FF  0084               	movwf	4
  4320  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  4321  0A05  00C3               	movwf	??_scale+1
  4322  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  4323  0A0B  00C4               	movwf	??_scale+2
  4324  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4325  0A11  00C5               	movwf	??_scale+3
  4326  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  4327  0A17  00C6               	movwf	??_scale+4
  4328  0A18  0846               	movf	??_scale+4,w
  4329  0A19  00A7               	movwf	___flmul@b+3
  4330  0A1A  0845               	movf	??_scale+3,w
  4331  0A1B  00A6               	movwf	___flmul@b+2
  4332  0A1C  0844               	movf	??_scale+2,w
  4333  0A1D  00A5               	movwf	___flmul@b+1
  4334  0A1E  0843               	movf	??_scale+1,w
  4335  0A1F  00A4               	movwf	___flmul@b
  4336  0A20  084F               	movf	_scale$1187+3,w
  4337  0A21  00AB               	movwf	___flmul@a+3
  4338  0A22  084E               	movf	_scale$1187+2,w
  4339  0A23  00AA               	movwf	___flmul@a+2
  4340  0A24  084D               	movf	_scale$1187+1,w
  4341  0A25  00A9               	movwf	___flmul@a+1
  4342  0A26  084C               	movf	_scale$1187,w
  4343  0A27  00A8               	movwf	___flmul@a
  4344  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4345  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4346  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4347  0A2F  0827               	movf	?___flmul+3,w
  4348  0A30  00C1               	movwf	?_scale+3
  4349  0A31  0826               	movf	?___flmul+2,w
  4350  0A32  00C0               	movwf	?_scale+2
  4351  0A33  0825               	movf	?___flmul+1,w
  4352  0A34  00BF               	movwf	?_scale+1
  4353  0A35  0824               	movf	?___flmul,w
  4354  0A36  00BE               	movwf	?_scale
  4355  0A37  2C9E               	goto	l288
  4356  0A38                     l2794:
  4357  0A38  0850               	movf	scale@scl,w
  4358  0A39  3A80               	xorlw	128
  4359  0A3A  3E75               	addlw	-139
  4360  0A3B  1C03               	skipc
  4361  0A3C  2A3E               	goto	u4141
  4362  0A3D  2A3F               	goto	u4140
  4363  0A3E                     u4141:
  4364  0A3E  2AC7               	goto	l2800
  4365  0A3F                     u4140:
  4366  0A3F                     l2796:
  4367                           
  4368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4369  0A3F  300A               	movlw	10
  4370  0A40  00F0               	movwf	___awmod@divisor
  4371  0A41  3000               	movlw	0
  4372  0A42  00F1               	movwf	___awmod@divisor+1
  4373  0A43  0850               	movf	scale@scl,w
  4374  0A44  00F2               	movwf	___awmod@dividend
  4375  0A45  01F3               	clrf	___awmod@dividend+1
  4376  0A46  1BF2               	btfsc	___awmod@dividend,7
  4377  0A47  03F3               	decf	___awmod@dividend+1,f
  4378  0A48  160A  118A  2017  120A  158A  	fcall	___awmod
  4379  0A4D  0870               	movf	?___awmod,w
  4380  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4381  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4382  0A50  00C2               	movwf	??_scale
  4383  0A51  3001               	movlw	1
  4384  0A52                     u4155:
  4385  0A52  1003               	clrc
  4386  0A53  0DC2               	rlf	??_scale,f
  4387  0A54  3EFF               	addlw	-1
  4388  0A55  1D03               	skipz
  4389  0A56  2A52               	goto	u4155
  4390  0A57  1003               	clrc
  4391  0A58  0D42               	rlf	??_scale,w
  4392  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4393  0A5A  0084               	movwf	4
  4394  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  4395  0A60  00C3               	movwf	??_scale+1
  4396  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  4397  0A66  00C4               	movwf	??_scale+2
  4398  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  4399  0A6C  00C5               	movwf	??_scale+3
  4400  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4401  0A72  00C6               	movwf	??_scale+4
  4402  0A73  0846               	movf	??_scale+4,w
  4403  0A74  00A7               	movwf	___flmul@b+3
  4404  0A75  0845               	movf	??_scale+3,w
  4405  0A76  00A6               	movwf	___flmul@b+2
  4406  0A77  0844               	movf	??_scale+2,w
  4407  0A78  00A5               	movwf	___flmul@b+1
  4408  0A79  0843               	movf	??_scale+1,w
  4409  0A7A  00A4               	movwf	___flmul@b
  4410  0A7B  300A               	movlw	10
  4411  0A7C  00F7               	movwf	___awdiv@divisor
  4412  0A7D  3000               	movlw	0
  4413  0A7E  00F8               	movwf	___awdiv@divisor+1
  4414  0A7F  0850               	movf	scale@scl,w
  4415  0A80  00F9               	movwf	___awdiv@dividend
  4416  0A81  01FA               	clrf	___awdiv@dividend+1
  4417  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4418  0A83  03FA               	decf	___awdiv@dividend+1,f
  4419  0A84  120A  118A  2003  120A  158A  	fcall	___awdiv
  4420  0A89  0877               	movf	?___awdiv,w
  4421  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0A8C  00C7               	movwf	??_scale+5
  4424  0A8D  3001               	movlw	1
  4425  0A8E                     u4165:
  4426  0A8E  1003               	clrc
  4427  0A8F  0DC7               	rlf	??_scale+5,f
  4428  0A90  3EFF               	addlw	-1
  4429  0A91  1D03               	skipz
  4430  0A92  2A8E               	goto	u4165
  4431  0A93  1003               	clrc
  4432  0A94  0D47               	rlf	??_scale+5,w
  4433  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4434  0A96  0084               	movwf	4
  4435  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  4436  0A9C  00C8               	movwf	??_scale+6
  4437  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4438  0AA2  00C9               	movwf	??_scale+7
  4439  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4440  0AA8  00CA               	movwf	??_scale+8
  4441  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4442  0AAE  00CB               	movwf	??_scale+9
  4443  0AAF  084B               	movf	??_scale+9,w
  4444  0AB0  00AB               	movwf	___flmul@a+3
  4445  0AB1  084A               	movf	??_scale+8,w
  4446  0AB2  00AA               	movwf	___flmul@a+2
  4447  0AB3  0849               	movf	??_scale+7,w
  4448  0AB4  00A9               	movwf	___flmul@a+1
  4449  0AB5  0848               	movf	??_scale+6,w
  4450  0AB6  00A8               	movwf	___flmul@a
  4451  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4452  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4453  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4454  0ABE  0827               	movf	?___flmul+3,w
  4455  0ABF  00C1               	movwf	?_scale+3
  4456  0AC0  0826               	movf	?___flmul+2,w
  4457  0AC1  00C0               	movwf	?_scale+2
  4458  0AC2  0825               	movf	?___flmul+1,w
  4459  0AC3  00BF               	movwf	?_scale+1
  4460  0AC4  0824               	movf	?___flmul,w
  4461  0AC5  00BE               	movwf	?_scale
  4462  0AC6  2C9E               	goto	l288
  4463  0AC7                     l2800:
  4464                           
  4465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4466  0AC7  0850               	movf	scale@scl,w
  4467  0AC8  00C2               	movwf	??_scale
  4468  0AC9  3001               	movlw	1
  4469  0ACA                     u4175:
  4470  0ACA  1003               	clrc
  4471  0ACB  0DC2               	rlf	??_scale,f
  4472  0ACC  3EFF               	addlw	-1
  4473  0ACD  1D03               	skipz
  4474  0ACE  2ACA               	goto	u4175
  4475  0ACF  1003               	clrc
  4476  0AD0  0D42               	rlf	??_scale,w
  4477  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4478  0AD2  0084               	movwf	4
  4479  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  4480  0AD8  00C3               	movwf	??_scale+1
  4481  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  4482  0ADE  00C4               	movwf	??_scale+2
  4483  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  4484  0AE4  00C5               	movwf	??_scale+3
  4485  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4486  0AEA  00C6               	movwf	??_scale+4
  4487  0AEB  0846               	movf	??_scale+4,w
  4488  0AEC  00C1               	movwf	?_scale+3
  4489  0AED  0845               	movf	??_scale+3,w
  4490  0AEE  00C0               	movwf	?_scale+2
  4491  0AEF  0844               	movf	??_scale+2,w
  4492  0AF0  00BF               	movwf	?_scale+1
  4493  0AF1  0843               	movf	??_scale+1,w
  4494  0AF2  00BE               	movwf	?_scale
  4495  0AF3  2C9E               	goto	l288
  4496  0AF4                     l2804:
  4497                           
  4498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4499  0AF4  0850               	movf	scale@scl,w
  4500  0AF5  3A80               	xorlw	128
  4501  0AF6  3E12               	addlw	-238
  4502  0AF7  1C03               	skipc
  4503  0AF8  2AFA               	goto	u4181
  4504  0AF9  2AFB               	goto	u4180
  4505  0AFA                     u4181:
  4506  0AFA  2BE3               	goto	l2812
  4507  0AFB                     u4180:
  4508  0AFB                     l2806:
  4509                           
  4510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4511  0AFB  300A               	movlw	10
  4512  0AFC  00F7               	movwf	___awdiv@divisor
  4513  0AFD  3000               	movlw	0
  4514  0AFE  00F8               	movwf	___awdiv@divisor+1
  4515  0AFF  0850               	movf	scale@scl,w
  4516  0B00  00F2               	movwf	___awmod@dividend
  4517  0B01  01F3               	clrf	___awmod@dividend+1
  4518  0B02  1BF2               	btfsc	___awmod@dividend,7
  4519  0B03  03F3               	decf	___awmod@dividend+1,f
  4520  0B04  3064               	movlw	100
  4521  0B05  00F0               	movwf	___awmod@divisor
  4522  0B06  3000               	movlw	0
  4523  0B07  00F1               	movwf	___awmod@divisor+1
  4524  0B08  160A  118A  2017  120A  158A  	fcall	___awmod
  4525  0B0D  0871               	movf	?___awmod+1,w
  4526  0B0E  00FA               	movwf	___awdiv@dividend+1
  4527  0B0F  0870               	movf	?___awmod,w
  4528  0B10  00F9               	movwf	___awdiv@dividend
  4529  0B11  120A  118A  2003  120A  158A  	fcall	___awdiv
  4530  0B16  0877               	movf	?___awdiv,w
  4531  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4532  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4533  0B19  00C2               	movwf	??_scale
  4534  0B1A  3001               	movlw	1
  4535  0B1B                     u4195:
  4536  0B1B  1003               	clrc
  4537  0B1C  0DC2               	rlf	??_scale,f
  4538  0B1D  3EFF               	addlw	-1
  4539  0B1E  1D03               	skipz
  4540  0B1F  2B1B               	goto	u4195
  4541  0B20  1003               	clrc
  4542  0B21  0D42               	rlf	??_scale,w
  4543  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4544  0B23  0084               	movwf	4
  4545  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  4546  0B29  00C3               	movwf	??_scale+1
  4547  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  4548  0B2F  00C4               	movwf	??_scale+2
  4549  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  4550  0B35  00C5               	movwf	??_scale+3
  4551  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  4552  0B3B  00C6               	movwf	??_scale+4
  4553  0B3C  0846               	movf	??_scale+4,w
  4554  0B3D  00A7               	movwf	___flmul@b+3
  4555  0B3E  0845               	movf	??_scale+3,w
  4556  0B3F  00A6               	movwf	___flmul@b+2
  4557  0B40  0844               	movf	??_scale+2,w
  4558  0B41  00A5               	movwf	___flmul@b+1
  4559  0B42  0843               	movf	??_scale+1,w
  4560  0B43  00A4               	movwf	___flmul@b
  4561  0B44  3064               	movlw	100
  4562  0B45  00F7               	movwf	___awdiv@divisor
  4563  0B46  3000               	movlw	0
  4564  0B47  00F8               	movwf	___awdiv@divisor+1
  4565  0B48  0850               	movf	scale@scl,w
  4566  0B49  00F9               	movwf	___awdiv@dividend
  4567  0B4A  01FA               	clrf	___awdiv@dividend+1
  4568  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4569  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4570  0B4D  120A  118A  2003  120A  158A  	fcall	___awdiv
  4571  0B52  0877               	movf	?___awdiv,w
  4572  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4573  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4574  0B55  00C7               	movwf	??_scale+5
  4575  0B56  3001               	movlw	1
  4576  0B57                     u4205:
  4577  0B57  1003               	clrc
  4578  0B58  0DC7               	rlf	??_scale+5,f
  4579  0B59  3EFF               	addlw	-1
  4580  0B5A  1D03               	skipz
  4581  0B5B  2B57               	goto	u4205
  4582  0B5C  1003               	clrc
  4583  0B5D  0D47               	rlf	??_scale+5,w
  4584  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4585  0B5F  0084               	movwf	4
  4586  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  4587  0B65  00C8               	movwf	??_scale+6
  4588  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  4589  0B6B  00C9               	movwf	??_scale+7
  4590  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  4591  0B71  00CA               	movwf	??_scale+8
  4592  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  4593  0B77  00CB               	movwf	??_scale+9
  4594  0B78  084B               	movf	??_scale+9,w
  4595  0B79  00AB               	movwf	___flmul@a+3
  4596  0B7A  084A               	movf	??_scale+8,w
  4597  0B7B  00AA               	movwf	___flmul@a+2
  4598  0B7C  0849               	movf	??_scale+7,w
  4599  0B7D  00A9               	movwf	___flmul@a+1
  4600  0B7E  0848               	movf	??_scale+6,w
  4601  0B7F  00A8               	movwf	___flmul@a
  4602  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4603  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0B87  0827               	movf	?___flmul+3,w
  4606  0B88  00CF               	movwf	_scale$1187+3
  4607  0B89  0826               	movf	?___flmul+2,w
  4608  0B8A  00CE               	movwf	_scale$1187+2
  4609  0B8B  0825               	movf	?___flmul+1,w
  4610  0B8C  00CD               	movwf	_scale$1187+1
  4611  0B8D  0824               	movf	?___flmul,w
  4612  0B8E  00CC               	movwf	_scale$1187
  4613                           
  4614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4615  0B8F  300A               	movlw	10
  4616  0B90  00F0               	movwf	___awmod@divisor
  4617  0B91  3000               	movlw	0
  4618  0B92  00F1               	movwf	___awmod@divisor+1
  4619  0B93  0850               	movf	scale@scl,w
  4620  0B94  00F2               	movwf	___awmod@dividend
  4621  0B95  01F3               	clrf	___awmod@dividend+1
  4622  0B96  1BF2               	btfsc	___awmod@dividend,7
  4623  0B97  03F3               	decf	___awmod@dividend+1,f
  4624  0B98  160A  118A  2017  120A  158A  	fcall	___awmod
  4625  0B9D  0870               	movf	?___awmod,w
  4626  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4627  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4628  0BA0  00C2               	movwf	??_scale
  4629  0BA1  3001               	movlw	1
  4630  0BA2                     u4215:
  4631  0BA2  1003               	clrc
  4632  0BA3  0DC2               	rlf	??_scale,f
  4633  0BA4  3EFF               	addlw	-1
  4634  0BA5  1D03               	skipz
  4635  0BA6  2BA2               	goto	u4215
  4636  0BA7  1003               	clrc
  4637  0BA8  0D42               	rlf	??_scale,w
  4638  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4639  0BAA  0084               	movwf	4
  4640  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  4641  0BB0  00C3               	movwf	??_scale+1
  4642  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  4643  0BB6  00C4               	movwf	??_scale+2
  4644  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  4645  0BBC  00C5               	movwf	??_scale+3
  4646  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  4647  0BC2  00C6               	movwf	??_scale+4
  4648  0BC3  0846               	movf	??_scale+4,w
  4649  0BC4  00A7               	movwf	___flmul@b+3
  4650  0BC5  0845               	movf	??_scale+3,w
  4651  0BC6  00A6               	movwf	___flmul@b+2
  4652  0BC7  0844               	movf	??_scale+2,w
  4653  0BC8  00A5               	movwf	___flmul@b+1
  4654  0BC9  0843               	movf	??_scale+1,w
  4655  0BCA  00A4               	movwf	___flmul@b
  4656  0BCB  084F               	movf	_scale$1187+3,w
  4657  0BCC  00AB               	movwf	___flmul@a+3
  4658  0BCD  084E               	movf	_scale$1187+2,w
  4659  0BCE  00AA               	movwf	___flmul@a+2
  4660  0BCF  084D               	movf	_scale$1187+1,w
  4661  0BD0  00A9               	movwf	___flmul@a+1
  4662  0BD1  084C               	movf	_scale$1187,w
  4663  0BD2  00A8               	movwf	___flmul@a
  4664  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4665  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0BDA  0827               	movf	?___flmul+3,w
  4668  0BDB  00C1               	movwf	?_scale+3
  4669  0BDC  0826               	movf	?___flmul+2,w
  4670  0BDD  00C0               	movwf	?_scale+2
  4671  0BDE  0825               	movf	?___flmul+1,w
  4672  0BDF  00BF               	movwf	?_scale+1
  4673  0BE0  0824               	movf	?___flmul,w
  4674  0BE1  00BE               	movwf	?_scale
  4675  0BE2  2C9E               	goto	l288
  4676  0BE3                     l2812:
  4677  0BE3  0850               	movf	scale@scl,w
  4678  0BE4  3A80               	xorlw	128
  4679  0BE5  3E75               	addlw	-139
  4680  0BE6  1C03               	skipc
  4681  0BE7  2BE9               	goto	u4221
  4682  0BE8  2BEA               	goto	u4220
  4683  0BE9                     u4221:
  4684  0BE9  2C72               	goto	l2818
  4685  0BEA                     u4220:
  4686  0BEA                     l2814:
  4687                           
  4688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4689  0BEA  300A               	movlw	10
  4690  0BEB  00F0               	movwf	___awmod@divisor
  4691  0BEC  3000               	movlw	0
  4692  0BED  00F1               	movwf	___awmod@divisor+1
  4693  0BEE  0850               	movf	scale@scl,w
  4694  0BEF  00F2               	movwf	___awmod@dividend
  4695  0BF0  01F3               	clrf	___awmod@dividend+1
  4696  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4697  0BF2  03F3               	decf	___awmod@dividend+1,f
  4698  0BF3  160A  118A  2017  120A  158A  	fcall	___awmod
  4699  0BF8  0870               	movf	?___awmod,w
  4700  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4701  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4702  0BFB  00C2               	movwf	??_scale
  4703  0BFC  3001               	movlw	1
  4704  0BFD                     u4235:
  4705  0BFD  1003               	clrc
  4706  0BFE  0DC2               	rlf	??_scale,f
  4707  0BFF  3EFF               	addlw	-1
  4708  0C00  1D03               	skipz
  4709  0C01  2BFD               	goto	u4235
  4710  0C02  1003               	clrc
  4711  0C03  0D42               	rlf	??_scale,w
  4712  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4713  0C05  0084               	movwf	4
  4714  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  4715  0C0B  00C3               	movwf	??_scale+1
  4716  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4717  0C11  00C4               	movwf	??_scale+2
  4718  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  4719  0C17  00C5               	movwf	??_scale+3
  4720  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  4721  0C1D  00C6               	movwf	??_scale+4
  4722  0C1E  0846               	movf	??_scale+4,w
  4723  0C1F  00A7               	movwf	___flmul@b+3
  4724  0C20  0845               	movf	??_scale+3,w
  4725  0C21  00A6               	movwf	___flmul@b+2
  4726  0C22  0844               	movf	??_scale+2,w
  4727  0C23  00A5               	movwf	___flmul@b+1
  4728  0C24  0843               	movf	??_scale+1,w
  4729  0C25  00A4               	movwf	___flmul@b
  4730  0C26  300A               	movlw	10
  4731  0C27  00F7               	movwf	___awdiv@divisor
  4732  0C28  3000               	movlw	0
  4733  0C29  00F8               	movwf	___awdiv@divisor+1
  4734  0C2A  0850               	movf	scale@scl,w
  4735  0C2B  00F9               	movwf	___awdiv@dividend
  4736  0C2C  01FA               	clrf	___awdiv@dividend+1
  4737  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4738  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4739  0C2F  120A  118A  2003  120A  158A  	fcall	___awdiv
  4740  0C34  0877               	movf	?___awdiv,w
  4741  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0C37  00C7               	movwf	??_scale+5
  4744  0C38  3001               	movlw	1
  4745  0C39                     u4245:
  4746  0C39  1003               	clrc
  4747  0C3A  0DC7               	rlf	??_scale+5,f
  4748  0C3B  3EFF               	addlw	-1
  4749  0C3C  1D03               	skipz
  4750  0C3D  2C39               	goto	u4245
  4751  0C3E  1003               	clrc
  4752  0C3F  0D47               	rlf	??_scale+5,w
  4753  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4754  0C41  0084               	movwf	4
  4755  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  4756  0C47  00C8               	movwf	??_scale+6
  4757  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  4758  0C4D  00C9               	movwf	??_scale+7
  4759  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  4760  0C53  00CA               	movwf	??_scale+8
  4761  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  4762  0C59  00CB               	movwf	??_scale+9
  4763  0C5A  084B               	movf	??_scale+9,w
  4764  0C5B  00AB               	movwf	___flmul@a+3
  4765  0C5C  084A               	movf	??_scale+8,w
  4766  0C5D  00AA               	movwf	___flmul@a+2
  4767  0C5E  0849               	movf	??_scale+7,w
  4768  0C5F  00A9               	movwf	___flmul@a+1
  4769  0C60  0848               	movf	??_scale+6,w
  4770  0C61  00A8               	movwf	___flmul@a
  4771  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4772  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4773  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4774  0C69  0827               	movf	?___flmul+3,w
  4775  0C6A  00C1               	movwf	?_scale+3
  4776  0C6B  0826               	movf	?___flmul+2,w
  4777  0C6C  00C0               	movwf	?_scale+2
  4778  0C6D  0825               	movf	?___flmul+1,w
  4779  0C6E  00BF               	movwf	?_scale+1
  4780  0C6F  0824               	movf	?___flmul,w
  4781  0C70  00BE               	movwf	?_scale
  4782  0C71  2C9E               	goto	l288
  4783  0C72                     l2818:
  4784                           
  4785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4786  0C72  0850               	movf	scale@scl,w
  4787  0C73  00C2               	movwf	??_scale
  4788  0C74  3001               	movlw	1
  4789  0C75                     u4255:
  4790  0C75  1003               	clrc
  4791  0C76  0DC2               	rlf	??_scale,f
  4792  0C77  3EFF               	addlw	-1
  4793  0C78  1D03               	skipz
  4794  0C79  2C75               	goto	u4255
  4795  0C7A  1003               	clrc
  4796  0C7B  0D42               	rlf	??_scale,w
  4797  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4798  0C7D  0084               	movwf	4
  4799  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  4800  0C83  00C3               	movwf	??_scale+1
  4801  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  4802  0C89  00C4               	movwf	??_scale+2
  4803  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  4804  0C8F  00C5               	movwf	??_scale+3
  4805  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  4806  0C95  00C6               	movwf	??_scale+4
  4807  0C96  0846               	movf	??_scale+4,w
  4808  0C97  00C1               	movwf	?_scale+3
  4809  0C98  0845               	movf	??_scale+3,w
  4810  0C99  00C0               	movwf	?_scale+2
  4811  0C9A  0844               	movf	??_scale+2,w
  4812  0C9B  00BF               	movwf	?_scale+1
  4813  0C9C  0843               	movf	??_scale+1,w
  4814  0C9D  00BE               	movwf	?_scale
  4815  0C9E                     l288:
  4816  0C9E  0008               	return
  4817  0C9F                     __end_of_scale:
  4818                           
  4819                           	psect	text3
  4820  1017                     __ptext3:	
  4821 ;; *************** function ___awmod *****************
  4822 ;; Defined at:
  4823 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  divisor         2    0[COMMON] int 
  4826 ;;  dividend        2    2[COMMON] int 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  sign            1    6[COMMON] unsigned char 
  4829 ;;  counter         1    5[COMMON] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  2    0[COMMON] int 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4839 ;;      Params:         4       0       0       0       0
  4840 ;;      Locals:         2       0       0       0       0
  4841 ;;      Temps:          1       0       0       0       0
  4842 ;;      Totals:         7       0       0       0       0
  4843 ;;Total ram usage:        7 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_scale
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           
  4853                           ;psect for function ___awmod
  4854  1017                     ___awmod:
  4855  1017                     l2310:	
  4856                           ;incstack = 0
  4857                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4858                           
  4859  1017  01F6               	clrf	___awmod@sign
  4860  1018                     l2312:
  4861  1018  1FF3               	btfss	___awmod@dividend+1,7
  4862  1019  281B               	goto	u2951
  4863  101A  281C               	goto	u2950
  4864  101B                     u2951:
  4865  101B  2823               	goto	l2318
  4866  101C                     u2950:
  4867  101C                     l2314:
  4868  101C  09F2               	comf	___awmod@dividend,f
  4869  101D  09F3               	comf	___awmod@dividend+1,f
  4870  101E  0AF2               	incf	___awmod@dividend,f
  4871  101F  1903               	skipnz
  4872  1020  0AF3               	incf	___awmod@dividend+1,f
  4873  1021                     l2316:
  4874  1021  01F6               	clrf	___awmod@sign
  4875  1022  0AF6               	incf	___awmod@sign,f
  4876  1023                     l2318:
  4877  1023  1FF1               	btfss	___awmod@divisor+1,7
  4878  1024  2826               	goto	u2961
  4879  1025  2827               	goto	u2960
  4880  1026                     u2961:
  4881  1026  282C               	goto	l2322
  4882  1027                     u2960:
  4883  1027                     l2320:
  4884  1027  09F0               	comf	___awmod@divisor,f
  4885  1028  09F1               	comf	___awmod@divisor+1,f
  4886  1029  0AF0               	incf	___awmod@divisor,f
  4887  102A  1903               	skipnz
  4888  102B  0AF1               	incf	___awmod@divisor+1,f
  4889  102C                     l2322:
  4890  102C  0870               	movf	___awmod@divisor,w
  4891  102D  0471               	iorwf	___awmod@divisor+1,w
  4892  102E  1903               	btfsc	3,2
  4893  102F  2831               	goto	u2971
  4894  1030  2832               	goto	u2970
  4895  1031                     u2971:
  4896  1031  2861               	goto	l2340
  4897  1032                     u2970:
  4898  1032                     l2324:
  4899  1032  01F5               	clrf	___awmod@counter
  4900  1033  0AF5               	incf	___awmod@counter,f
  4901  1034  2840               	goto	l2330
  4902  1035                     l2326:
  4903  1035  3001               	movlw	1
  4904  1036                     u2985:
  4905  1036  1003               	clrc
  4906  1037  0DF0               	rlf	___awmod@divisor,f
  4907  1038  0DF1               	rlf	___awmod@divisor+1,f
  4908  1039  3EFF               	addlw	-1
  4909  103A  1D03               	skipz
  4910  103B  2836               	goto	u2985
  4911  103C                     l2328:
  4912  103C  3001               	movlw	1
  4913  103D  00F4               	movwf	??___awmod
  4914  103E  0874               	movf	??___awmod,w
  4915  103F  07F5               	addwf	___awmod@counter,f
  4916  1040                     l2330:
  4917  1040  1FF1               	btfss	___awmod@divisor+1,7
  4918  1041  2843               	goto	u2991
  4919  1042  2844               	goto	u2990
  4920  1043                     u2991:
  4921  1043  2835               	goto	l2326
  4922  1044                     u2990:
  4923  1044                     l2332:
  4924  1044  0871               	movf	___awmod@divisor+1,w
  4925  1045  0273               	subwf	___awmod@dividend+1,w
  4926  1046  1D03               	skipz
  4927  1047  284A               	goto	u3005
  4928  1048  0870               	movf	___awmod@divisor,w
  4929  1049  0272               	subwf	___awmod@dividend,w
  4930  104A                     u3005:
  4931  104A  1C03               	skipc
  4932  104B  284D               	goto	u3001
  4933  104C  284E               	goto	u3000
  4934  104D                     u3001:
  4935  104D  2854               	goto	l2336
  4936  104E                     u3000:
  4937  104E                     l2334:
  4938  104E  0870               	movf	___awmod@divisor,w
  4939  104F  02F2               	subwf	___awmod@dividend,f
  4940  1050  0871               	movf	___awmod@divisor+1,w
  4941  1051  1C03               	skipc
  4942  1052  03F3               	decf	___awmod@dividend+1,f
  4943  1053  02F3               	subwf	___awmod@dividend+1,f
  4944  1054                     l2336:
  4945  1054  3001               	movlw	1
  4946  1055                     u3015:
  4947  1055  1003               	clrc
  4948  1056  0CF1               	rrf	___awmod@divisor+1,f
  4949  1057  0CF0               	rrf	___awmod@divisor,f
  4950  1058  3EFF               	addlw	-1
  4951  1059  1D03               	skipz
  4952  105A  2855               	goto	u3015
  4953  105B                     l2338:
  4954  105B  3001               	movlw	1
  4955  105C  02F5               	subwf	___awmod@counter,f
  4956  105D  1D03               	btfss	3,2
  4957  105E  2860               	goto	u3021
  4958  105F  2861               	goto	u3020
  4959  1060                     u3021:
  4960  1060  2844               	goto	l2332
  4961  1061                     u3020:
  4962  1061                     l2340:
  4963  1061  0876               	movf	___awmod@sign,w
  4964  1062  1903               	btfsc	3,2
  4965  1063  2865               	goto	u3031
  4966  1064  2866               	goto	u3030
  4967  1065                     u3031:
  4968  1065  286B               	goto	l2344
  4969  1066                     u3030:
  4970  1066                     l2342:
  4971  1066  09F2               	comf	___awmod@dividend,f
  4972  1067  09F3               	comf	___awmod@dividend+1,f
  4973  1068  0AF2               	incf	___awmod@dividend,f
  4974  1069  1903               	skipnz
  4975  106A  0AF3               	incf	___awmod@dividend+1,f
  4976  106B                     l2344:
  4977  106B  0873               	movf	___awmod@dividend+1,w
  4978  106C  00F1               	movwf	?___awmod+1
  4979  106D  0872               	movf	___awmod@dividend,w
  4980  106E  00F0               	movwf	?___awmod
  4981  106F                     l541:
  4982  106F  0008               	return
  4983  1070                     __end_of___awmod:
  4984                           
  4985                           	psect	text4
  4986  0003                     __ptext4:	
  4987 ;; *************** function ___awdiv *****************
  4988 ;; Defined at:
  4989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  divisor         2    7[COMMON] int 
  4992 ;;  dividend        2    9[COMMON] int 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  quotient        2    2[BANK0 ] int 
  4995 ;;  sign            1    1[BANK0 ] unsigned char 
  4996 ;;  counter         1    0[BANK0 ] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  2    7[COMMON] int 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5006 ;;      Params:         4       0       0       0       0
  5007 ;;      Locals:         0       4       0       0       0
  5008 ;;      Temps:          1       0       0       0       0
  5009 ;;      Totals:         5       4       0       0       0
  5010 ;;Total ram usage:        9 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_scale
  5016 ;;		_sprintf
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           
  5021                           ;psect for function ___awdiv
  5022  0003                     ___awdiv:
  5023  0003                     l2266:	
  5024                           ;incstack = 0
  5025                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5026                           
  5027  0003  1283               	bcf	3,5	;RP0=0, select bank0
  5028  0004  1303               	bcf	3,6	;RP1=0, select bank0
  5029  0005  01A1               	clrf	___awdiv@sign
  5030  0006                     l2268:
  5031  0006  1FF8               	btfss	___awdiv@divisor+1,7
  5032  0007  2809               	goto	u2851
  5033  0008  280A               	goto	u2850
  5034  0009                     u2851:
  5035  0009  2811               	goto	l2274
  5036  000A                     u2850:
  5037  000A                     l2270:
  5038  000A  09F7               	comf	___awdiv@divisor,f
  5039  000B  09F8               	comf	___awdiv@divisor+1,f
  5040  000C  0AF7               	incf	___awdiv@divisor,f
  5041  000D  1903               	skipnz
  5042  000E  0AF8               	incf	___awdiv@divisor+1,f
  5043  000F                     l2272:
  5044  000F  01A1               	clrf	___awdiv@sign
  5045  0010  0AA1               	incf	___awdiv@sign,f
  5046  0011                     l2274:
  5047  0011  1FFA               	btfss	___awdiv@dividend+1,7
  5048  0012  2814               	goto	u2861
  5049  0013  2815               	goto	u2860
  5050  0014                     u2861:
  5051  0014  281E               	goto	l2280
  5052  0015                     u2860:
  5053  0015                     l2276:
  5054  0015  09F9               	comf	___awdiv@dividend,f
  5055  0016  09FA               	comf	___awdiv@dividend+1,f
  5056  0017  0AF9               	incf	___awdiv@dividend,f
  5057  0018  1903               	skipnz
  5058  0019  0AFA               	incf	___awdiv@dividend+1,f
  5059  001A                     l2278:
  5060  001A  3001               	movlw	1
  5061  001B  00FB               	movwf	??___awdiv
  5062  001C  087B               	movf	??___awdiv,w
  5063  001D  06A1               	xorwf	___awdiv@sign,f
  5064  001E                     l2280:
  5065  001E  01A2               	clrf	___awdiv@quotient
  5066  001F  01A3               	clrf	___awdiv@quotient+1
  5067  0020                     l2282:
  5068  0020  0877               	movf	___awdiv@divisor,w
  5069  0021  0478               	iorwf	___awdiv@divisor+1,w
  5070  0022  1903               	btfsc	3,2
  5071  0023  2825               	goto	u2871
  5072  0024  2826               	goto	u2870
  5073  0025                     u2871:
  5074  0025  285D               	goto	l2302
  5075  0026                     u2870:
  5076  0026                     l2284:
  5077  0026  01A0               	clrf	___awdiv@counter
  5078  0027  0AA0               	incf	___awdiv@counter,f
  5079  0028  2834               	goto	l2290
  5080  0029                     l2286:
  5081  0029  3001               	movlw	1
  5082  002A                     u2885:
  5083  002A  1003               	clrc
  5084  002B  0DF7               	rlf	___awdiv@divisor,f
  5085  002C  0DF8               	rlf	___awdiv@divisor+1,f
  5086  002D  3EFF               	addlw	-1
  5087  002E  1D03               	skipz
  5088  002F  282A               	goto	u2885
  5089  0030                     l2288:
  5090  0030  3001               	movlw	1
  5091  0031  00FB               	movwf	??___awdiv
  5092  0032  087B               	movf	??___awdiv,w
  5093  0033  07A0               	addwf	___awdiv@counter,f
  5094  0034                     l2290:
  5095  0034  1FF8               	btfss	___awdiv@divisor+1,7
  5096  0035  2837               	goto	u2891
  5097  0036  2838               	goto	u2890
  5098  0037                     u2891:
  5099  0037  2829               	goto	l2286
  5100  0038                     u2890:
  5101  0038                     l2292:
  5102  0038  3001               	movlw	1
  5103  0039                     u2905:
  5104  0039  1003               	clrc
  5105  003A  0DA2               	rlf	___awdiv@quotient,f
  5106  003B  0DA3               	rlf	___awdiv@quotient+1,f
  5107  003C  3EFF               	addlw	-1
  5108  003D  1D03               	skipz
  5109  003E  2839               	goto	u2905
  5110  003F  0878               	movf	___awdiv@divisor+1,w
  5111  0040  027A               	subwf	___awdiv@dividend+1,w
  5112  0041  1D03               	skipz
  5113  0042  2845               	goto	u2915
  5114  0043  0877               	movf	___awdiv@divisor,w
  5115  0044  0279               	subwf	___awdiv@dividend,w
  5116  0045                     u2915:
  5117  0045  1C03               	skipc
  5118  0046  2848               	goto	u2911
  5119  0047  2849               	goto	u2910
  5120  0048                     u2911:
  5121  0048  2850               	goto	l2298
  5122  0049                     u2910:
  5123  0049                     l2294:
  5124  0049  0877               	movf	___awdiv@divisor,w
  5125  004A  02F9               	subwf	___awdiv@dividend,f
  5126  004B  0878               	movf	___awdiv@divisor+1,w
  5127  004C  1C03               	skipc
  5128  004D  03FA               	decf	___awdiv@dividend+1,f
  5129  004E  02FA               	subwf	___awdiv@dividend+1,f
  5130  004F                     l2296:
  5131  004F  1422               	bsf	___awdiv@quotient,0
  5132  0050                     l2298:
  5133  0050  3001               	movlw	1
  5134  0051                     u2925:
  5135  0051  1003               	clrc
  5136  0052  0CF8               	rrf	___awdiv@divisor+1,f
  5137  0053  0CF7               	rrf	___awdiv@divisor,f
  5138  0054  3EFF               	addlw	-1
  5139  0055  1D03               	skipz
  5140  0056  2851               	goto	u2925
  5141  0057                     l2300:
  5142  0057  3001               	movlw	1
  5143  0058  02A0               	subwf	___awdiv@counter,f
  5144  0059  1D03               	btfss	3,2
  5145  005A  285C               	goto	u2931
  5146  005B  285D               	goto	u2930
  5147  005C                     u2931:
  5148  005C  2838               	goto	l2292
  5149  005D                     u2930:
  5150  005D                     l2302:
  5151  005D  0821               	movf	___awdiv@sign,w
  5152  005E  1903               	btfsc	3,2
  5153  005F  2861               	goto	u2941
  5154  0060  2862               	goto	u2940
  5155  0061                     u2941:
  5156  0061  2867               	goto	l2306
  5157  0062                     u2940:
  5158  0062                     l2304:
  5159  0062  09A2               	comf	___awdiv@quotient,f
  5160  0063  09A3               	comf	___awdiv@quotient+1,f
  5161  0064  0AA2               	incf	___awdiv@quotient,f
  5162  0065  1903               	skipnz
  5163  0066  0AA3               	incf	___awdiv@quotient+1,f
  5164  0067                     l2306:
  5165  0067  0823               	movf	___awdiv@quotient+1,w
  5166  0068  00F8               	movwf	?___awdiv+1
  5167  0069  0822               	movf	___awdiv@quotient,w
  5168  006A  00F7               	movwf	?___awdiv
  5169  006B                     l528:
  5170  006B  0008               	return
  5171  006C                     __end_of___awdiv:
  5172                           
  5173                           	psect	text5
  5174  1005                     __ptext5:	
  5175 ;; *************** function _isdigit *****************
  5176 ;; Defined at:
  5177 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  c               1    wreg     unsigned char 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  c               1    1[COMMON] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;		None               void
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5191 ;;      Params:         0       0       0       0       0
  5192 ;;      Locals:         2       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0
  5194 ;;      Totals:         2       0       0       0       0
  5195 ;;Total ram usage:        2 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_sprintf
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function _isdigit
  5206  1005                     _isdigit:
  5207                           
  5208                           ;incstack = 0
  5209                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5210                           ;isdigit@c stored from wreg
  5211  1005  00F1               	movwf	isdigit@c
  5212  1006                     l2822:
  5213  1006  01F0               	clrf	_isdigit$1012
  5214  1007                     l2824:
  5215  1007  303A               	movlw	58
  5216  1008  0271               	subwf	isdigit@c,w
  5217  1009  1803               	skipnc
  5218  100A  280C               	goto	u4261
  5219  100B  280D               	goto	u4260
  5220  100C                     u4261:
  5221  100C  2815               	goto	l2830
  5222  100D                     u4260:
  5223  100D                     l2826:
  5224  100D  3030               	movlw	48
  5225  100E  0271               	subwf	isdigit@c,w
  5226  100F  1C03               	skipc
  5227  1010  2812               	goto	u4271
  5228  1011  2813               	goto	u4270
  5229  1012                     u4271:
  5230  1012  2815               	goto	l2830
  5231  1013                     u4270:
  5232  1013                     l2828:
  5233  1013  01F0               	clrf	_isdigit$1012
  5234  1014  0AF0               	incf	_isdigit$1012,f
  5235  1015                     l2830:
  5236  1015  0C70               	rrf	_isdigit$1012,w
  5237  1016                     l862:
  5238  1016  0008               	return
  5239  1017                     __end_of_isdigit:
  5240                           
  5241                           	psect	text6
  5242  136D                     __ptext6:	
  5243 ;; *************** function _fround *****************
  5244 ;; Defined at:
  5245 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;  prec            1    wreg     unsigned char 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  prec            1   49[BANK0 ] unsigned char 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  4   30[BANK0 ] unsigned char 
  5252 ;; Registers used:
  5253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5259 ;;      Params:         0       4       0       0       0
  5260 ;;      Locals:         0       9       0       0       0
  5261 ;;      Temps:          0       7       0       0       0
  5262 ;;      Totals:         0      20       0       0       0
  5263 ;;Total ram usage:       20 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    2
  5266 ;; This function calls:
  5267 ;;		___flmul
  5268 ;;		___lwdiv
  5269 ;;		___lwmod
  5270 ;; This function is called by:
  5271 ;;		_sprintf
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function _fround
  5277  136D                     _fround:
  5278                           
  5279                           ;incstack = 0
  5280                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5281                           ;fround@prec stored from wreg
  5282  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5283  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5284  136F  00D1               	movwf	fround@prec
  5285  1370                     l2764:
  5286                           
  5287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5288  1370  306E               	movlw	110
  5289  1371  0251               	subwf	fround@prec,w
  5290  1372  1C03               	skipc
  5291  1373  2B75               	goto	u4011
  5292  1374  2B76               	goto	u4010
  5293  1375                     u4011:
  5294  1375  2C83               	goto	l2772
  5295  1376                     u4010:
  5296  1376                     l2766:
  5297                           
  5298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5299  1376  303F               	movlw	63
  5300  1377  00A7               	movwf	___flmul@b+3
  5301  1378  3000               	movlw	0
  5302  1379  00A6               	movwf	___flmul@b+2
  5303  137A  3000               	movlw	0
  5304  137B  00A5               	movwf	___flmul@b+1
  5305  137C  3000               	movlw	0
  5306  137D  00A4               	movwf	___flmul@b
  5307  137E  3064               	movlw	100
  5308  137F  00F6               	movwf	___lwdiv@divisor
  5309  1380  3000               	movlw	0
  5310  1381  00F7               	movwf	___lwdiv@divisor+1
  5311  1382  0851               	movf	fround@prec,w
  5312  1383  00C2               	movwf	??_fround
  5313  1384  01C3               	clrf	??_fround+1
  5314  1385  0842               	movf	??_fround,w
  5315  1386  00F8               	movwf	___lwdiv@dividend
  5316  1387  0843               	movf	??_fround+1,w
  5317  1388  00F9               	movwf	___lwdiv@dividend+1
  5318  1389  160A  158A  24F3  160A  118A  	fcall	___lwdiv
  5319  138E  0876               	movf	?___lwdiv,w
  5320  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5321  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5322  1391  00C4               	movwf	??_fround+2
  5323  1392  3001               	movlw	1
  5324  1393                     u4025:
  5325  1393  1003               	clrc
  5326  1394  0DC4               	rlf	??_fround+2,f
  5327  1395  3EFF               	addlw	-1
  5328  1396  1D03               	skipz
  5329  1397  2B93               	goto	u4025
  5330  1398  1003               	clrc
  5331  1399  0D44               	rlf	??_fround+2,w
  5332  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5333  139B  0084               	movwf	4
  5334  139C  120A  158A  200A  160A  118A  	fcall	stringdir
  5335  13A1  00C5               	movwf	??_fround+3
  5336  13A2  120A  158A  200A  160A  118A  	fcall	stringdir
  5337  13A7  00C6               	movwf	??_fround+4
  5338  13A8  120A  158A  200A  160A  118A  	fcall	stringdir
  5339  13AD  00C7               	movwf	??_fround+5
  5340  13AE  120A  158A  200A  160A  118A  	fcall	stringdir
  5341  13B3  00C8               	movwf	??_fround+6
  5342  13B4  0848               	movf	??_fround+6,w
  5343  13B5  00AB               	movwf	___flmul@a+3
  5344  13B6  0847               	movf	??_fround+5,w
  5345  13B7  00AA               	movwf	___flmul@a+2
  5346  13B8  0846               	movf	??_fround+4,w
  5347  13B9  00A9               	movwf	___flmul@a+1
  5348  13BA  0845               	movf	??_fround+3,w
  5349  13BB  00A8               	movwf	___flmul@a
  5350  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5351  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5352  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5353  13C3  0827               	movf	?___flmul+3,w
  5354  13C4  00D0               	movwf	_fround$1185+3
  5355  13C5  0826               	movf	?___flmul+2,w
  5356  13C6  00CF               	movwf	_fround$1185+2
  5357  13C7  0825               	movf	?___flmul+1,w
  5358  13C8  00CE               	movwf	_fround$1185+1
  5359  13C9  0824               	movf	?___flmul,w
  5360  13CA  00CD               	movwf	_fround$1185
  5361                           
  5362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5363  13CB  300A               	movlw	10
  5364  13CC  00F6               	movwf	___lwdiv@divisor
  5365  13CD  3000               	movlw	0
  5366  13CE  00F7               	movwf	___lwdiv@divisor+1
  5367  13CF  0851               	movf	fround@prec,w
  5368  13D0  00C2               	movwf	??_fround
  5369  13D1  01C3               	clrf	??_fround+1
  5370  13D2  0842               	movf	??_fround,w
  5371  13D3  00F2               	movwf	___lwmod@dividend
  5372  13D4  0843               	movf	??_fround+1,w
  5373  13D5  00F3               	movwf	___lwmod@dividend+1
  5374  13D6  3064               	movlw	100
  5375  13D7  00F0               	movwf	___lwmod@divisor
  5376  13D8  3000               	movlw	0
  5377  13D9  00F1               	movwf	___lwmod@divisor+1
  5378  13DA  160A  158A  2477  160A  118A  	fcall	___lwmod
  5379  13DF  0871               	movf	?___lwmod+1,w
  5380  13E0  00F9               	movwf	___lwdiv@dividend+1
  5381  13E1  0870               	movf	?___lwmod,w
  5382  13E2  00F8               	movwf	___lwdiv@dividend
  5383  13E3  160A  158A  24F3  160A  118A  	fcall	___lwdiv
  5384  13E8  0876               	movf	?___lwdiv,w
  5385  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5386  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5387  13EB  00C4               	movwf	??_fround+2
  5388  13EC  3001               	movlw	1
  5389  13ED                     u4035:
  5390  13ED  1003               	clrc
  5391  13EE  0DC4               	rlf	??_fround+2,f
  5392  13EF  3EFF               	addlw	-1
  5393  13F0  1D03               	skipz
  5394  13F1  2BED               	goto	u4035
  5395  13F2  1003               	clrc
  5396  13F3  0D44               	rlf	??_fround+2,w
  5397  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5398  13F5  0084               	movwf	4
  5399  13F6  120A  158A  200A  160A  118A  	fcall	stringdir
  5400  13FB  00C5               	movwf	??_fround+3
  5401  13FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5402  1401  00C6               	movwf	??_fround+4
  5403  1402  120A  158A  200A  160A  118A  	fcall	stringdir
  5404  1407  00C7               	movwf	??_fround+5
  5405  1408  120A  158A  200A  160A  118A  	fcall	stringdir
  5406  140D  00C8               	movwf	??_fround+6
  5407  140E  0848               	movf	??_fround+6,w
  5408  140F  00A7               	movwf	___flmul@b+3
  5409  1410  0847               	movf	??_fround+5,w
  5410  1411  00A6               	movwf	___flmul@b+2
  5411  1412  0846               	movf	??_fround+4,w
  5412  1413  00A5               	movwf	___flmul@b+1
  5413  1414  0845               	movf	??_fround+3,w
  5414  1415  00A4               	movwf	___flmul@b
  5415  1416  0850               	movf	_fround$1185+3,w
  5416  1417  00AB               	movwf	___flmul@a+3
  5417  1418  084F               	movf	_fround$1185+2,w
  5418  1419  00AA               	movwf	___flmul@a+2
  5419  141A  084E               	movf	_fround$1185+1,w
  5420  141B  00A9               	movwf	___flmul@a+1
  5421  141C  084D               	movf	_fround$1185,w
  5422  141D  00A8               	movwf	___flmul@a
  5423  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5424  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5425  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5426  1425  0827               	movf	?___flmul+3,w
  5427  1426  00CC               	movwf	_fround$1186+3
  5428  1427  0826               	movf	?___flmul+2,w
  5429  1428  00CB               	movwf	_fround$1186+2
  5430  1429  0825               	movf	?___flmul+1,w
  5431  142A  00CA               	movwf	_fround$1186+1
  5432  142B  0824               	movf	?___flmul,w
  5433  142C  00C9               	movwf	_fround$1186
  5434                           
  5435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5436  142D  300A               	movlw	10
  5437  142E  00F0               	movwf	___lwmod@divisor
  5438  142F  3000               	movlw	0
  5439  1430  00F1               	movwf	___lwmod@divisor+1
  5440  1431  0851               	movf	fround@prec,w
  5441  1432  00C2               	movwf	??_fround
  5442  1433  01C3               	clrf	??_fround+1
  5443  1434  0842               	movf	??_fround,w
  5444  1435  00F2               	movwf	___lwmod@dividend
  5445  1436  0843               	movf	??_fround+1,w
  5446  1437  00F3               	movwf	___lwmod@dividend+1
  5447  1438  160A  158A  2477  160A  118A  	fcall	___lwmod
  5448  143D  0870               	movf	?___lwmod,w
  5449  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5450  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5451  1440  00C4               	movwf	??_fround+2
  5452  1441  3001               	movlw	1
  5453  1442                     u4045:
  5454  1442  1003               	clrc
  5455  1443  0DC4               	rlf	??_fround+2,f
  5456  1444  3EFF               	addlw	-1
  5457  1445  1D03               	skipz
  5458  1446  2C42               	goto	u4045
  5459  1447  1003               	clrc
  5460  1448  0D44               	rlf	??_fround+2,w
  5461  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5462  144A  0084               	movwf	4
  5463  144B  120A  158A  200A  160A  118A  	fcall	stringdir
  5464  1450  00C5               	movwf	??_fround+3
  5465  1451  120A  158A  200A  160A  118A  	fcall	stringdir
  5466  1456  00C6               	movwf	??_fround+4
  5467  1457  120A  158A  200A  160A  118A  	fcall	stringdir
  5468  145C  00C7               	movwf	??_fround+5
  5469  145D  120A  158A  200A  160A  118A  	fcall	stringdir
  5470  1462  00C8               	movwf	??_fround+6
  5471  1463  0848               	movf	??_fround+6,w
  5472  1464  00A7               	movwf	___flmul@b+3
  5473  1465  0847               	movf	??_fround+5,w
  5474  1466  00A6               	movwf	___flmul@b+2
  5475  1467  0846               	movf	??_fround+4,w
  5476  1468  00A5               	movwf	___flmul@b+1
  5477  1469  0845               	movf	??_fround+3,w
  5478  146A  00A4               	movwf	___flmul@b
  5479  146B  084C               	movf	_fround$1186+3,w
  5480  146C  00AB               	movwf	___flmul@a+3
  5481  146D  084B               	movf	_fround$1186+2,w
  5482  146E  00AA               	movwf	___flmul@a+2
  5483  146F  084A               	movf	_fround$1186+1,w
  5484  1470  00A9               	movwf	___flmul@a+1
  5485  1471  0849               	movf	_fround$1186,w
  5486  1472  00A8               	movwf	___flmul@a
  5487  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5488  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5489  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5490  147A  0827               	movf	?___flmul+3,w
  5491  147B  00C1               	movwf	?_fround+3
  5492  147C  0826               	movf	?___flmul+2,w
  5493  147D  00C0               	movwf	?_fround+2
  5494  147E  0825               	movf	?___flmul+1,w
  5495  147F  00BF               	movwf	?_fround+1
  5496  1480  0824               	movf	?___flmul,w
  5497  1481  00BE               	movwf	?_fround
  5498  1482  2D77               	goto	l281
  5499  1483                     l2772:
  5500  1483  300B               	movlw	11
  5501  1484  0251               	subwf	fround@prec,w
  5502  1485  1C03               	skipc
  5503  1486  2C88               	goto	u4051
  5504  1487  2C89               	goto	u4050
  5505  1488                     u4051:
  5506  1488  2D34               	goto	l2778
  5507  1489                     u4050:
  5508  1489                     l2774:
  5509                           
  5510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5511  1489  303F               	movlw	63
  5512  148A  00A7               	movwf	___flmul@b+3
  5513  148B  3000               	movlw	0
  5514  148C  00A6               	movwf	___flmul@b+2
  5515  148D  3000               	movlw	0
  5516  148E  00A5               	movwf	___flmul@b+1
  5517  148F  3000               	movlw	0
  5518  1490  00A4               	movwf	___flmul@b
  5519  1491  300A               	movlw	10
  5520  1492  00F6               	movwf	___lwdiv@divisor
  5521  1493  3000               	movlw	0
  5522  1494  00F7               	movwf	___lwdiv@divisor+1
  5523  1495  0851               	movf	fround@prec,w
  5524  1496  00C2               	movwf	??_fround
  5525  1497  01C3               	clrf	??_fround+1
  5526  1498  0842               	movf	??_fround,w
  5527  1499  00F8               	movwf	___lwdiv@dividend
  5528  149A  0843               	movf	??_fround+1,w
  5529  149B  00F9               	movwf	___lwdiv@dividend+1
  5530  149C  160A  158A  24F3  160A  118A  	fcall	___lwdiv
  5531  14A1  0876               	movf	?___lwdiv,w
  5532  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5533  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5534  14A4  00C4               	movwf	??_fround+2
  5535  14A5  3001               	movlw	1
  5536  14A6                     u4065:
  5537  14A6  1003               	clrc
  5538  14A7  0DC4               	rlf	??_fround+2,f
  5539  14A8  3EFF               	addlw	-1
  5540  14A9  1D03               	skipz
  5541  14AA  2CA6               	goto	u4065
  5542  14AB  1003               	clrc
  5543  14AC  0D44               	rlf	??_fround+2,w
  5544  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5545  14AE  0084               	movwf	4
  5546  14AF  120A  158A  200A  160A  118A  	fcall	stringdir
  5547  14B4  00C5               	movwf	??_fround+3
  5548  14B5  120A  158A  200A  160A  118A  	fcall	stringdir
  5549  14BA  00C6               	movwf	??_fround+4
  5550  14BB  120A  158A  200A  160A  118A  	fcall	stringdir
  5551  14C0  00C7               	movwf	??_fround+5
  5552  14C1  120A  158A  200A  160A  118A  	fcall	stringdir
  5553  14C6  00C8               	movwf	??_fround+6
  5554  14C7  0848               	movf	??_fround+6,w
  5555  14C8  00AB               	movwf	___flmul@a+3
  5556  14C9  0847               	movf	??_fround+5,w
  5557  14CA  00AA               	movwf	___flmul@a+2
  5558  14CB  0846               	movf	??_fround+4,w
  5559  14CC  00A9               	movwf	___flmul@a+1
  5560  14CD  0845               	movf	??_fround+3,w
  5561  14CE  00A8               	movwf	___flmul@a
  5562  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5563  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5564  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5565  14D6  0827               	movf	?___flmul+3,w
  5566  14D7  00D0               	movwf	_fround$1185+3
  5567  14D8  0826               	movf	?___flmul+2,w
  5568  14D9  00CF               	movwf	_fround$1185+2
  5569  14DA  0825               	movf	?___flmul+1,w
  5570  14DB  00CE               	movwf	_fround$1185+1
  5571  14DC  0824               	movf	?___flmul,w
  5572  14DD  00CD               	movwf	_fround$1185
  5573                           
  5574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5575  14DE  300A               	movlw	10
  5576  14DF  00F0               	movwf	___lwmod@divisor
  5577  14E0  3000               	movlw	0
  5578  14E1  00F1               	movwf	___lwmod@divisor+1
  5579  14E2  0851               	movf	fround@prec,w
  5580  14E3  00C2               	movwf	??_fround
  5581  14E4  01C3               	clrf	??_fround+1
  5582  14E5  0842               	movf	??_fround,w
  5583  14E6  00F2               	movwf	___lwmod@dividend
  5584  14E7  0843               	movf	??_fround+1,w
  5585  14E8  00F3               	movwf	___lwmod@dividend+1
  5586  14E9  160A  158A  2477  160A  118A  	fcall	___lwmod
  5587  14EE  0870               	movf	?___lwmod,w
  5588  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5589  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5590  14F1  00C4               	movwf	??_fround+2
  5591  14F2  3001               	movlw	1
  5592  14F3                     u4075:
  5593  14F3  1003               	clrc
  5594  14F4  0DC4               	rlf	??_fround+2,f
  5595  14F5  3EFF               	addlw	-1
  5596  14F6  1D03               	skipz
  5597  14F7  2CF3               	goto	u4075
  5598  14F8  1003               	clrc
  5599  14F9  0D44               	rlf	??_fround+2,w
  5600  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5601  14FB  0084               	movwf	4
  5602  14FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5603  1501  00C5               	movwf	??_fround+3
  5604  1502  120A  158A  200A  160A  118A  	fcall	stringdir
  5605  1507  00C6               	movwf	??_fround+4
  5606  1508  120A  158A  200A  160A  118A  	fcall	stringdir
  5607  150D  00C7               	movwf	??_fround+5
  5608  150E  120A  158A  200A  160A  118A  	fcall	stringdir
  5609  1513  00C8               	movwf	??_fround+6
  5610  1514  0848               	movf	??_fround+6,w
  5611  1515  00A7               	movwf	___flmul@b+3
  5612  1516  0847               	movf	??_fround+5,w
  5613  1517  00A6               	movwf	___flmul@b+2
  5614  1518  0846               	movf	??_fround+4,w
  5615  1519  00A5               	movwf	___flmul@b+1
  5616  151A  0845               	movf	??_fround+3,w
  5617  151B  00A4               	movwf	___flmul@b
  5618  151C  0850               	movf	_fround$1185+3,w
  5619  151D  00AB               	movwf	___flmul@a+3
  5620  151E  084F               	movf	_fround$1185+2,w
  5621  151F  00AA               	movwf	___flmul@a+2
  5622  1520  084E               	movf	_fround$1185+1,w
  5623  1521  00A9               	movwf	___flmul@a+1
  5624  1522  084D               	movf	_fround$1185,w
  5625  1523  00A8               	movwf	___flmul@a
  5626  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5627  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5628  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5629  152B  0827               	movf	?___flmul+3,w
  5630  152C  00C1               	movwf	?_fround+3
  5631  152D  0826               	movf	?___flmul+2,w
  5632  152E  00C0               	movwf	?_fround+2
  5633  152F  0825               	movf	?___flmul+1,w
  5634  1530  00BF               	movwf	?_fround+1
  5635  1531  0824               	movf	?___flmul,w
  5636  1532  00BE               	movwf	?_fround
  5637  1533  2D77               	goto	l281
  5638  1534                     l2778:
  5639                           
  5640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5641  1534  303F               	movlw	63
  5642  1535  00A7               	movwf	___flmul@b+3
  5643  1536  3000               	movlw	0
  5644  1537  00A6               	movwf	___flmul@b+2
  5645  1538  3000               	movlw	0
  5646  1539  00A5               	movwf	___flmul@b+1
  5647  153A  3000               	movlw	0
  5648  153B  00A4               	movwf	___flmul@b
  5649  153C  0851               	movf	fround@prec,w
  5650  153D  00C2               	movwf	??_fround
  5651  153E  3001               	movlw	1
  5652  153F                     u4085:
  5653  153F  1003               	clrc
  5654  1540  0DC2               	rlf	??_fround,f
  5655  1541  3EFF               	addlw	-1
  5656  1542  1D03               	skipz
  5657  1543  2D3F               	goto	u4085
  5658  1544  1003               	clrc
  5659  1545  0D42               	rlf	??_fround,w
  5660  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5661  1547  0084               	movwf	4
  5662  1548  120A  158A  200A  160A  118A  	fcall	stringdir
  5663  154D  00C3               	movwf	??_fround+1
  5664  154E  120A  158A  200A  160A  118A  	fcall	stringdir
  5665  1553  00C4               	movwf	??_fround+2
  5666  1554  120A  158A  200A  160A  118A  	fcall	stringdir
  5667  1559  00C5               	movwf	??_fround+3
  5668  155A  120A  158A  200A  160A  118A  	fcall	stringdir
  5669  155F  00C6               	movwf	??_fround+4
  5670  1560  0846               	movf	??_fround+4,w
  5671  1561  00AB               	movwf	___flmul@a+3
  5672  1562  0845               	movf	??_fround+3,w
  5673  1563  00AA               	movwf	___flmul@a+2
  5674  1564  0844               	movf	??_fround+2,w
  5675  1565  00A9               	movwf	___flmul@a+1
  5676  1566  0843               	movf	??_fround+1,w
  5677  1567  00A8               	movwf	___flmul@a
  5678  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5679  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5680  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5681  156F  0827               	movf	?___flmul+3,w
  5682  1570  00C1               	movwf	?_fround+3
  5683  1571  0826               	movf	?___flmul+2,w
  5684  1572  00C0               	movwf	?_fround+2
  5685  1573  0825               	movf	?___flmul+1,w
  5686  1574  00BF               	movwf	?_fround+1
  5687  1575  0824               	movf	?___flmul,w
  5688  1576  00BE               	movwf	?_fround
  5689  1577                     l281:
  5690  1577  0008               	return
  5691  1578                     __end_of_fround:
  5692                           
  5693                           	psect	text7
  5694  1C77                     __ptext7:	
  5695 ;; *************** function ___lwmod *****************
  5696 ;; Defined at:
  5697 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  divisor         2    0[COMMON] unsigned int 
  5700 ;;  dividend        2    2[COMMON] unsigned int 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  counter         1    5[COMMON] unsigned char 
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  2    0[COMMON] unsigned int 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5712 ;;      Params:         4       0       0       0       0
  5713 ;;      Locals:         1       0       0       0       0
  5714 ;;      Temps:          1       0       0       0       0
  5715 ;;      Totals:         6       0       0       0       0
  5716 ;;Total ram usage:        6 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_fround
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           
  5726                           ;psect for function ___lwmod
  5727  1C77                     ___lwmod:
  5728  1C77                     l2374:	
  5729                           ;incstack = 0
  5730                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5731                           
  5732  1C77  0870               	movf	___lwmod@divisor,w
  5733  1C78  0471               	iorwf	___lwmod@divisor+1,w
  5734  1C79  1903               	btfsc	3,2
  5735  1C7A  2C7C               	goto	u3111
  5736  1C7B  2C7D               	goto	u3110
  5737  1C7C                     u3111:
  5738  1C7C  2CAC               	goto	l2392
  5739  1C7D                     u3110:
  5740  1C7D                     l2376:
  5741  1C7D  01F5               	clrf	___lwmod@counter
  5742  1C7E  0AF5               	incf	___lwmod@counter,f
  5743  1C7F  2C8B               	goto	l2382
  5744  1C80                     l2378:
  5745  1C80  3001               	movlw	1
  5746  1C81                     u3125:
  5747  1C81  1003               	clrc
  5748  1C82  0DF0               	rlf	___lwmod@divisor,f
  5749  1C83  0DF1               	rlf	___lwmod@divisor+1,f
  5750  1C84  3EFF               	addlw	-1
  5751  1C85  1D03               	skipz
  5752  1C86  2C81               	goto	u3125
  5753  1C87                     l2380:
  5754  1C87  3001               	movlw	1
  5755  1C88  00F4               	movwf	??___lwmod
  5756  1C89  0874               	movf	??___lwmod,w
  5757  1C8A  07F5               	addwf	___lwmod@counter,f
  5758  1C8B                     l2382:
  5759  1C8B  1FF1               	btfss	___lwmod@divisor+1,7
  5760  1C8C  2C8E               	goto	u3131
  5761  1C8D  2C8F               	goto	u3130
  5762  1C8E                     u3131:
  5763  1C8E  2C80               	goto	l2378
  5764  1C8F                     u3130:
  5765  1C8F                     l2384:
  5766  1C8F  0871               	movf	___lwmod@divisor+1,w
  5767  1C90  0273               	subwf	___lwmod@dividend+1,w
  5768  1C91  1D03               	skipz
  5769  1C92  2C95               	goto	u3145
  5770  1C93  0870               	movf	___lwmod@divisor,w
  5771  1C94  0272               	subwf	___lwmod@dividend,w
  5772  1C95                     u3145:
  5773  1C95  1C03               	skipc
  5774  1C96  2C98               	goto	u3141
  5775  1C97  2C99               	goto	u3140
  5776  1C98                     u3141:
  5777  1C98  2C9F               	goto	l2388
  5778  1C99                     u3140:
  5779  1C99                     l2386:
  5780  1C99  0870               	movf	___lwmod@divisor,w
  5781  1C9A  02F2               	subwf	___lwmod@dividend,f
  5782  1C9B  0871               	movf	___lwmod@divisor+1,w
  5783  1C9C  1C03               	skipc
  5784  1C9D  03F3               	decf	___lwmod@dividend+1,f
  5785  1C9E  02F3               	subwf	___lwmod@dividend+1,f
  5786  1C9F                     l2388:
  5787  1C9F  3001               	movlw	1
  5788  1CA0                     u3155:
  5789  1CA0  1003               	clrc
  5790  1CA1  0CF1               	rrf	___lwmod@divisor+1,f
  5791  1CA2  0CF0               	rrf	___lwmod@divisor,f
  5792  1CA3  3EFF               	addlw	-1
  5793  1CA4  1D03               	skipz
  5794  1CA5  2CA0               	goto	u3155
  5795  1CA6                     l2390:
  5796  1CA6  3001               	movlw	1
  5797  1CA7  02F5               	subwf	___lwmod@counter,f
  5798  1CA8  1D03               	btfss	3,2
  5799  1CA9  2CAB               	goto	u3161
  5800  1CAA  2CAC               	goto	u3160
  5801  1CAB                     u3161:
  5802  1CAB  2C8F               	goto	l2384
  5803  1CAC                     u3160:
  5804  1CAC                     l2392:
  5805  1CAC  0873               	movf	___lwmod@dividend+1,w
  5806  1CAD  00F1               	movwf	?___lwmod+1
  5807  1CAE  0872               	movf	___lwmod@dividend,w
  5808  1CAF  00F0               	movwf	?___lwmod
  5809  1CB0                     l691:
  5810  1CB0  0008               	return
  5811  1CB1                     __end_of___lwmod:
  5812                           
  5813                           	psect	text8
  5814  1CF3                     __ptext8:	
  5815 ;; *************** function ___lwdiv *****************
  5816 ;; Defined at:
  5817 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  divisor         2    6[COMMON] unsigned int 
  5820 ;;  dividend        2    8[COMMON] unsigned int 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  quotient        2   11[COMMON] unsigned int 
  5823 ;;  counter         1   13[COMMON] unsigned char 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  2    6[COMMON] unsigned int 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5833 ;;      Params:         4       0       0       0       0
  5834 ;;      Locals:         3       0       0       0       0
  5835 ;;      Temps:          1       0       0       0       0
  5836 ;;      Totals:         8       0       0       0       0
  5837 ;;Total ram usage:        8 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_fround
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           
  5847                           ;psect for function ___lwdiv
  5848  1CF3                     ___lwdiv:
  5849  1CF3                     l2348:	
  5850                           ;incstack = 0
  5851                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5852                           
  5853  1CF3  01FB               	clrf	___lwdiv@quotient
  5854  1CF4  01FC               	clrf	___lwdiv@quotient+1
  5855  1CF5                     l2350:
  5856  1CF5  0876               	movf	___lwdiv@divisor,w
  5857  1CF6  0477               	iorwf	___lwdiv@divisor+1,w
  5858  1CF7  1903               	btfsc	3,2
  5859  1CF8  2CFA               	goto	u3041
  5860  1CF9  2CFB               	goto	u3040
  5861  1CFA                     u3041:
  5862  1CFA  2D32               	goto	l2370
  5863  1CFB                     u3040:
  5864  1CFB                     l2352:
  5865  1CFB  01FD               	clrf	___lwdiv@counter
  5866  1CFC  0AFD               	incf	___lwdiv@counter,f
  5867  1CFD  2D09               	goto	l2358
  5868  1CFE                     l2354:
  5869  1CFE  3001               	movlw	1
  5870  1CFF                     u3055:
  5871  1CFF  1003               	clrc
  5872  1D00  0DF6               	rlf	___lwdiv@divisor,f
  5873  1D01  0DF7               	rlf	___lwdiv@divisor+1,f
  5874  1D02  3EFF               	addlw	-1
  5875  1D03  1D03               	skipz
  5876  1D04  2CFF               	goto	u3055
  5877  1D05                     l2356:
  5878  1D05  3001               	movlw	1
  5879  1D06  00FA               	movwf	??___lwdiv
  5880  1D07  087A               	movf	??___lwdiv,w
  5881  1D08  07FD               	addwf	___lwdiv@counter,f
  5882  1D09                     l2358:
  5883  1D09  1FF7               	btfss	___lwdiv@divisor+1,7
  5884  1D0A  2D0C               	goto	u3061
  5885  1D0B  2D0D               	goto	u3060
  5886  1D0C                     u3061:
  5887  1D0C  2CFE               	goto	l2354
  5888  1D0D                     u3060:
  5889  1D0D                     l2360:
  5890  1D0D  3001               	movlw	1
  5891  1D0E                     u3075:
  5892  1D0E  1003               	clrc
  5893  1D0F  0DFB               	rlf	___lwdiv@quotient,f
  5894  1D10  0DFC               	rlf	___lwdiv@quotient+1,f
  5895  1D11  3EFF               	addlw	-1
  5896  1D12  1D03               	skipz
  5897  1D13  2D0E               	goto	u3075
  5898  1D14  0877               	movf	___lwdiv@divisor+1,w
  5899  1D15  0279               	subwf	___lwdiv@dividend+1,w
  5900  1D16  1D03               	skipz
  5901  1D17  2D1A               	goto	u3085
  5902  1D18  0876               	movf	___lwdiv@divisor,w
  5903  1D19  0278               	subwf	___lwdiv@dividend,w
  5904  1D1A                     u3085:
  5905  1D1A  1C03               	skipc
  5906  1D1B  2D1D               	goto	u3081
  5907  1D1C  2D1E               	goto	u3080
  5908  1D1D                     u3081:
  5909  1D1D  2D25               	goto	l2366
  5910  1D1E                     u3080:
  5911  1D1E                     l2362:
  5912  1D1E  0876               	movf	___lwdiv@divisor,w
  5913  1D1F  02F8               	subwf	___lwdiv@dividend,f
  5914  1D20  0877               	movf	___lwdiv@divisor+1,w
  5915  1D21  1C03               	skipc
  5916  1D22  03F9               	decf	___lwdiv@dividend+1,f
  5917  1D23  02F9               	subwf	___lwdiv@dividend+1,f
  5918  1D24                     l2364:
  5919  1D24  147B               	bsf	___lwdiv@quotient,0
  5920  1D25                     l2366:
  5921  1D25  3001               	movlw	1
  5922  1D26                     u3095:
  5923  1D26  1003               	clrc
  5924  1D27  0CF7               	rrf	___lwdiv@divisor+1,f
  5925  1D28  0CF6               	rrf	___lwdiv@divisor,f
  5926  1D29  3EFF               	addlw	-1
  5927  1D2A  1D03               	skipz
  5928  1D2B  2D26               	goto	u3095
  5929  1D2C                     l2368:
  5930  1D2C  3001               	movlw	1
  5931  1D2D  02FD               	subwf	___lwdiv@counter,f
  5932  1D2E  1D03               	btfss	3,2
  5933  1D2F  2D31               	goto	u3101
  5934  1D30  2D32               	goto	u3100
  5935  1D31                     u3101:
  5936  1D31  2D0D               	goto	l2360
  5937  1D32                     u3100:
  5938  1D32                     l2370:
  5939  1D32  087C               	movf	___lwdiv@quotient+1,w
  5940  1D33  00F7               	movwf	?___lwdiv+1
  5941  1D34  087B               	movf	___lwdiv@quotient,w
  5942  1D35  00F6               	movwf	?___lwdiv
  5943  1D36                     l681:
  5944  1D36  0008               	return
  5945  1D37                     __end_of___lwdiv:
  5946                           
  5947                           	psect	text9
  5948  0C9F                     __ptext9:	
  5949 ;; *************** function ___flmul *****************
  5950 ;; Defined at:
  5951 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  b               4    4[BANK0 ] unsigned int 
  5954 ;;  a               4    8[BANK0 ] unsigned int 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;  prod            4   24[BANK0 ] struct .
  5957 ;;  grs             4   18[BANK0 ] unsigned long 
  5958 ;;  temp            2   28[BANK0 ] struct .
  5959 ;;  bexp            1   23[BANK0 ] unsigned char 
  5960 ;;  aexp            1   22[BANK0 ] unsigned char 
  5961 ;;  sign            1   17[BANK0 ] unsigned char 
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  4    4[BANK0 ] unsigned char 
  5964 ;; Registers used:
  5965 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5971 ;;      Params:         0       8       0       0       0
  5972 ;;      Locals:         0      13       0       0       0
  5973 ;;      Temps:          0       5       0       0       0
  5974 ;;      Totals:         0      26       0       0       0
  5975 ;;Total ram usage:       26 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    1
  5978 ;; This function calls:
  5979 ;;		__Umul8_16
  5980 ;; This function is called by:
  5981 ;;		_main
  5982 ;;		_fround
  5983 ;;		_scale
  5984 ;;		_sprintf
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           
  5989                           ;psect for function ___flmul
  5990  0C9F                     ___flmul:
  5991  0C9F                     l2590:	
  5992                           ;incstack = 0
  5993                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5994                           
  5995  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5996  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5997  0CA1  0827               	movf	___flmul@b+3,w
  5998  0CA2  3980               	andlw	128
  5999  0CA3  00AC               	movwf	??___flmul
  6000  0CA4  082C               	movf	??___flmul,w
  6001  0CA5  00B1               	movwf	___flmul@sign
  6002  0CA6                     l2592:
  6003  0CA6  0827               	movf	___flmul@b+3,w
  6004  0CA7  00AC               	movwf	??___flmul
  6005  0CA8  072C               	addwf	??___flmul,w
  6006  0CA9  00AD               	movwf	??___flmul+1
  6007  0CAA  082D               	movf	??___flmul+1,w
  6008  0CAB  00B7               	movwf	___flmul@bexp
  6009  0CAC                     l2594:
  6010  0CAC  1FA6               	btfss	___flmul@b+2,7
  6011  0CAD  2CAF               	goto	u3631
  6012  0CAE  2CB0               	goto	u3630
  6013  0CAF                     u3631:
  6014  0CAF  2CB1               	goto	l2598
  6015  0CB0                     u3630:
  6016  0CB0                     l2596:
  6017  0CB0  1437               	bsf	___flmul@bexp,0
  6018  0CB1                     l2598:
  6019  0CB1  0837               	movf	___flmul@bexp,w
  6020  0CB2  1903               	btfsc	3,2
  6021  0CB3  2CB5               	goto	u3641
  6022  0CB4  2CB6               	goto	u3640
  6023  0CB5                     u3641:
  6024  0CB5  2CC5               	goto	l2606
  6025  0CB6                     u3640:
  6026  0CB6                     l2600:
  6027  0CB6  0A37               	incf	___flmul@bexp,w
  6028  0CB7  1D03               	btfss	3,2
  6029  0CB8  2CBA               	goto	u3651
  6030  0CB9  2CBB               	goto	u3650
  6031  0CBA                     u3651:
  6032  0CBA  2CC3               	goto	l2604
  6033  0CBB                     u3650:
  6034  0CBB                     l2602:
  6035  0CBB  3000               	movlw	0
  6036  0CBC  00A7               	movwf	___flmul@b+3
  6037  0CBD  3000               	movlw	0
  6038  0CBE  00A6               	movwf	___flmul@b+2
  6039  0CBF  3000               	movlw	0
  6040  0CC0  00A5               	movwf	___flmul@b+1
  6041  0CC1  3000               	movlw	0
  6042  0CC2  00A4               	movwf	___flmul@b
  6043  0CC3                     l2604:
  6044  0CC3  17A6               	bsf	___flmul@b+2,7
  6045  0CC4  2CCD               	goto	l2608
  6046  0CC5                     l2606:
  6047  0CC5  3000               	movlw	0
  6048  0CC6  00A7               	movwf	___flmul@b+3
  6049  0CC7  3000               	movlw	0
  6050  0CC8  00A6               	movwf	___flmul@b+2
  6051  0CC9  3000               	movlw	0
  6052  0CCA  00A5               	movwf	___flmul@b+1
  6053  0CCB  3000               	movlw	0
  6054  0CCC  00A4               	movwf	___flmul@b
  6055  0CCD                     l2608:
  6056  0CCD  082B               	movf	___flmul@a+3,w
  6057  0CCE  3980               	andlw	128
  6058  0CCF  00AC               	movwf	??___flmul
  6059  0CD0  082C               	movf	??___flmul,w
  6060  0CD1  06B1               	xorwf	___flmul@sign,f
  6061  0CD2                     l2610:
  6062  0CD2  082B               	movf	___flmul@a+3,w
  6063  0CD3  00AC               	movwf	??___flmul
  6064  0CD4  072C               	addwf	??___flmul,w
  6065  0CD5  00AD               	movwf	??___flmul+1
  6066  0CD6  082D               	movf	??___flmul+1,w
  6067  0CD7  00B6               	movwf	___flmul@aexp
  6068  0CD8                     l2612:
  6069  0CD8  1FAA               	btfss	___flmul@a+2,7
  6070  0CD9  2CDB               	goto	u3661
  6071  0CDA  2CDC               	goto	u3660
  6072  0CDB                     u3661:
  6073  0CDB  2CDD               	goto	l2616
  6074  0CDC                     u3660:
  6075  0CDC                     l2614:
  6076  0CDC  1436               	bsf	___flmul@aexp,0
  6077  0CDD                     l2616:
  6078  0CDD  0836               	movf	___flmul@aexp,w
  6079  0CDE  1903               	btfsc	3,2
  6080  0CDF  2CE1               	goto	u3671
  6081  0CE0  2CE2               	goto	u3670
  6082  0CE1                     u3671:
  6083  0CE1  2CF1               	goto	l2624
  6084  0CE2                     u3670:
  6085  0CE2                     l2618:
  6086  0CE2  0A36               	incf	___flmul@aexp,w
  6087  0CE3  1D03               	btfss	3,2
  6088  0CE4  2CE6               	goto	u3681
  6089  0CE5  2CE7               	goto	u3680
  6090  0CE6                     u3681:
  6091  0CE6  2CEF               	goto	l2622
  6092  0CE7                     u3680:
  6093  0CE7                     l2620:
  6094  0CE7  3000               	movlw	0
  6095  0CE8  00AB               	movwf	___flmul@a+3
  6096  0CE9  3000               	movlw	0
  6097  0CEA  00AA               	movwf	___flmul@a+2
  6098  0CEB  3000               	movlw	0
  6099  0CEC  00A9               	movwf	___flmul@a+1
  6100  0CED  3000               	movlw	0
  6101  0CEE  00A8               	movwf	___flmul@a
  6102  0CEF                     l2622:
  6103  0CEF  17AA               	bsf	___flmul@a+2,7
  6104  0CF0  2CF9               	goto	l2626
  6105  0CF1                     l2624:
  6106  0CF1  3000               	movlw	0
  6107  0CF2  00AB               	movwf	___flmul@a+3
  6108  0CF3  3000               	movlw	0
  6109  0CF4  00AA               	movwf	___flmul@a+2
  6110  0CF5  3000               	movlw	0
  6111  0CF6  00A9               	movwf	___flmul@a+1
  6112  0CF7  3000               	movlw	0
  6113  0CF8  00A8               	movwf	___flmul@a
  6114  0CF9                     l2626:
  6115  0CF9  0836               	movf	___flmul@aexp,w
  6116  0CFA  1903               	btfsc	3,2
  6117  0CFB  2CFD               	goto	u3691
  6118  0CFC  2CFE               	goto	u3690
  6119  0CFD                     u3691:
  6120  0CFD  2D03               	goto	l2630
  6121  0CFE                     u3690:
  6122  0CFE                     l2628:
  6123  0CFE  0837               	movf	___flmul@bexp,w
  6124  0CFF  1D03               	btfss	3,2
  6125  0D00  2D02               	goto	u3701
  6126  0D01  2D03               	goto	u3700
  6127  0D02                     u3701:
  6128  0D02  2D0C               	goto	l2634
  6129  0D03                     u3700:
  6130  0D03                     l2630:
  6131  0D03  3000               	movlw	0
  6132  0D04  00A7               	movwf	?___flmul+3
  6133  0D05  3000               	movlw	0
  6134  0D06  00A6               	movwf	?___flmul+2
  6135  0D07  3000               	movlw	0
  6136  0D08  00A5               	movwf	?___flmul+1
  6137  0D09  3000               	movlw	0
  6138  0D0A  00A4               	movwf	?___flmul
  6139  0D0B  2FFF               	goto	l798
  6140  0D0C                     l2634:
  6141  0D0C  0824               	movf	___flmul@b,w
  6142  0D0D  00AC               	movwf	??___flmul
  6143  0D0E  082C               	movf	??___flmul,w
  6144  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  6145  0D10  082A               	movf	___flmul@a+2,w
  6146  0D11  160A  158A  2425  120A  158A  	fcall	__Umul8_16
  6147  0D16  0871               	movf	?__Umul8_16+1,w
  6148  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  6149  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  6150  0D19  00BD               	movwf	___flmul@temp+1
  6151  0D1A  0870               	movf	?__Umul8_16,w
  6152  0D1B  00BC               	movwf	___flmul@temp
  6153  0D1C                     l2636:
  6154  0D1C  083C               	movf	___flmul@temp,w
  6155  0D1D  00AC               	movwf	??___flmul
  6156  0D1E  01AD               	clrf	??___flmul+1
  6157  0D1F  01AE               	clrf	??___flmul+2
  6158  0D20  01AF               	clrf	??___flmul+3
  6159  0D21  082F               	movf	??___flmul+3,w
  6160  0D22  00B5               	movwf	___flmul@grs+3
  6161  0D23  082E               	movf	??___flmul+2,w
  6162  0D24  00B4               	movwf	___flmul@grs+2
  6163  0D25  082D               	movf	??___flmul+1,w
  6164  0D26  00B3               	movwf	___flmul@grs+1
  6165  0D27  082C               	movf	??___flmul,w
  6166  0D28  00B2               	movwf	___flmul@grs
  6167  0D29                     l2638:
  6168  0D29  083D               	movf	___flmul@temp+1,w
  6169  0D2A  00AC               	movwf	??___flmul
  6170  0D2B  01AD               	clrf	??___flmul+1
  6171  0D2C  01AE               	clrf	??___flmul+2
  6172  0D2D  01AF               	clrf	??___flmul+3
  6173  0D2E  082F               	movf	??___flmul+3,w
  6174  0D2F  00BB               	movwf	___flmul@prod+3
  6175  0D30  082E               	movf	??___flmul+2,w
  6176  0D31  00BA               	movwf	___flmul@prod+2
  6177  0D32  082D               	movf	??___flmul+1,w
  6178  0D33  00B9               	movwf	___flmul@prod+1
  6179  0D34  082C               	movf	??___flmul,w
  6180  0D35  00B8               	movwf	___flmul@prod
  6181  0D36  0825               	movf	___flmul@b+1,w
  6182  0D37  00AC               	movwf	??___flmul
  6183  0D38  082C               	movf	??___flmul,w
  6184  0D39  00F0               	movwf	__Umul8_16@multiplicand
  6185  0D3A  0829               	movf	___flmul@a+1,w
  6186  0D3B  160A  158A  2425  120A  158A  	fcall	__Umul8_16
  6187  0D40  0871               	movf	?__Umul8_16+1,w
  6188  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  6189  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  6190  0D43  00BD               	movwf	___flmul@temp+1
  6191  0D44  0870               	movf	?__Umul8_16,w
  6192  0D45  00BC               	movwf	___flmul@temp
  6193  0D46                     l2640:
  6194  0D46  083C               	movf	___flmul@temp,w
  6195  0D47  00AC               	movwf	??___flmul
  6196  0D48  01AD               	clrf	??___flmul+1
  6197  0D49  01AE               	clrf	??___flmul+2
  6198  0D4A  01AF               	clrf	??___flmul+3
  6199  0D4B  082C               	movf	??___flmul,w
  6200  0D4C  07B2               	addwf	___flmul@grs,f
  6201  0D4D  082D               	movf	??___flmul+1,w
  6202  0D4E  1103               	clrz
  6203  0D4F  1803               	skipnc
  6204  0D50  3E01               	addlw	1
  6205  0D51  1903               	skipnz
  6206  0D52  2D54               	goto	u3711
  6207  0D53  07B3               	addwf	___flmul@grs+1,f
  6208  0D54                     u3711:
  6209  0D54  082E               	movf	??___flmul+2,w
  6210  0D55  1103               	clrz
  6211  0D56  1803               	skipnc
  6212  0D57  3E01               	addlw	1
  6213  0D58  1903               	skipnz
  6214  0D59  2D5B               	goto	u3712
  6215  0D5A  07B4               	addwf	___flmul@grs+2,f
  6216  0D5B                     u3712:
  6217  0D5B  082F               	movf	??___flmul+3,w
  6218  0D5C  1103               	clrz
  6219  0D5D  1803               	skipnc
  6220  0D5E  3E01               	addlw	1
  6221  0D5F  1903               	skipnz
  6222  0D60  2D62               	goto	u3713
  6223  0D61  07B5               	addwf	___flmul@grs+3,f
  6224  0D62                     u3713:
  6225  0D62                     l2642:
  6226  0D62  083D               	movf	___flmul@temp+1,w
  6227  0D63  00AC               	movwf	??___flmul
  6228  0D64  01AD               	clrf	??___flmul+1
  6229  0D65  01AE               	clrf	??___flmul+2
  6230  0D66  01AF               	clrf	??___flmul+3
  6231  0D67  082C               	movf	??___flmul,w
  6232  0D68  07B8               	addwf	___flmul@prod,f
  6233  0D69  082D               	movf	??___flmul+1,w
  6234  0D6A  1103               	clrz
  6235  0D6B  1803               	skipnc
  6236  0D6C  3E01               	addlw	1
  6237  0D6D  1903               	skipnz
  6238  0D6E  2D70               	goto	u3721
  6239  0D6F  07B9               	addwf	___flmul@prod+1,f
  6240  0D70                     u3721:
  6241  0D70  082E               	movf	??___flmul+2,w
  6242  0D71  1103               	clrz
  6243  0D72  1803               	skipnc
  6244  0D73  3E01               	addlw	1
  6245  0D74  1903               	skipnz
  6246  0D75  2D77               	goto	u3722
  6247  0D76  07BA               	addwf	___flmul@prod+2,f
  6248  0D77                     u3722:
  6249  0D77  082F               	movf	??___flmul+3,w
  6250  0D78  1103               	clrz
  6251  0D79  1803               	skipnc
  6252  0D7A  3E01               	addlw	1
  6253  0D7B  1903               	skipnz
  6254  0D7C  2D7E               	goto	u3723
  6255  0D7D  07BB               	addwf	___flmul@prod+3,f
  6256  0D7E                     u3723:
  6257  0D7E  0826               	movf	___flmul@b+2,w
  6258  0D7F  00AC               	movwf	??___flmul
  6259  0D80  082C               	movf	??___flmul,w
  6260  0D81  00F0               	movwf	__Umul8_16@multiplicand
  6261  0D82  0828               	movf	___flmul@a,w
  6262  0D83  160A  158A  2425  120A  158A  	fcall	__Umul8_16
  6263  0D88  0871               	movf	?__Umul8_16+1,w
  6264  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6265  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6266  0D8B  00BD               	movwf	___flmul@temp+1
  6267  0D8C  0870               	movf	?__Umul8_16,w
  6268  0D8D  00BC               	movwf	___flmul@temp
  6269  0D8E                     l2644:
  6270  0D8E  083C               	movf	___flmul@temp,w
  6271  0D8F  00AC               	movwf	??___flmul
  6272  0D90  01AD               	clrf	??___flmul+1
  6273  0D91  01AE               	clrf	??___flmul+2
  6274  0D92  01AF               	clrf	??___flmul+3
  6275  0D93  082C               	movf	??___flmul,w
  6276  0D94  07B2               	addwf	___flmul@grs,f
  6277  0D95  082D               	movf	??___flmul+1,w
  6278  0D96  1103               	clrz
  6279  0D97  1803               	skipnc
  6280  0D98  3E01               	addlw	1
  6281  0D99  1903               	skipnz
  6282  0D9A  2D9C               	goto	u3731
  6283  0D9B  07B3               	addwf	___flmul@grs+1,f
  6284  0D9C                     u3731:
  6285  0D9C  082E               	movf	??___flmul+2,w
  6286  0D9D  1103               	clrz
  6287  0D9E  1803               	skipnc
  6288  0D9F  3E01               	addlw	1
  6289  0DA0  1903               	skipnz
  6290  0DA1  2DA3               	goto	u3732
  6291  0DA2  07B4               	addwf	___flmul@grs+2,f
  6292  0DA3                     u3732:
  6293  0DA3  082F               	movf	??___flmul+3,w
  6294  0DA4  1103               	clrz
  6295  0DA5  1803               	skipnc
  6296  0DA6  3E01               	addlw	1
  6297  0DA7  1903               	skipnz
  6298  0DA8  2DAA               	goto	u3733
  6299  0DA9  07B5               	addwf	___flmul@grs+3,f
  6300  0DAA                     u3733:
  6301  0DAA                     l2646:
  6302  0DAA  083D               	movf	___flmul@temp+1,w
  6303  0DAB  00AC               	movwf	??___flmul
  6304  0DAC  01AD               	clrf	??___flmul+1
  6305  0DAD  01AE               	clrf	??___flmul+2
  6306  0DAE  01AF               	clrf	??___flmul+3
  6307  0DAF  082C               	movf	??___flmul,w
  6308  0DB0  07B8               	addwf	___flmul@prod,f
  6309  0DB1  082D               	movf	??___flmul+1,w
  6310  0DB2  1103               	clrz
  6311  0DB3  1803               	skipnc
  6312  0DB4  3E01               	addlw	1
  6313  0DB5  1903               	skipnz
  6314  0DB6  2DB8               	goto	u3741
  6315  0DB7  07B9               	addwf	___flmul@prod+1,f
  6316  0DB8                     u3741:
  6317  0DB8  082E               	movf	??___flmul+2,w
  6318  0DB9  1103               	clrz
  6319  0DBA  1803               	skipnc
  6320  0DBB  3E01               	addlw	1
  6321  0DBC  1903               	skipnz
  6322  0DBD  2DBF               	goto	u3742
  6323  0DBE  07BA               	addwf	___flmul@prod+2,f
  6324  0DBF                     u3742:
  6325  0DBF  082F               	movf	??___flmul+3,w
  6326  0DC0  1103               	clrz
  6327  0DC1  1803               	skipnc
  6328  0DC2  3E01               	addlw	1
  6329  0DC3  1903               	skipnz
  6330  0DC4  2DC6               	goto	u3743
  6331  0DC5  07BB               	addwf	___flmul@prod+3,f
  6332  0DC6                     u3743:
  6333  0DC6                     l2648:
  6334  0DC6  3008               	movlw	8
  6335  0DC7  00AC               	movwf	??___flmul
  6336  0DC8                     u3755:
  6337  0DC8  1003               	clrc
  6338  0DC9  0DB2               	rlf	___flmul@grs,f
  6339  0DCA  0DB3               	rlf	___flmul@grs+1,f
  6340  0DCB  0DB4               	rlf	___flmul@grs+2,f
  6341  0DCC  0DB5               	rlf	___flmul@grs+3,f
  6342  0DCD  0BAC               	decfsz	??___flmul,f
  6343  0DCE  2DC8               	goto	u3755
  6344  0DCF                     l2650:
  6345  0DCF  0825               	movf	___flmul@b+1,w
  6346  0DD0  00AC               	movwf	??___flmul
  6347  0DD1  082C               	movf	??___flmul,w
  6348  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  6349  0DD3  0828               	movf	___flmul@a,w
  6350  0DD4  160A  158A  2425  120A  158A  	fcall	__Umul8_16
  6351  0DD9  0871               	movf	?__Umul8_16+1,w
  6352  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  6353  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  6354  0DDC  00BD               	movwf	___flmul@temp+1
  6355  0DDD  0870               	movf	?__Umul8_16,w
  6356  0DDE  00BC               	movwf	___flmul@temp
  6357  0DDF                     l2652:
  6358  0DDF  083C               	movf	___flmul@temp,w
  6359  0DE0  00AC               	movwf	??___flmul
  6360  0DE1  083D               	movf	___flmul@temp+1,w
  6361  0DE2  00AD               	movwf	??___flmul+1
  6362  0DE3  01AE               	clrf	??___flmul+2
  6363  0DE4  01AF               	clrf	??___flmul+3
  6364  0DE5  082C               	movf	??___flmul,w
  6365  0DE6  07B2               	addwf	___flmul@grs,f
  6366  0DE7  082D               	movf	??___flmul+1,w
  6367  0DE8  1103               	clrz
  6368  0DE9  1803               	skipnc
  6369  0DEA  3E01               	addlw	1
  6370  0DEB  1903               	skipnz
  6371  0DEC  2DEE               	goto	u3761
  6372  0DED  07B3               	addwf	___flmul@grs+1,f
  6373  0DEE                     u3761:
  6374  0DEE  082E               	movf	??___flmul+2,w
  6375  0DEF  1103               	clrz
  6376  0DF0  1803               	skipnc
  6377  0DF1  3E01               	addlw	1
  6378  0DF2  1903               	skipnz
  6379  0DF3  2DF5               	goto	u3762
  6380  0DF4  07B4               	addwf	___flmul@grs+2,f
  6381  0DF5                     u3762:
  6382  0DF5  082F               	movf	??___flmul+3,w
  6383  0DF6  1103               	clrz
  6384  0DF7  1803               	skipnc
  6385  0DF8  3E01               	addlw	1
  6386  0DF9  1903               	skipnz
  6387  0DFA  2DFC               	goto	u3763
  6388  0DFB  07B5               	addwf	___flmul@grs+3,f
  6389  0DFC                     u3763:
  6390  0DFC                     l2654:
  6391  0DFC  0824               	movf	___flmul@b,w
  6392  0DFD  00AC               	movwf	??___flmul
  6393  0DFE  082C               	movf	??___flmul,w
  6394  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  6395  0E00  0829               	movf	___flmul@a+1,w
  6396  0E01  160A  158A  2425  120A  158A  	fcall	__Umul8_16
  6397  0E06  0871               	movf	?__Umul8_16+1,w
  6398  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6399  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6400  0E09  00BD               	movwf	___flmul@temp+1
  6401  0E0A  0870               	movf	?__Umul8_16,w
  6402  0E0B  00BC               	movwf	___flmul@temp
  6403  0E0C                     l2656:
  6404  0E0C  083C               	movf	___flmul@temp,w
  6405  0E0D  00AC               	movwf	??___flmul
  6406  0E0E  083D               	movf	___flmul@temp+1,w
  6407  0E0F  00AD               	movwf	??___flmul+1
  6408  0E10  01AE               	clrf	??___flmul+2
  6409  0E11  01AF               	clrf	??___flmul+3
  6410  0E12  082C               	movf	??___flmul,w
  6411  0E13  07B2               	addwf	___flmul@grs,f
  6412  0E14  082D               	movf	??___flmul+1,w
  6413  0E15  1103               	clrz
  6414  0E16  1803               	skipnc
  6415  0E17  3E01               	addlw	1
  6416  0E18  1903               	skipnz
  6417  0E19  2E1B               	goto	u3771
  6418  0E1A  07B3               	addwf	___flmul@grs+1,f
  6419  0E1B                     u3771:
  6420  0E1B  082E               	movf	??___flmul+2,w
  6421  0E1C  1103               	clrz
  6422  0E1D  1803               	skipnc
  6423  0E1E  3E01               	addlw	1
  6424  0E1F  1903               	skipnz
  6425  0E20  2E22               	goto	u3772
  6426  0E21  07B4               	addwf	___flmul@grs+2,f
  6427  0E22                     u3772:
  6428  0E22  082F               	movf	??___flmul+3,w
  6429  0E23  1103               	clrz
  6430  0E24  1803               	skipnc
  6431  0E25  3E01               	addlw	1
  6432  0E26  1903               	skipnz
  6433  0E27  2E29               	goto	u3773
  6434  0E28  07B5               	addwf	___flmul@grs+3,f
  6435  0E29                     u3773:
  6436  0E29                     l2658:
  6437  0E29  3008               	movlw	8
  6438  0E2A  00AC               	movwf	??___flmul
  6439  0E2B                     u3785:
  6440  0E2B  1003               	clrc
  6441  0E2C  0DB2               	rlf	___flmul@grs,f
  6442  0E2D  0DB3               	rlf	___flmul@grs+1,f
  6443  0E2E  0DB4               	rlf	___flmul@grs+2,f
  6444  0E2F  0DB5               	rlf	___flmul@grs+3,f
  6445  0E30  0BAC               	decfsz	??___flmul,f
  6446  0E31  2E2B               	goto	u3785
  6447  0E32  0824               	movf	___flmul@b,w
  6448  0E33  00AC               	movwf	??___flmul
  6449  0E34  082C               	movf	??___flmul,w
  6450  0E35  00F0               	movwf	__Umul8_16@multiplicand
  6451  0E36  0828               	movf	___flmul@a,w
  6452  0E37  160A  158A  2425  120A  158A  	fcall	__Umul8_16
  6453  0E3C  0871               	movf	?__Umul8_16+1,w
  6454  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  6455  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  6456  0E3F  00BD               	movwf	___flmul@temp+1
  6457  0E40  0870               	movf	?__Umul8_16,w
  6458  0E41  00BC               	movwf	___flmul@temp
  6459  0E42                     l2660:
  6460  0E42  083C               	movf	___flmul@temp,w
  6461  0E43  00AC               	movwf	??___flmul
  6462  0E44  083D               	movf	___flmul@temp+1,w
  6463  0E45  00AD               	movwf	??___flmul+1
  6464  0E46  01AE               	clrf	??___flmul+2
  6465  0E47  01AF               	clrf	??___flmul+3
  6466  0E48  082C               	movf	??___flmul,w
  6467  0E49  07B2               	addwf	___flmul@grs,f
  6468  0E4A  082D               	movf	??___flmul+1,w
  6469  0E4B  1103               	clrz
  6470  0E4C  1803               	skipnc
  6471  0E4D  3E01               	addlw	1
  6472  0E4E  1903               	skipnz
  6473  0E4F  2E51               	goto	u3791
  6474  0E50  07B3               	addwf	___flmul@grs+1,f
  6475  0E51                     u3791:
  6476  0E51  082E               	movf	??___flmul+2,w
  6477  0E52  1103               	clrz
  6478  0E53  1803               	skipnc
  6479  0E54  3E01               	addlw	1
  6480  0E55  1903               	skipnz
  6481  0E56  2E58               	goto	u3792
  6482  0E57  07B4               	addwf	___flmul@grs+2,f
  6483  0E58                     u3792:
  6484  0E58  082F               	movf	??___flmul+3,w
  6485  0E59  1103               	clrz
  6486  0E5A  1803               	skipnc
  6487  0E5B  3E01               	addlw	1
  6488  0E5C  1903               	skipnz
  6489  0E5D  2E5F               	goto	u3793
  6490  0E5E  07B5               	addwf	___flmul@grs+3,f
  6491  0E5F                     u3793:
  6492  0E5F                     l2662:
  6493  0E5F  0825               	movf	___flmul@b+1,w
  6494  0E60  00AC               	movwf	??___flmul
  6495  0E61  082C               	movf	??___flmul,w
  6496  0E62  00F0               	movwf	__Umul8_16@multiplicand
  6497  0E63  082A               	movf	___flmul@a+2,w
  6498  0E64  160A  158A  2425  120A  158A  	fcall	__Umul8_16
  6499  0E69  0871               	movf	?__Umul8_16+1,w
  6500  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6501  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6502  0E6C  00BD               	movwf	___flmul@temp+1
  6503  0E6D  0870               	movf	?__Umul8_16,w
  6504  0E6E  00BC               	movwf	___flmul@temp
  6505  0E6F  083C               	movf	___flmul@temp,w
  6506  0E70  00AC               	movwf	??___flmul
  6507  0E71  083D               	movf	___flmul@temp+1,w
  6508  0E72  00AD               	movwf	??___flmul+1
  6509  0E73  01AE               	clrf	??___flmul+2
  6510  0E74  01AF               	clrf	??___flmul+3
  6511  0E75  082C               	movf	??___flmul,w
  6512  0E76  07B8               	addwf	___flmul@prod,f
  6513  0E77  082D               	movf	??___flmul+1,w
  6514  0E78  1103               	clrz
  6515  0E79  1803               	skipnc
  6516  0E7A  3E01               	addlw	1
  6517  0E7B  1903               	skipnz
  6518  0E7C  2E7E               	goto	u3801
  6519  0E7D  07B9               	addwf	___flmul@prod+1,f
  6520  0E7E                     u3801:
  6521  0E7E  082E               	movf	??___flmul+2,w
  6522  0E7F  1103               	clrz
  6523  0E80  1803               	skipnc
  6524  0E81  3E01               	addlw	1
  6525  0E82  1903               	skipnz
  6526  0E83  2E85               	goto	u3802
  6527  0E84  07BA               	addwf	___flmul@prod+2,f
  6528  0E85                     u3802:
  6529  0E85  082F               	movf	??___flmul+3,w
  6530  0E86  1103               	clrz
  6531  0E87  1803               	skipnc
  6532  0E88  3E01               	addlw	1
  6533  0E89  1903               	skipnz
  6534  0E8A  2E8C               	goto	u3803
  6535  0E8B  07BB               	addwf	___flmul@prod+3,f
  6536  0E8C                     u3803:
  6537  0E8C                     l2664:
  6538  0E8C  0826               	movf	___flmul@b+2,w
  6539  0E8D  00AC               	movwf	??___flmul
  6540  0E8E  082C               	movf	??___flmul,w
  6541  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6542  0E90  0829               	movf	___flmul@a+1,w
  6543  0E91  160A  158A  2425  120A  158A  	fcall	__Umul8_16
  6544  0E96  0871               	movf	?__Umul8_16+1,w
  6545  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6546  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6547  0E99  00BD               	movwf	___flmul@temp+1
  6548  0E9A  0870               	movf	?__Umul8_16,w
  6549  0E9B  00BC               	movwf	___flmul@temp
  6550  0E9C                     l2666:
  6551  0E9C  083C               	movf	___flmul@temp,w
  6552  0E9D  00AC               	movwf	??___flmul
  6553  0E9E  083D               	movf	___flmul@temp+1,w
  6554  0E9F  00AD               	movwf	??___flmul+1
  6555  0EA0  01AE               	clrf	??___flmul+2
  6556  0EA1  01AF               	clrf	??___flmul+3
  6557  0EA2  082C               	movf	??___flmul,w
  6558  0EA3  07B8               	addwf	___flmul@prod,f
  6559  0EA4  082D               	movf	??___flmul+1,w
  6560  0EA5  1103               	clrz
  6561  0EA6  1803               	skipnc
  6562  0EA7  3E01               	addlw	1
  6563  0EA8  1903               	skipnz
  6564  0EA9  2EAB               	goto	u3811
  6565  0EAA  07B9               	addwf	___flmul@prod+1,f
  6566  0EAB                     u3811:
  6567  0EAB  082E               	movf	??___flmul+2,w
  6568  0EAC  1103               	clrz
  6569  0EAD  1803               	skipnc
  6570  0EAE  3E01               	addlw	1
  6571  0EAF  1903               	skipnz
  6572  0EB0  2EB2               	goto	u3812
  6573  0EB1  07BA               	addwf	___flmul@prod+2,f
  6574  0EB2                     u3812:
  6575  0EB2  082F               	movf	??___flmul+3,w
  6576  0EB3  1103               	clrz
  6577  0EB4  1803               	skipnc
  6578  0EB5  3E01               	addlw	1
  6579  0EB6  1903               	skipnz
  6580  0EB7  2EB9               	goto	u3813
  6581  0EB8  07BB               	addwf	___flmul@prod+3,f
  6582  0EB9                     u3813:
  6583  0EB9  0826               	movf	___flmul@b+2,w
  6584  0EBA  00AC               	movwf	??___flmul
  6585  0EBB  082C               	movf	??___flmul,w
  6586  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6587  0EBD  082A               	movf	___flmul@a+2,w
  6588  0EBE  160A  158A  2425  120A  158A  	fcall	__Umul8_16
  6589  0EC3  0871               	movf	?__Umul8_16+1,w
  6590  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6591  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6592  0EC6  00BD               	movwf	___flmul@temp+1
  6593  0EC7  0870               	movf	?__Umul8_16,w
  6594  0EC8  00BC               	movwf	___flmul@temp
  6595  0EC9                     l2668:
  6596  0EC9  083C               	movf	___flmul@temp,w
  6597  0ECA  00AC               	movwf	??___flmul
  6598  0ECB  083D               	movf	___flmul@temp+1,w
  6599  0ECC  00AD               	movwf	??___flmul+1
  6600  0ECD  01AE               	clrf	??___flmul+2
  6601  0ECE  01AF               	clrf	??___flmul+3
  6602  0ECF  3008               	movlw	8
  6603  0ED0                     u3825:
  6604  0ED0  1003               	clrc
  6605  0ED1  0DAC               	rlf	??___flmul,f
  6606  0ED2  0DAD               	rlf	??___flmul+1,f
  6607  0ED3  0DAE               	rlf	??___flmul+2,f
  6608  0ED4  0DAF               	rlf	??___flmul+3,f
  6609  0ED5                     u3820:
  6610  0ED5  3EFF               	addlw	-1
  6611  0ED6  1D03               	skipz
  6612  0ED7  2ED0               	goto	u3825
  6613  0ED8  082C               	movf	??___flmul,w
  6614  0ED9  07B8               	addwf	___flmul@prod,f
  6615  0EDA  082D               	movf	??___flmul+1,w
  6616  0EDB  1103               	clrz
  6617  0EDC  1803               	skipnc
  6618  0EDD  3E01               	addlw	1
  6619  0EDE  1903               	skipnz
  6620  0EDF  2EE1               	goto	u3831
  6621  0EE0  07B9               	addwf	___flmul@prod+1,f
  6622  0EE1                     u3831:
  6623  0EE1  082E               	movf	??___flmul+2,w
  6624  0EE2  1103               	clrz
  6625  0EE3  1803               	skipnc
  6626  0EE4  3E01               	addlw	1
  6627  0EE5  1903               	skipnz
  6628  0EE6  2EE8               	goto	u3832
  6629  0EE7  07BA               	addwf	___flmul@prod+2,f
  6630  0EE8                     u3832:
  6631  0EE8  082F               	movf	??___flmul+3,w
  6632  0EE9  1103               	clrz
  6633  0EEA  1803               	skipnc
  6634  0EEB  3E01               	addlw	1
  6635  0EEC  1903               	skipnz
  6636  0EED  2EEF               	goto	u3833
  6637  0EEE  07BB               	addwf	___flmul@prod+3,f
  6638  0EEF                     u3833:
  6639  0EEF                     l2670:
  6640  0EEF  0832               	movf	___flmul@grs,w
  6641  0EF0  00AC               	movwf	??___flmul
  6642  0EF1  0833               	movf	___flmul@grs+1,w
  6643  0EF2  00AD               	movwf	??___flmul+1
  6644  0EF3  0834               	movf	___flmul@grs+2,w
  6645  0EF4  00AE               	movwf	??___flmul+2
  6646  0EF5  0835               	movf	___flmul@grs+3,w
  6647  0EF6  00AF               	movwf	??___flmul+3
  6648  0EF7  3018               	movlw	24
  6649  0EF8                     u3845:
  6650  0EF8  1003               	clrc
  6651  0EF9  0CAF               	rrf	??___flmul+3,f
  6652  0EFA  0CAE               	rrf	??___flmul+2,f
  6653  0EFB  0CAD               	rrf	??___flmul+1,f
  6654  0EFC  0CAC               	rrf	??___flmul,f
  6655  0EFD                     u3840:
  6656  0EFD  3EFF               	addlw	-1
  6657  0EFE  1D03               	skipz
  6658  0EFF  2EF8               	goto	u3845
  6659  0F00  082C               	movf	??___flmul,w
  6660  0F01  07B8               	addwf	___flmul@prod,f
  6661  0F02  082D               	movf	??___flmul+1,w
  6662  0F03  1103               	clrz
  6663  0F04  1803               	skipnc
  6664  0F05  3E01               	addlw	1
  6665  0F06  1903               	skipnz
  6666  0F07  2F09               	goto	u3851
  6667  0F08  07B9               	addwf	___flmul@prod+1,f
  6668  0F09                     u3851:
  6669  0F09  082E               	movf	??___flmul+2,w
  6670  0F0A  1103               	clrz
  6671  0F0B  1803               	skipnc
  6672  0F0C  3E01               	addlw	1
  6673  0F0D  1903               	skipnz
  6674  0F0E  2F10               	goto	u3852
  6675  0F0F  07BA               	addwf	___flmul@prod+2,f
  6676  0F10                     u3852:
  6677  0F10  082F               	movf	??___flmul+3,w
  6678  0F11  1103               	clrz
  6679  0F12  1803               	skipnc
  6680  0F13  3E01               	addlw	1
  6681  0F14  1903               	skipnz
  6682  0F15  2F17               	goto	u3853
  6683  0F16  07BB               	addwf	___flmul@prod+3,f
  6684  0F17                     u3853:
  6685  0F17                     l2672:
  6686  0F17  3008               	movlw	8
  6687  0F18  00AC               	movwf	??___flmul
  6688  0F19                     u3865:
  6689  0F19  1003               	clrc
  6690  0F1A  0DB2               	rlf	___flmul@grs,f
  6691  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6692  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6693  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6694  0F1E  0BAC               	decfsz	??___flmul,f
  6695  0F1F  2F19               	goto	u3865
  6696  0F20                     l2674:
  6697  0F20  0837               	movf	___flmul@bexp,w
  6698  0F21  0736               	addwf	___flmul@aexp,w
  6699  0F22  00AC               	movwf	??___flmul
  6700  0F23  01AD               	clrf	??___flmul+1
  6701  0F24  0DAD               	rlf	??___flmul+1,f
  6702  0F25  082C               	movf	??___flmul,w
  6703  0F26  3E82               	addlw	130
  6704  0F27  00BC               	movwf	___flmul@temp
  6705  0F28  082D               	movf	??___flmul+1,w
  6706  0F29  1803               	skipnc
  6707  0F2A  3E01               	addlw	1
  6708  0F2B  3EFF               	addlw	255
  6709  0F2C  00BD               	movwf	___flmul@temp+1
  6710  0F2D  2F4B               	goto	l2686
  6711  0F2E                     l2676:
  6712  0F2E  3001               	movlw	1
  6713  0F2F  00AC               	movwf	??___flmul
  6714  0F30                     u3875:
  6715  0F30  1003               	clrc
  6716  0F31  0DB8               	rlf	___flmul@prod,f
  6717  0F32  0DB9               	rlf	___flmul@prod+1,f
  6718  0F33  0DBA               	rlf	___flmul@prod+2,f
  6719  0F34  0DBB               	rlf	___flmul@prod+3,f
  6720  0F35  0BAC               	decfsz	??___flmul,f
  6721  0F36  2F30               	goto	u3875
  6722  0F37                     l2678:
  6723  0F37  1FB5               	btfss	___flmul@grs+3,7
  6724  0F38  2F3A               	goto	u3881
  6725  0F39  2F3B               	goto	u3880
  6726  0F3A                     u3881:
  6727  0F3A  2F3C               	goto	l2682
  6728  0F3B                     u3880:
  6729  0F3B                     l2680:
  6730  0F3B  1438               	bsf	___flmul@prod,0
  6731  0F3C                     l2682:
  6732  0F3C  3001               	movlw	1
  6733  0F3D  00AC               	movwf	??___flmul
  6734  0F3E                     u3895:
  6735  0F3E  1003               	clrc
  6736  0F3F  0DB2               	rlf	___flmul@grs,f
  6737  0F40  0DB3               	rlf	___flmul@grs+1,f
  6738  0F41  0DB4               	rlf	___flmul@grs+2,f
  6739  0F42  0DB5               	rlf	___flmul@grs+3,f
  6740  0F43  0BAC               	decfsz	??___flmul,f
  6741  0F44  2F3E               	goto	u3895
  6742  0F45                     l2684:
  6743  0F45  30FF               	movlw	255
  6744  0F46  07BC               	addwf	___flmul@temp,f
  6745  0F47  1803               	skipnc
  6746  0F48  0ABD               	incf	___flmul@temp+1,f
  6747  0F49  30FF               	movlw	255
  6748  0F4A  07BD               	addwf	___flmul@temp+1,f
  6749  0F4B                     l2686:
  6750  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6751  0F4C  2F4E               	goto	u3901
  6752  0F4D  2F4F               	goto	u3900
  6753  0F4E                     u3901:
  6754  0F4E  2F2E               	goto	l2676
  6755  0F4F                     u3900:
  6756  0F4F                     l2688:
  6757  0F4F  01B6               	clrf	___flmul@aexp
  6758  0F50                     l2690:
  6759  0F50  1FB5               	btfss	___flmul@grs+3,7
  6760  0F51  2F53               	goto	u3911
  6761  0F52  2F54               	goto	u3910
  6762  0F53                     u3911:
  6763  0F53  2F70               	goto	l2698
  6764  0F54                     u3910:
  6765  0F54                     l2692:
  6766  0F54  30FF               	movlw	255
  6767  0F55  0532               	andwf	___flmul@grs,w
  6768  0F56  00AC               	movwf	??___flmul
  6769  0F57  30FF               	movlw	255
  6770  0F58  0533               	andwf	___flmul@grs+1,w
  6771  0F59  00AD               	movwf	??___flmul+1
  6772  0F5A  30FF               	movlw	255
  6773  0F5B  0534               	andwf	___flmul@grs+2,w
  6774  0F5C  00AE               	movwf	??___flmul+2
  6775  0F5D  307F               	movlw	127
  6776  0F5E  0535               	andwf	___flmul@grs+3,w
  6777  0F5F  00AF               	movwf	??___flmul+3
  6778  0F60  082F               	movf	??___flmul+3,w
  6779  0F61  042E               	iorwf	??___flmul+2,w
  6780  0F62  042D               	iorwf	??___flmul+1,w
  6781  0F63  042C               	iorwf	??___flmul,w
  6782  0F64  1903               	skipnz
  6783  0F65  2F67               	goto	u3921
  6784  0F66  2F68               	goto	u3920
  6785  0F67                     u3921:
  6786  0F67  2F6B               	goto	l804
  6787  0F68                     u3920:
  6788  0F68                     l2694:
  6789  0F68  01B6               	clrf	___flmul@aexp
  6790  0F69  0AB6               	incf	___flmul@aexp,f
  6791  0F6A  2F70               	goto	l2698
  6792  0F6B                     l804:
  6793  0F6B  1C38               	btfss	___flmul@prod,0
  6794  0F6C  2F6E               	goto	u3931
  6795  0F6D  2F6F               	goto	u3930
  6796  0F6E                     u3931:
  6797  0F6E  2F70               	goto	l2698
  6798  0F6F                     u3930:
  6799  0F6F  2F68               	goto	l2694
  6800  0F70                     l2698:
  6801  0F70  0836               	movf	___flmul@aexp,w
  6802  0F71  1903               	btfsc	3,2
  6803  0F72  2F74               	goto	u3941
  6804  0F73  2F75               	goto	u3940
  6805  0F74                     u3941:
  6806  0F74  2FA6               	goto	l2708
  6807  0F75                     u3940:
  6808  0F75                     l2700:
  6809  0F75  3001               	movlw	1
  6810  0F76  07B8               	addwf	___flmul@prod,f
  6811  0F77  3000               	movlw	0
  6812  0F78  1803               	skipnc
  6813  0F79  3001               	movlw	1
  6814  0F7A  07B9               	addwf	___flmul@prod+1,f
  6815  0F7B  3000               	movlw	0
  6816  0F7C  1803               	skipnc
  6817  0F7D  3001               	movlw	1
  6818  0F7E  07BA               	addwf	___flmul@prod+2,f
  6819  0F7F  3000               	movlw	0
  6820  0F80  1803               	skipnc
  6821  0F81  3001               	movlw	1
  6822  0F82  07BB               	addwf	___flmul@prod+3,f
  6823  0F83                     l2702:
  6824  0F83  1C3B               	btfss	___flmul@prod+3,0
  6825  0F84  2F86               	goto	u3951
  6826  0F85  2F87               	goto	u3950
  6827  0F86                     u3951:
  6828  0F86  2FA6               	goto	l2708
  6829  0F87                     u3950:
  6830  0F87                     l2704:
  6831  0F87  0838               	movf	___flmul@prod,w
  6832  0F88  00AC               	movwf	??___flmul
  6833  0F89  0839               	movf	___flmul@prod+1,w
  6834  0F8A  00AD               	movwf	??___flmul+1
  6835  0F8B  083A               	movf	___flmul@prod+2,w
  6836  0F8C  00AE               	movwf	??___flmul+2
  6837  0F8D  083B               	movf	___flmul@prod+3,w
  6838  0F8E  00AF               	movwf	??___flmul+3
  6839  0F8F  3001               	movlw	1
  6840  0F90  00B0               	movwf	??___flmul+4
  6841  0F91                     u3965:
  6842  0F91  0D2F               	rlf	??___flmul+3,w
  6843  0F92  0CAF               	rrf	??___flmul+3,f
  6844  0F93  0CAE               	rrf	??___flmul+2,f
  6845  0F94  0CAD               	rrf	??___flmul+1,f
  6846  0F95  0CAC               	rrf	??___flmul,f
  6847  0F96                     u3960:
  6848  0F96  0BB0               	decfsz	??___flmul+4,f
  6849  0F97  2F91               	goto	u3965
  6850  0F98  082F               	movf	??___flmul+3,w
  6851  0F99  00BB               	movwf	___flmul@prod+3
  6852  0F9A  082E               	movf	??___flmul+2,w
  6853  0F9B  00BA               	movwf	___flmul@prod+2
  6854  0F9C  082D               	movf	??___flmul+1,w
  6855  0F9D  00B9               	movwf	___flmul@prod+1
  6856  0F9E  082C               	movf	??___flmul,w
  6857  0F9F  00B8               	movwf	___flmul@prod
  6858  0FA0                     l2706:
  6859  0FA0  3001               	movlw	1
  6860  0FA1  07BC               	addwf	___flmul@temp,f
  6861  0FA2  1803               	skipnc
  6862  0FA3  0ABD               	incf	___flmul@temp+1,f
  6863  0FA4  3000               	movlw	0
  6864  0FA5  07BD               	addwf	___flmul@temp+1,f
  6865  0FA6                     l2708:
  6866  0FA6  083D               	movf	___flmul@temp+1,w
  6867  0FA7  3A80               	xorlw	128
  6868  0FA8  00FF               	movwf	btemp+1
  6869  0FA9  3080               	movlw	128
  6870  0FAA  027F               	subwf	btemp+1,w
  6871  0FAB  1D03               	skipz
  6872  0FAC  2FAF               	goto	u3975
  6873  0FAD  30FF               	movlw	255
  6874  0FAE  023C               	subwf	___flmul@temp,w
  6875  0FAF                     u3975:
  6876  0FAF  1C03               	skipc
  6877  0FB0  2FB2               	goto	u3971
  6878  0FB1  2FB3               	goto	u3970
  6879  0FB2                     u3971:
  6880  0FB2  2FBE               	goto	l2712
  6881  0FB3                     u3970:
  6882  0FB3                     l2710:
  6883  0FB3  307F               	movlw	127
  6884  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6885  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6886  0FB6  00BB               	movwf	___flmul@prod+3
  6887  0FB7  3080               	movlw	128
  6888  0FB8  00BA               	movwf	___flmul@prod+2
  6889  0FB9  3000               	movlw	0
  6890  0FBA  00B9               	movwf	___flmul@prod+1
  6891  0FBB  3000               	movlw	0
  6892  0FBC  00B8               	movwf	___flmul@prod
  6893  0FBD  2FF3               	goto	l810
  6894  0FBE                     l2712:
  6895  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6896  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6897  0FC0  083D               	movf	___flmul@temp+1,w
  6898  0FC1  3A80               	xorlw	128
  6899  0FC2  00FF               	movwf	btemp+1
  6900  0FC3  3080               	movlw	128
  6901  0FC4  027F               	subwf	btemp+1,w
  6902  0FC5  1D03               	skipz
  6903  0FC6  2FC9               	goto	u3985
  6904  0FC7  3001               	movlw	1
  6905  0FC8  023C               	subwf	___flmul@temp,w
  6906  0FC9                     u3985:
  6907  0FC9  1803               	skipnc
  6908  0FCA  2FCC               	goto	u3981
  6909  0FCB  2FCD               	goto	u3980
  6910  0FCC                     u3981:
  6911  0FCC  2FD9               	goto	l2718
  6912  0FCD                     u3980:
  6913  0FCD                     l2714:
  6914  0FCD  3000               	movlw	0
  6915  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6916  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6917  0FD0  00BB               	movwf	___flmul@prod+3
  6918  0FD1  3000               	movlw	0
  6919  0FD2  00BA               	movwf	___flmul@prod+2
  6920  0FD3  3000               	movlw	0
  6921  0FD4  00B9               	movwf	___flmul@prod+1
  6922  0FD5  3000               	movlw	0
  6923  0FD6  00B8               	movwf	___flmul@prod
  6924  0FD7                     l2716:
  6925  0FD7  01B1               	clrf	___flmul@sign
  6926  0FD8  2FF3               	goto	l810
  6927  0FD9                     l2718:
  6928  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6929  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6930  0FDB  083C               	movf	___flmul@temp,w
  6931  0FDC  00AC               	movwf	??___flmul
  6932  0FDD  082C               	movf	??___flmul,w
  6933  0FDE  00B7               	movwf	___flmul@bexp
  6934  0FDF  30FF               	movlw	255
  6935  0FE0  05B8               	andwf	___flmul@prod,f
  6936  0FE1  30FF               	movlw	255
  6937  0FE2  05B9               	andwf	___flmul@prod+1,f
  6938  0FE3  307F               	movlw	127
  6939  0FE4  05BA               	andwf	___flmul@prod+2,f
  6940  0FE5  3000               	movlw	0
  6941  0FE6  05BB               	andwf	___flmul@prod+3,f
  6942  0FE7                     l2720:
  6943  0FE7  1C37               	btfss	___flmul@bexp,0
  6944  0FE8  2FEA               	goto	u3991
  6945  0FE9  2FEB               	goto	u3990
  6946  0FEA                     u3991:
  6947  0FEA  2FEC               	goto	l2724
  6948  0FEB                     u3990:
  6949  0FEB                     l2722:
  6950  0FEB  17BA               	bsf	___flmul@prod+2,7
  6951  0FEC                     l2724:
  6952  0FEC  0837               	movf	___flmul@bexp,w
  6953  0FED  00AC               	movwf	??___flmul
  6954  0FEE  1003               	clrc
  6955  0FEF  0C2C               	rrf	??___flmul,w
  6956  0FF0  00AD               	movwf	??___flmul+1
  6957  0FF1  082D               	movf	??___flmul+1,w
  6958  0FF2  00BB               	movwf	___flmul@prod+3
  6959  0FF3                     l810:
  6960  0FF3  0831               	movf	___flmul@sign,w
  6961  0FF4  00AC               	movwf	??___flmul
  6962  0FF5  082C               	movf	??___flmul,w
  6963  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6964  0FF7                     l2726:
  6965  0FF7  083B               	movf	___flmul@prod+3,w
  6966  0FF8  00A7               	movwf	?___flmul+3
  6967  0FF9  083A               	movf	___flmul@prod+2,w
  6968  0FFA  00A6               	movwf	?___flmul+2
  6969  0FFB  0839               	movf	___flmul@prod+1,w
  6970  0FFC  00A5               	movwf	?___flmul+1
  6971  0FFD  0838               	movf	___flmul@prod,w
  6972  0FFE  00A4               	movwf	?___flmul
  6973  0FFF                     l798:
  6974  0FFF  0008               	return
  6975  1000                     __end_of___flmul:
  6976                           
  6977                           	psect	text10
  6978  1C25                     __ptext10:	
  6979 ;; *************** function __Umul8_16 *****************
  6980 ;; Defined at:
  6981 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  multiplier      1    wreg     unsigned char 
  6984 ;;  multiplicand    1    0[COMMON] unsigned char 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;  multiplier      1    8[COMMON] unsigned char 
  6987 ;;  word_mpld       2    6[COMMON] unsigned int 
  6988 ;;  product         2    4[COMMON] unsigned int 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  2    0[COMMON] unsigned int 
  6991 ;; Registers used:
  6992 ;;		wreg, status,2, status,0
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6998 ;;      Params:         2       0       0       0       0
  6999 ;;      Locals:         5       0       0       0       0
  7000 ;;      Temps:          2       0       0       0       0
  7001 ;;      Totals:         9       0       0       0       0
  7002 ;;Total ram usage:        9 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		___flmul
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           
  7012                           ;psect for function __Umul8_16
  7013  1C25                     __Umul8_16:
  7014                           
  7015                           ;incstack = 0
  7016                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7017                           ;__Umul8_16@multiplier stored from wreg
  7018  1C25  00F8               	movwf	__Umul8_16@multiplier
  7019  1C26                     l2250:
  7020  1C26  01F4               	clrf	__Umul8_16@product
  7021  1C27  01F5               	clrf	__Umul8_16@product+1
  7022  1C28                     l2252:
  7023  1C28  0870               	movf	__Umul8_16@multiplicand,w
  7024  1C29  00F2               	movwf	??__Umul8_16
  7025  1C2A  01F3               	clrf	??__Umul8_16+1
  7026  1C2B  0872               	movf	??__Umul8_16,w
  7027  1C2C  00F6               	movwf	__Umul8_16@word_mpld
  7028  1C2D  0873               	movf	??__Umul8_16+1,w
  7029  1C2E  00F7               	movwf	__Umul8_16@word_mpld+1
  7030  1C2F                     l2254:
  7031  1C2F  1C78               	btfss	__Umul8_16@multiplier,0
  7032  1C30  2C32               	goto	u2821
  7033  1C31  2C33               	goto	u2820
  7034  1C32                     u2821:
  7035  1C32  2C39               	goto	l817
  7036  1C33                     u2820:
  7037  1C33                     l2256:
  7038  1C33  0876               	movf	__Umul8_16@word_mpld,w
  7039  1C34  07F4               	addwf	__Umul8_16@product,f
  7040  1C35  1803               	skipnc
  7041  1C36  0AF5               	incf	__Umul8_16@product+1,f
  7042  1C37  0877               	movf	__Umul8_16@word_mpld+1,w
  7043  1C38  07F5               	addwf	__Umul8_16@product+1,f
  7044  1C39                     l817:
  7045  1C39  3001               	movlw	1
  7046  1C3A                     u2835:
  7047  1C3A  1003               	clrc
  7048  1C3B  0DF6               	rlf	__Umul8_16@word_mpld,f
  7049  1C3C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7050  1C3D  3EFF               	addlw	-1
  7051  1C3E  1D03               	skipz
  7052  1C3F  2C3A               	goto	u2835
  7053  1C40  1003               	clrc
  7054  1C41  0CF8               	rrf	__Umul8_16@multiplier,f
  7055  1C42                     l2258:
  7056  1C42  0878               	movf	__Umul8_16@multiplier,w
  7057  1C43  1D03               	btfss	3,2
  7058  1C44  2C46               	goto	u2841
  7059  1C45  2C47               	goto	u2840
  7060  1C46                     u2841:
  7061  1C46  2C2F               	goto	l2254
  7062  1C47                     u2840:
  7063  1C47                     l2260:
  7064  1C47  0875               	movf	__Umul8_16@product+1,w
  7065  1C48  00F1               	movwf	?__Umul8_16+1
  7066  1C49  0874               	movf	__Umul8_16@product,w
  7067  1C4A  00F0               	movwf	?__Umul8_16
  7068  1C4B                     l819:
  7069  1C4B  0008               	return
  7070  1C4C                     __end_of__Umul8_16:
  7071                           
  7072                           	psect	text11
  7073  1070                     __ptext11:	
  7074 ;; *************** function __tdiv_to_l_ *****************
  7075 ;; Defined at:
  7076 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  f1              4    0[COMMON] float 
  7079 ;;  f2              4    4[COMMON] float 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  quot            4    0[BANK0 ] unsigned long 
  7082 ;;  exp1            1    5[BANK0 ] unsigned char 
  7083 ;;  cntr            1    4[BANK0 ] unsigned char 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  4    0[COMMON] unsigned long 
  7086 ;; Registers used:
  7087 ;;		wreg, status,2, status,0
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7093 ;;      Params:         8       0       0       0       0
  7094 ;;      Locals:         0       6       0       0       0
  7095 ;;      Temps:          4       0       0       0       0
  7096 ;;      Totals:        12       6       0       0       0
  7097 ;;Total ram usage:       18 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; This function calls:
  7100 ;;		Nothing
  7101 ;; This function is called by:
  7102 ;;		_sprintf
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           
  7107                           ;psect for function __tdiv_to_l_
  7108  1070                     __tdiv_to_l_:
  7109  1070                     l2834:	
  7110                           ;incstack = 0
  7111                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7112                           
  7113  1070  0870               	movf	__tdiv_to_l_@f1,w
  7114  1071  00F8               	movwf	??__tdiv_to_l_
  7115  1072  0871               	movf	__tdiv_to_l_@f1+1,w
  7116  1073  00F9               	movwf	??__tdiv_to_l_+1
  7117  1074  0872               	movf	__tdiv_to_l_@f1+2,w
  7118  1075  00FA               	movwf	??__tdiv_to_l_+2
  7119  1076  1003               	clrc
  7120  1077  0D79               	rlf	??__tdiv_to_l_+1,w
  7121  1078  0D7A               	rlf	??__tdiv_to_l_+2,w
  7122  1079  00FB               	movwf	??__tdiv_to_l_+3
  7123  107A  087B               	movf	??__tdiv_to_l_+3,w
  7124  107B  1283               	bcf	3,5	;RP0=0, select bank0
  7125  107C  1303               	bcf	3,6	;RP1=0, select bank0
  7126  107D  00A5               	movwf	__tdiv_to_l_@exp1
  7127  107E  0825               	movf	__tdiv_to_l_@exp1,w
  7128  107F  1D03               	btfss	3,2
  7129  1080  2882               	goto	u4281
  7130  1081  2883               	goto	u4280
  7131  1082                     u4281:
  7132  1082  288C               	goto	l2840
  7133  1083                     u4280:
  7134  1083                     l2836:
  7135  1083  3000               	movlw	0
  7136  1084  00F3               	movwf	?__tdiv_to_l_+3
  7137  1085  3000               	movlw	0
  7138  1086  00F2               	movwf	?__tdiv_to_l_+2
  7139  1087  3000               	movlw	0
  7140  1088  00F1               	movwf	?__tdiv_to_l_+1
  7141  1089  3000               	movlw	0
  7142  108A  00F0               	movwf	?__tdiv_to_l_
  7143  108B  292C               	goto	l592
  7144  108C                     l2840:
  7145  108C  0874               	movf	__tdiv_to_l_@f2,w
  7146  108D  00F8               	movwf	??__tdiv_to_l_
  7147  108E  0875               	movf	__tdiv_to_l_@f2+1,w
  7148  108F  00F9               	movwf	??__tdiv_to_l_+1
  7149  1090  0876               	movf	__tdiv_to_l_@f2+2,w
  7150  1091  00FA               	movwf	??__tdiv_to_l_+2
  7151  1092  1003               	clrc
  7152  1093  0D79               	rlf	??__tdiv_to_l_+1,w
  7153  1094  0D7A               	rlf	??__tdiv_to_l_+2,w
  7154  1095  00FB               	movwf	??__tdiv_to_l_+3
  7155  1096  087B               	movf	??__tdiv_to_l_+3,w
  7156  1097  00A4               	movwf	__tdiv_to_l_@cntr
  7157  1098  0824               	movf	__tdiv_to_l_@cntr,w
  7158  1099  1D03               	btfss	3,2
  7159  109A  289C               	goto	u4291
  7160  109B  289D               	goto	u4290
  7161  109C                     u4291:
  7162  109C  289E               	goto	l593
  7163  109D                     u4290:
  7164  109D  2883               	goto	l2836
  7165  109E                     l593:
  7166  109E  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7167  109F                     l2846:
  7168  109F  30FF               	movlw	255
  7169  10A0  05F0               	andwf	__tdiv_to_l_@f1,f
  7170  10A1  30FF               	movlw	255
  7171  10A2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7172  10A3  3000               	movlw	0
  7173  10A4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7174  10A5                     l2848:
  7175  10A5  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7176  10A6  30FF               	movlw	255
  7177  10A7  05F4               	andwf	__tdiv_to_l_@f2,f
  7178  10A8  30FF               	movlw	255
  7179  10A9  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7180  10AA  3000               	movlw	0
  7181  10AB  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7182  10AC  3000               	movlw	0
  7183  10AD  00A3               	movwf	__tdiv_to_l_@quot+3
  7184  10AE  3000               	movlw	0
  7185  10AF  00A2               	movwf	__tdiv_to_l_@quot+2
  7186  10B0  3000               	movlw	0
  7187  10B1  00A1               	movwf	__tdiv_to_l_@quot+1
  7188  10B2  3000               	movlw	0
  7189  10B3  00A0               	movwf	__tdiv_to_l_@quot
  7190  10B4                     l2850:
  7191  10B4  307F               	movlw	127
  7192  10B5  02A5               	subwf	__tdiv_to_l_@exp1,f
  7193  10B6                     l2852:
  7194  10B6  3098               	movlw	152
  7195  10B7  0724               	addwf	__tdiv_to_l_@cntr,w
  7196  10B8  00F8               	movwf	??__tdiv_to_l_
  7197  10B9  0878               	movf	??__tdiv_to_l_,w
  7198  10BA  02A5               	subwf	__tdiv_to_l_@exp1,f
  7199  10BB  3018               	movlw	24
  7200  10BC  00F8               	movwf	??__tdiv_to_l_
  7201  10BD  0878               	movf	??__tdiv_to_l_,w
  7202  10BE  00A4               	movwf	__tdiv_to_l_@cntr
  7203  10BF                     l2854:
  7204  10BF  3001               	movlw	1
  7205  10C0  00F8               	movwf	??__tdiv_to_l_
  7206  10C1                     u4305:
  7207  10C1  1003               	clrc
  7208  10C2  0DA0               	rlf	__tdiv_to_l_@quot,f
  7209  10C3  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7210  10C4  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7211  10C5  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7212  10C6  0BF8               	decfsz	??__tdiv_to_l_,f
  7213  10C7  28C1               	goto	u4305
  7214  10C8                     l2856:
  7215  10C8  0876               	movf	__tdiv_to_l_@f2+2,w
  7216  10C9  0272               	subwf	__tdiv_to_l_@f1+2,w
  7217  10CA  1D03               	skipz
  7218  10CB  28D2               	goto	u4315
  7219  10CC  0875               	movf	__tdiv_to_l_@f2+1,w
  7220  10CD  0271               	subwf	__tdiv_to_l_@f1+1,w
  7221  10CE  1D03               	skipz
  7222  10CF  28D2               	goto	u4315
  7223  10D0  0874               	movf	__tdiv_to_l_@f2,w
  7224  10D1  0270               	subwf	__tdiv_to_l_@f1,w
  7225  10D2                     u4315:
  7226  10D2  1C03               	skipc
  7227  10D3  28D5               	goto	u4311
  7228  10D4  28D6               	goto	u4310
  7229  10D5                     u4311:
  7230  10D5  28E1               	goto	l2862
  7231  10D6                     u4310:
  7232  10D6                     l2858:
  7233  10D6  0874               	movf	__tdiv_to_l_@f2,w
  7234  10D7  02F0               	subwf	__tdiv_to_l_@f1,f
  7235  10D8  0875               	movf	__tdiv_to_l_@f2+1,w
  7236  10D9  1C03               	skipc
  7237  10DA  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7238  10DB  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7239  10DC  0876               	movf	__tdiv_to_l_@f2+2,w
  7240  10DD  1C03               	skipc
  7241  10DE  0A76               	incf	__tdiv_to_l_@f2+2,w
  7242  10DF  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7243  10E0                     l2860:
  7244  10E0  1420               	bsf	__tdiv_to_l_@quot,0
  7245  10E1                     l2862:
  7246  10E1  3001               	movlw	1
  7247  10E2                     u4325:
  7248  10E2  1003               	clrc
  7249  10E3  0DF0               	rlf	__tdiv_to_l_@f1,f
  7250  10E4  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7251  10E5  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7252  10E6  3EFF               	addlw	-1
  7253  10E7  1D03               	skipz
  7254  10E8  28E2               	goto	u4325
  7255  10E9                     l2864:
  7256  10E9  3001               	movlw	1
  7257  10EA  02A4               	subwf	__tdiv_to_l_@cntr,f
  7258  10EB  1D03               	btfss	3,2
  7259  10EC  28EE               	goto	u4331
  7260  10ED  28EF               	goto	u4330
  7261  10EE                     u4331:
  7262  10EE  28BF               	goto	l2854
  7263  10EF                     u4330:
  7264  10EF                     l596:
  7265  10EF  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7266  10F0  28F2               	goto	u4341
  7267  10F1  28F3               	goto	u4340
  7268  10F2                     u4341:
  7269  10F2  290D               	goto	l2874
  7270  10F3                     u4340:
  7271  10F3                     l2866:
  7272  10F3  0825               	movf	__tdiv_to_l_@exp1,w
  7273  10F4  3A80               	xorlw	128
  7274  10F5  3E97               	addlw	151
  7275  10F6  1803               	skipnc
  7276  10F7  28F9               	goto	u4351
  7277  10F8  28FA               	goto	u4350
  7278  10F9                     u4351:
  7279  10F9  28FB               	goto	l2872
  7280  10FA                     u4350:
  7281  10FA  2883               	goto	l2836
  7282  10FB                     l2872:
  7283  10FB  3001               	movlw	1
  7284  10FC                     u4365:
  7285  10FC  1003               	clrc
  7286  10FD  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7287  10FE  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7288  10FF  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7289  1100  0CA0               	rrf	__tdiv_to_l_@quot,f
  7290  1101  3EFF               	addlw	-1
  7291  1102  1D03               	skipz
  7292  1103  28FC               	goto	u4365
  7293  1104  3001               	movlw	1
  7294  1105  00F8               	movwf	??__tdiv_to_l_
  7295  1106  0878               	movf	??__tdiv_to_l_,w
  7296  1107  07A5               	addwf	__tdiv_to_l_@exp1,f
  7297  1108  1D03               	btfss	3,2
  7298  1109  290B               	goto	u4371
  7299  110A  290C               	goto	u4370
  7300  110B                     u4371:
  7301  110B  28FB               	goto	l2872
  7302  110C                     u4370:
  7303  110C  2924               	goto	l2882
  7304  110D                     l2874:
  7305  110D  3018               	movlw	24
  7306  110E  0225               	subwf	__tdiv_to_l_@exp1,w
  7307  110F  1C03               	skipc
  7308  1110  2912               	goto	u4381
  7309  1111  2913               	goto	u4380
  7310  1112                     u4381:
  7311  1112  291F               	goto	l603
  7312  1113                     u4380:
  7313  1113  2883               	goto	l2836
  7314  1114                     l2880:
  7315  1114  3001               	movlw	1
  7316  1115  00F8               	movwf	??__tdiv_to_l_
  7317  1116                     u4395:
  7318  1116  1003               	clrc
  7319  1117  0DA0               	rlf	__tdiv_to_l_@quot,f
  7320  1118  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7321  1119  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7322  111A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7323  111B  0BF8               	decfsz	??__tdiv_to_l_,f
  7324  111C  2916               	goto	u4395
  7325  111D  3001               	movlw	1
  7326  111E  02A5               	subwf	__tdiv_to_l_@exp1,f
  7327  111F                     l603:
  7328  111F  0825               	movf	__tdiv_to_l_@exp1,w
  7329  1120  1D03               	btfss	3,2
  7330  1121  2923               	goto	u4401
  7331  1122  2924               	goto	u4400
  7332  1123                     u4401:
  7333  1123  2914               	goto	l2880
  7334  1124                     u4400:
  7335  1124                     l2882:
  7336  1124  0823               	movf	__tdiv_to_l_@quot+3,w
  7337  1125  00F3               	movwf	?__tdiv_to_l_+3
  7338  1126  0822               	movf	__tdiv_to_l_@quot+2,w
  7339  1127  00F2               	movwf	?__tdiv_to_l_+2
  7340  1128  0821               	movf	__tdiv_to_l_@quot+1,w
  7341  1129  00F1               	movwf	?__tdiv_to_l_+1
  7342  112A  0820               	movf	__tdiv_to_l_@quot,w
  7343  112B  00F0               	movwf	?__tdiv_to_l_
  7344  112C                     l592:
  7345  112C  0008               	return
  7346  112D                     __end_of__tdiv_to_l_:
  7347                           
  7348                           	psect	text12
  7349  112D                     __ptext12:	
  7350 ;; *************** function __div_to_l_ *****************
  7351 ;; Defined at:
  7352 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  f1              4    0[COMMON] unsigned long 
  7355 ;;  f2              4    4[COMMON] unsigned long 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  quot            4    0[BANK0 ] unsigned long 
  7358 ;;  exp1            1    5[BANK0 ] unsigned char 
  7359 ;;  cntr            1    4[BANK0 ] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  4    0[COMMON] unsigned long 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7369 ;;      Params:         8       0       0       0       0
  7370 ;;      Locals:         0       6       0       0       0
  7371 ;;      Temps:          1       0       0       0       0
  7372 ;;      Totals:         9       6       0       0       0
  7373 ;;Total ram usage:       15 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_sprintf
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           
  7383                           ;psect for function __div_to_l_
  7384  112D                     __div_to_l_:
  7385  112D                     l2886:	
  7386                           ;incstack = 0
  7387                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7388                           
  7389  112D  1003               	clrc
  7390  112E  0D72               	rlf	__div_to_l_@f1+2,w
  7391  112F  0D73               	rlf	__div_to_l_@f1+3,w
  7392  1130  00F8               	movwf	??__div_to_l_
  7393  1131  0878               	movf	??__div_to_l_,w
  7394  1132  1283               	bcf	3,5	;RP0=0, select bank0
  7395  1133  1303               	bcf	3,6	;RP1=0, select bank0
  7396  1134  00A5               	movwf	__div_to_l_@exp1
  7397  1135  0825               	movf	__div_to_l_@exp1,w
  7398  1136  1D03               	btfss	3,2
  7399  1137  2939               	goto	u4411
  7400  1138  293A               	goto	u4410
  7401  1139                     u4411:
  7402  1139  2943               	goto	l2892
  7403  113A                     u4410:
  7404  113A                     l2888:
  7405  113A  3000               	movlw	0
  7406  113B  00F3               	movwf	?__div_to_l_+3
  7407  113C  3000               	movlw	0
  7408  113D  00F2               	movwf	?__div_to_l_+2
  7409  113E  3000               	movlw	0
  7410  113F  00F1               	movwf	?__div_to_l_+1
  7411  1140  3000               	movlw	0
  7412  1141  00F0               	movwf	?__div_to_l_
  7413  1142  29EA               	goto	l545
  7414  1143                     l2892:
  7415  1143  1003               	clrc
  7416  1144  0D76               	rlf	__div_to_l_@f2+2,w
  7417  1145  0D77               	rlf	__div_to_l_@f2+3,w
  7418  1146  00F8               	movwf	??__div_to_l_
  7419  1147  0878               	movf	??__div_to_l_,w
  7420  1148  00A4               	movwf	__div_to_l_@cntr
  7421  1149  0824               	movf	__div_to_l_@cntr,w
  7422  114A  1D03               	btfss	3,2
  7423  114B  294D               	goto	u4421
  7424  114C  294E               	goto	u4420
  7425  114D                     u4421:
  7426  114D  294F               	goto	l546
  7427  114E                     u4420:
  7428  114E  293A               	goto	l2888
  7429  114F                     l546:
  7430  114F  17F2               	bsf	__div_to_l_@f1+2,7
  7431  1150                     l2898:
  7432  1150  30FF               	movlw	255
  7433  1151  05F0               	andwf	__div_to_l_@f1,f
  7434  1152  30FF               	movlw	255
  7435  1153  05F1               	andwf	__div_to_l_@f1+1,f
  7436  1154  30FF               	movlw	255
  7437  1155  05F2               	andwf	__div_to_l_@f1+2,f
  7438  1156  3000               	movlw	0
  7439  1157  05F3               	andwf	__div_to_l_@f1+3,f
  7440  1158                     l2900:
  7441  1158  17F6               	bsf	__div_to_l_@f2+2,7
  7442  1159  30FF               	movlw	255
  7443  115A  05F4               	andwf	__div_to_l_@f2,f
  7444  115B  30FF               	movlw	255
  7445  115C  05F5               	andwf	__div_to_l_@f2+1,f
  7446  115D  30FF               	movlw	255
  7447  115E  05F6               	andwf	__div_to_l_@f2+2,f
  7448  115F  3000               	movlw	0
  7449  1160  05F7               	andwf	__div_to_l_@f2+3,f
  7450  1161  3000               	movlw	0
  7451  1162  00A3               	movwf	__div_to_l_@quot+3
  7452  1163  3000               	movlw	0
  7453  1164  00A2               	movwf	__div_to_l_@quot+2
  7454  1165  3000               	movlw	0
  7455  1166  00A1               	movwf	__div_to_l_@quot+1
  7456  1167  3000               	movlw	0
  7457  1168  00A0               	movwf	__div_to_l_@quot
  7458  1169                     l2902:
  7459  1169  307F               	movlw	127
  7460  116A  02A5               	subwf	__div_to_l_@exp1,f
  7461  116B                     l2904:
  7462  116B  30A0               	movlw	160
  7463  116C  0724               	addwf	__div_to_l_@cntr,w
  7464  116D  00F8               	movwf	??__div_to_l_
  7465  116E  0878               	movf	??__div_to_l_,w
  7466  116F  02A5               	subwf	__div_to_l_@exp1,f
  7467  1170  3020               	movlw	32
  7468  1171  00F8               	movwf	??__div_to_l_
  7469  1172  0878               	movf	??__div_to_l_,w
  7470  1173  00A4               	movwf	__div_to_l_@cntr
  7471  1174                     l2906:
  7472  1174  3001               	movlw	1
  7473  1175  00F8               	movwf	??__div_to_l_
  7474  1176                     u4435:
  7475  1176  1003               	clrc
  7476  1177  0DA0               	rlf	__div_to_l_@quot,f
  7477  1178  0DA1               	rlf	__div_to_l_@quot+1,f
  7478  1179  0DA2               	rlf	__div_to_l_@quot+2,f
  7479  117A  0DA3               	rlf	__div_to_l_@quot+3,f
  7480  117B  0BF8               	decfsz	??__div_to_l_,f
  7481  117C  2976               	goto	u4435
  7482  117D                     l2908:
  7483  117D  0877               	movf	__div_to_l_@f2+3,w
  7484  117E  0273               	subwf	__div_to_l_@f1+3,w
  7485  117F  1D03               	skipz
  7486  1180  298B               	goto	u4445
  7487  1181  0876               	movf	__div_to_l_@f2+2,w
  7488  1182  0272               	subwf	__div_to_l_@f1+2,w
  7489  1183  1D03               	skipz
  7490  1184  298B               	goto	u4445
  7491  1185  0875               	movf	__div_to_l_@f2+1,w
  7492  1186  0271               	subwf	__div_to_l_@f1+1,w
  7493  1187  1D03               	skipz
  7494  1188  298B               	goto	u4445
  7495  1189  0874               	movf	__div_to_l_@f2,w
  7496  118A  0270               	subwf	__div_to_l_@f1,w
  7497  118B                     u4445:
  7498  118B  1C03               	skipc
  7499  118C  298E               	goto	u4441
  7500  118D  298F               	goto	u4440
  7501  118E                     u4441:
  7502  118E  299E               	goto	l2914
  7503  118F                     u4440:
  7504  118F                     l2910:
  7505  118F  0874               	movf	__div_to_l_@f2,w
  7506  1190  02F0               	subwf	__div_to_l_@f1,f
  7507  1191  0875               	movf	__div_to_l_@f2+1,w
  7508  1192  1C03               	skipc
  7509  1193  0F75               	incfsz	__div_to_l_@f2+1,w
  7510  1194  02F1               	subwf	__div_to_l_@f1+1,f
  7511  1195  0876               	movf	__div_to_l_@f2+2,w
  7512  1196  1C03               	skipc
  7513  1197  0F76               	incfsz	__div_to_l_@f2+2,w
  7514  1198  02F2               	subwf	__div_to_l_@f1+2,f
  7515  1199  0877               	movf	__div_to_l_@f2+3,w
  7516  119A  1C03               	skipc
  7517  119B  0F77               	incfsz	__div_to_l_@f2+3,w
  7518  119C  02F3               	subwf	__div_to_l_@f1+3,f
  7519  119D                     l2912:
  7520  119D  1420               	bsf	__div_to_l_@quot,0
  7521  119E                     l2914:
  7522  119E  3001               	movlw	1
  7523  119F  00F8               	movwf	??__div_to_l_
  7524  11A0                     u4455:
  7525  11A0  1003               	clrc
  7526  11A1  0DF0               	rlf	__div_to_l_@f1,f
  7527  11A2  0DF1               	rlf	__div_to_l_@f1+1,f
  7528  11A3  0DF2               	rlf	__div_to_l_@f1+2,f
  7529  11A4  0DF3               	rlf	__div_to_l_@f1+3,f
  7530  11A5  0BF8               	decfsz	??__div_to_l_,f
  7531  11A6  29A0               	goto	u4455
  7532  11A7                     l2916:
  7533  11A7  3001               	movlw	1
  7534  11A8  02A4               	subwf	__div_to_l_@cntr,f
  7535  11A9  1D03               	btfss	3,2
  7536  11AA  29AC               	goto	u4461
  7537  11AB  29AD               	goto	u4460
  7538  11AC                     u4461:
  7539  11AC  2974               	goto	l2906
  7540  11AD                     u4460:
  7541  11AD                     l549:
  7542  11AD  1FA5               	btfss	__div_to_l_@exp1,7
  7543  11AE  29B0               	goto	u4471
  7544  11AF  29B1               	goto	u4470
  7545  11B0                     u4471:
  7546  11B0  29CB               	goto	l2926
  7547  11B1                     u4470:
  7548  11B1                     l2918:
  7549  11B1  0825               	movf	__div_to_l_@exp1,w
  7550  11B2  3A80               	xorlw	128
  7551  11B3  3E9F               	addlw	159
  7552  11B4  1803               	skipnc
  7553  11B5  29B7               	goto	u4481
  7554  11B6  29B8               	goto	u4480
  7555  11B7                     u4481:
  7556  11B7  29B9               	goto	l2924
  7557  11B8                     u4480:
  7558  11B8  293A               	goto	l2888
  7559  11B9                     l2924:
  7560  11B9  3001               	movlw	1
  7561  11BA                     u4495:
  7562  11BA  1003               	clrc
  7563  11BB  0CA3               	rrf	__div_to_l_@quot+3,f
  7564  11BC  0CA2               	rrf	__div_to_l_@quot+2,f
  7565  11BD  0CA1               	rrf	__div_to_l_@quot+1,f
  7566  11BE  0CA0               	rrf	__div_to_l_@quot,f
  7567  11BF  3EFF               	addlw	-1
  7568  11C0  1D03               	skipz
  7569  11C1  29BA               	goto	u4495
  7570  11C2  3001               	movlw	1
  7571  11C3  00F8               	movwf	??__div_to_l_
  7572  11C4  0878               	movf	??__div_to_l_,w
  7573  11C5  07A5               	addwf	__div_to_l_@exp1,f
  7574  11C6  1D03               	btfss	3,2
  7575  11C7  29C9               	goto	u4501
  7576  11C8  29CA               	goto	u4500
  7577  11C9                     u4501:
  7578  11C9  29B9               	goto	l2924
  7579  11CA                     u4500:
  7580  11CA  29E2               	goto	l2934
  7581  11CB                     l2926:
  7582  11CB  3020               	movlw	32
  7583  11CC  0225               	subwf	__div_to_l_@exp1,w
  7584  11CD  1C03               	skipc
  7585  11CE  29D0               	goto	u4511
  7586  11CF  29D1               	goto	u4510
  7587  11D0                     u4511:
  7588  11D0  29DD               	goto	l556
  7589  11D1                     u4510:
  7590  11D1  293A               	goto	l2888
  7591  11D2                     l2932:
  7592  11D2  3001               	movlw	1
  7593  11D3  00F8               	movwf	??__div_to_l_
  7594  11D4                     u4525:
  7595  11D4  1003               	clrc
  7596  11D5  0DA0               	rlf	__div_to_l_@quot,f
  7597  11D6  0DA1               	rlf	__div_to_l_@quot+1,f
  7598  11D7  0DA2               	rlf	__div_to_l_@quot+2,f
  7599  11D8  0DA3               	rlf	__div_to_l_@quot+3,f
  7600  11D9  0BF8               	decfsz	??__div_to_l_,f
  7601  11DA  29D4               	goto	u4525
  7602  11DB  3001               	movlw	1
  7603  11DC  02A5               	subwf	__div_to_l_@exp1,f
  7604  11DD                     l556:
  7605  11DD  0825               	movf	__div_to_l_@exp1,w
  7606  11DE  1D03               	btfss	3,2
  7607  11DF  29E1               	goto	u4531
  7608  11E0  29E2               	goto	u4530
  7609  11E1                     u4531:
  7610  11E1  29D2               	goto	l2932
  7611  11E2                     u4530:
  7612  11E2                     l2934:
  7613  11E2  0823               	movf	__div_to_l_@quot+3,w
  7614  11E3  00F3               	movwf	?__div_to_l_+3
  7615  11E4  0822               	movf	__div_to_l_@quot+2,w
  7616  11E5  00F2               	movwf	?__div_to_l_+2
  7617  11E6  0821               	movf	__div_to_l_@quot+1,w
  7618  11E7  00F1               	movwf	?__div_to_l_+1
  7619  11E8  0820               	movf	__div_to_l_@quot,w
  7620  11E9  00F0               	movwf	?__div_to_l_
  7621  11EA                     l545:
  7622  11EA  0008               	return
  7623  11EB                     __end_of__div_to_l_:
  7624                           
  7625                           	psect	text13
  7626  1F46                     __ptext13:	
  7627 ;; *************** function ___xxtofl *****************
  7628 ;; Defined at:
  7629 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  sign            1    wreg     unsigned char 
  7632 ;;  val             4    0[COMMON] long 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;  sign            1    8[COMMON] unsigned char 
  7635 ;;  arg             4   10[COMMON] unsigned long 
  7636 ;;  exp             1    9[COMMON] unsigned char 
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  4    0[COMMON] unsigned char 
  7639 ;; Registers used:
  7640 ;;		wreg, status,2, status,0
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7646 ;;      Params:         4       0       0       0       0
  7647 ;;      Locals:         6       0       0       0       0
  7648 ;;      Temps:          4       0       0       0       0
  7649 ;;      Totals:        14       0       0       0       0
  7650 ;;Total ram usage:       14 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_main
  7656 ;;		_sprintf
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           
  7661                           ;psect for function ___xxtofl
  7662  1F46                     ___xxtofl:
  7663                           
  7664                           ;incstack = 0
  7665                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7666                           ;___xxtofl@sign stored from wreg
  7667  1F46  00F8               	movwf	___xxtofl@sign
  7668  1F47                     l3078:
  7669  1F47  0878               	movf	___xxtofl@sign,w
  7670  1F48  1903               	btfsc	3,2
  7671  1F49  2F4B               	goto	u4921
  7672  1F4A  2F4C               	goto	u4920
  7673  1F4B                     u4921:
  7674  1F4B  2F60               	goto	l3084
  7675  1F4C                     u4920:
  7676  1F4C                     l3080:
  7677  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  7678  1F4D  2F4F               	goto	u4931
  7679  1F4E  2F50               	goto	u4930
  7680  1F4F                     u4931:
  7681  1F4F  2F60               	goto	l3084
  7682  1F50                     u4930:
  7683  1F50                     l3082:
  7684  1F50  0970               	comf	___xxtofl@val,w
  7685  1F51  00FA               	movwf	___xxtofl@arg
  7686  1F52  0971               	comf	___xxtofl@val+1,w
  7687  1F53  00FB               	movwf	___xxtofl@arg+1
  7688  1F54  0972               	comf	___xxtofl@val+2,w
  7689  1F55  00FC               	movwf	___xxtofl@arg+2
  7690  1F56  0973               	comf	___xxtofl@val+3,w
  7691  1F57  00FD               	movwf	___xxtofl@arg+3
  7692  1F58  0AFA               	incf	___xxtofl@arg,f
  7693  1F59  1903               	skipnz
  7694  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  7695  1F5B  1903               	skipnz
  7696  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  7697  1F5D  1903               	skipnz
  7698  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  7699  1F5F  2F68               	goto	l842
  7700  1F60                     l3084:
  7701  1F60  0873               	movf	___xxtofl@val+3,w
  7702  1F61  00FD               	movwf	___xxtofl@arg+3
  7703  1F62  0872               	movf	___xxtofl@val+2,w
  7704  1F63  00FC               	movwf	___xxtofl@arg+2
  7705  1F64  0871               	movf	___xxtofl@val+1,w
  7706  1F65  00FB               	movwf	___xxtofl@arg+1
  7707  1F66  0870               	movf	___xxtofl@val,w
  7708  1F67  00FA               	movwf	___xxtofl@arg
  7709  1F68                     l842:
  7710  1F68  0873               	movf	___xxtofl@val+3,w
  7711  1F69  0472               	iorwf	___xxtofl@val+2,w
  7712  1F6A  0471               	iorwf	___xxtofl@val+1,w
  7713  1F6B  0470               	iorwf	___xxtofl@val,w
  7714  1F6C  1D03               	skipz
  7715  1F6D  2F6F               	goto	u4941
  7716  1F6E  2F70               	goto	u4940
  7717  1F6F                     u4941:
  7718  1F6F  2F79               	goto	l3090
  7719  1F70                     u4940:
  7720  1F70                     l3086:
  7721  1F70  3000               	movlw	0
  7722  1F71  00F3               	movwf	?___xxtofl+3
  7723  1F72  3000               	movlw	0
  7724  1F73  00F2               	movwf	?___xxtofl+2
  7725  1F74  3000               	movlw	0
  7726  1F75  00F1               	movwf	?___xxtofl+1
  7727  1F76  3000               	movlw	0
  7728  1F77  00F0               	movwf	?___xxtofl
  7729  1F78  2FFF               	goto	l844
  7730  1F79                     l3090:
  7731  1F79  3096               	movlw	150
  7732  1F7A  00F4               	movwf	??___xxtofl
  7733  1F7B  0874               	movf	??___xxtofl,w
  7734  1F7C  00F9               	movwf	___xxtofl@exp
  7735  1F7D  2F8B               	goto	l3094
  7736  1F7E                     l3092:
  7737  1F7E  3001               	movlw	1
  7738  1F7F  00F4               	movwf	??___xxtofl
  7739  1F80  0874               	movf	??___xxtofl,w
  7740  1F81  07F9               	addwf	___xxtofl@exp,f
  7741  1F82  3001               	movlw	1
  7742  1F83                     u4955:
  7743  1F83  1003               	clrc
  7744  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  7745  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  7746  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  7747  1F87  0CFA               	rrf	___xxtofl@arg,f
  7748  1F88  3EFF               	addlw	-1
  7749  1F89  1D03               	skipz
  7750  1F8A  2F83               	goto	u4955
  7751  1F8B                     l3094:
  7752  1F8B  30FE               	movlw	254
  7753  1F8C  057D               	andwf	___xxtofl@arg+3,w
  7754  1F8D  1D03               	btfss	3,2
  7755  1F8E  2F90               	goto	u4961
  7756  1F8F  2F91               	goto	u4960
  7757  1F90                     u4961:
  7758  1F90  2F7E               	goto	l3092
  7759  1F91                     u4960:
  7760  1F91  2FAD               	goto	l848
  7761  1F92                     l3096:
  7762  1F92  3001               	movlw	1
  7763  1F93  00F4               	movwf	??___xxtofl
  7764  1F94  0874               	movf	??___xxtofl,w
  7765  1F95  07F9               	addwf	___xxtofl@exp,f
  7766  1F96                     l3098:
  7767  1F96  3001               	movlw	1
  7768  1F97  07FA               	addwf	___xxtofl@arg,f
  7769  1F98  3000               	movlw	0
  7770  1F99  1803               	skipnc
  7771  1F9A  3001               	movlw	1
  7772  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  7773  1F9C  3000               	movlw	0
  7774  1F9D  1803               	skipnc
  7775  1F9E  3001               	movlw	1
  7776  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  7777  1FA0  3000               	movlw	0
  7778  1FA1  1803               	skipnc
  7779  1FA2  3001               	movlw	1
  7780  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  7781  1FA4                     l3100:
  7782  1FA4  3001               	movlw	1
  7783  1FA5                     u4975:
  7784  1FA5  1003               	clrc
  7785  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  7786  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  7787  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  7788  1FA9  0CFA               	rrf	___xxtofl@arg,f
  7789  1FAA  3EFF               	addlw	-1
  7790  1FAB  1D03               	skipz
  7791  1FAC  2FA5               	goto	u4975
  7792  1FAD                     l848:
  7793  1FAD  30FF               	movlw	255
  7794  1FAE  057D               	andwf	___xxtofl@arg+3,w
  7795  1FAF  1D03               	btfss	3,2
  7796  1FB0  2FB2               	goto	u4981
  7797  1FB1  2FB3               	goto	u4980
  7798  1FB2                     u4981:
  7799  1FB2  2F92               	goto	l3096
  7800  1FB3                     u4980:
  7801  1FB3  2FBF               	goto	l3104
  7802  1FB4                     l3102:
  7803  1FB4  3001               	movlw	1
  7804  1FB5  02F9               	subwf	___xxtofl@exp,f
  7805  1FB6  3001               	movlw	1
  7806  1FB7  00F4               	movwf	??___xxtofl
  7807  1FB8                     u4995:
  7808  1FB8  1003               	clrc
  7809  1FB9  0DFA               	rlf	___xxtofl@arg,f
  7810  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  7811  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  7812  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  7813  1FBD  0BF4               	decfsz	??___xxtofl,f
  7814  1FBE  2FB8               	goto	u4995
  7815  1FBF                     l3104:
  7816  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  7817  1FC0  2FC2               	goto	u5001
  7818  1FC1  2FC3               	goto	u5000
  7819  1FC2                     u5001:
  7820  1FC2  2FC9               	goto	l855
  7821  1FC3                     u5000:
  7822  1FC3                     l3106:
  7823  1FC3  3002               	movlw	2
  7824  1FC4  0279               	subwf	___xxtofl@exp,w
  7825  1FC5  1803               	skipnc
  7826  1FC6  2FC8               	goto	u5011
  7827  1FC7  2FC9               	goto	u5010
  7828  1FC8                     u5011:
  7829  1FC8  2FB4               	goto	l3102
  7830  1FC9                     u5010:
  7831  1FC9                     l855:
  7832  1FC9  1879               	btfsc	___xxtofl@exp,0
  7833  1FCA  2FCC               	goto	u5021
  7834  1FCB  2FCD               	goto	u5020
  7835  1FCC                     u5021:
  7836  1FCC  2FD5               	goto	l856
  7837  1FCD                     u5020:
  7838  1FCD                     l3108:
  7839  1FCD  30FF               	movlw	255
  7840  1FCE  05FA               	andwf	___xxtofl@arg,f
  7841  1FCF  30FF               	movlw	255
  7842  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  7843  1FD1  307F               	movlw	127
  7844  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  7845  1FD3  30FF               	movlw	255
  7846  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  7847  1FD5                     l856:
  7848  1FD5  1003               	clrc
  7849  1FD6  0CF9               	rrf	___xxtofl@exp,f
  7850  1FD7                     l3110:
  7851  1FD7  0879               	movf	___xxtofl@exp,w
  7852  1FD8  00F4               	movwf	??___xxtofl
  7853  1FD9  01F5               	clrf	??___xxtofl+1
  7854  1FDA  01F6               	clrf	??___xxtofl+2
  7855  1FDB  01F7               	clrf	??___xxtofl+3
  7856  1FDC  3018               	movlw	24
  7857  1FDD                     u5035:
  7858  1FDD  1003               	clrc
  7859  1FDE  0DF4               	rlf	??___xxtofl,f
  7860  1FDF  0DF5               	rlf	??___xxtofl+1,f
  7861  1FE0  0DF6               	rlf	??___xxtofl+2,f
  7862  1FE1  0DF7               	rlf	??___xxtofl+3,f
  7863  1FE2                     u5030:
  7864  1FE2  3EFF               	addlw	-1
  7865  1FE3  1D03               	skipz
  7866  1FE4  2FDD               	goto	u5035
  7867  1FE5  0874               	movf	??___xxtofl,w
  7868  1FE6  04FA               	iorwf	___xxtofl@arg,f
  7869  1FE7  0875               	movf	??___xxtofl+1,w
  7870  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  7871  1FE9  0876               	movf	??___xxtofl+2,w
  7872  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  7873  1FEB  0877               	movf	??___xxtofl+3,w
  7874  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  7875  1FED                     l3112:
  7876  1FED  0878               	movf	___xxtofl@sign,w
  7877  1FEE  1903               	btfsc	3,2
  7878  1FEF  2FF1               	goto	u5041
  7879  1FF0  2FF2               	goto	u5040
  7880  1FF1                     u5041:
  7881  1FF1  2FF7               	goto	l3118
  7882  1FF2                     u5040:
  7883  1FF2                     l3114:
  7884  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  7885  1FF3  2FF5               	goto	u5051
  7886  1FF4  2FF6               	goto	u5050
  7887  1FF5                     u5051:
  7888  1FF5  2FF7               	goto	l3118
  7889  1FF6                     u5050:
  7890  1FF6                     l3116:
  7891  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  7892  1FF7                     l3118:
  7893  1FF7  087D               	movf	___xxtofl@arg+3,w
  7894  1FF8  00F3               	movwf	?___xxtofl+3
  7895  1FF9  087C               	movf	___xxtofl@arg+2,w
  7896  1FFA  00F2               	movwf	?___xxtofl+2
  7897  1FFB  087B               	movf	___xxtofl@arg+1,w
  7898  1FFC  00F1               	movwf	?___xxtofl+1
  7899  1FFD  087A               	movf	___xxtofl@arg,w
  7900  1FFE  00F0               	movwf	?___xxtofl
  7901  1FFF                     l844:
  7902  1FFF  0008               	return
  7903  2000                     __end_of___xxtofl:
  7904                           
  7905                           	psect	text14
  7906  1C00                     __ptext14:	
  7907 ;; *************** function ___wmul *****************
  7908 ;; Defined at:
  7909 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;  multiplier      2    0[COMMON] unsigned int 
  7912 ;;  multiplicand    2    2[COMMON] unsigned int 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  product         2    4[COMMON] unsigned int 
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  2    0[COMMON] unsigned int 
  7917 ;; Registers used:
  7918 ;;		wreg, status,2, status,0
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7924 ;;      Params:         4       0       0       0       0
  7925 ;;      Locals:         2       0       0       0       0
  7926 ;;      Temps:          0       0       0       0       0
  7927 ;;      Totals:         6       0       0       0       0
  7928 ;;Total ram usage:        6 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; This function calls:
  7931 ;;		Nothing
  7932 ;; This function is called by:
  7933 ;;		_sprintf
  7934 ;; This function uses a non-reentrant model
  7935 ;;
  7936                           
  7937                           
  7938                           ;psect for function ___wmul
  7939  1C00                     ___wmul:
  7940  1C00                     l2938:	
  7941                           ;incstack = 0
  7942                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7943                           
  7944  1C00  01F4               	clrf	___wmul@product
  7945  1C01  01F5               	clrf	___wmul@product+1
  7946  1C02                     l2940:
  7947  1C02  1C70               	btfss	___wmul@multiplier,0
  7948  1C03  2C05               	goto	u4541
  7949  1C04  2C06               	goto	u4540
  7950  1C05                     u4541:
  7951  1C05  2C0C               	goto	l375
  7952  1C06                     u4540:
  7953  1C06                     l2942:
  7954  1C06  0872               	movf	___wmul@multiplicand,w
  7955  1C07  07F4               	addwf	___wmul@product,f
  7956  1C08  1803               	skipnc
  7957  1C09  0AF5               	incf	___wmul@product+1,f
  7958  1C0A  0873               	movf	___wmul@multiplicand+1,w
  7959  1C0B  07F5               	addwf	___wmul@product+1,f
  7960  1C0C                     l375:
  7961  1C0C  3001               	movlw	1
  7962  1C0D                     u4555:
  7963  1C0D  1003               	clrc
  7964  1C0E  0DF2               	rlf	___wmul@multiplicand,f
  7965  1C0F  0DF3               	rlf	___wmul@multiplicand+1,f
  7966  1C10  3EFF               	addlw	-1
  7967  1C11  1D03               	skipz
  7968  1C12  2C0D               	goto	u4555
  7969  1C13                     l2944:
  7970  1C13  3001               	movlw	1
  7971  1C14                     u4565:
  7972  1C14  1003               	clrc
  7973  1C15  0CF1               	rrf	___wmul@multiplier+1,f
  7974  1C16  0CF0               	rrf	___wmul@multiplier,f
  7975  1C17  3EFF               	addlw	-1
  7976  1C18  1D03               	skipz
  7977  1C19  2C14               	goto	u4565
  7978  1C1A                     l2946:
  7979  1C1A  0870               	movf	___wmul@multiplier,w
  7980  1C1B  0471               	iorwf	___wmul@multiplier+1,w
  7981  1C1C  1D03               	btfss	3,2
  7982  1C1D  2C1F               	goto	u4571
  7983  1C1E  2C20               	goto	u4570
  7984  1C1F                     u4571:
  7985  1C1F  2C02               	goto	l2940
  7986  1C20                     u4570:
  7987  1C20                     l2948:
  7988  1C20  0875               	movf	___wmul@product+1,w
  7989  1C21  00F1               	movwf	?___wmul+1
  7990  1C22  0874               	movf	___wmul@product,w
  7991  1C23  00F0               	movwf	?___wmul
  7992  1C24                     l377:
  7993  1C24  0008               	return
  7994  1C25                     __end_of___wmul:
  7995                           
  7996                           	psect	text15
  7997  1DD4                     __ptext15:	
  7998 ;; *************** function ___llmod *****************
  7999 ;; Defined at:
  8000 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  divisor         4    0[COMMON] unsigned long 
  8003 ;;  dividend        4    4[COMMON] unsigned long 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  counter         1    9[COMMON] unsigned char 
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  4    0[COMMON] unsigned long 
  8008 ;; Registers used:
  8009 ;;		wreg, status,2, status,0
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8015 ;;      Params:         8       0       0       0       0
  8016 ;;      Locals:         1       0       0       0       0
  8017 ;;      Temps:          1       0       0       0       0
  8018 ;;      Totals:        10       0       0       0       0
  8019 ;;Total ram usage:       10 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; This function calls:
  8022 ;;		Nothing
  8023 ;; This function is called by:
  8024 ;;		_sprintf
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           
  8029                           ;psect for function ___llmod
  8030  1DD4                     ___llmod:
  8031  1DD4                     l3052:	
  8032                           ;incstack = 0
  8033                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8034                           
  8035  1DD4  0873               	movf	___llmod@divisor+3,w
  8036  1DD5  0472               	iorwf	___llmod@divisor+2,w
  8037  1DD6  0471               	iorwf	___llmod@divisor+1,w
  8038  1DD7  0470               	iorwf	___llmod@divisor,w
  8039  1DD8  1903               	skipnz
  8040  1DD9  2DDB               	goto	u4861
  8041  1DDA  2DDC               	goto	u4860
  8042  1DDB                     u4861:
  8043  1DDB  2E1F               	goto	l3068
  8044  1DDC                     u4860:
  8045  1DDC                     l3054:
  8046  1DDC  01F9               	clrf	___llmod@counter
  8047  1DDD  0AF9               	incf	___llmod@counter,f
  8048  1DDE  2DEC               	goto	l3058
  8049  1DDF                     l3056:
  8050  1DDF  3001               	movlw	1
  8051  1DE0  00F8               	movwf	??___llmod
  8052  1DE1                     u4875:
  8053  1DE1  1003               	clrc
  8054  1DE2  0DF0               	rlf	___llmod@divisor,f
  8055  1DE3  0DF1               	rlf	___llmod@divisor+1,f
  8056  1DE4  0DF2               	rlf	___llmod@divisor+2,f
  8057  1DE5  0DF3               	rlf	___llmod@divisor+3,f
  8058  1DE6  0BF8               	decfsz	??___llmod,f
  8059  1DE7  2DE1               	goto	u4875
  8060  1DE8  3001               	movlw	1
  8061  1DE9  00F8               	movwf	??___llmod
  8062  1DEA  0878               	movf	??___llmod,w
  8063  1DEB  07F9               	addwf	___llmod@counter,f
  8064  1DEC                     l3058:
  8065  1DEC  1FF3               	btfss	___llmod@divisor+3,7
  8066  1DED  2DEF               	goto	u4881
  8067  1DEE  2DF0               	goto	u4880
  8068  1DEF                     u4881:
  8069  1DEF  2DDF               	goto	l3056
  8070  1DF0                     u4880:
  8071  1DF0                     l3060:
  8072  1DF0  0873               	movf	___llmod@divisor+3,w
  8073  1DF1  0277               	subwf	___llmod@dividend+3,w
  8074  1DF2  1D03               	skipz
  8075  1DF3  2DFE               	goto	u4895
  8076  1DF4  0872               	movf	___llmod@divisor+2,w
  8077  1DF5  0276               	subwf	___llmod@dividend+2,w
  8078  1DF6  1D03               	skipz
  8079  1DF7  2DFE               	goto	u4895
  8080  1DF8  0871               	movf	___llmod@divisor+1,w
  8081  1DF9  0275               	subwf	___llmod@dividend+1,w
  8082  1DFA  1D03               	skipz
  8083  1DFB  2DFE               	goto	u4895
  8084  1DFC  0870               	movf	___llmod@divisor,w
  8085  1DFD  0274               	subwf	___llmod@dividend,w
  8086  1DFE                     u4895:
  8087  1DFE  1C03               	skipc
  8088  1DFF  2E01               	goto	u4891
  8089  1E00  2E02               	goto	u4890
  8090  1E01                     u4891:
  8091  1E01  2E10               	goto	l3064
  8092  1E02                     u4890:
  8093  1E02                     l3062:
  8094  1E02  0870               	movf	___llmod@divisor,w
  8095  1E03  02F4               	subwf	___llmod@dividend,f
  8096  1E04  0871               	movf	___llmod@divisor+1,w
  8097  1E05  1C03               	skipc
  8098  1E06  0F71               	incfsz	___llmod@divisor+1,w
  8099  1E07  02F5               	subwf	___llmod@dividend+1,f
  8100  1E08  0872               	movf	___llmod@divisor+2,w
  8101  1E09  1C03               	skipc
  8102  1E0A  0F72               	incfsz	___llmod@divisor+2,w
  8103  1E0B  02F6               	subwf	___llmod@dividend+2,f
  8104  1E0C  0873               	movf	___llmod@divisor+3,w
  8105  1E0D  1C03               	skipc
  8106  1E0E  0F73               	incfsz	___llmod@divisor+3,w
  8107  1E0F  02F7               	subwf	___llmod@dividend+3,f
  8108  1E10                     l3064:
  8109  1E10  3001               	movlw	1
  8110  1E11                     u4905:
  8111  1E11  1003               	clrc
  8112  1E12  0CF3               	rrf	___llmod@divisor+3,f
  8113  1E13  0CF2               	rrf	___llmod@divisor+2,f
  8114  1E14  0CF1               	rrf	___llmod@divisor+1,f
  8115  1E15  0CF0               	rrf	___llmod@divisor,f
  8116  1E16  3EFF               	addlw	-1
  8117  1E17  1D03               	skipz
  8118  1E18  2E11               	goto	u4905
  8119  1E19                     l3066:
  8120  1E19  3001               	movlw	1
  8121  1E1A  02F9               	subwf	___llmod@counter,f
  8122  1E1B  1D03               	btfss	3,2
  8123  1E1C  2E1E               	goto	u4911
  8124  1E1D  2E1F               	goto	u4910
  8125  1E1E                     u4911:
  8126  1E1E  2DF0               	goto	l3060
  8127  1E1F                     u4910:
  8128  1E1F                     l3068:
  8129  1E1F  0877               	movf	___llmod@dividend+3,w
  8130  1E20  00F3               	movwf	?___llmod+3
  8131  1E21  0876               	movf	___llmod@dividend+2,w
  8132  1E22  00F2               	movwf	?___llmod+2
  8133  1E23  0875               	movf	___llmod@dividend+1,w
  8134  1E24  00F1               	movwf	?___llmod+1
  8135  1E25  0874               	movf	___llmod@dividend,w
  8136  1E26  00F0               	movwf	?___llmod
  8137  1E27                     l631:
  8138  1E27  0008               	return
  8139  1E28                     __end_of___llmod:
  8140                           
  8141                           	psect	text16
  8142  08DA                     __ptext16:	
  8143 ;; *************** function ___lldiv *****************
  8144 ;; Defined at:
  8145 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;  divisor         4    0[COMMON] unsigned long 
  8148 ;;  dividend        4    4[COMMON] unsigned long 
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;  quotient        4    9[COMMON] unsigned long 
  8151 ;;  counter         1   13[COMMON] unsigned char 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  4    0[COMMON] unsigned long 
  8154 ;; Registers used:
  8155 ;;		wreg, status,2, status,0
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8161 ;;      Params:         8       0       0       0       0
  8162 ;;      Locals:         5       0       0       0       0
  8163 ;;      Temps:          1       0       0       0       0
  8164 ;;      Totals:        14       0       0       0       0
  8165 ;;Total ram usage:       14 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; This function calls:
  8168 ;;		Nothing
  8169 ;; This function is called by:
  8170 ;;		_sprintf
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           
  8175                           ;psect for function ___lldiv
  8176  08DA                     ___lldiv:
  8177  08DA                     l2952:	
  8178                           ;incstack = 0
  8179                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8180                           
  8181  08DA  3000               	movlw	0
  8182  08DB  00FC               	movwf	___lldiv@quotient+3
  8183  08DC  3000               	movlw	0
  8184  08DD  00FB               	movwf	___lldiv@quotient+2
  8185  08DE  3000               	movlw	0
  8186  08DF  00FA               	movwf	___lldiv@quotient+1
  8187  08E0  3000               	movlw	0
  8188  08E1  00F9               	movwf	___lldiv@quotient
  8189  08E2  0873               	movf	___lldiv@divisor+3,w
  8190  08E3  0472               	iorwf	___lldiv@divisor+2,w
  8191  08E4  0471               	iorwf	___lldiv@divisor+1,w
  8192  08E5  0470               	iorwf	___lldiv@divisor,w
  8193  08E6  1903               	skipnz
  8194  08E7  28E9               	goto	u4581
  8195  08E8  28EA               	goto	u4580
  8196  08E9                     u4581:
  8197  08E9  2937               	goto	l2972
  8198  08EA                     u4580:
  8199  08EA                     l2954:
  8200  08EA  01FD               	clrf	___lldiv@counter
  8201  08EB  0AFD               	incf	___lldiv@counter,f
  8202  08EC  28FA               	goto	l2958
  8203  08ED                     l2956:
  8204  08ED  3001               	movlw	1
  8205  08EE  00F8               	movwf	??___lldiv
  8206  08EF                     u4595:
  8207  08EF  1003               	clrc
  8208  08F0  0DF0               	rlf	___lldiv@divisor,f
  8209  08F1  0DF1               	rlf	___lldiv@divisor+1,f
  8210  08F2  0DF2               	rlf	___lldiv@divisor+2,f
  8211  08F3  0DF3               	rlf	___lldiv@divisor+3,f
  8212  08F4  0BF8               	decfsz	??___lldiv,f
  8213  08F5  28EF               	goto	u4595
  8214  08F6  3001               	movlw	1
  8215  08F7  00F8               	movwf	??___lldiv
  8216  08F8  0878               	movf	??___lldiv,w
  8217  08F9  07FD               	addwf	___lldiv@counter,f
  8218  08FA                     l2958:
  8219  08FA  1FF3               	btfss	___lldiv@divisor+3,7
  8220  08FB  28FD               	goto	u4601
  8221  08FC  28FE               	goto	u4600
  8222  08FD                     u4601:
  8223  08FD  28ED               	goto	l2956
  8224  08FE                     u4600:
  8225  08FE                     l2960:
  8226  08FE  3001               	movlw	1
  8227  08FF  00F8               	movwf	??___lldiv
  8228  0900                     u4615:
  8229  0900  1003               	clrc
  8230  0901  0DF9               	rlf	___lldiv@quotient,f
  8231  0902  0DFA               	rlf	___lldiv@quotient+1,f
  8232  0903  0DFB               	rlf	___lldiv@quotient+2,f
  8233  0904  0DFC               	rlf	___lldiv@quotient+3,f
  8234  0905  0BF8               	decfsz	??___lldiv,f
  8235  0906  2900               	goto	u4615
  8236  0907                     l2962:
  8237  0907  0873               	movf	___lldiv@divisor+3,w
  8238  0908  0277               	subwf	___lldiv@dividend+3,w
  8239  0909  1D03               	skipz
  8240  090A  2915               	goto	u4625
  8241  090B  0872               	movf	___lldiv@divisor+2,w
  8242  090C  0276               	subwf	___lldiv@dividend+2,w
  8243  090D  1D03               	skipz
  8244  090E  2915               	goto	u4625
  8245  090F  0871               	movf	___lldiv@divisor+1,w
  8246  0910  0275               	subwf	___lldiv@dividend+1,w
  8247  0911  1D03               	skipz
  8248  0912  2915               	goto	u4625
  8249  0913  0870               	movf	___lldiv@divisor,w
  8250  0914  0274               	subwf	___lldiv@dividend,w
  8251  0915                     u4625:
  8252  0915  1C03               	skipc
  8253  0916  2918               	goto	u4621
  8254  0917  2919               	goto	u4620
  8255  0918                     u4621:
  8256  0918  2928               	goto	l2968
  8257  0919                     u4620:
  8258  0919                     l2964:
  8259  0919  0870               	movf	___lldiv@divisor,w
  8260  091A  02F4               	subwf	___lldiv@dividend,f
  8261  091B  0871               	movf	___lldiv@divisor+1,w
  8262  091C  1C03               	skipc
  8263  091D  0F71               	incfsz	___lldiv@divisor+1,w
  8264  091E  02F5               	subwf	___lldiv@dividend+1,f
  8265  091F  0872               	movf	___lldiv@divisor+2,w
  8266  0920  1C03               	skipc
  8267  0921  0F72               	incfsz	___lldiv@divisor+2,w
  8268  0922  02F6               	subwf	___lldiv@dividend+2,f
  8269  0923  0873               	movf	___lldiv@divisor+3,w
  8270  0924  1C03               	skipc
  8271  0925  0F73               	incfsz	___lldiv@divisor+3,w
  8272  0926  02F7               	subwf	___lldiv@dividend+3,f
  8273  0927                     l2966:
  8274  0927  1479               	bsf	___lldiv@quotient,0
  8275  0928                     l2968:
  8276  0928  3001               	movlw	1
  8277  0929                     u4635:
  8278  0929  1003               	clrc
  8279  092A  0CF3               	rrf	___lldiv@divisor+3,f
  8280  092B  0CF2               	rrf	___lldiv@divisor+2,f
  8281  092C  0CF1               	rrf	___lldiv@divisor+1,f
  8282  092D  0CF0               	rrf	___lldiv@divisor,f
  8283  092E  3EFF               	addlw	-1
  8284  092F  1D03               	skipz
  8285  0930  2929               	goto	u4635
  8286  0931                     l2970:
  8287  0931  3001               	movlw	1
  8288  0932  02FD               	subwf	___lldiv@counter,f
  8289  0933  1D03               	btfss	3,2
  8290  0934  2936               	goto	u4641
  8291  0935  2937               	goto	u4640
  8292  0936                     u4641:
  8293  0936  28FE               	goto	l2960
  8294  0937                     u4640:
  8295  0937                     l2972:
  8296  0937  087C               	movf	___lldiv@quotient+3,w
  8297  0938  00F3               	movwf	?___lldiv+3
  8298  0939  087B               	movf	___lldiv@quotient+2,w
  8299  093A  00F2               	movwf	?___lldiv+2
  8300  093B  087A               	movf	___lldiv@quotient+1,w
  8301  093C  00F1               	movwf	?___lldiv+1
  8302  093D  0879               	movf	___lldiv@quotient,w
  8303  093E  00F0               	movwf	?___lldiv
  8304  093F                     l411:
  8305  093F  0008               	return
  8306  0940                     __end_of___lldiv:
  8307                           
  8308                           	psect	text17
  8309  1E28                     __ptext17:	
  8310 ;; *************** function ___fltol *****************
  8311 ;; Defined at:
  8312 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;  f1              4   49[BANK0 ] unsigned long 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  exp1            1   59[BANK0 ] unsigned char 
  8317 ;;  sign1           1   58[BANK0 ] unsigned char 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  4   49[BANK0 ] long 
  8320 ;; Registers used:
  8321 ;;		wreg, status,2, status,0
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8327 ;;      Params:         0       4       0       0       0
  8328 ;;      Locals:         0       2       0       0       0
  8329 ;;      Temps:          0       5       0       0       0
  8330 ;;      Totals:         0      11       0       0       0
  8331 ;;Total ram usage:       11 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_sprintf
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function ___fltol
  8342  1E28                     ___fltol:
  8343  1E28                     l3016:	
  8344                           ;incstack = 0
  8345                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8346                           
  8347  1E28  1003               	clrc
  8348  1E29  1283               	bcf	3,5	;RP0=0, select bank0
  8349  1E2A  1303               	bcf	3,6	;RP1=0, select bank0
  8350  1E2B  0D53               	rlf	___fltol@f1+2,w
  8351  1E2C  0D54               	rlf	___fltol@f1+3,w
  8352  1E2D  00D5               	movwf	??___fltol
  8353  1E2E  0855               	movf	??___fltol,w
  8354  1E2F  00DB               	movwf	___fltol@exp1
  8355  1E30  085B               	movf	___fltol@exp1,w
  8356  1E31  1D03               	btfss	3,2
  8357  1E32  2E34               	goto	u4761
  8358  1E33  2E35               	goto	u4760
  8359  1E34                     u4761:
  8360  1E34  2E3E               	goto	l3022
  8361  1E35                     u4760:
  8362  1E35                     l3018:
  8363  1E35  3000               	movlw	0
  8364  1E36  00D4               	movwf	?___fltol+3
  8365  1E37  3000               	movlw	0
  8366  1E38  00D3               	movwf	?___fltol+2
  8367  1E39  3000               	movlw	0
  8368  1E3A  00D2               	movwf	?___fltol+1
  8369  1E3B  3000               	movlw	0
  8370  1E3C  00D1               	movwf	?___fltol
  8371  1E3D  2EA3               	goto	l578
  8372  1E3E                     l3022:
  8373  1E3E  0851               	movf	___fltol@f1,w
  8374  1E3F  00D5               	movwf	??___fltol
  8375  1E40  0852               	movf	___fltol@f1+1,w
  8376  1E41  00D6               	movwf	??___fltol+1
  8377  1E42  0853               	movf	___fltol@f1+2,w
  8378  1E43  00D7               	movwf	??___fltol+2
  8379  1E44  0854               	movf	___fltol@f1+3,w
  8380  1E45  00D8               	movwf	??___fltol+3
  8381  1E46  301F               	movlw	31
  8382  1E47                     u4775:
  8383  1E47  1003               	clrc
  8384  1E48  0CD8               	rrf	??___fltol+3,f
  8385  1E49  0CD7               	rrf	??___fltol+2,f
  8386  1E4A  0CD6               	rrf	??___fltol+1,f
  8387  1E4B  0CD5               	rrf	??___fltol,f
  8388  1E4C                     u4770:
  8389  1E4C  3EFF               	addlw	-1
  8390  1E4D  1D03               	skipz
  8391  1E4E  2E47               	goto	u4775
  8392  1E4F  0855               	movf	??___fltol,w
  8393  1E50  00D9               	movwf	??___fltol+4
  8394  1E51  0859               	movf	??___fltol+4,w
  8395  1E52  00DA               	movwf	___fltol@sign1
  8396  1E53                     l3024:
  8397  1E53  17D3               	bsf	___fltol@f1+2,7
  8398  1E54                     l3026:
  8399  1E54  30FF               	movlw	255
  8400  1E55  05D1               	andwf	___fltol@f1,f
  8401  1E56  30FF               	movlw	255
  8402  1E57  05D2               	andwf	___fltol@f1+1,f
  8403  1E58  30FF               	movlw	255
  8404  1E59  05D3               	andwf	___fltol@f1+2,f
  8405  1E5A  3000               	movlw	0
  8406  1E5B  05D4               	andwf	___fltol@f1+3,f
  8407  1E5C                     l3028:
  8408  1E5C  3096               	movlw	150
  8409  1E5D  02DB               	subwf	___fltol@exp1,f
  8410  1E5E                     l3030:
  8411  1E5E  1FDB               	btfss	___fltol@exp1,7
  8412  1E5F  2E61               	goto	u4781
  8413  1E60  2E62               	goto	u4780
  8414  1E61                     u4781:
  8415  1E61  2E7C               	goto	l3040
  8416  1E62                     u4780:
  8417  1E62                     l3032:
  8418  1E62  085B               	movf	___fltol@exp1,w
  8419  1E63  3A80               	xorlw	128
  8420  1E64  3E97               	addlw	151
  8421  1E65  1803               	skipnc
  8422  1E66  2E68               	goto	u4791
  8423  1E67  2E69               	goto	u4790
  8424  1E68                     u4791:
  8425  1E68  2E6A               	goto	l3038
  8426  1E69                     u4790:
  8427  1E69  2E35               	goto	l3018
  8428  1E6A                     l3038:
  8429  1E6A  3001               	movlw	1
  8430  1E6B                     u4805:
  8431  1E6B  1003               	clrc
  8432  1E6C  0CD4               	rrf	___fltol@f1+3,f
  8433  1E6D  0CD3               	rrf	___fltol@f1+2,f
  8434  1E6E  0CD2               	rrf	___fltol@f1+1,f
  8435  1E6F  0CD1               	rrf	___fltol@f1,f
  8436  1E70  3EFF               	addlw	-1
  8437  1E71  1D03               	skipz
  8438  1E72  2E6B               	goto	u4805
  8439  1E73  3001               	movlw	1
  8440  1E74  00D5               	movwf	??___fltol
  8441  1E75  0855               	movf	??___fltol,w
  8442  1E76  07DB               	addwf	___fltol@exp1,f
  8443  1E77  1D03               	btfss	3,2
  8444  1E78  2E7A               	goto	u4811
  8445  1E79  2E7B               	goto	u4810
  8446  1E7A                     u4811:
  8447  1E7A  2E6A               	goto	l3038
  8448  1E7B                     u4810:
  8449  1E7B  2E93               	goto	l3048
  8450  1E7C                     l3040:
  8451  1E7C  3020               	movlw	32
  8452  1E7D  025B               	subwf	___fltol@exp1,w
  8453  1E7E  1C03               	skipc
  8454  1E7F  2E81               	goto	u4821
  8455  1E80  2E82               	goto	u4820
  8456  1E81                     u4821:
  8457  1E81  2E8E               	goto	l585
  8458  1E82                     u4820:
  8459  1E82  2E35               	goto	l3018
  8460  1E83                     l3046:
  8461  1E83  3001               	movlw	1
  8462  1E84  00D5               	movwf	??___fltol
  8463  1E85                     u4835:
  8464  1E85  1003               	clrc
  8465  1E86  0DD1               	rlf	___fltol@f1,f
  8466  1E87  0DD2               	rlf	___fltol@f1+1,f
  8467  1E88  0DD3               	rlf	___fltol@f1+2,f
  8468  1E89  0DD4               	rlf	___fltol@f1+3,f
  8469  1E8A  0BD5               	decfsz	??___fltol,f
  8470  1E8B  2E85               	goto	u4835
  8471  1E8C  3001               	movlw	1
  8472  1E8D  02DB               	subwf	___fltol@exp1,f
  8473  1E8E                     l585:
  8474  1E8E  085B               	movf	___fltol@exp1,w
  8475  1E8F  1D03               	btfss	3,2
  8476  1E90  2E92               	goto	u4841
  8477  1E91  2E93               	goto	u4840
  8478  1E92                     u4841:
  8479  1E92  2E83               	goto	l3046
  8480  1E93                     u4840:
  8481  1E93                     l3048:
  8482  1E93  085A               	movf	___fltol@sign1,w
  8483  1E94  1903               	btfsc	3,2
  8484  1E95  2E97               	goto	u4851
  8485  1E96  2E98               	goto	u4850
  8486  1E97                     u4851:
  8487  1E97  2EA3               	goto	l588
  8488  1E98                     u4850:
  8489  1E98                     l3050:
  8490  1E98  09D1               	comf	___fltol@f1,f
  8491  1E99  09D2               	comf	___fltol@f1+1,f
  8492  1E9A  09D3               	comf	___fltol@f1+2,f
  8493  1E9B  09D4               	comf	___fltol@f1+3,f
  8494  1E9C  0AD1               	incf	___fltol@f1,f
  8495  1E9D  1903               	skipnz
  8496  1E9E  0AD2               	incf	___fltol@f1+1,f
  8497  1E9F  1903               	skipnz
  8498  1EA0  0AD3               	incf	___fltol@f1+2,f
  8499  1EA1  1903               	skipnz
  8500  1EA2  0AD4               	incf	___fltol@f1+3,f
  8501  1EA3                     l588:
  8502  1EA3                     l578:
  8503  1EA3  0008               	return
  8504  1EA4                     __end_of___fltol:
  8505                           
  8506                           	psect	text18
  8507  1BDC                     __ptext18:	
  8508 ;; *************** function ___flsub *****************
  8509 ;; Defined at:
  8510 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  a               4   70[BANK0 ] long 
  8513 ;;  b               4   74[BANK0 ] long 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;		None
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  4   70[BANK0 ] long 
  8518 ;; Registers used:
  8519 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8525 ;;      Params:         0       8       0       0       0
  8526 ;;      Locals:         0       0       0       0       0
  8527 ;;      Temps:          0       0       0       0       0
  8528 ;;      Totals:         0       8       0       0       0
  8529 ;;Total ram usage:        8 bytes
  8530 ;; Hardware stack levels used:    1
  8531 ;; Hardware stack levels required when called:    1
  8532 ;; This function calls:
  8533 ;;		___fladd
  8534 ;; This function is called by:
  8535 ;;		_sprintf
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           
  8540                           ;psect for function ___flsub
  8541  1BDC                     ___flsub:
  8542  1BDC                     l3072:	
  8543                           ;incstack = 0
  8544                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8545                           
  8546  1BDC  3080               	movlw	128
  8547  1BDD  1283               	bcf	3,5	;RP0=0, select bank0
  8548  1BDE  1303               	bcf	3,6	;RP1=0, select bank0
  8549  1BDF  06E9               	xorwf	___flsub@a+3,f
  8550  1BE0                     l3074:
  8551  1BE0  086D               	movf	___flsub@b+3,w
  8552  1BE1  00D5               	movwf	___fladd@b+3
  8553  1BE2  086C               	movf	___flsub@b+2,w
  8554  1BE3  00D4               	movwf	___fladd@b+2
  8555  1BE4  086B               	movf	___flsub@b+1,w
  8556  1BE5  00D3               	movwf	___fladd@b+1
  8557  1BE6  086A               	movf	___flsub@b,w
  8558  1BE7  00D2               	movwf	___fladd@b
  8559  1BE8  0869               	movf	___flsub@a+3,w
  8560  1BE9  00D9               	movwf	___fladd@a+3
  8561  1BEA  0868               	movf	___flsub@a+2,w
  8562  1BEB  00D8               	movwf	___fladd@a+2
  8563  1BEC  0867               	movf	___flsub@a+1,w
  8564  1BED  00D7               	movwf	___fladd@a+1
  8565  1BEE  0866               	movf	___flsub@a,w
  8566  1BEF  00D6               	movwf	___fladd@a
  8567  1BF0  160A  118A  2578  160A  158A  	fcall	___fladd
  8568  1BF5  1283               	bcf	3,5	;RP0=0, select bank0
  8569  1BF6  1303               	bcf	3,6	;RP1=0, select bank0
  8570  1BF7  0855               	movf	?___fladd+3,w
  8571  1BF8  00E9               	movwf	?___flsub+3
  8572  1BF9  0854               	movf	?___fladd+2,w
  8573  1BFA  00E8               	movwf	?___flsub+2
  8574  1BFB  0853               	movf	?___fladd+1,w
  8575  1BFC  00E7               	movwf	?___flsub+1
  8576  1BFD  0852               	movf	?___fladd,w
  8577  1BFE  00E6               	movwf	?___flsub
  8578  1BFF                     l748:
  8579  1BFF  0008               	return
  8580  1C00                     __end_of___flsub:
  8581                           
  8582                           	psect	text19
  8583  1578                     __ptext19:	
  8584 ;; *************** function ___fladd *****************
  8585 ;; Defined at:
  8586 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;  b               4   50[BANK0 ] long 
  8589 ;;  a               4   54[BANK0 ] long 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;  grs             1   69[BANK0 ] unsigned char 
  8592 ;;  bexp            1   68[BANK0 ] unsigned char 
  8593 ;;  aexp            1   67[BANK0 ] unsigned char 
  8594 ;;  signs           1   66[BANK0 ] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  4   50[BANK0 ] unsigned char 
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0, btemp+1
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8604 ;;      Params:         0       8       0       0       0
  8605 ;;      Locals:         0       4       0       0       0
  8606 ;;      Temps:          0       8       0       0       0
  8607 ;;      Totals:         0      20       0       0       0
  8608 ;;Total ram usage:       20 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; This function calls:
  8611 ;;		Nothing
  8612 ;; This function is called by:
  8613 ;;		_sprintf
  8614 ;;		___flsub
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           
  8619                           ;psect for function ___fladd
  8620  1578                     ___fladd:
  8621  1578                     l2396:	
  8622                           ;incstack = 0
  8623                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8624                           
  8625  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8626  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8627  157A  0855               	movf	___fladd@b+3,w
  8628  157B  3980               	andlw	128
  8629  157C  00DA               	movwf	??___fladd
  8630  157D  085A               	movf	??___fladd,w
  8631  157E  00E2               	movwf	___fladd@signs
  8632  157F                     l2398:
  8633  157F  0855               	movf	___fladd@b+3,w
  8634  1580  00DA               	movwf	??___fladd
  8635  1581  075A               	addwf	??___fladd,w
  8636  1582  00DB               	movwf	??___fladd+1
  8637  1583  085B               	movf	??___fladd+1,w
  8638  1584  00E4               	movwf	___fladd@bexp
  8639  1585                     l2400:
  8640  1585  1FD4               	btfss	___fladd@b+2,7
  8641  1586  2D88               	goto	u3171
  8642  1587  2D89               	goto	u3170
  8643  1588                     u3171:
  8644  1588  2D8A               	goto	l2404
  8645  1589                     u3170:
  8646  1589                     l2402:
  8647  1589  1464               	bsf	___fladd@bexp,0
  8648  158A                     l2404:
  8649  158A  0864               	movf	___fladd@bexp,w
  8650  158B  1903               	btfsc	3,2
  8651  158C  2D8E               	goto	u3181
  8652  158D  2D8F               	goto	u3180
  8653  158E                     u3181:
  8654  158E  2D9F               	goto	l2414
  8655  158F                     u3180:
  8656  158F                     l2406:
  8657  158F  0A64               	incf	___fladd@bexp,w
  8658  1590  1D03               	btfss	3,2
  8659  1591  2D93               	goto	u3191
  8660  1592  2D94               	goto	u3190
  8661  1593                     u3191:
  8662  1593  2D9C               	goto	l2410
  8663  1594                     u3190:
  8664  1594                     l2408:
  8665  1594  3000               	movlw	0
  8666  1595  00D5               	movwf	___fladd@b+3
  8667  1596  3000               	movlw	0
  8668  1597  00D4               	movwf	___fladd@b+2
  8669  1598  3000               	movlw	0
  8670  1599  00D3               	movwf	___fladd@b+1
  8671  159A  3000               	movlw	0
  8672  159B  00D2               	movwf	___fladd@b
  8673  159C                     l2410:
  8674  159C  17D4               	bsf	___fladd@b+2,7
  8675  159D                     l2412:
  8676  159D  01D5               	clrf	___fladd@b+3
  8677  159E  2DA7               	goto	l2416
  8678  159F                     l2414:
  8679  159F  3000               	movlw	0
  8680  15A0  00D5               	movwf	___fladd@b+3
  8681  15A1  3000               	movlw	0
  8682  15A2  00D4               	movwf	___fladd@b+2
  8683  15A3  3000               	movlw	0
  8684  15A4  00D3               	movwf	___fladd@b+1
  8685  15A5  3000               	movlw	0
  8686  15A6  00D2               	movwf	___fladd@b
  8687  15A7                     l2416:
  8688  15A7  0859               	movf	___fladd@a+3,w
  8689  15A8  3980               	andlw	128
  8690  15A9  00DA               	movwf	??___fladd
  8691  15AA  085A               	movf	??___fladd,w
  8692  15AB  00E3               	movwf	___fladd@aexp
  8693  15AC                     l2418:
  8694  15AC  0863               	movf	___fladd@aexp,w
  8695  15AD  0662               	xorwf	___fladd@signs,w
  8696  15AE  1903               	skipnz
  8697  15AF  2DB1               	goto	u3201
  8698  15B0  2DB2               	goto	u3200
  8699  15B1                     u3201:
  8700  15B1  2DB3               	goto	l2422
  8701  15B2                     u3200:
  8702  15B2                     l2420:
  8703  15B2  1762               	bsf	___fladd@signs,6
  8704  15B3                     l2422:
  8705  15B3  0859               	movf	___fladd@a+3,w
  8706  15B4  00DA               	movwf	??___fladd
  8707  15B5  075A               	addwf	??___fladd,w
  8708  15B6  00DB               	movwf	??___fladd+1
  8709  15B7  085B               	movf	??___fladd+1,w
  8710  15B8  00E3               	movwf	___fladd@aexp
  8711  15B9                     l2424:
  8712  15B9  1FD8               	btfss	___fladd@a+2,7
  8713  15BA  2DBC               	goto	u3211
  8714  15BB  2DBD               	goto	u3210
  8715  15BC                     u3211:
  8716  15BC  2DBE               	goto	l2428
  8717  15BD                     u3210:
  8718  15BD                     l2426:
  8719  15BD  1463               	bsf	___fladd@aexp,0
  8720  15BE                     l2428:
  8721  15BE  0863               	movf	___fladd@aexp,w
  8722  15BF  1903               	btfsc	3,2
  8723  15C0  2DC2               	goto	u3221
  8724  15C1  2DC3               	goto	u3220
  8725  15C2                     u3221:
  8726  15C2  2DD3               	goto	l2438
  8727  15C3                     u3220:
  8728  15C3                     l2430:
  8729  15C3  0A63               	incf	___fladd@aexp,w
  8730  15C4  1D03               	btfss	3,2
  8731  15C5  2DC7               	goto	u3231
  8732  15C6  2DC8               	goto	u3230
  8733  15C7                     u3231:
  8734  15C7  2DD0               	goto	l2434
  8735  15C8                     u3230:
  8736  15C8                     l2432:
  8737  15C8  3000               	movlw	0
  8738  15C9  00D9               	movwf	___fladd@a+3
  8739  15CA  3000               	movlw	0
  8740  15CB  00D8               	movwf	___fladd@a+2
  8741  15CC  3000               	movlw	0
  8742  15CD  00D7               	movwf	___fladd@a+1
  8743  15CE  3000               	movlw	0
  8744  15CF  00D6               	movwf	___fladd@a
  8745  15D0                     l2434:
  8746  15D0  17D8               	bsf	___fladd@a+2,7
  8747  15D1                     l2436:
  8748  15D1  01D9               	clrf	___fladd@a+3
  8749  15D2  2DDB               	goto	l702
  8750  15D3                     l2438:
  8751  15D3  3000               	movlw	0
  8752  15D4  00D9               	movwf	___fladd@a+3
  8753  15D5  3000               	movlw	0
  8754  15D6  00D8               	movwf	___fladd@a+2
  8755  15D7  3000               	movlw	0
  8756  15D8  00D7               	movwf	___fladd@a+1
  8757  15D9  3000               	movlw	0
  8758  15DA  00D6               	movwf	___fladd@a
  8759  15DB                     l702:
  8760  15DB  0864               	movf	___fladd@bexp,w
  8761  15DC  0263               	subwf	___fladd@aexp,w
  8762  15DD  1803               	skipnc
  8763  15DE  2DE0               	goto	u3241
  8764  15DF  2DE1               	goto	u3240
  8765  15E0                     u3241:
  8766  15E0  2E25               	goto	l2474
  8767  15E1                     u3240:
  8768  15E1                     l2440:
  8769  15E1  1F62               	btfss	___fladd@signs,6
  8770  15E2  2DE4               	goto	u3251
  8771  15E3  2DE5               	goto	u3250
  8772  15E4                     u3251:
  8773  15E4  2DE9               	goto	l2444
  8774  15E5                     u3250:
  8775  15E5                     l2442:
  8776  15E5  3080               	movlw	128
  8777  15E6  00DA               	movwf	??___fladd
  8778  15E7  085A               	movf	??___fladd,w
  8779  15E8  06E2               	xorwf	___fladd@signs,f
  8780  15E9                     l2444:
  8781  15E9  0864               	movf	___fladd@bexp,w
  8782  15EA  00DA               	movwf	??___fladd
  8783  15EB  085A               	movf	??___fladd,w
  8784  15EC  00E5               	movwf	___fladd@grs
  8785  15ED                     l2446:
  8786  15ED  0863               	movf	___fladd@aexp,w
  8787  15EE  00DA               	movwf	??___fladd
  8788  15EF  085A               	movf	??___fladd,w
  8789  15F0  00E4               	movwf	___fladd@bexp
  8790  15F1                     l2448:
  8791  15F1  0865               	movf	___fladd@grs,w
  8792  15F2  00DA               	movwf	??___fladd
  8793  15F3  085A               	movf	??___fladd,w
  8794  15F4  00E3               	movwf	___fladd@aexp
  8795  15F5                     l2450:
  8796  15F5  0852               	movf	___fladd@b,w
  8797  15F6  00DA               	movwf	??___fladd
  8798  15F7  085A               	movf	??___fladd,w
  8799  15F8  00E5               	movwf	___fladd@grs
  8800  15F9                     l2452:
  8801  15F9  0856               	movf	___fladd@a,w
  8802  15FA  00DA               	movwf	??___fladd
  8803  15FB  085A               	movf	??___fladd,w
  8804  15FC  00D2               	movwf	___fladd@b
  8805  15FD                     l2454:
  8806  15FD  0865               	movf	___fladd@grs,w
  8807  15FE  00DA               	movwf	??___fladd
  8808  15FF  085A               	movf	??___fladd,w
  8809  1600  00D6               	movwf	___fladd@a
  8810  1601                     l2456:
  8811  1601  0853               	movf	___fladd@b+1,w
  8812  1602  00DA               	movwf	??___fladd
  8813  1603  085A               	movf	??___fladd,w
  8814  1604  00E5               	movwf	___fladd@grs
  8815  1605                     l2458:
  8816  1605  0857               	movf	___fladd@a+1,w
  8817  1606  00DA               	movwf	??___fladd
  8818  1607  085A               	movf	??___fladd,w
  8819  1608  00D3               	movwf	___fladd@b+1
  8820  1609                     l2460:
  8821  1609  0865               	movf	___fladd@grs,w
  8822  160A  00DA               	movwf	??___fladd
  8823  160B  085A               	movf	??___fladd,w
  8824  160C  00D7               	movwf	___fladd@a+1
  8825  160D                     l2462:
  8826  160D  0854               	movf	___fladd@b+2,w
  8827  160E  00DA               	movwf	??___fladd
  8828  160F  085A               	movf	??___fladd,w
  8829  1610  00E5               	movwf	___fladd@grs
  8830  1611                     l2464:
  8831  1611  0858               	movf	___fladd@a+2,w
  8832  1612  00DA               	movwf	??___fladd
  8833  1613  085A               	movf	??___fladd,w
  8834  1614  00D4               	movwf	___fladd@b+2
  8835  1615                     l2466:
  8836  1615  0865               	movf	___fladd@grs,w
  8837  1616  00DA               	movwf	??___fladd
  8838  1617  085A               	movf	??___fladd,w
  8839  1618  00D8               	movwf	___fladd@a+2
  8840  1619                     l2468:
  8841  1619  0855               	movf	___fladd@b+3,w
  8842  161A  00DA               	movwf	??___fladd
  8843  161B  085A               	movf	??___fladd,w
  8844  161C  00E5               	movwf	___fladd@grs
  8845  161D                     l2470:
  8846  161D  0859               	movf	___fladd@a+3,w
  8847  161E  00DA               	movwf	??___fladd
  8848  161F  085A               	movf	??___fladd,w
  8849  1620  00D5               	movwf	___fladd@b+3
  8850  1621                     l2472:
  8851  1621  0865               	movf	___fladd@grs,w
  8852  1622  00DA               	movwf	??___fladd
  8853  1623  085A               	movf	??___fladd,w
  8854  1624  00D9               	movwf	___fladd@a+3
  8855  1625                     l2474:
  8856  1625  01E5               	clrf	___fladd@grs
  8857  1626                     l2476:
  8858  1626  0863               	movf	___fladd@aexp,w
  8859  1627  00DA               	movwf	??___fladd
  8860  1628  01DB               	clrf	??___fladd+1
  8861  1629  085B               	movf	??___fladd+1,w
  8862  162A  00DD               	movwf	??___fladd+3
  8863  162B  0864               	movf	___fladd@bexp,w
  8864  162C  025A               	subwf	??___fladd,w
  8865  162D  00DC               	movwf	??___fladd+2
  8866  162E  1C03               	skipc
  8867  162F  03DD               	decf	??___fladd+3,f
  8868  1630  085D               	movf	??___fladd+3,w
  8869  1631  3A80               	xorlw	128
  8870  1632  00FF               	movwf	btemp+1
  8871  1633  3080               	movlw	128
  8872  1634  027F               	subwf	btemp+1,w
  8873  1635  1D03               	skipz
  8874  1636  2E39               	goto	u3265
  8875  1637  301A               	movlw	26
  8876  1638  025C               	subwf	??___fladd+2,w
  8877  1639                     u3265:
  8878  1639  1C03               	skipc
  8879  163A  2E3C               	goto	u3261
  8880  163B  2E3D               	goto	u3260
  8881  163C                     u3261:
  8882  163C  2E7A               	goto	l2492
  8883  163D                     u3260:
  8884  163D                     l2478:
  8885  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8886  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8887  163F  0855               	movf	___fladd@b+3,w
  8888  1640  0454               	iorwf	___fladd@b+2,w
  8889  1641  0453               	iorwf	___fladd@b+1,w
  8890  1642  0452               	iorwf	___fladd@b,w
  8891  1643  1D03               	skipz
  8892  1644  2E46               	goto	u3271
  8893  1645  2E48               	goto	u3270
  8894  1646                     u3271:
  8895  1646  3001               	movlw	1
  8896  1647  2E49               	goto	u3280
  8897  1648                     u3270:
  8898  1648  3000               	movlw	0
  8899  1649                     u3280:
  8900  1649  00DA               	movwf	??___fladd
  8901  164A  085A               	movf	??___fladd,w
  8902  164B  00E5               	movwf	___fladd@grs
  8903  164C  3000               	movlw	0
  8904  164D  00D5               	movwf	___fladd@b+3
  8905  164E  3000               	movlw	0
  8906  164F  00D4               	movwf	___fladd@b+2
  8907  1650  3000               	movlw	0
  8908  1651  00D3               	movwf	___fladd@b+1
  8909  1652  3000               	movlw	0
  8910  1653  00D2               	movwf	___fladd@b
  8911  1654  0863               	movf	___fladd@aexp,w
  8912  1655  00DA               	movwf	??___fladd
  8913  1656  085A               	movf	??___fladd,w
  8914  1657  00E4               	movwf	___fladd@bexp
  8915  1658  2E82               	goto	l706
  8916  1659                     l708:
  8917  1659  1C65               	btfss	___fladd@grs,0
  8918  165A  2E5C               	goto	u3291
  8919  165B  2E5D               	goto	u3290
  8920  165C                     u3291:
  8921  165C  2E66               	goto	l2482
  8922  165D                     u3290:
  8923  165D                     l2480:
  8924  165D  0865               	movf	___fladd@grs,w
  8925  165E  00DA               	movwf	??___fladd
  8926  165F  1003               	clrc
  8927  1660  0C5A               	rrf	??___fladd,w
  8928  1661  3801               	iorlw	1
  8929  1662  00DB               	movwf	??___fladd+1
  8930  1663  085B               	movf	??___fladd+1,w
  8931  1664  00E5               	movwf	___fladd@grs
  8932  1665  2E68               	goto	l2484
  8933  1666                     l2482:
  8934  1666  1003               	clrc
  8935  1667  0CE5               	rrf	___fladd@grs,f
  8936  1668                     l2484:
  8937  1668  1C52               	btfss	___fladd@b,0
  8938  1669  2E6B               	goto	u3301
  8939  166A  2E6C               	goto	u3300
  8940  166B                     u3301:
  8941  166B  2E6D               	goto	l2488
  8942  166C                     u3300:
  8943  166C                     l2486:
  8944  166C  17E5               	bsf	___fladd@grs,7
  8945  166D                     l2488:
  8946  166D  3001               	movlw	1
  8947  166E  00DA               	movwf	??___fladd
  8948  166F                     u3315:
  8949  166F  0D55               	rlf	___fladd@b+3,w
  8950  1670  0CD5               	rrf	___fladd@b+3,f
  8951  1671  0CD4               	rrf	___fladd@b+2,f
  8952  1672  0CD3               	rrf	___fladd@b+1,f
  8953  1673  0CD2               	rrf	___fladd@b,f
  8954  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8955  1675  2E6F               	goto	u3315
  8956  1676                     l2490:
  8957  1676  3001               	movlw	1
  8958  1677  00DA               	movwf	??___fladd
  8959  1678  085A               	movf	??___fladd,w
  8960  1679  07E4               	addwf	___fladd@bexp,f
  8961  167A                     l2492:
  8962  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8963  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8964  167C  0863               	movf	___fladd@aexp,w
  8965  167D  0264               	subwf	___fladd@bexp,w
  8966  167E  1C03               	skipc
  8967  167F  2E81               	goto	u3321
  8968  1680  2E82               	goto	u3320
  8969  1681                     u3321:
  8970  1681  2E59               	goto	l708
  8971  1682                     u3320:
  8972  1682                     l706:
  8973  1682  1B62               	btfsc	___fladd@signs,6
  8974  1683  2E85               	goto	u3331
  8975  1684  2E86               	goto	u3330
  8976  1685                     u3331:
  8977  1685  2ED1               	goto	l2518
  8978  1686                     u3330:
  8979  1686                     l2494:
  8980  1686  0864               	movf	___fladd@bexp,w
  8981  1687  1D03               	btfss	3,2
  8982  1688  2E8A               	goto	u3341
  8983  1689  2E8B               	goto	u3340
  8984  168A                     u3341:
  8985  168A  2E94               	goto	l2500
  8986  168B                     u3340:
  8987  168B                     l2496:
  8988  168B  3000               	movlw	0
  8989  168C  00D5               	movwf	?___fladd+3
  8990  168D  3000               	movlw	0
  8991  168E  00D4               	movwf	?___fladd+2
  8992  168F  3000               	movlw	0
  8993  1690  00D3               	movwf	?___fladd+1
  8994  1691  3000               	movlw	0
  8995  1692  00D2               	movwf	?___fladd
  8996  1693  2FFF               	goto	l715
  8997  1694                     l2500:
  8998  1694  0856               	movf	___fladd@a,w
  8999  1695  07D2               	addwf	___fladd@b,f
  9000  1696  0857               	movf	___fladd@a+1,w
  9001  1697  1103               	clrz
  9002  1698  1803               	skipnc
  9003  1699  3E01               	addlw	1
  9004  169A  1903               	skipnz
  9005  169B  2E9D               	goto	u3351
  9006  169C  07D3               	addwf	___fladd@b+1,f
  9007  169D                     u3351:
  9008  169D  0858               	movf	___fladd@a+2,w
  9009  169E  1103               	clrz
  9010  169F  1803               	skipnc
  9011  16A0  3E01               	addlw	1
  9012  16A1  1903               	skipnz
  9013  16A2  2EA4               	goto	u3352
  9014  16A3  07D4               	addwf	___fladd@b+2,f
  9015  16A4                     u3352:
  9016  16A4  0859               	movf	___fladd@a+3,w
  9017  16A5  1103               	clrz
  9018  16A6  1803               	skipnc
  9019  16A7  3E01               	addlw	1
  9020  16A8  1903               	skipnz
  9021  16A9  2EAB               	goto	u3353
  9022  16AA  07D5               	addwf	___fladd@b+3,f
  9023  16AB                     u3353:
  9024  16AB                     l2502:
  9025  16AB  1C55               	btfss	___fladd@b+3,0
  9026  16AC  2EAE               	goto	u3361
  9027  16AD  2EAF               	goto	u3360
  9028  16AE                     u3361:
  9029  16AE  2F85               	goto	l2552
  9030  16AF                     u3360:
  9031  16AF                     l2504:
  9032  16AF  1C65               	btfss	___fladd@grs,0
  9033  16B0  2EB2               	goto	u3371
  9034  16B1  2EB3               	goto	u3370
  9035  16B2                     u3371:
  9036  16B2  2EBC               	goto	l2508
  9037  16B3                     u3370:
  9038  16B3                     l2506:
  9039  16B3  0865               	movf	___fladd@grs,w
  9040  16B4  00DA               	movwf	??___fladd
  9041  16B5  1003               	clrc
  9042  16B6  0C5A               	rrf	??___fladd,w
  9043  16B7  3801               	iorlw	1
  9044  16B8  00DB               	movwf	??___fladd+1
  9045  16B9  085B               	movf	??___fladd+1,w
  9046  16BA  00E5               	movwf	___fladd@grs
  9047  16BB  2EBE               	goto	l2510
  9048  16BC                     l2508:
  9049  16BC  1003               	clrc
  9050  16BD  0CE5               	rrf	___fladd@grs,f
  9051  16BE                     l2510:
  9052  16BE  1C52               	btfss	___fladd@b,0
  9053  16BF  2EC1               	goto	u3381
  9054  16C0  2EC2               	goto	u3380
  9055  16C1                     u3381:
  9056  16C1  2EC3               	goto	l2514
  9057  16C2                     u3380:
  9058  16C2                     l2512:
  9059  16C2  17E5               	bsf	___fladd@grs,7
  9060  16C3                     l2514:
  9061  16C3  3001               	movlw	1
  9062  16C4  00DA               	movwf	??___fladd
  9063  16C5                     u3395:
  9064  16C5  0D55               	rlf	___fladd@b+3,w
  9065  16C6  0CD5               	rrf	___fladd@b+3,f
  9066  16C7  0CD4               	rrf	___fladd@b+2,f
  9067  16C8  0CD3               	rrf	___fladd@b+1,f
  9068  16C9  0CD2               	rrf	___fladd@b,f
  9069  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  9070  16CB  2EC5               	goto	u3395
  9071  16CC                     l2516:
  9072  16CC  3001               	movlw	1
  9073  16CD  00DA               	movwf	??___fladd
  9074  16CE  085A               	movf	??___fladd,w
  9075  16CF  07E4               	addwf	___fladd@bexp,f
  9076  16D0  2F85               	goto	l2552
  9077  16D1                     l2518:
  9078  16D1  0855               	movf	___fladd@b+3,w
  9079  16D2  3A80               	xorlw	128
  9080  16D3  00FF               	movwf	btemp+1
  9081  16D4  0859               	movf	___fladd@a+3,w
  9082  16D5  3A80               	xorlw	128
  9083  16D6  027F               	subwf	btemp+1,w
  9084  16D7  1D03               	skipz
  9085  16D8  2EE3               	goto	u3403
  9086  16D9  0858               	movf	___fladd@a+2,w
  9087  16DA  0254               	subwf	___fladd@b+2,w
  9088  16DB  1D03               	skipz
  9089  16DC  2EE3               	goto	u3403
  9090  16DD  0857               	movf	___fladd@a+1,w
  9091  16DE  0253               	subwf	___fladd@b+1,w
  9092  16DF  1D03               	skipz
  9093  16E0  2EE3               	goto	u3403
  9094  16E1  0856               	movf	___fladd@a,w
  9095  16E2  0252               	subwf	___fladd@b,w
  9096  16E3                     u3403:
  9097  16E3  1803               	skipnc
  9098  16E4  2EE6               	goto	u3401
  9099  16E5  2EE7               	goto	u3400
  9100  16E6                     u3401:
  9101  16E6  2F3F               	goto	l2528
  9102  16E7                     u3400:
  9103  16E7                     l2520:
  9104  16E7  30FF               	movlw	255
  9105  16E8  00DA               	movwf	??___fladd
  9106  16E9  30FF               	movlw	255
  9107  16EA  00DB               	movwf	??___fladd+1
  9108  16EB  30FF               	movlw	255
  9109  16EC  00DC               	movwf	??___fladd+2
  9110  16ED  30FF               	movlw	255
  9111  16EE  00DD               	movwf	??___fladd+3
  9112  16EF  0856               	movf	___fladd@a,w
  9113  16F0  00DE               	movwf	??___fladd+4
  9114  16F1  0857               	movf	___fladd@a+1,w
  9115  16F2  00DF               	movwf	??___fladd+5
  9116  16F3  0858               	movf	___fladd@a+2,w
  9117  16F4  00E0               	movwf	??___fladd+6
  9118  16F5  0859               	movf	___fladd@a+3,w
  9119  16F6  00E1               	movwf	??___fladd+7
  9120  16F7  0852               	movf	___fladd@b,w
  9121  16F8  02DE               	subwf	??___fladd+4,f
  9122  16F9  0853               	movf	___fladd@b+1,w
  9123  16FA  1C03               	skipc
  9124  16FB  0F53               	incfsz	___fladd@b+1,w
  9125  16FC  2EFE               	goto	u3411
  9126  16FD  2EFF               	goto	u3412
  9127  16FE                     u3411:
  9128  16FE  02DF               	subwf	??___fladd+5,f
  9129  16FF                     u3412:
  9130  16FF  0854               	movf	___fladd@b+2,w
  9131  1700  1C03               	skipc
  9132  1701  0F54               	incfsz	___fladd@b+2,w
  9133  1702  2F04               	goto	u3413
  9134  1703  2F05               	goto	u3414
  9135  1704                     u3413:
  9136  1704  02E0               	subwf	??___fladd+6,f
  9137  1705                     u3414:
  9138  1705  0855               	movf	___fladd@b+3,w
  9139  1706  1C03               	skipc
  9140  1707  0F55               	incfsz	___fladd@b+3,w
  9141  1708  2F0A               	goto	u3415
  9142  1709  2F0B               	goto	u3416
  9143  170A                     u3415:
  9144  170A  02E1               	subwf	??___fladd+7,f
  9145  170B                     u3416:
  9146  170B  085E               	movf	??___fladd+4,w
  9147  170C  07DA               	addwf	??___fladd,f
  9148  170D  085F               	movf	??___fladd+5,w
  9149  170E  1803               	skipnc
  9150  170F  0F5F               	incfsz	??___fladd+5,w
  9151  1710  2F12               	goto	u3420
  9152  1711  2F13               	goto	u3421
  9153  1712                     u3420:
  9154  1712  07DB               	addwf	??___fladd+1,f
  9155  1713                     u3421:
  9156  1713  0860               	movf	??___fladd+6,w
  9157  1714  1803               	skipnc
  9158  1715  0F60               	incfsz	??___fladd+6,w
  9159  1716  2F18               	goto	u3422
  9160  1717  2F19               	goto	u3423
  9161  1718                     u3422:
  9162  1718  07DC               	addwf	??___fladd+2,f
  9163  1719                     u3423:
  9164  1719  0861               	movf	??___fladd+7,w
  9165  171A  1803               	skipnc
  9166  171B  0A61               	incf	??___fladd+7,w
  9167  171C  07DD               	addwf	??___fladd+3,f
  9168  171D  085D               	movf	??___fladd+3,w
  9169  171E  00D5               	movwf	___fladd@b+3
  9170  171F  085C               	movf	??___fladd+2,w
  9171  1720  00D4               	movwf	___fladd@b+2
  9172  1721  085B               	movf	??___fladd+1,w
  9173  1722  00D3               	movwf	___fladd@b+1
  9174  1723  085A               	movf	??___fladd,w
  9175  1724  00D2               	movwf	___fladd@b
  9176  1725                     l2522:
  9177  1725  3080               	movlw	128
  9178  1726  00DA               	movwf	??___fladd
  9179  1727  085A               	movf	??___fladd,w
  9180  1728  06E2               	xorwf	___fladd@signs,f
  9181  1729  09E5               	comf	___fladd@grs,f
  9182  172A  0AE5               	incf	___fladd@grs,f
  9183  172B                     l2524:
  9184  172B  0865               	movf	___fladd@grs,w
  9185  172C  1D03               	btfss	3,2
  9186  172D  2F2F               	goto	u3431
  9187  172E  2F30               	goto	u3430
  9188  172F                     u3431:
  9189  172F  2F4D               	goto	l723
  9190  1730                     u3430:
  9191  1730                     l2526:
  9192  1730  3001               	movlw	1
  9193  1731  07D2               	addwf	___fladd@b,f
  9194  1732  3000               	movlw	0
  9195  1733  1803               	skipnc
  9196  1734  3001               	movlw	1
  9197  1735  07D3               	addwf	___fladd@b+1,f
  9198  1736  3000               	movlw	0
  9199  1737  1803               	skipnc
  9200  1738  3001               	movlw	1
  9201  1739  07D4               	addwf	___fladd@b+2,f
  9202  173A  3000               	movlw	0
  9203  173B  1803               	skipnc
  9204  173C  3001               	movlw	1
  9205  173D  07D5               	addwf	___fladd@b+3,f
  9206  173E  2F4D               	goto	l723
  9207  173F                     l2528:
  9208  173F  0856               	movf	___fladd@a,w
  9209  1740  02D2               	subwf	___fladd@b,f
  9210  1741  0857               	movf	___fladd@a+1,w
  9211  1742  1C03               	skipc
  9212  1743  0F57               	incfsz	___fladd@a+1,w
  9213  1744  02D3               	subwf	___fladd@b+1,f
  9214  1745  0858               	movf	___fladd@a+2,w
  9215  1746  1C03               	skipc
  9216  1747  0F58               	incfsz	___fladd@a+2,w
  9217  1748  02D4               	subwf	___fladd@b+2,f
  9218  1749  0859               	movf	___fladd@a+3,w
  9219  174A  1C03               	skipc
  9220  174B  0F59               	incfsz	___fladd@a+3,w
  9221  174C  02D5               	subwf	___fladd@b+3,f
  9222  174D                     l723:
  9223  174D  0855               	movf	___fladd@b+3,w
  9224  174E  0454               	iorwf	___fladd@b+2,w
  9225  174F  0453               	iorwf	___fladd@b+1,w
  9226  1750  0452               	iorwf	___fladd@b,w
  9227  1751  1D03               	skipz
  9228  1752  2F54               	goto	u3441
  9229  1753  2F55               	goto	u3440
  9230  1754                     u3441:
  9231  1754  2F81               	goto	l2550
  9232  1755                     u3440:
  9233  1755                     l2530:
  9234  1755  0865               	movf	___fladd@grs,w
  9235  1756  1D03               	btfss	3,2
  9236  1757  2F59               	goto	u3451
  9237  1758  2F5A               	goto	u3450
  9238  1759                     u3451:
  9239  1759  2F81               	goto	l2550
  9240  175A                     u3450:
  9241  175A                     l2532:
  9242  175A  3000               	movlw	0
  9243  175B  00D5               	movwf	?___fladd+3
  9244  175C  3000               	movlw	0
  9245  175D  00D4               	movwf	?___fladd+2
  9246  175E  3000               	movlw	0
  9247  175F  00D3               	movwf	?___fladd+1
  9248  1760  3000               	movlw	0
  9249  1761  00D2               	movwf	?___fladd
  9250  1762  2FFF               	goto	l715
  9251  1763                     l2536:
  9252  1763  3001               	movlw	1
  9253  1764  00DA               	movwf	??___fladd
  9254  1765                     u3465:
  9255  1765  1003               	clrc
  9256  1766  0DD2               	rlf	___fladd@b,f
  9257  1767  0DD3               	rlf	___fladd@b+1,f
  9258  1768  0DD4               	rlf	___fladd@b+2,f
  9259  1769  0DD5               	rlf	___fladd@b+3,f
  9260  176A  0BDA               	decfsz	??___fladd,f
  9261  176B  2F65               	goto	u3465
  9262  176C                     l2538:
  9263  176C  1FE5               	btfss	___fladd@grs,7
  9264  176D  2F6F               	goto	u3471
  9265  176E  2F70               	goto	u3470
  9266  176F                     u3471:
  9267  176F  2F71               	goto	l727
  9268  1770                     u3470:
  9269  1770                     l2540:
  9270  1770  1452               	bsf	___fladd@b,0
  9271  1771                     l727:
  9272  1771  1C65               	btfss	___fladd@grs,0
  9273  1772  2F74               	goto	u3481
  9274  1773  2F75               	goto	u3480
  9275  1774                     u3481:
  9276  1774  2F78               	goto	l2544
  9277  1775                     u3480:
  9278  1775                     l2542:
  9279  1775  1403               	setc
  9280  1776  0DE5               	rlf	___fladd@grs,f
  9281  1777  2F7A               	goto	l2546
  9282  1778                     l2544:
  9283  1778  1003               	clrc
  9284  1779  0DE5               	rlf	___fladd@grs,f
  9285  177A                     l2546:
  9286  177A  0864               	movf	___fladd@bexp,w
  9287  177B  1903               	btfsc	3,2
  9288  177C  2F7E               	goto	u3491
  9289  177D  2F7F               	goto	u3490
  9290  177E                     u3491:
  9291  177E  2F81               	goto	l2550
  9292  177F                     u3490:
  9293  177F                     l2548:
  9294  177F  3001               	movlw	1
  9295  1780  02E4               	subwf	___fladd@bexp,f
  9296  1781                     l2550:
  9297  1781  1FD4               	btfss	___fladd@b+2,7
  9298  1782  2F84               	goto	u3501
  9299  1783  2F85               	goto	u3500
  9300  1784                     u3501:
  9301  1784  2F63               	goto	l2536
  9302  1785                     u3500:
  9303  1785                     l2552:
  9304  1785  01E3               	clrf	___fladd@aexp
  9305  1786                     l2554:
  9306  1786  1FE5               	btfss	___fladd@grs,7
  9307  1787  2F89               	goto	u3511
  9308  1788  2F8A               	goto	u3510
  9309  1789                     u3511:
  9310  1789  2F98               	goto	l2562
  9311  178A                     u3510:
  9312  178A                     l2556:
  9313  178A  0865               	movf	___fladd@grs,w
  9314  178B  397F               	andlw	127
  9315  178C  1903               	btfsc	3,2
  9316  178D  2F8F               	goto	u3521
  9317  178E  2F90               	goto	u3520
  9318  178F                     u3521:
  9319  178F  2F93               	goto	l733
  9320  1790                     u3520:
  9321  1790                     l2558:
  9322  1790  01E3               	clrf	___fladd@aexp
  9323  1791  0AE3               	incf	___fladd@aexp,f
  9324  1792  2F98               	goto	l2562
  9325  1793                     l733:
  9326  1793  1C52               	btfss	___fladd@b,0
  9327  1794  2F96               	goto	u3531
  9328  1795  2F97               	goto	u3530
  9329  1796                     u3531:
  9330  1796  2F98               	goto	l2562
  9331  1797                     u3530:
  9332  1797  2F90               	goto	l2558
  9333  1798                     l2562:
  9334  1798  0863               	movf	___fladd@aexp,w
  9335  1799  1903               	btfsc	3,2
  9336  179A  2F9C               	goto	u3541
  9337  179B  2F9D               	goto	u3540
  9338  179C                     u3541:
  9339  179C  2FD1               	goto	l736
  9340  179D                     u3540:
  9341  179D                     l2564:
  9342  179D  3001               	movlw	1
  9343  179E  07D2               	addwf	___fladd@b,f
  9344  179F  3000               	movlw	0
  9345  17A0  1803               	skipnc
  9346  17A1  3001               	movlw	1
  9347  17A2  07D3               	addwf	___fladd@b+1,f
  9348  17A3  3000               	movlw	0
  9349  17A4  1803               	skipnc
  9350  17A5  3001               	movlw	1
  9351  17A6  07D4               	addwf	___fladd@b+2,f
  9352  17A7  3000               	movlw	0
  9353  17A8  1803               	skipnc
  9354  17A9  3001               	movlw	1
  9355  17AA  07D5               	addwf	___fladd@b+3,f
  9356  17AB                     l2566:
  9357  17AB  1C55               	btfss	___fladd@b+3,0
  9358  17AC  2FAE               	goto	u3551
  9359  17AD  2FAF               	goto	u3550
  9360  17AE                     u3551:
  9361  17AE  2FD1               	goto	l736
  9362  17AF                     u3550:
  9363  17AF                     l2568:
  9364  17AF  0852               	movf	___fladd@b,w
  9365  17B0  00DA               	movwf	??___fladd
  9366  17B1  0853               	movf	___fladd@b+1,w
  9367  17B2  00DB               	movwf	??___fladd+1
  9368  17B3  0854               	movf	___fladd@b+2,w
  9369  17B4  00DC               	movwf	??___fladd+2
  9370  17B5  0855               	movf	___fladd@b+3,w
  9371  17B6  00DD               	movwf	??___fladd+3
  9372  17B7  3001               	movlw	1
  9373  17B8  00DE               	movwf	??___fladd+4
  9374  17B9                     u3565:
  9375  17B9  0D5D               	rlf	??___fladd+3,w
  9376  17BA  0CDD               	rrf	??___fladd+3,f
  9377  17BB  0CDC               	rrf	??___fladd+2,f
  9378  17BC  0CDB               	rrf	??___fladd+1,f
  9379  17BD  0CDA               	rrf	??___fladd,f
  9380  17BE                     u3560:
  9381  17BE  0BDE               	decfsz	??___fladd+4,f
  9382  17BF  2FB9               	goto	u3565
  9383  17C0  085D               	movf	??___fladd+3,w
  9384  17C1  00D5               	movwf	___fladd@b+3
  9385  17C2  085C               	movf	??___fladd+2,w
  9386  17C3  00D4               	movwf	___fladd@b+2
  9387  17C4  085B               	movf	??___fladd+1,w
  9388  17C5  00D3               	movwf	___fladd@b+1
  9389  17C6  085A               	movf	??___fladd,w
  9390  17C7  00D2               	movwf	___fladd@b
  9391  17C8  0A64               	incf	___fladd@bexp,w
  9392  17C9  1903               	btfsc	3,2
  9393  17CA  2FCC               	goto	u3571
  9394  17CB  2FCD               	goto	u3570
  9395  17CC                     u3571:
  9396  17CC  2FD1               	goto	l736
  9397  17CD                     u3570:
  9398  17CD                     l2570:
  9399  17CD  3001               	movlw	1
  9400  17CE  00DA               	movwf	??___fladd
  9401  17CF  085A               	movf	??___fladd,w
  9402  17D0  07E4               	addwf	___fladd@bexp,f
  9403  17D1                     l736:
  9404  17D1  0A64               	incf	___fladd@bexp,w
  9405  17D2  1903               	btfsc	3,2
  9406  17D3  2FD5               	goto	u3581
  9407  17D4  2FD6               	goto	u3580
  9408  17D5                     u3581:
  9409  17D5  2FDB               	goto	l2574
  9410  17D6                     u3580:
  9411  17D6                     l2572:
  9412  17D6  0864               	movf	___fladd@bexp,w
  9413  17D7  1D03               	btfss	3,2
  9414  17D8  2FDA               	goto	u3591
  9415  17D9  2FDB               	goto	u3590
  9416  17DA                     u3591:
  9417  17DA  2FE9               	goto	l2580
  9418  17DB                     u3590:
  9419  17DB                     l2574:
  9420  17DB  3000               	movlw	0
  9421  17DC  00D5               	movwf	___fladd@b+3
  9422  17DD  3000               	movlw	0
  9423  17DE  00D4               	movwf	___fladd@b+2
  9424  17DF  3000               	movlw	0
  9425  17E0  00D3               	movwf	___fladd@b+1
  9426  17E1  3000               	movlw	0
  9427  17E2  00D2               	movwf	___fladd@b
  9428  17E3                     l2576:
  9429  17E3  0864               	movf	___fladd@bexp,w
  9430  17E4  1D03               	btfss	3,2
  9431  17E5  2FE7               	goto	u3601
  9432  17E6  2FE8               	goto	u3600
  9433  17E7                     u3601:
  9434  17E7  2FE9               	goto	l2580
  9435  17E8                     u3600:
  9436  17E8                     l2578:
  9437  17E8  01E2               	clrf	___fladd@signs
  9438  17E9                     l2580:
  9439  17E9  1C64               	btfss	___fladd@bexp,0
  9440  17EA  2FEC               	goto	u3611
  9441  17EB  2FED               	goto	u3610
  9442  17EC                     u3611:
  9443  17EC  2FEF               	goto	l2584
  9444  17ED                     u3610:
  9445  17ED                     l2582:
  9446  17ED  17D4               	bsf	___fladd@b+2,7
  9447  17EE  2FF3               	goto	l744
  9448  17EF                     l2584:
  9449  17EF  307F               	movlw	127
  9450  17F0  00DA               	movwf	??___fladd
  9451  17F1  085A               	movf	??___fladd,w
  9452  17F2  05D4               	andwf	___fladd@b+2,f
  9453  17F3                     l744:
  9454  17F3  0864               	movf	___fladd@bexp,w
  9455  17F4  00DA               	movwf	??___fladd
  9456  17F5  1003               	clrc
  9457  17F6  0C5A               	rrf	??___fladd,w
  9458  17F7  00DB               	movwf	??___fladd+1
  9459  17F8  085B               	movf	??___fladd+1,w
  9460  17F9  00D5               	movwf	___fladd@b+3
  9461  17FA                     l2586:
  9462  17FA  1FE2               	btfss	___fladd@signs,7
  9463  17FB  2FFD               	goto	u3621
  9464  17FC  2FFE               	goto	u3620
  9465  17FD                     u3621:
  9466  17FD  2FFF               	goto	l745
  9467  17FE                     u3620:
  9468  17FE                     l2588:
  9469  17FE  17D5               	bsf	___fladd@b+3,7
  9470  17FF                     l745:
  9471  17FF                     l715:
  9472  17FF  0008               	return
  9473  1800                     __end_of___fladd:
  9474                           
  9475                           	psect	text20
  9476  1B0A                     __ptext20:	
  9477 ;; *************** function ___flneg *****************
  9478 ;; Defined at:
  9479 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;  f1              4    0[COMMON] unsigned char 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  4    0[COMMON] unsigned char 
  9486 ;; Registers used:
  9487 ;;		wreg
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9493 ;;      Params:         4       0       0       0       0
  9494 ;;      Locals:         0       0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0
  9496 ;;      Totals:         4       0       0       0       0
  9497 ;;Total ram usage:        4 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; This function calls:
  9500 ;;		Nothing
  9501 ;; This function is called by:
  9502 ;;		_sprintf
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           
  9507                           ;psect for function ___flneg
  9508  1B0A                     ___flneg:
  9509  1B0A                     l3008:	
  9510                           ;incstack = 0
  9511                           ; Regs used in ___flneg: [wreg]
  9512                           
  9513  1B0A  0873               	movf	___flneg@f1+3,w
  9514  1B0B  0472               	iorwf	___flneg@f1+2,w
  9515  1B0C  0471               	iorwf	___flneg@f1+1,w
  9516  1B0D  0470               	iorwf	___flneg@f1,w
  9517  1B0E  1903               	skipnz
  9518  1B0F  2B11               	goto	u4751
  9519  1B10  2B12               	goto	u4750
  9520  1B11                     u4751:
  9521  1B11  2B14               	goto	l3012
  9522  1B12                     u4750:
  9523  1B12                     l3010:
  9524  1B12  3080               	movlw	128
  9525  1B13  06F3               	xorwf	___flneg@f1+3,f
  9526  1B14                     l3012:
  9527  1B14                     l574:
  9528  1B14  0008               	return
  9529  1B15                     __end_of___flneg:
  9530                           
  9531                           	psect	text21
  9532  1EA4                     __ptext21:	
  9533 ;; *************** function ___flge *****************
  9534 ;; Defined at:
  9535 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;  ff1             4    0[COMMON] unsigned char 
  9538 ;;  ff2             4    4[COMMON] unsigned char 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;		None
  9541 ;; Return value:  Size  Location     Type
  9542 ;;		None               void
  9543 ;; Registers used:
  9544 ;;		wreg, status,2, status,0
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9550 ;;      Params:         8       0       0       0       0
  9551 ;;      Locals:         0       0       0       0       0
  9552 ;;      Temps:          4       0       0       0       0
  9553 ;;      Totals:        12       0       0       0       0
  9554 ;;Total ram usage:       12 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; This function calls:
  9557 ;;		Nothing
  9558 ;; This function is called by:
  9559 ;;		_sprintf
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           
  9564                           ;psect for function ___flge
  9565  1EA4                     ___flge:
  9566  1EA4                     l2988:	
  9567                           ;incstack = 0
  9568                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9569                           
  9570  1EA4  3000               	movlw	0
  9571  1EA5  0570               	andwf	___flge@ff1,w
  9572  1EA6  00F8               	movwf	??___flge
  9573  1EA7  3000               	movlw	0
  9574  1EA8  0571               	andwf	___flge@ff1+1,w
  9575  1EA9  00F9               	movwf	??___flge+1
  9576  1EAA  3080               	movlw	128
  9577  1EAB  0572               	andwf	___flge@ff1+2,w
  9578  1EAC  00FA               	movwf	??___flge+2
  9579  1EAD  307F               	movlw	127
  9580  1EAE  0573               	andwf	___flge@ff1+3,w
  9581  1EAF  00FB               	movwf	??___flge+3
  9582  1EB0  087B               	movf	??___flge+3,w
  9583  1EB1  047A               	iorwf	??___flge+2,w
  9584  1EB2  0479               	iorwf	??___flge+1,w
  9585  1EB3  0478               	iorwf	??___flge,w
  9586  1EB4  1D03               	skipz
  9587  1EB5  2EB7               	goto	u4681
  9588  1EB6  2EB8               	goto	u4680
  9589  1EB7                     u4681:
  9590  1EB7  2EC0               	goto	l566
  9591  1EB8                     u4680:
  9592  1EB8                     l2990:
  9593  1EB8  3000               	movlw	0
  9594  1EB9  00F3               	movwf	___flge@ff1+3
  9595  1EBA  3000               	movlw	0
  9596  1EBB  00F2               	movwf	___flge@ff1+2
  9597  1EBC  3000               	movlw	0
  9598  1EBD  00F1               	movwf	___flge@ff1+1
  9599  1EBE  3000               	movlw	0
  9600  1EBF  00F0               	movwf	___flge@ff1
  9601  1EC0                     l566:
  9602  1EC0  3000               	movlw	0
  9603  1EC1  0574               	andwf	___flge@ff2,w
  9604  1EC2  00F8               	movwf	??___flge
  9605  1EC3  3000               	movlw	0
  9606  1EC4  0575               	andwf	___flge@ff2+1,w
  9607  1EC5  00F9               	movwf	??___flge+1
  9608  1EC6  3080               	movlw	128
  9609  1EC7  0576               	andwf	___flge@ff2+2,w
  9610  1EC8  00FA               	movwf	??___flge+2
  9611  1EC9  307F               	movlw	127
  9612  1ECA  0577               	andwf	___flge@ff2+3,w
  9613  1ECB  00FB               	movwf	??___flge+3
  9614  1ECC  087B               	movf	??___flge+3,w
  9615  1ECD  047A               	iorwf	??___flge+2,w
  9616  1ECE  0479               	iorwf	??___flge+1,w
  9617  1ECF  0478               	iorwf	??___flge,w
  9618  1ED0  1D03               	skipz
  9619  1ED1  2ED3               	goto	u4691
  9620  1ED2  2ED4               	goto	u4690
  9621  1ED3                     u4691:
  9622  1ED3  2EDC               	goto	l2994
  9623  1ED4                     u4690:
  9624  1ED4                     l2992:
  9625  1ED4  3000               	movlw	0
  9626  1ED5  00F7               	movwf	___flge@ff2+3
  9627  1ED6  3000               	movlw	0
  9628  1ED7  00F6               	movwf	___flge@ff2+2
  9629  1ED8  3000               	movlw	0
  9630  1ED9  00F5               	movwf	___flge@ff2+1
  9631  1EDA  3000               	movlw	0
  9632  1EDB  00F4               	movwf	___flge@ff2
  9633  1EDC                     l2994:
  9634  1EDC  1FF3               	btfss	___flge@ff1+3,7
  9635  1EDD  2EDF               	goto	u4701
  9636  1EDE  2EE0               	goto	u4700
  9637  1EDF                     u4701:
  9638  1EDF  2F04               	goto	l2998
  9639  1EE0                     u4700:
  9640  1EE0                     l2996:
  9641  1EE0  3000               	movlw	0
  9642  1EE1  00F8               	movwf	??___flge
  9643  1EE2  3000               	movlw	0
  9644  1EE3  00F9               	movwf	??___flge+1
  9645  1EE4  3000               	movlw	0
  9646  1EE5  00FA               	movwf	??___flge+2
  9647  1EE6  3080               	movlw	128
  9648  1EE7  00FB               	movwf	??___flge+3
  9649  1EE8  0870               	movf	___flge@ff1,w
  9650  1EE9  02F8               	subwf	??___flge,f
  9651  1EEA  0871               	movf	___flge@ff1+1,w
  9652  1EEB  1C03               	skipc
  9653  1EEC  0F71               	incfsz	___flge@ff1+1,w
  9654  1EED  2EEF               	goto	u4711
  9655  1EEE  2EF0               	goto	u4712
  9656  1EEF                     u4711:
  9657  1EEF  02F9               	subwf	??___flge+1,f
  9658  1EF0                     u4712:
  9659  1EF0  0872               	movf	___flge@ff1+2,w
  9660  1EF1  1C03               	skipc
  9661  1EF2  0F72               	incfsz	___flge@ff1+2,w
  9662  1EF3  2EF5               	goto	u4713
  9663  1EF4  2EF6               	goto	u4714
  9664  1EF5                     u4713:
  9665  1EF5  02FA               	subwf	??___flge+2,f
  9666  1EF6                     u4714:
  9667  1EF6  0873               	movf	___flge@ff1+3,w
  9668  1EF7  1C03               	skipc
  9669  1EF8  0F73               	incfsz	___flge@ff1+3,w
  9670  1EF9  2EFB               	goto	u4715
  9671  1EFA  2EFC               	goto	u4716
  9672  1EFB                     u4715:
  9673  1EFB  02FB               	subwf	??___flge+3,f
  9674  1EFC                     u4716:
  9675  1EFC  087B               	movf	??___flge+3,w
  9676  1EFD  00F3               	movwf	___flge@ff1+3
  9677  1EFE  087A               	movf	??___flge+2,w
  9678  1EFF  00F2               	movwf	___flge@ff1+2
  9679  1F00  0879               	movf	??___flge+1,w
  9680  1F01  00F1               	movwf	___flge@ff1+1
  9681  1F02  0878               	movf	??___flge,w
  9682  1F03  00F0               	movwf	___flge@ff1
  9683  1F04                     l2998:
  9684  1F04  1FF7               	btfss	___flge@ff2+3,7
  9685  1F05  2F07               	goto	u4721
  9686  1F06  2F08               	goto	u4720
  9687  1F07                     u4721:
  9688  1F07  2F2C               	goto	l569
  9689  1F08                     u4720:
  9690  1F08                     l3000:
  9691  1F08  3000               	movlw	0
  9692  1F09  00F8               	movwf	??___flge
  9693  1F0A  3000               	movlw	0
  9694  1F0B  00F9               	movwf	??___flge+1
  9695  1F0C  3000               	movlw	0
  9696  1F0D  00FA               	movwf	??___flge+2
  9697  1F0E  3080               	movlw	128
  9698  1F0F  00FB               	movwf	??___flge+3
  9699  1F10  0874               	movf	___flge@ff2,w
  9700  1F11  02F8               	subwf	??___flge,f
  9701  1F12  0875               	movf	___flge@ff2+1,w
  9702  1F13  1C03               	skipc
  9703  1F14  0F75               	incfsz	___flge@ff2+1,w
  9704  1F15  2F17               	goto	u4731
  9705  1F16  2F18               	goto	u4732
  9706  1F17                     u4731:
  9707  1F17  02F9               	subwf	??___flge+1,f
  9708  1F18                     u4732:
  9709  1F18  0876               	movf	___flge@ff2+2,w
  9710  1F19  1C03               	skipc
  9711  1F1A  0F76               	incfsz	___flge@ff2+2,w
  9712  1F1B  2F1D               	goto	u4733
  9713  1F1C  2F1E               	goto	u4734
  9714  1F1D                     u4733:
  9715  1F1D  02FA               	subwf	??___flge+2,f
  9716  1F1E                     u4734:
  9717  1F1E  0877               	movf	___flge@ff2+3,w
  9718  1F1F  1C03               	skipc
  9719  1F20  0F77               	incfsz	___flge@ff2+3,w
  9720  1F21  2F23               	goto	u4735
  9721  1F22  2F24               	goto	u4736
  9722  1F23                     u4735:
  9723  1F23  02FB               	subwf	??___flge+3,f
  9724  1F24                     u4736:
  9725  1F24  087B               	movf	??___flge+3,w
  9726  1F25  00F7               	movwf	___flge@ff2+3
  9727  1F26  087A               	movf	??___flge+2,w
  9728  1F27  00F6               	movwf	___flge@ff2+2
  9729  1F28  0879               	movf	??___flge+1,w
  9730  1F29  00F5               	movwf	___flge@ff2+1
  9731  1F2A  0878               	movf	??___flge,w
  9732  1F2B  00F4               	movwf	___flge@ff2
  9733  1F2C                     l569:
  9734  1F2C  3080               	movlw	128
  9735  1F2D  06F3               	xorwf	___flge@ff1+3,f
  9736  1F2E  3080               	movlw	128
  9737  1F2F  06F7               	xorwf	___flge@ff2+3,f
  9738  1F30  0877               	movf	___flge@ff2+3,w
  9739  1F31  0273               	subwf	___flge@ff1+3,w
  9740  1F32  1D03               	skipz
  9741  1F33  2F3E               	goto	u4745
  9742  1F34  0876               	movf	___flge@ff2+2,w
  9743  1F35  0272               	subwf	___flge@ff1+2,w
  9744  1F36  1D03               	skipz
  9745  1F37  2F3E               	goto	u4745
  9746  1F38  0875               	movf	___flge@ff2+1,w
  9747  1F39  0271               	subwf	___flge@ff1+1,w
  9748  1F3A  1D03               	skipz
  9749  1F3B  2F3E               	goto	u4745
  9750  1F3C  0874               	movf	___flge@ff2,w
  9751  1F3D  0270               	subwf	___flge@ff1,w
  9752  1F3E                     u4745:
  9753  1F3E  1803               	skipnc
  9754  1F3F  2F41               	goto	u4741
  9755  1F40  2F42               	goto	u4740
  9756  1F41                     u4741:
  9757  1F41  2F44               	goto	l3004
  9758  1F42                     u4740:
  9759  1F42                     l3002:
  9760  1F42  1003               	clrc
  9761  1F43  2F45               	goto	l570
  9762  1F44                     l3004:
  9763  1F44  1403               	setc
  9764  1F45                     l570:
  9765  1F45  0008               	return
  9766  1F46                     __end_of___flge:
  9767                           
  9768                           	psect	text22
  9769  1D37                     __ptext22:	
  9770 ;; *************** function ___fleq *****************
  9771 ;; Defined at:
  9772 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;  ff1             4    0[COMMON] unsigned char 
  9775 ;;  ff2             4    4[COMMON] unsigned char 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;		None               void
  9780 ;; Registers used:
  9781 ;;		wreg, status,2, status,0
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9787 ;;      Params:         8       0       0       0       0
  9788 ;;      Locals:         0       0       0       0       0
  9789 ;;      Temps:          4       0       0       0       0
  9790 ;;      Totals:        12       0       0       0       0
  9791 ;;Total ram usage:       12 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; This function calls:
  9794 ;;		Nothing
  9795 ;; This function is called by:
  9796 ;;		_sprintf
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           
  9801                           ;psect for function ___fleq
  9802  1D37                     ___fleq:
  9803  1D37                     l2976:	
  9804                           ;incstack = 0
  9805                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9806                           
  9807  1D37  3000               	movlw	0
  9808  1D38  0570               	andwf	___fleq@ff1,w
  9809  1D39  00F8               	movwf	??___fleq
  9810  1D3A  3000               	movlw	0
  9811  1D3B  0571               	andwf	___fleq@ff1+1,w
  9812  1D3C  00F9               	movwf	??___fleq+1
  9813  1D3D  3080               	movlw	128
  9814  1D3E  0572               	andwf	___fleq@ff1+2,w
  9815  1D3F  00FA               	movwf	??___fleq+2
  9816  1D40  307F               	movlw	127
  9817  1D41  0573               	andwf	___fleq@ff1+3,w
  9818  1D42  00FB               	movwf	??___fleq+3
  9819  1D43  087B               	movf	??___fleq+3,w
  9820  1D44  047A               	iorwf	??___fleq+2,w
  9821  1D45  0479               	iorwf	??___fleq+1,w
  9822  1D46  0478               	iorwf	??___fleq,w
  9823  1D47  1D03               	skipz
  9824  1D48  2D4A               	goto	u4651
  9825  1D49  2D4B               	goto	u4650
  9826  1D4A                     u4651:
  9827  1D4A  2D53               	goto	l561
  9828  1D4B                     u4650:
  9829  1D4B                     l2978:
  9830  1D4B  3000               	movlw	0
  9831  1D4C  00F3               	movwf	___fleq@ff1+3
  9832  1D4D  3000               	movlw	0
  9833  1D4E  00F2               	movwf	___fleq@ff1+2
  9834  1D4F  3000               	movlw	0
  9835  1D50  00F1               	movwf	___fleq@ff1+1
  9836  1D51  3000               	movlw	0
  9837  1D52  00F0               	movwf	___fleq@ff1
  9838  1D53                     l561:
  9839  1D53  3000               	movlw	0
  9840  1D54  0574               	andwf	___fleq@ff2,w
  9841  1D55  00F8               	movwf	??___fleq
  9842  1D56  3000               	movlw	0
  9843  1D57  0575               	andwf	___fleq@ff2+1,w
  9844  1D58  00F9               	movwf	??___fleq+1
  9845  1D59  3080               	movlw	128
  9846  1D5A  0576               	andwf	___fleq@ff2+2,w
  9847  1D5B  00FA               	movwf	??___fleq+2
  9848  1D5C  307F               	movlw	127
  9849  1D5D  0577               	andwf	___fleq@ff2+3,w
  9850  1D5E  00FB               	movwf	??___fleq+3
  9851  1D5F  087B               	movf	??___fleq+3,w
  9852  1D60  047A               	iorwf	??___fleq+2,w
  9853  1D61  0479               	iorwf	??___fleq+1,w
  9854  1D62  0478               	iorwf	??___fleq,w
  9855  1D63  1D03               	skipz
  9856  1D64  2D66               	goto	u4661
  9857  1D65  2D67               	goto	u4660
  9858  1D66                     u4661:
  9859  1D66  2D6F               	goto	l562
  9860  1D67                     u4660:
  9861  1D67                     l2980:
  9862  1D67  3000               	movlw	0
  9863  1D68  00F7               	movwf	___fleq@ff2+3
  9864  1D69  3000               	movlw	0
  9865  1D6A  00F6               	movwf	___fleq@ff2+2
  9866  1D6B  3000               	movlw	0
  9867  1D6C  00F5               	movwf	___fleq@ff2+1
  9868  1D6D  3000               	movlw	0
  9869  1D6E  00F4               	movwf	___fleq@ff2
  9870  1D6F                     l562:
  9871  1D6F  0877               	movf	___fleq@ff2+3,w
  9872  1D70  0673               	xorwf	___fleq@ff1+3,w
  9873  1D71  1D03               	skipz
  9874  1D72  2D7D               	goto	u4675
  9875  1D73  0876               	movf	___fleq@ff2+2,w
  9876  1D74  0672               	xorwf	___fleq@ff1+2,w
  9877  1D75  1D03               	skipz
  9878  1D76  2D7D               	goto	u4675
  9879  1D77  0875               	movf	___fleq@ff2+1,w
  9880  1D78  0671               	xorwf	___fleq@ff1+1,w
  9881  1D79  1D03               	skipz
  9882  1D7A  2D7D               	goto	u4675
  9883  1D7B  0874               	movf	___fleq@ff2,w
  9884  1D7C  0670               	xorwf	___fleq@ff1,w
  9885  1D7D                     u4675:
  9886  1D7D  1903               	skipnz
  9887  1D7E  2D80               	goto	u4671
  9888  1D7F  2D81               	goto	u4670
  9889  1D80                     u4671:
  9890  1D80  2D83               	goto	l2984
  9891  1D81                     u4670:
  9892  1D81                     l2982:
  9893  1D81  1003               	clrc
  9894  1D82  2D84               	goto	l563
  9895  1D83                     l2984:
  9896  1D83  1403               	setc
  9897  1D84                     l563:
  9898  1D84  0008               	return
  9899  1D85                     __end_of___fleq:
  9900                           
  9901                           	psect	text23
  9902  1C4C                     __ptext23:	
  9903 ;; *************** function _USART_WriteStr *****************
  9904 ;; Defined at:
  9905 ;;		line 38 in file "USART.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;  a               2    1[COMMON] PTR unsigned char 
  9908 ;;		 -> Lcdvar(20), STR_1(19), 
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;  i               1    4[COMMON] unsigned char 
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      void 
  9913 ;; Registers used:
  9914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9920 ;;      Params:         2       0       0       0       0
  9921 ;;      Locals:         1       0       0       0       0
  9922 ;;      Temps:          1       0       0       0       0
  9923 ;;      Totals:         4       0       0       0       0
  9924 ;;Total ram usage:        4 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; Hardware stack levels required when called:    1
  9927 ;; This function calls:
  9928 ;;		_USART_Write
  9929 ;; This function is called by:
  9930 ;;		_main
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           
  9935                           ;psect for function _USART_WriteStr
  9936  1C4C                     _USART_WriteStr:
  9937  1C4C                     l3150:	
  9938                           ;incstack = 0
  9939                           ; Regs used in _USART_WriteStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9940                           
  9941                           
  9942                           ;USART.c: 39:     uint8_t i;;USART.c: 40:     for(i=0;a[i]!='\0';i++){
  9943  1C4C  01F4               	clrf	USART_WriteStr@i
  9944  1C4D  2C63               	goto	l3156
  9945  1C4E                     l3152:
  9946                           
  9947                           ;USART.c: 41:         USART_Write(a[i]);
  9948  1C4E  0874               	movf	USART_WriteStr@i,w
  9949  1C4F  0771               	addwf	USART_WriteStr@a,w
  9950  1C50  0084               	movwf	4
  9951  1C51  0872               	movf	USART_WriteStr@a+1,w
  9952  1C52  1803               	skipnc
  9953  1C53  0A72               	incf	USART_WriteStr@a+1,w
  9954  1C54  00FF               	movwf	btemp+1
  9955  1C55  120A  158A  2000  160A  158A  	fcall	stringtab
  9956  1C5A  160A  158A  2315  160A  158A  	fcall	_USART_Write
  9957  1C5F                     l3154:
  9958                           
  9959                           ;USART.c: 42:     }
  9960  1C5F  3001               	movlw	1
  9961  1C60  00F3               	movwf	??_USART_WriteStr
  9962  1C61  0873               	movf	??_USART_WriteStr,w
  9963  1C62  07F4               	addwf	USART_WriteStr@i,f
  9964  1C63                     l3156:
  9965  1C63  0874               	movf	USART_WriteStr@i,w
  9966  1C64  0771               	addwf	USART_WriteStr@a,w
  9967  1C65  0084               	movwf	4
  9968  1C66  0872               	movf	USART_WriteStr@a+1,w
  9969  1C67  1803               	skipnc
  9970  1C68  0A72               	incf	USART_WriteStr@a+1,w
  9971  1C69  1283               	bcf	3,5	;RP0=0, select bank0
  9972  1C6A  1303               	bcf	3,6	;RP1=0, select bank0
  9973  1C6B  00FF               	movwf	btemp+1
  9974  1C6C  120A  158A  2000  160A  158A  	fcall	stringtab
  9975  1C71  3A00               	xorlw	0
  9976  1C72  1D03               	skipz
  9977  1C73  2C75               	goto	u5061
  9978  1C74  2C76               	goto	u5060
  9979  1C75                     u5061:
  9980  1C75  2C4E               	goto	l3152
  9981  1C76                     u5060:
  9982  1C76                     l162:
  9983  1C76  0008               	return
  9984  1C77                     __end_of_USART_WriteStr:
  9985                           
  9986                           	psect	text24
  9987  1B15                     __ptext24:	
  9988 ;; *************** function _USART_Write *****************
  9989 ;; Defined at:
  9990 ;;		line 33 in file "USART.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  a               1    wreg     unsigned char 
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  a               1    0[COMMON] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  1    wreg      void 
  9997 ;; Registers used:
  9998 ;;		wreg
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10004 ;;      Params:         0       0       0       0       0
 10005 ;;      Locals:         1       0       0       0       0
 10006 ;;      Temps:          0       0       0       0       0
 10007 ;;      Totals:         1       0       0       0       0
 10008 ;;Total ram usage:        1 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; This function calls:
 10011 ;;		Nothing
 10012 ;; This function is called by:
 10013 ;;		_main
 10014 ;;		_USART_WriteStr
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           
 10019                           ;psect for function _USART_Write
 10020  1B15                     _USART_Write:
 10021                           
 10022                           ;incstack = 0
 10023                           ; Regs used in _USART_Write: [wreg]
 10024                           ;USART_Write@a stored from wreg
 10025  1B15  00F0               	movwf	USART_Write@a
 10026  1B16                     l2736:
 10027  1B16                     l153:	
 10028                           ;USART.c: 34:     while(!TRMT);
 10029                           
 10030  1B16  1683               	bsf	3,5	;RP0=1, select bank1
 10031  1B17  1303               	bcf	3,6	;RP1=0, select bank1
 10032  1B18  1C98               	btfss	24,1	;volatile
 10033  1B19  2B1B               	goto	u4001
 10034  1B1A  2B1C               	goto	u4000
 10035  1B1B                     u4001:
 10036  1B1B  2B16               	goto	l153
 10037  1B1C                     u4000:
 10038  1B1C                     l2738:
 10039                           
 10040                           ;USART.c: 35:     TXREG=a;
 10041  1B1C  0870               	movf	USART_Write@a,w
 10042  1B1D  1283               	bcf	3,5	;RP0=0, select bank0
 10043  1B1E  1303               	bcf	3,6	;RP1=0, select bank0
 10044  1B1F  0099               	movwf	25	;volatile
 10045  1B20                     l156:
 10046  1B20  0008               	return
 10047  1B21                     __end_of_USART_Write:
 10048                           
 10049                           	psect	text25
 10050  1BB8                     __ptext25:	
 10051 ;; *************** function _Setup *****************
 10052 ;; Defined at:
 10053 ;;		line 67 in file "Master_main.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;		None
 10056 ;; Auto vars:     Size  Location     Type
 10057 ;;		None
 10058 ;; Return value:  Size  Location     Type
 10059 ;;                  1    wreg      void 
 10060 ;; Registers used:
 10061 ;;		wreg, status,2, status,0, pclath, cstack
 10062 ;; Tracked objects:
 10063 ;;		On entry : 0/0
 10064 ;;		On exit  : 0/0
 10065 ;;		Unchanged: 0/0
 10066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10067 ;;      Params:         0       0       0       0       0
 10068 ;;      Locals:         0       0       0       0       0
 10069 ;;      Temps:          0       0       0       0       0
 10070 ;;      Totals:         0       0       0       0       0
 10071 ;;Total ram usage:        0 bytes
 10072 ;; Hardware stack levels used:    1
 10073 ;; Hardware stack levels required when called:    1
 10074 ;; This function calls:
 10075 ;;		_SPI_MASTER
 10076 ;; This function is called by:
 10077 ;;		_main
 10078 ;; This function uses a non-reentrant model
 10079 ;;
 10080                           
 10081                           
 10082                           ;psect for function _Setup
 10083  1BB8                     _Setup:
 10084  1BB8                     l3122:	
 10085                           ;incstack = 0
 10086                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
 10087                           
 10088                           
 10089                           ;Master_main.c: 69:     ANSEL = 0b00000011;
 10090  1BB8  3003               	movlw	3
 10091  1BB9  1683               	bsf	3,5	;RP0=1, select bank3
 10092  1BBA  1703               	bsf	3,6	;RP1=1, select bank3
 10093  1BBB  0088               	movwf	8	;volatile
 10094  1BBC                     l3124:
 10095                           
 10096                           ;Master_main.c: 70:     ANSELH = 0;
 10097  1BBC  0189               	clrf	9	;volatile
 10098  1BBD                     l3126:
 10099                           
 10100                           ;Master_main.c: 72:     TRISA = 0b00000011;
 10101  1BBD  3003               	movlw	3
 10102  1BBE  1683               	bsf	3,5	;RP0=1, select bank1
 10103  1BBF  1303               	bcf	3,6	;RP1=0, select bank1
 10104  1BC0  0085               	movwf	5	;volatile
 10105                           
 10106                           ;Master_main.c: 73:     PORTA = 0;
 10107  1BC1  1283               	bcf	3,5	;RP0=0, select bank0
 10108  1BC2  1303               	bcf	3,6	;RP1=0, select bank0
 10109  1BC3  0185               	clrf	5	;volatile
 10110                           
 10111                           ;Master_main.c: 75:     TRISD = 0;
 10112  1BC4  1683               	bsf	3,5	;RP0=1, select bank1
 10113  1BC5  1303               	bcf	3,6	;RP1=0, select bank1
 10114  1BC6  0188               	clrf	8	;volatile
 10115                           
 10116                           ;Master_main.c: 76:     PORTD = 0;
 10117  1BC7  1283               	bcf	3,5	;RP0=0, select bank0
 10118  1BC8  1303               	bcf	3,6	;RP1=0, select bank0
 10119  1BC9  0188               	clrf	8	;volatile
 10120                           
 10121                           ;Master_main.c: 78:     TRISE = 0;
 10122  1BCA  1683               	bsf	3,5	;RP0=1, select bank1
 10123  1BCB  1303               	bcf	3,6	;RP1=0, select bank1
 10124  1BCC  0189               	clrf	9	;volatile
 10125                           
 10126                           ;Master_main.c: 79:     PORTE = 0;
 10127  1BCD  1283               	bcf	3,5	;RP0=0, select bank0
 10128  1BCE  1303               	bcf	3,6	;RP1=0, select bank0
 10129  1BCF  0189               	clrf	9	;volatile
 10130                           
 10131                           ;Master_main.c: 81:     TRISB = 0;
 10132  1BD0  1683               	bsf	3,5	;RP0=1, select bank1
 10133  1BD1  1303               	bcf	3,6	;RP1=0, select bank1
 10134  1BD2  0186               	clrf	6	;volatile
 10135                           
 10136                           ;Master_main.c: 82:     PORTB = 0;
 10137  1BD3  1283               	bcf	3,5	;RP0=0, select bank0
 10138  1BD4  1303               	bcf	3,6	;RP1=0, select bank0
 10139  1BD5  0186               	clrf	6	;volatile
 10140  1BD6                     l3128:
 10141                           
 10142                           ;Master_main.c: 84:     SPI_MASTER();
 10143  1BD6  160A  158A  233C  160A  158A  	fcall	_SPI_MASTER
 10144  1BDB                     l69:
 10145  1BDB  0008               	return
 10146  1BDC                     __end_of_Setup:
 10147                           
 10148                           	psect	text26
 10149  1B3C                     __ptext26:	
 10150 ;; *************** function _SPI_MASTER *****************
 10151 ;; Defined at:
 10152 ;;		line 3 in file "LIB_MASTERSPI.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;		None
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;		None
 10157 ;; Return value:  Size  Location     Type
 10158 ;;                  1    wreg      void 
 10159 ;; Registers used:
 10160 ;;		wreg, status,2
 10161 ;; Tracked objects:
 10162 ;;		On entry : 0/0
 10163 ;;		On exit  : 0/0
 10164 ;;		Unchanged: 0/0
 10165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10166 ;;      Params:         0       0       0       0       0
 10167 ;;      Locals:         0       0       0       0       0
 10168 ;;      Temps:          0       0       0       0       0
 10169 ;;      Totals:         0       0       0       0       0
 10170 ;;Total ram usage:        0 bytes
 10171 ;; Hardware stack levels used:    1
 10172 ;; This function calls:
 10173 ;;		Nothing
 10174 ;; This function is called by:
 10175 ;;		_Setup
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           
 10180                           ;psect for function _SPI_MASTER
 10181  1B3C                     _SPI_MASTER:
 10182  1B3C                     l2730:	
 10183                           ;incstack = 0
 10184                           ; Regs used in _SPI_MASTER: [wreg+status,2]
 10185                           
 10186                           
 10187                           ;LIB_MASTERSPI.c: 5:     TRISCbits.TRISC3 = 0;
 10188  1B3C  1683               	bsf	3,5	;RP0=1, select bank1
 10189  1B3D  1303               	bcf	3,6	;RP1=0, select bank1
 10190  1B3E  1187               	bcf	7,3	;volatile
 10191                           
 10192                           ;LIB_MASTERSPI.c: 6:     TRISCbits.TRISC5 = 0;
 10193  1B3F  1287               	bcf	7,5	;volatile
 10194                           
 10195                           ;LIB_MASTERSPI.c: 7:     TRISCbits.TRISC0 = 0;
 10196  1B40  1007               	bcf	7,0	;volatile
 10197                           
 10198                           ;LIB_MASTERSPI.c: 8:     PORTCbits.RC0 = 0;
 10199  1B41  1283               	bcf	3,5	;RP0=0, select bank0
 10200  1B42  1303               	bcf	3,6	;RP1=0, select bank0
 10201  1B43  1007               	bcf	7,0	;volatile
 10202                           
 10203                           ;LIB_MASTERSPI.c: 10:     TRISCbits.TRISC1 = 0;
 10204  1B44  1683               	bsf	3,5	;RP0=1, select bank1
 10205  1B45  1303               	bcf	3,6	;RP1=0, select bank1
 10206  1B46  1087               	bcf	7,1	;volatile
 10207                           
 10208                           ;LIB_MASTERSPI.c: 11:     PORTCbits.RC1 = 1;
 10209  1B47  1283               	bcf	3,5	;RP0=0, select bank0
 10210  1B48  1303               	bcf	3,6	;RP1=0, select bank0
 10211  1B49  1487               	bsf	7,1	;volatile
 10212                           
 10213                           ;LIB_MASTERSPI.c: 13:     TRISCbits.TRISC2 = 0;
 10214  1B4A  1683               	bsf	3,5	;RP0=1, select bank1
 10215  1B4B  1303               	bcf	3,6	;RP1=0, select bank1
 10216  1B4C  1107               	bcf	7,2	;volatile
 10217                           
 10218                           ;LIB_MASTERSPI.c: 14:     PORTCbits.RC2 = 1;
 10219  1B4D  1283               	bcf	3,5	;RP0=0, select bank0
 10220  1B4E  1303               	bcf	3,6	;RP1=0, select bank0
 10221  1B4F  1507               	bsf	7,2	;volatile
 10222  1B50                     l2732:
 10223                           
 10224                           ;LIB_MASTERSPI.c: 16:     SSPCON = 0b00100000;
 10225  1B50  3020               	movlw	32
 10226  1B51  0094               	movwf	20	;volatile
 10227  1B52                     l2734:
 10228                           
 10229                           ;LIB_MASTERSPI.c: 17:     SSPSTAT = 0;
 10230  1B52  1683               	bsf	3,5	;RP0=1, select bank1
 10231  1B53  1303               	bcf	3,6	;RP1=0, select bank1
 10232  1B54  0194               	clrf	20	;volatile
 10233  1B55                     l179:
 10234  1B55  0008               	return
 10235  1B56                     __end_of_SPI_MASTER:
 10236                           
 10237                           	psect	text27
 10238  1000                     __ptext27:	
 10239 ;; *************** function _Set_BaudRate *****************
 10240 ;; Defined at:
 10241 ;;		line 13 in file "USART.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;		None
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;		None
 10246 ;; Return value:  Size  Location     Type
 10247 ;;                  1    wreg      void 
 10248 ;; Registers used:
 10249 ;;		wreg
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 0/0
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10255 ;;      Params:         0       0       0       0       0
 10256 ;;      Locals:         0       0       0       0       0
 10257 ;;      Temps:          0       0       0       0       0
 10258 ;;      Totals:         0       0       0       0       0
 10259 ;;Total ram usage:        0 bytes
 10260 ;; Hardware stack levels used:    1
 10261 ;; This function calls:
 10262 ;;		Nothing
 10263 ;; This function is called by:
 10264 ;;		_main
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           
 10269                           ;psect for function _Set_BaudRate
 10270  1000                     _Set_BaudRate:
 10271  1000                     l3144:	
 10272                           ;incstack = 0
 10273                           ; Regs used in _Set_BaudRate: [wreg]
 10274                           
 10275                           
 10276                           ;USART.c: 14:     SPBRG = 12;
 10277  1000  300C               	movlw	12
 10278  1001  1683               	bsf	3,5	;RP0=1, select bank1
 10279  1002  1303               	bcf	3,6	;RP1=0, select bank1
 10280  1003  0099               	movwf	25	;volatile
 10281  1004                     l144:
 10282  1004  0008               	return
 10283  1005                     __end_of_Set_BaudRate:
 10284                           
 10285                           	psect	text28
 10286  1CB1                     __ptext28:	
 10287 ;; *************** function _LCD_Write_String *****************
 10288 ;; Defined at:
 10289 ;;		line 67 in file "LCD.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;  a               2    3[COMMON] PTR unsigned char 
 10292 ;;		 -> STR_3(16), Lcdvar(20), 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  i               2    8[COMMON] int 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  1    wreg      void 
 10297 ;; Registers used:
 10298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10304 ;;      Params:         2       0       0       0       0
 10305 ;;      Locals:         2       0       0       0       0
 10306 ;;      Temps:          3       0       0       0       0
 10307 ;;      Totals:         7       0       0       0       0
 10308 ;;Total ram usage:        7 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    2
 10311 ;; This function calls:
 10312 ;;		_LCD_Write_Char
 10313 ;; This function is called by:
 10314 ;;		_main
 10315 ;; This function uses a non-reentrant model
 10316 ;;
 10317                           
 10318                           
 10319                           ;psect for function _LCD_Write_String
 10320  1CB1                     _LCD_Write_String:
 10321  1CB1                     l3432:	
 10322                           ;incstack = 0
 10323                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10324                           
 10325                           
 10326                           ;LCD.c: 68:  int i;;LCD.c: 69:  for(i=0;a[i]!='\0';i++)
 10327  1CB1  01F8               	clrf	LCD_Write_String@i
 10328  1CB2  01F9               	clrf	LCD_Write_String@i+1
 10329  1CB3  2CD6               	goto	l3438
 10330  1CB4                     l3434:
 10331                           
 10332                           ;LCD.c: 70:     LCD_Write_Char(a[i]);
 10333  1CB4  0878               	movf	LCD_Write_String@i,w
 10334  1CB5  0773               	addwf	LCD_Write_String@a,w
 10335  1CB6  00F6               	movwf	??_LCD_Write_String+1
 10336  1CB7  0874               	movf	LCD_Write_String@a+1,w
 10337  1CB8  00F5               	movwf	??_LCD_Write_String
 10338  1CB9  1803               	skipnc
 10339  1CBA  0AF5               	incf	??_LCD_Write_String,f
 10340  1CBB  1FF8               	btfss	LCD_Write_String@i,7
 10341  1CBC  2CBE               	goto	u5560
 10342  1CBD  03F5               	decf	??_LCD_Write_String,f
 10343  1CBE                     u5560:
 10344  1CBE  0875               	movf	??_LCD_Write_String,w
 10345  1CBF  00F7               	movwf	??_LCD_Write_String+2
 10346  1CC0  0877               	movf	??_LCD_Write_String+2,w
 10347  1CC1  1283               	bcf	3,5	;RP0=0, select bank0
 10348  1CC2  1303               	bcf	3,6	;RP1=0, select bank0
 10349  1CC3  00FF               	movwf	btemp+1
 10350  1CC4  0876               	movf	??_LCD_Write_String+1,w
 10351  1CC5  0084               	movwf	4
 10352  1CC6  120A  158A  2000  160A  158A  	fcall	stringtab
 10353  1CCB  160A  158A  2356  160A  158A  	fcall	_LCD_Write_Char
 10354  1CD0                     l3436:
 10355  1CD0  3001               	movlw	1
 10356  1CD1  07F8               	addwf	LCD_Write_String@i,f
 10357  1CD2  1803               	skipnc
 10358  1CD3  0AF9               	incf	LCD_Write_String@i+1,f
 10359  1CD4  3000               	movlw	0
 10360  1CD5  07F9               	addwf	LCD_Write_String@i+1,f
 10361  1CD6                     l3438:
 10362  1CD6  0878               	movf	LCD_Write_String@i,w
 10363  1CD7  0773               	addwf	LCD_Write_String@a,w
 10364  1CD8  00F6               	movwf	??_LCD_Write_String+1
 10365  1CD9  0874               	movf	LCD_Write_String@a+1,w
 10366  1CDA  00F5               	movwf	??_LCD_Write_String
 10367  1CDB  1803               	skipnc
 10368  1CDC  0AF5               	incf	??_LCD_Write_String,f
 10369  1CDD  1FF8               	btfss	LCD_Write_String@i,7
 10370  1CDE  2CE0               	goto	u5570
 10371  1CDF  03F5               	decf	??_LCD_Write_String,f
 10372  1CE0                     u5570:
 10373  1CE0  0875               	movf	??_LCD_Write_String,w
 10374  1CE1  00F7               	movwf	??_LCD_Write_String+2
 10375  1CE2  0877               	movf	??_LCD_Write_String+2,w
 10376  1CE3  1283               	bcf	3,5	;RP0=0, select bank0
 10377  1CE4  1303               	bcf	3,6	;RP1=0, select bank0
 10378  1CE5  00FF               	movwf	btemp+1
 10379  1CE6  0876               	movf	??_LCD_Write_String+1,w
 10380  1CE7  0084               	movwf	4
 10381  1CE8  120A  158A  2000  160A  158A  	fcall	stringtab
 10382  1CED  3A00               	xorlw	0
 10383  1CEE  1D03               	skipz
 10384  1CEF  2CF1               	goto	u5581
 10385  1CF0  2CF2               	goto	u5580
 10386  1CF1                     u5581:
 10387  1CF1  2CB4               	goto	l3434
 10388  1CF2                     u5580:
 10389  1CF2                     l119:
 10390  1CF2  0008               	return
 10391  1CF3                     __end_of_LCD_Write_String:
 10392                           
 10393                           	psect	text29
 10394  1B56                     __ptext29:	
 10395 ;; *************** function _LCD_Write_Char *****************
 10396 ;; Defined at:
 10397 ;;		line 30 in file "LCD.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  a               1    wreg     unsigned char 
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;  a               1    2[COMMON] unsigned char 
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  1    wreg      void 
 10404 ;; Registers used:
 10405 ;;		wreg, status,2, status,0, pclath, cstack
 10406 ;; Tracked objects:
 10407 ;;		On entry : 0/0
 10408 ;;		On exit  : 0/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10411 ;;      Params:         0       0       0       0       0
 10412 ;;      Locals:         1       0       0       0       0
 10413 ;;      Temps:          1       0       0       0       0
 10414 ;;      Totals:         2       0       0       0       0
 10415 ;;Total ram usage:        2 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; Hardware stack levels required when called:    1
 10418 ;; This function calls:
 10419 ;;		_LCD_Port
 10420 ;; This function is called by:
 10421 ;;		_LCD_Write_String
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           
 10426                           ;psect for function _LCD_Write_Char
 10427  1B56                     _LCD_Write_Char:
 10428                           
 10429                           ;incstack = 0
 10430                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10431                           ;LCD_Write_Char@a stored from wreg
 10432  1B56  00F2               	movwf	LCD_Write_Char@a
 10433  1B57                     l2752:
 10434                           
 10435                           ;LCD.c: 31:     RE0 = 1;
 10436  1B57  1283               	bcf	3,5	;RP0=0, select bank0
 10437  1B58  1303               	bcf	3,6	;RP1=0, select bank0
 10438  1B59  1409               	bsf	9,0	;volatile
 10439  1B5A                     l2754:
 10440                           
 10441                           ;LCD.c: 32:     LCD_Port(a);
 10442  1B5A  0872               	movf	LCD_Write_Char@a,w
 10443  1B5B  160A  158A  22F4  160A  158A  	fcall	_LCD_Port
 10444  1B60                     l2756:
 10445                           
 10446                           ;LCD.c: 33:     RE1 = 1;
 10447  1B60  1283               	bcf	3,5	;RP0=0, select bank0
 10448  1B61  1303               	bcf	3,6	;RP1=0, select bank0
 10449  1B62  1489               	bsf	9,1	;volatile
 10450  1B63                     l2758:
 10451                           
 10452                           ;LCD.c: 34:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10453  1B63  301A               	movlw	26
 10454  1B64  00F1               	movwf	??_LCD_Write_Char
 10455  1B65                     u5667:
 10456  1B65  0BF1               	decfsz	??_LCD_Write_Char,f
 10457  1B66  2B65               	goto	u5667
 10458  1B67  0000               	nop
 10459  1B68                     l2760:
 10460                           
 10461                           ;LCD.c: 35:     RE1 = 0;
 10462  1B68  1283               	bcf	3,5	;RP0=0, select bank0
 10463  1B69  1303               	bcf	3,6	;RP1=0, select bank0
 10464  1B6A  1089               	bcf	9,1	;volatile
 10465  1B6B                     l2762:
 10466                           
 10467                           ;LCD.c: 36:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10468  1B6B  3006               	movlw	6
 10469  1B6C  00F1               	movwf	??_LCD_Write_Char
 10470  1B6D                     u5677:
 10471  1B6D  0BF1               	decfsz	??_LCD_Write_Char,f
 10472  1B6E  2B6D               	goto	u5677
 10473  1B6F  0000               	nop
 10474  1B70                     l101:
 10475  1B70  0008               	return
 10476  1B71                     __end_of_LCD_Write_Char:
 10477                           
 10478                           	psect	text30
 10479  1B94                     __ptext30:	
 10480 ;; *************** function _LCD_Set_Cursor *****************
 10481 ;; Defined at:
 10482 ;;		line 53 in file "LCD.c"
 10483 ;; Parameters:    Size  Location     Type
 10484 ;;  x               1    wreg     unsigned char 
 10485 ;;  y               1    4[COMMON] unsigned char 
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;  x               1    6[COMMON] unsigned char 
 10488 ;;  a               1    7[COMMON] unsigned char 
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  1    wreg      void 
 10491 ;; Registers used:
 10492 ;;		wreg, status,2, status,0, pclath, cstack
 10493 ;; Tracked objects:
 10494 ;;		On entry : 0/0
 10495 ;;		On exit  : 0/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10498 ;;      Params:         1       0       0       0       0
 10499 ;;      Locals:         2       0       0       0       0
 10500 ;;      Temps:          1       0       0       0       0
 10501 ;;      Totals:         4       0       0       0       0
 10502 ;;Total ram usage:        4 bytes
 10503 ;; Hardware stack levels used:    1
 10504 ;; Hardware stack levels required when called:    2
 10505 ;; This function calls:
 10506 ;;		_LCD_Cmd
 10507 ;; This function is called by:
 10508 ;;		_main
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           
 10513                           ;psect for function _LCD_Set_Cursor
 10514  1B94                     _LCD_Set_Cursor:
 10515                           
 10516                           ;incstack = 0
 10517                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10518                           ;LCD_Set_Cursor@x stored from wreg
 10519  1B94  00F6               	movwf	LCD_Set_Cursor@x
 10520  1B95                     l3420:
 10521                           
 10522                           ;LCD.c: 54:  uint8_t a;;LCD.c: 55:  if(x == 1)
 10523  1B95  0376               	decf	LCD_Set_Cursor@x,w
 10524  1B96  1D03               	btfss	3,2
 10525  1B97  2B99               	goto	u5541
 10526  1B98  2B9A               	goto	u5540
 10527  1B99                     u5541:
 10528  1B99  2BA6               	goto	l3426
 10529  1B9A                     u5540:
 10530  1B9A                     l3422:
 10531                           
 10532                           ;LCD.c: 56:  {;LCD.c: 57:         a = 0x80 + y;
 10533  1B9A  0874               	movf	LCD_Set_Cursor@y,w
 10534  1B9B  3E80               	addlw	128
 10535  1B9C  00F5               	movwf	??_LCD_Set_Cursor
 10536  1B9D  0875               	movf	??_LCD_Set_Cursor,w
 10537  1B9E  00F7               	movwf	LCD_Set_Cursor@a
 10538  1B9F                     l3424:
 10539                           
 10540                           ;LCD.c: 58:   LCD_Cmd(a);
 10541  1B9F  0877               	movf	LCD_Set_Cursor@a,w
 10542  1BA0  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10543                           
 10544                           ;LCD.c: 59:  }
 10545  1BA5  2BB7               	goto	l113
 10546  1BA6                     l3426:
 10547  1BA6  3002               	movlw	2
 10548  1BA7  0676               	xorwf	LCD_Set_Cursor@x,w
 10549  1BA8  1D03               	btfss	3,2
 10550  1BA9  2BAB               	goto	u5551
 10551  1BAA  2BAC               	goto	u5550
 10552  1BAB                     u5551:
 10553  1BAB  2BB7               	goto	l113
 10554  1BAC                     u5550:
 10555  1BAC                     l3428:
 10556                           
 10557                           ;LCD.c: 61:  {;LCD.c: 62:   a = 0xC0 + y;
 10558  1BAC  0874               	movf	LCD_Set_Cursor@y,w
 10559  1BAD  3EC0               	addlw	192
 10560  1BAE  00F5               	movwf	??_LCD_Set_Cursor
 10561  1BAF  0875               	movf	??_LCD_Set_Cursor,w
 10562  1BB0  00F7               	movwf	LCD_Set_Cursor@a
 10563  1BB1                     l3430:
 10564                           
 10565                           ;LCD.c: 63:   LCD_Cmd(a);
 10566  1BB1  0877               	movf	LCD_Set_Cursor@a,w
 10567  1BB2  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10568  1BB7                     l113:
 10569  1BB7  0008               	return
 10570  1BB8                     __end_of_LCD_Set_Cursor:
 10571                           
 10572                           	psect	text31
 10573  1D85                     __ptext31:	
 10574 ;; *************** function _LCD_Init *****************
 10575 ;; Defined at:
 10576 ;;		line 10 in file "LCD.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;		None
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  1    wreg      void 
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0, pclath, cstack
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10590 ;;      Params:         0       0       0       0       0
 10591 ;;      Locals:         0       0       0       0       0
 10592 ;;      Temps:          2       0       0       0       0
 10593 ;;      Totals:         2       0       0       0       0
 10594 ;;Total ram usage:        2 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:    2
 10597 ;; This function calls:
 10598 ;;		_LCD_Cmd
 10599 ;;		_LCD_Port
 10600 ;; This function is called by:
 10601 ;;		_main
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           
 10606                           ;psect for function _LCD_Init
 10607  1D85                     _LCD_Init:
 10608  1D85                     l3130:	
 10609                           ;incstack = 0
 10610                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10611                           
 10612                           
 10613                           ;LCD.c: 11:     RE0=0;
 10614  1D85  1283               	bcf	3,5	;RP0=0, select bank0
 10615  1D86  1303               	bcf	3,6	;RP1=0, select bank0
 10616  1D87  1009               	bcf	9,0	;volatile
 10617                           
 10618                           ;LCD.c: 12:     RE1=0;
 10619  1D88  1089               	bcf	9,1	;volatile
 10620  1D89                     l3132:
 10621                           
 10622                           ;LCD.c: 13:     LCD_Port(0x00);
 10623  1D89  3000               	movlw	0
 10624  1D8A  160A  158A  22F4  160A  158A  	fcall	_LCD_Port
 10625  1D8F                     l3134:
 10626                           
 10627                           ;LCD.c: 14:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10628  1D8F  3034               	movlw	52
 10629  1D90  00F5               	movwf	??_LCD_Init+1
 10630  1D91  30F1               	movlw	241
 10631  1D92  00F4               	movwf	??_LCD_Init
 10632  1D93                     u5687:
 10633  1D93  0BF4               	decfsz	??_LCD_Init,f
 10634  1D94  2D93               	goto	u5687
 10635  1D95  0BF5               	decfsz	??_LCD_Init+1,f
 10636  1D96  2D93               	goto	u5687
 10637  1D97  2D98               	nop2
 10638  1D98                     l3136:
 10639                           
 10640                           ;LCD.c: 15:     LCD_Cmd(0x30);
 10641  1D98  3030               	movlw	48
 10642  1D99  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10643                           
 10644                           ;LCD.c: 16:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10645  1D9E  300D               	movlw	13
 10646  1D9F  00F5               	movwf	??_LCD_Init+1
 10647  1DA0  30FB               	movlw	251
 10648  1DA1  00F4               	movwf	??_LCD_Init
 10649  1DA2                     u5697:
 10650  1DA2  0BF4               	decfsz	??_LCD_Init,f
 10651  1DA3  2DA2               	goto	u5697
 10652  1DA4  0BF5               	decfsz	??_LCD_Init+1,f
 10653  1DA5  2DA2               	goto	u5697
 10654  1DA6  2DA7               	nop2
 10655  1DA7                     l3138:
 10656                           
 10657                           ;LCD.c: 17:     LCD_Cmd(0x30);
 10658  1DA7  3030               	movlw	48
 10659  1DA8  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10660  1DAD                     l3140:
 10661                           
 10662                           ;LCD.c: 18:     _delay((unsigned long)((11)*(8000000/4000.0)));
 10663  1DAD  301D               	movlw	29
 10664  1DAE  00F5               	movwf	??_LCD_Init+1
 10665  1DAF  3091               	movlw	145
 10666  1DB0  00F4               	movwf	??_LCD_Init
 10667  1DB1                     u5707:
 10668  1DB1  0BF4               	decfsz	??_LCD_Init,f
 10669  1DB2  2DB1               	goto	u5707
 10670  1DB3  0BF5               	decfsz	??_LCD_Init+1,f
 10671  1DB4  2DB1               	goto	u5707
 10672                           
 10673                           ;LCD.c: 19:     LCD_Cmd(0x30);
 10674  1DB5  3030               	movlw	48
 10675  1DB6  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10676                           
 10677                           ;LCD.c: 20:     LCD_Cmd(0x38);
 10678  1DBB  3038               	movlw	56
 10679  1DBC  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10680                           
 10681                           ;LCD.c: 21:     LCD_Cmd(0x0C);
 10682  1DC1  300C               	movlw	12
 10683  1DC2  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10684                           
 10685                           ;LCD.c: 22:     LCD_Cmd(0x01);
 10686  1DC7  3001               	movlw	1
 10687  1DC8  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10688                           
 10689                           ;LCD.c: 23:     LCD_Cmd(0x06);
 10690  1DCD  3006               	movlw	6
 10691  1DCE  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10692  1DD3                     l95:
 10693  1DD3  0008               	return
 10694  1DD4                     __end_of_LCD_Init:
 10695                           
 10696                           	psect	text32
 10697  1B21                     __ptext32:	
 10698 ;; *************** function _LCD_Clear *****************
 10699 ;; Defined at:
 10700 ;;		line 48 in file "LCD.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;		None
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;		None
 10705 ;; Return value:  Size  Location     Type
 10706 ;;                  1    wreg      void 
 10707 ;; Registers used:
 10708 ;;		wreg, status,2, status,0, pclath, cstack
 10709 ;; Tracked objects:
 10710 ;;		On entry : 0/0
 10711 ;;		On exit  : 0/0
 10712 ;;		Unchanged: 0/0
 10713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10714 ;;      Params:         0       0       0       0       0
 10715 ;;      Locals:         0       0       0       0       0
 10716 ;;      Temps:          0       0       0       0       0
 10717 ;;      Totals:         0       0       0       0       0
 10718 ;;Total ram usage:        0 bytes
 10719 ;; Hardware stack levels used:    1
 10720 ;; Hardware stack levels required when called:    2
 10721 ;; This function calls:
 10722 ;;		_LCD_Cmd
 10723 ;; This function is called by:
 10724 ;;		_main
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           
 10729                           ;psect for function _LCD_Clear
 10730  1B21                     _LCD_Clear:
 10731  1B21                     l3142:	
 10732                           ;incstack = 0
 10733                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10734                           
 10735                           
 10736                           ;LCD.c: 49:     LCD_Cmd(0);
 10737  1B21  3000               	movlw	0
 10738  1B22  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10739                           
 10740                           ;LCD.c: 50:     LCD_Cmd(1);
 10741  1B27  3001               	movlw	1
 10742  1B28  160A  158A  2371  160A  158A  	fcall	_LCD_Cmd
 10743  1B2D                     l107:
 10744  1B2D  0008               	return
 10745  1B2E                     __end_of_LCD_Clear:
 10746                           
 10747                           	psect	text33
 10748  1B71                     __ptext33:	
 10749 ;; *************** function _LCD_Cmd *****************
 10750 ;; Defined at:
 10751 ;;		line 39 in file "LCD.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;  a               1    wreg     unsigned char 
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;  a               1    3[COMMON] unsigned char 
 10756 ;; Return value:  Size  Location     Type
 10757 ;;                  1    wreg      void 
 10758 ;; Registers used:
 10759 ;;		wreg, status,2, status,0, pclath, cstack
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10765 ;;      Params:         0       0       0       0       0
 10766 ;;      Locals:         1       0       0       0       0
 10767 ;;      Temps:          2       0       0       0       0
 10768 ;;      Totals:         3       0       0       0       0
 10769 ;;Total ram usage:        3 bytes
 10770 ;; Hardware stack levels used:    1
 10771 ;; Hardware stack levels required when called:    1
 10772 ;; This function calls:
 10773 ;;		_LCD_Port
 10774 ;; This function is called by:
 10775 ;;		_LCD_Init
 10776 ;;		_LCD_Clear
 10777 ;;		_LCD_Set_Cursor
 10778 ;; This function uses a non-reentrant model
 10779 ;;
 10780                           
 10781                           
 10782                           ;psect for function _LCD_Cmd
 10783  1B71                     _LCD_Cmd:
 10784                           
 10785                           ;incstack = 0
 10786                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10787                           ;LCD_Cmd@a stored from wreg
 10788  1B71  00F3               	movwf	LCD_Cmd@a
 10789  1B72                     l2740:
 10790                           
 10791                           ;LCD.c: 40:     RE0=0;
 10792  1B72  1283               	bcf	3,5	;RP0=0, select bank0
 10793  1B73  1303               	bcf	3,6	;RP1=0, select bank0
 10794  1B74  1009               	bcf	9,0	;volatile
 10795  1B75                     l2742:
 10796                           
 10797                           ;LCD.c: 41:     LCD_Port(a);
 10798  1B75  0873               	movf	LCD_Cmd@a,w
 10799  1B76  160A  158A  22F4  160A  158A  	fcall	_LCD_Port
 10800  1B7B                     l2744:
 10801                           
 10802                           ;LCD.c: 42:     RE1=1;
 10803  1B7B  1283               	bcf	3,5	;RP0=0, select bank0
 10804  1B7C  1303               	bcf	3,6	;RP1=0, select bank0
 10805  1B7D  1489               	bsf	9,1	;volatile
 10806  1B7E                     l2746:
 10807                           
 10808                           ;LCD.c: 43:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10809  1B7E  300B               	movlw	11
 10810  1B7F  00F2               	movwf	??_LCD_Cmd+1
 10811  1B80  3062               	movlw	98
 10812  1B81  00F1               	movwf	??_LCD_Cmd
 10813  1B82                     u5717:
 10814  1B82  0BF1               	decfsz	??_LCD_Cmd,f
 10815  1B83  2B82               	goto	u5717
 10816  1B84  0BF2               	decfsz	??_LCD_Cmd+1,f
 10817  1B85  2B82               	goto	u5717
 10818  1B86  0000               	nop
 10819  1B87                     l2748:
 10820                           
 10821                           ;LCD.c: 44:     RE1=0;
 10822  1B87  1283               	bcf	3,5	;RP0=0, select bank0
 10823  1B88  1303               	bcf	3,6	;RP1=0, select bank0
 10824  1B89  1089               	bcf	9,1	;volatile
 10825  1B8A                     l2750:
 10826                           
 10827                           ;LCD.c: 45:     _delay((unsigned long)((2)*(8000000/4000.0)));
 10828  1B8A  3006               	movlw	6
 10829  1B8B  00F2               	movwf	??_LCD_Cmd+1
 10830  1B8C  3030               	movlw	48
 10831  1B8D  00F1               	movwf	??_LCD_Cmd
 10832  1B8E                     u5727:
 10833  1B8E  0BF1               	decfsz	??_LCD_Cmd,f
 10834  1B8F  2B8E               	goto	u5727
 10835  1B90  0BF2               	decfsz	??_LCD_Cmd+1,f
 10836  1B91  2B8E               	goto	u5727
 10837  1B92  0000               	nop
 10838  1B93                     l104:
 10839  1B93  0008               	return
 10840  1B94                     __end_of_LCD_Cmd:
 10841                           
 10842                           	psect	text34
 10843  1AF4                     __ptext34:	
 10844 ;; *************** function _LCD_Port *****************
 10845 ;; Defined at:
 10846 ;;		line 26 in file "LCD.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  a               1    wreg     unsigned char 
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;  a               1    0[COMMON] unsigned char 
 10851 ;; Return value:  Size  Location     Type
 10852 ;;                  1    wreg      void 
 10853 ;; Registers used:
 10854 ;;		wreg
 10855 ;; Tracked objects:
 10856 ;;		On entry : 0/0
 10857 ;;		On exit  : 0/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10860 ;;      Params:         0       0       0       0       0
 10861 ;;      Locals:         1       0       0       0       0
 10862 ;;      Temps:          0       0       0       0       0
 10863 ;;      Totals:         1       0       0       0       0
 10864 ;;Total ram usage:        1 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; This function calls:
 10867 ;;		Nothing
 10868 ;; This function is called by:
 10869 ;;		_LCD_Init
 10870 ;;		_LCD_Write_Char
 10871 ;;		_LCD_Cmd
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           
 10876                           ;psect for function _LCD_Port
 10877  1AF4                     _LCD_Port:
 10878                           
 10879                           ;incstack = 0
 10880                           ; Regs used in _LCD_Port: [wreg]
 10881                           ;LCD_Port@a stored from wreg
 10882  1AF4  00F0               	movwf	LCD_Port@a
 10883  1AF5                     l2264:
 10884                           
 10885                           ;LCD.c: 27:     PORTD = a;
 10886  1AF5  0870               	movf	LCD_Port@a,w
 10887  1AF6  1283               	bcf	3,5	;RP0=0, select bank0
 10888  1AF7  1303               	bcf	3,6	;RP1=0, select bank0
 10889  1AF8  0088               	movwf	8	;volatile
 10890  1AF9                     l98:
 10891  1AF9  0008               	return
 10892  1AFA                     __end_of_LCD_Port:
 10893                           
 10894                           	psect	text35
 10895  1B2E                     __ptext35:	
 10896 ;; *************** function _Init_Trans *****************
 10897 ;; Defined at:
 10898 ;;		line 17 in file "USART.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;		None
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1    wreg      void 
 10905 ;; Registers used:
 10906 ;;		None
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10912 ;;      Params:         0       0       0       0       0
 10913 ;;      Locals:         0       0       0       0       0
 10914 ;;      Temps:          0       0       0       0       0
 10915 ;;      Totals:         0       0       0       0       0
 10916 ;;Total ram usage:        0 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; This function calls:
 10919 ;;		Nothing
 10920 ;; This function is called by:
 10921 ;;		_main
 10922 ;; This function uses a non-reentrant model
 10923 ;;
 10924                           
 10925                           
 10926                           ;psect for function _Init_Trans
 10927  1B2E                     _Init_Trans:
 10928  1B2E                     l3146:	
 10929                           ;incstack = 0
 10930                           ; Regs used in _Init_Trans: []
 10931                           
 10932                           
 10933                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
 10934  1B2E  1683               	bsf	3,5	;RP0=1, select bank1
 10935  1B2F  1303               	bcf	3,6	;RP1=0, select bank1
 10936  1B30  1698               	bsf	24,5	;volatile
 10937                           
 10938                           ;USART.c: 19:     PIR1bits.TXIF = 0;
 10939  1B31  1283               	bcf	3,5	;RP0=0, select bank0
 10940  1B32  1303               	bcf	3,6	;RP1=0, select bank0
 10941  1B33  120C               	bcf	12,4	;volatile
 10942                           
 10943                           ;USART.c: 20:     PIE1bits.TXIE = 0;
 10944  1B34  1683               	bsf	3,5	;RP0=1, select bank1
 10945  1B35  1303               	bcf	3,6	;RP1=0, select bank1
 10946  1B36  120C               	bcf	12,4	;volatile
 10947                           
 10948                           ;USART.c: 21:     INTCONbits.GIE = 1;
 10949  1B37  178B               	bsf	11,7	;volatile
 10950                           
 10951                           ;USART.c: 22:     INTCONbits.PEIE = 1;
 10952  1B38  170B               	bsf	11,6	;volatile
 10953                           
 10954                           ;USART.c: 23:     TRISCbits.TRISC6 = 0;
 10955  1B39  1307               	bcf	7,6	;volatile
 10956                           
 10957                           ;USART.c: 24:     TRISCbits.TRISC7 = 1;
 10958  1B3A  1787               	bsf	7,7	;volatile
 10959  1B3B                     l147:
 10960  1B3B  0008               	return
 10961  1B3C                     __end_of_Init_Trans:
 10962                           
 10963                           	psect	text36
 10964  1AFA                     __ptext36:	
 10965 ;; *************** function _Init_Receive *****************
 10966 ;; Defined at:
 10967 ;;		line 27 in file "USART.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;		None
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;		None
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  1    wreg      void 
 10974 ;; Registers used:
 10975 ;;		None
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10981 ;;      Params:         0       0       0       0       0
 10982 ;;      Locals:         0       0       0       0       0
 10983 ;;      Temps:          0       0       0       0       0
 10984 ;;      Totals:         0       0       0       0       0
 10985 ;;Total ram usage:        0 bytes
 10986 ;; Hardware stack levels used:    1
 10987 ;; This function calls:
 10988 ;;		Nothing
 10989 ;; This function is called by:
 10990 ;;		_main
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           
 10995                           ;psect for function _Init_Receive
 10996  1AFA                     _Init_Receive:
 10997  1AFA                     l3148:	
 10998                           ;incstack = 0
 10999                           ; Regs used in _Init_Receive: []
 11000                           
 11001                           
 11002                           ;USART.c: 28:     TXSTAbits.SYNC = 0;
 11003  1AFA  1683               	bsf	3,5	;RP0=1, select bank1
 11004  1AFB  1303               	bcf	3,6	;RP1=0, select bank1
 11005  1AFC  1218               	bcf	24,4	;volatile
 11006                           
 11007                           ;USART.c: 29:     RCSTAbits.SPEN = 1;
 11008  1AFD  1283               	bcf	3,5	;RP0=0, select bank0
 11009  1AFE  1303               	bcf	3,6	;RP1=0, select bank0
 11010  1AFF  1798               	bsf	24,7	;volatile
 11011                           
 11012                           ;USART.c: 30:     RCSTAbits.CREN = 1;
 11013  1B00  1618               	bsf	24,4	;volatile
 11014  1B01                     l150:
 11015  1B01  0008               	return
 11016  1B02                     __end_of_Init_Receive:
 11017  007E                     btemp	set	126	;btemp
 11018  007E                     wtemp0	set	126
 11019                           
 11020                           	psect	config
 11021                           
 11022                           ;Config register CONFIG1 @ 0x2007
 11023                           ;	Oscillator Selection bits
 11024                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 11025                           ;	Watchdog Timer Enable bit
 11026                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11027                           ;	Power-up Timer Enable bit
 11028                           ;	PWRTE = OFF, PWRT disabled
 11029                           ;	RE3/MCLR pin function select bit
 11030                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11031                           ;	Code Protection bit
 11032                           ;	CP = OFF, Program memory code protection is disabled
 11033                           ;	Data Code Protection bit
 11034                           ;	CPD = OFF, Data memory code protection is disabled
 11035                           ;	Brown Out Reset Selection bits
 11036                           ;	BOREN = OFF, BOR disabled
 11037                           ;	Internal External Switchover bit
 11038                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11039                           ;	Fail-Safe Clock Monitor Enabled bit
 11040                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11041                           ;	Low Voltage Programming Enable bit
 11042                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11043                           ;	In-Circuit Debugger Mode bit
 11044                           ;	DEBUG = 0x1, unprogrammed default
 11045  2007                     	org	8199
 11046  2007  20D1               	dw	8401
 11047                           
 11048                           ;Config register CONFIG2 @ 0x2008
 11049                           ;	Brown-out Reset Selection bit
 11050                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11051                           ;	Flash Program Memory Self Write Enable bits
 11052                           ;	WRT = OFF, Write protection off
 11053  2008                     	org	8200
 11054  2008  3FFF               	dw	16383

Data Sizes:
    Strings     55
    Constant    144
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     49      64
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_2(CODE[20]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> Lcdvar(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    USART_WriteStr@a	PTR unsigned char  size(2) Largest target is 20
		 -> Lcdvar(BANK3[20]), STR_1(CODE[19]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), Lcdvar(BANK3[20]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _USART_WriteStr->_USART_Write
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   37963
                                             45 BANK1      4     4      0
                       _Init_Receive
                         _Init_Trans
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                       _Set_BaudRate
                              _Setup
                        _USART_Write
                     _USART_WriteStr
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    37     13   31780
                                              0 BANK1     45    32     13
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _USART_WriteStr                                       4     2      2     264
                                              1 COMMON     4     2      2
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
                         _SPI_MASTER
 ---------------------------------------------------------------------------------
 (2) _SPI_MASTER                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Set_BaudRate                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     286
                                              3 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      44
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Trans                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Receive
   _Init_Trans
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Init
     _LCD_Cmd
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _Set_BaudRate
   _Setup
     _SPI_MASTER
   _USART_Write
   _USART_WriteStr
     _USART_Write
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B1       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     31      40       7       80.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      14       9       20.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B1      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 20:34:46 2021

                        pc 0002                _SSPSTATbits 0094                         l75 121B  
                       _S1 00D9                         l76 1238                         _S2 00D5  
                       l69 1BDB                         l77 1255                         _S3 00D1  
                       l95 1DD3                         l98 1AF9               ___awdiv@sign 0021  
                       fsr 0004        ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076  
                      l101 1B70                        l104 1B93                        l113 1BB7  
                      l107 1B2D                        l150 1B01                        l310 0131  
                      l119 1CF2                        l144 1004                        l153 1B16  
                      l162 1C76                        l147 1B3B                        l411 093F  
                      l156 1B20                        l341 0576                        l281 1577  
                      l179 1B55                        l603 111F                        l371 07E6  
                      l356 0721                        l348 05BA                        l541 106F  
                      l702 15DB                        l631 1E27                        l375 1C0C  
                      l528 006B                        l288 0C9E                        l561 1D53  
                      l377 1C24                        l545 11EA                        l562 1D6F  
                      l570 1F45                        l706 1682                        l546 114F  
                      l810 0FF3                        l563 1D84                        l723 174D  
                      l715 17FF                        l708 1659                        l556 11DD  
                      l804 0F6B                        l733 1793                        l549 11AD  
                      l566 1EC0                        l574 1B14                        l727 1771  
                      l744 17F3                        l736 17D1                        l592 112C  
                      l569 1F2C                        l745 17FF                        l585 1E8E  
                      l593 109E                        l817 1C39                        l681 1D36  
                      l578 1EA3                        l842 1F68                        l819 1C4B  
                      l691 1CB0                        l748 1BFF                        l588 1EA3  
                      l844 1FFF                        l596 10EF                        l862 1016  
                      l855 1FC9                        l856 1FD5                        l848 1FAD  
                      l798 0FFF                        _RE0 0048                        _RE1 0049  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0036               ___flmul@bexp 0037               ___flmul@sign 0031  
             ___flmul@temp 003C               ___flmul@prod 0038     __end_of_USART_WriteStr 1C77  
          __end_of_LCD_Cmd 1B94             _LCD_Set_Cursor 1B94               ___fltol@exp1 005B  
                     l3000 1F08                       l3002 1F42                       l3010 1B12  
                     l3004 1F44                       l3012 1B14                       l3100 1FA4  
                     l2300 0057                       l3030 1E5E                       l3022 1E3E  
                     l3110 1FD7                       l3102 1FB4                       l2302 005D  
                     l2310 1017                       l3008 1B0A                       l2400 1585  
                     l3032 1E62                       l3040 1E7C                       l3024 1E53  
                     l3016 1E28                       l3112 1FED                       l3104 1FBF  
                     l2304 0062                       l2320 1027                       l2312 1018  
                     l3130 1D85                       l3122 1BB8                       l2410 159C  
                     l2402 1589                       l3050 1E98                       l3026 1E54  
                     l3018 1E35                       l3114 1FF2                       l3106 1FC3  
                     l2250 1C26                       l2306 0067                       l2330 1040  
                     l2322 102C                       l2314 101C                       l3210 0163  
                     l3202 0133                       l3140 1DAD                       l3132 1D89  
                     l3124 1BBC                       l2500 1694                       l2420 15B2  
                     l2412 159D                       l2404 158A                       l3028 1E5C  
                     l3060 1DF0                       l3052 1DD4                       l3116 1FF6  
                     l3108 1FCD                       l2260 1C47                       l2252 1C28  
                     l2332 1044                       l2324 1032                       l2340 1061  
                     l2316 1021                       l3300 04DB                       l3220 01AB  
                     l3212 0171                       l3204 014F                       l3142 1B21  
                     l3134 1D8F                       l3126 1BBD                       l3150 1C4C  
                     l2510 16BE                       l2502 16AB                       l2430 15C3  
                     l2422 15B3                       l2406 158F                       l2414 159F  
                     l3046 1E83                       l3038 1E6A                       l3062 1E02  
                     l3054 1DDC                       l3118 1FF7                       l2254 1C2F  
                     l2350 1CF5                       l2270 000A                       l2342 1066  
                     l2334 104E                       l2326 1035                       l2318 1023  
                     l3310 0504                       l3302 04E4                       l3230 01EC  
                     l3222 01AF                       l3214 0175                       l3206 015B  
                     l2264 1AF5                       l3136 1D98                       l3144 1000  
                     l3128 1BD6                       l3152 1C4E                       l2520 16E7  
                     l2512 16C2                       l2504 16AF                       l2440 15E1  
                     l2432 15C8                       l2424 15B9                       l2416 15A7  
                     l2408 1594                       l3072 1BDC                       l3048 1E93  
                     l3064 1E10                       l3056 1DDF                       l3080 1F4C  
                     l2256 1C33                       l2600 0CB6                       l2360 1D0D  
                     l2352 1CFB                       l2280 001E                       l2272 000F  
                     l2344 106B                       l2336 1054                       l2328 103C  
                     l3400 07B0                       l3320 057E                       l3312 050B  
                     l3240 0273                       l3232 01FF                       l3224 01C8  
                     l3216 018E                       l3208 015F                       l3160 0074  
                     l3146 1B2E                       l3138 1DA7                       l3154 1C5F  
                     l2530 1755                       l2522 1725                       l2514 16C3  
                     l2506 16B3                       l2450 15F5                       l2442 15E5  
                     l2434 15D0                       l2426 15BD                       l2418 15AC  
                     l3074 1BE0                       l3066 1E19                       l3058 1DEC  
                     l3090 1F79                       l3082 1F50                       l2258 1C42  
                     l2610 0CD2                       l2602 0CBB                       l2362 1D1E  
                     l2354 1CFE                       l2370 1D32                       l2290 0034  
                     l2282 0020                       l2274 0011                       l2266 0003  
                     l2338 105B                       l3402 07BC                       l3330 05AD  
                     l3322 0587                       l3314 0510                       l3306 04E9  
                     l3250 02C7                       l3242 028C                       l3234 0203  
                     l3226 01D3                       l3218 01A7                       l3410 07E2  
                     l3170 009A                       l3162 007A                       l3148 1AFA  
                     l3420 1B95                       l3156 1C63                       l2540 1770  
                     l2532 175A                       l2524 172B                       l2516 16CC  
                     l2508 16BC                       l2460 1609                       l2452 15F9  
                     l2444 15E9                       l2436 15D1                       l2428 15BE  
                     l3068 1E1F                       l3092 1F7E                       l3084 1F60  
                     l2700 0F75                       l2620 0CE7                       l2612 0CD8  
                     l2604 0CC3                       l2364 1D24                       l2356 1D05  
                     l2348 1CF3                       l2380 1C87                       l2292 0038  
                     l2284 0026                       l2276 0015                       l2268 0006  
                     l3404 07C8                       l3340 05D3                       l3332 05B4  
                     l3324 058B                       l3316 054B                       l3308 04F6  
                     l3260 036E                       l3252 030E                       l3244 0295  
                     l3236 0209                       l3228 01D9                       l3172 009E  
                     l3180 00DA                       l3164 0081                       l3500 1341  
                     l3430 1BB1                       l3422 1B9A                       l2542 1775  
                     l2550 1781                       l2526 1730                       l2518 16D1  
                     l2470 161D                       l2462 160D                       l2454 15FD  
                     l2446 15ED                       l2438 15D3                       l3094 1F8B  
                     l3086 1F70                       l3078 1F47                       l2710 0FB3  
                     l2702 0F83                       l2630 0D03                       l2622 0CEF  
                     l2614 0CDC                       l2606 0CC5                       l2366 1D25  
                     l2358 1D09                       l2390 1CA6                       l2382 1C8B  
                     l2374 1C77                       l2294 0049                       l2286 0029  
                     l2278 001A                       l3350 06B2                       l3342 05F1  
                     l3334 05C3                       l3326 0591                       l3318 056A  
                     l3262 0389                       l3254 031D                       l3246 02B0  
                     l3238 0228                       l3190 0105                       l3182 00E8  
                     l3174 00B3                       l3166 0086                       l3158 006F  
                     l3502 134A                       l3424 1B9F                       l3432 1CB1  
                     l2544 1778                       l2536 1763                       l2528 173F  
                     l2552 1785                       l2480 165D                       l2472 1621  
                     l2464 1611                       l2456 1601                       l2448 15F1  
                     l3096 1F92                       l2720 0FE7                       l2712 0FBE  
                     l2704 0F87                       l2640 0D46                       l2624 0CF1  
                     l2616 0CDD                       l2608 0CCD                       l2368 1D2C  
                     l2384 1C8F                       l2376 1C7D                       l2392 1CAC  
                     l2296 004F                       l2288 0030                       l2800 0AC7  
                     l3360 0706                       l3344 064C                       l3352 06ED  
                     l3336 05C8                       l3328 059E                       l3280 0464  
                     l3272 03D7                       l3264 0392                       l3256 0338  
                     l3248 02B8                       l3192 0118                       l3184 00E9  
                     l3176 00C6                       l3168 008A                       l3408 07D0  
                     l3504 1352                       l3440 11EB                       l3426 1BA6  
                     l3434 1CB4                       l2730 1B3C                       l2570 17CD  
                     l2562 1798                       l2554 1786                       l2546 177A  
                     l2538 176C                       l2490 1676                       l2482 1666  
                     l2466 1615                       l2458 1605                       l2474 1625  
                     l3098 1F96                       l2722 0FEB                       l2714 0FCD  
                     l2706 0FA0                       l2650 0DCF                       l2642 0D62  
                     l2634 0D0C                       l2626 0CF9                       l2618 0CE2  
                     l2386 1C99                       l2378 1C80                       l2298 0050  
                     l3370 0733                       l3354 06F5                       l3346 0687  
                     l3338 05CF                       l3290 049D                       l3266 039A  
                     l3258 035F                       l3274 03E0                       l3362 070D  
                     l3194 011C                       l3186 00ED                       l3178 00CA  
                     l3506 135B                       l3450 120D                       l3442 11FF  
                     l2740 1B72                       l3428 1BAC                       l3436 1CD0  
                     l2732 1B50                       l2580 17E9                       l2572 17D6  
                     l2564 179D                       l2556 178A                       l2548 177F  
                     l2484 1668                       l2492 167A                       l2476 1626  
                     l2468 1619                       l2396 1578                       l2900 1158  
                     l2724 0FEC                       l2716 0FD7                       l2708 0FA6  
                     l2660 0E42                       l2652 0DDF                       l2644 0D8E  
                     l2636 0D1C                       l2628 0CFE                       l2388 1C9F  
                     l2812 0BE3                       l2804 0AF4                       l3380 0765  
                     l3372 0742                       l3364 0713                       l3356 06FC  
                     l3348 06A6                       l3292 04A7                       l3276 0415  
                     l3268 03B8                       l3188 00F0                       l3196 012D  
                     l3460 122A                       l3452 1213                       l3444 1204  
                     l2750 1B8A                       l2742 1B75                       l3438 1CD6  
                     l2734 1B52                       l2582 17ED                       l2574 17DB  
                     l2566 17AB                       l2558 1790                       l2494 1686  
                     l2486 166C                       l2478 163D                       l2398 157F  
                     l2910 118F                       l2902 1169                       l2726 0FF7  
                     l2718 0FD9                       l2670 0EEF                       l2662 0E5F  
                     l2654 0DFC                       l2646 0DAA                       l2638 0D29  
                     l2590 0C9F                       l2830 1015                       l2822 1006  
                     l2814 0BEA                       l2806 0AFB                       l3390 078F  
                     l3382 0769                       l3374 074B                       l3366 071B  
                     l3358 0700                       l3294 04C2                       l3286 0466  
                     l3278 0462                       l3198 012F                       l3470 1247  
                     l3462 1230                       l3454 1225                       l3446 1209  
                     l2744 1B7B                       l2760 1B68                       l2752 1B57  
                     l2736 1B16                       l2584 17EF                       l2576 17E3  
                     l2568 17AF                       l2496 168B                       l2488 166D  
                     l2912 119D                       l2904 116B                       l2840 108C  
                     l2680 0F3B                       l2672 0F17                       l2664 0E8C  
                     l2656 0E0C                       l2648 0DC6                       l2592 0CA6  
                     l2824 1007                       l3392 079B                       l3384 0777  
                     l3376 0753                       l3368 072C                       l3296 04C8  
                     l3480 12C9                       l3472 124D                       l3464 1242  
                     l3456 1228                       l3448 120C                       l2746 1B7E  
                     l2762 1B6B                       l2754 1B5A                       l2738 1B1C  
                     l2586 17FA                       l2578 17E8                       l2914 119E  
                     l2906 1174                       l2850 10B4                       l2834 1070  
                     l2690 0F50                       l2682 0F3C                       l2674 0F20  
                     l2666 0E9C                       l2658 0E29                       l2594 0CAC  
                     l2826 100D                       l2818 0C72                       l3394 079F  
                     l3386 0780                       l3378 075F                       l3298 04D4  
                     l3538 0147                       l3490 131F                       l3482 12E6  
                     l3474 125F                       l3466 1245                       l3458 1229  
                     l2748 1B87                       l2756 1B60                       l2588 17FE  
                     l2940 1C02                       l2932 11D2                       l2924 11B9  
                     l2916 11A7                       l2908 117D                       l2860 10E0  
                     l2852 10B6                       l2836 1083                       l2692 0F54  
                     l2684 0F45                       l2676 0F2E                       l2668 0EC9  
                     l2596 0CB0                       l2772 1483                       l2764 1370  
                     l2828 1013                       l3396 07A5                       l3388 0784  
                     l3492 1328                       l3484 12EF                       l3476 1268  
                     l3468 1246                       l2758 1B63                       l2942 1C06  
                     l2934 11E2                       l2918 11B1                       l2926 11CB  
                     l2862 10E1                       l2854 10BF                       l2846 109F  
                     l2694 0F68                       l2678 0F37                       l2686 0F4B  
                     l2598 0CB1                       l2774 1489                       l2766 1376  
                     l2782 0943                       l3398 07AC                       l3494 132E  
                     l3486 12F5                       l3478 12AC                       l2960 08FE  
                     l2952 08DA                       l2944 1C13                       l2880 1114  
                     l2872 10FB                       l2864 10E9                       l2856 10C8  
                     l2848 10A5                       l2688 0F4F                       l2784 0947  
                     l3496 1334                       l3488 12FB                       l2970 0931  
                     l2962 0907                       l2954 08EA                       l2946 1C1A  
                     l2938 1C00                       l2882 1124                       l2866 10F3  
                     l2874 110D                       l2858 10D6                       l2698 0F70  
                     l2778 1534                       l2794 0A38                       l2786 0949  
                     l3498 1339                       l2980 1D67                       l2964 0919  
                     l2956 08ED                       l2972 0937                       l2948 1C20  
                     l2892 1143                       l2796 0A3F                       l2788 0950  
                     l2982 1D81                       l2990 1EB8                       l2966 0927  
                     l2958 08FA                       l2886 112D                       l2984 1D83  
                     l2976 1D37                       l2992 1ED4                       l2968 0928  
                     l2888 113A                       l2978 1D4B                       l2994 1EDC  
                     l2898 1150                       l2996 1EE0                       l2988 1EA4  
                     l2998 1F04                       STR_1 08B4                       STR_2 08A0  
                     STR_3 08C7                       u3000 104E                       u3001 104D  
                     u3100 1D32                       u3020 1061                       u3101 1D31  
                     u3021 1060                       u3005 104A                       u3110 1C7D  
                     u3030 1066                       u3111 1C7C                       u3031 1065  
                     u3015 1055                       u4000 1B1C                       u3200 15B2  
                     u3040 1CFB                       u4001 1B1B                       u3201 15B1  
                     u3041 1CFA                       u3210 15BD                       u3130 1C8F  
                     u4010 1376                       u3211 15BC                       u3131 1C8E  
                     u4011 1375                       u3300 166C                       u3220 15C3  
                     u3060 1D0D                       u3140 1C99                       u4100 0950  
                     u3301 166B                       u3221 15C2                       u3061 1D0C  
                     u3141 1C98                       u3125 1C81                       u4101 094F  
                     u3230 15C8                       u3231 15C7                       u3055 1CFF  
                     u3400 16E7                       u3320 1682                       u3240 15E1  
                     u5000 1FC3                       u3080 1D1E                       u3160 1CAC  
                     u3401 16E6                       u3321 1681                       u3241 15E0  
                     u5001 1FC2                       u3081 1D1D                       u3161 1CAB  
                     u3145 1C95                       u4025 1393                       u3330 1686  
                     u3250 15E5                       u3170 1589                       u5010 1FC9  
                     u4050 1489                       u3411 16FE                       u3403 16E3  
                     u3331 1685                       u3315 166F                       u3251 15E4  
                     u3171 1588                       u5011 1FC8                       u3075 1D0E  
                     u3155 1CA0                       u4051 1488                       u4035 13ED  
                     u4115 0970                       u3500 1785                       u3420 1712  
                     u3412 16FF                       u3340 168B                       u3260 163D  
                     u3180 158F                       u5020 1FCD                       u4220 0BEA  
                     u4140 0A3F                       u5100 00E8                       u3501 1784  
                     u3421 1713                       u3413 1704                       u3341 168A  
                     u3261 163C                       u3181 158E                       u5021 1FCC  
                     u3085 1D1A                       u4045 1442                       u4221 0BE9  
                     u4205 0B57                       u4141 0A3E                       u4125 09AC  
                     u5101 00E7                       u3510 178A                       u3430 1730  
                     u3422 1718                       u3414 1705                       u3270 1648  
                     u3190 1594                       u5030 1FE2                       u4310 10D6  
                     u5110 012C                       u3511 1789                       u3431 172F  
                     u3423 1719                       u3415 170A                       u3351 169D  
                     u3271 1646                       u3191 1593                       u4311 10D5  
                     u3095 1D26                       u4215 0BA2                       u4135 09F7  
                     u5111 012B                       u3600 17E8                       u3520 1790  
                     u3440 1755                       u3416 170B                       u3360 16AF  
                     u3352 16A4                       u3280 1649                       u5040 1FF2  
                     u4400 1124                       u5200 031D                       u5120 015B  
                     u3601 17E7                       u3521 178F                       u3441 1754  
                     u3361 16AE                       u3353 16AB                       u3265 1639  
                     u5041 1FF1                       u4401 1123                       u4305 10C1  
                     u4065 14A6                       u5201 031C                       u5121 015A  
                     u3610 17ED                       u3530 1797                       u3450 175A  
                     u3370 16B3                       u3290 165D                       u5050 1FF6  
                     u4410 113A                       u4330 10EF                       u4090 0947  
                     u5210 0338                       u5130 015F                       u3611 17EC  
                     u3531 1796                       u3451 1759                       u3371 16B2  
                     u3291 165C                       u5051 1FF5                       u5035 1FDD  
                     u4411 1139                       u4331 10EE                       u4315 10D2  
                     u4075 14F3                       u4235 0BFD                       u4155 0A52  
                     u4091 0946                       u5211 0337                       u5131 015E  
                     u5060 1C76                       u3620 17FE                       u3540 179D  
                     u3380 16C2                       u4500 11CA                       u4420 114E  
                     u4340 10F3                       u2820 1C33                       u3700 0D03  
                     u4260 100D                       u4180 0AFB                       u5300 04F6  
                     u5220 035F                       u5140 018E                       u5061 1C75  
                     u3621 17FD                       u3541 179C                       u3381 16C1  
                     u4501 11C9                       u4421 114D                       u4341 10F2  
                     u4325 10E2                       u2821 1C32                       u3701 0D02  
                     u4085 153F                       u4261 100C                       u4245 0C39  
                     u4181 0AFA                       u4165 0A8E                       u5301 04F5  
                     u5221 035E                       u5205 0319                       u5141 018D  
                     u3550 17AF                       u3470 1770                       u4510 11D1  
                     u4350 10FA                       u3630 0CB0                       u4270 1013  
                     u2910 0049                       u5310 0504                       u5230 036E  
                     u5150 01C8                       u5070 007A                       u3551 17AE  
                     u3471 176F                       u4511 11D0                       u4351 10F9  
                     u3711 0D54                       u3631 0CAF                       u4271 1012  
                     u2911 0048                       u4255 0C75                       u4175 0ACA  
                     u5311 0503                       u5231 036D                       u5151 01C7  
                     u5071 0079                       u3560 17BE                       u3480 1775  
                     u4600 08FE                       u4440 118F                       u4280 1083  
                     u2840 1C47                       u3712 0D5B                       u3640 0CB6  
                     u5400 070C                       u5240 0389                       u5160 0203  
                     u5080 009A                       u3481 1774                       u3465 1765  
                     u4601 08FD                       u4441 118E                       u4281 1082  
                     u2841 1C46                       u3801 0E7E                       u3721 0D70  
                     u3713 0D62                       u3641 0CB5                       u2905 0039  
                     u5401 070B                       u5305 04F2                       u5241 0388  
                     u5161 0202                       u5081 0099                       u3570 17CD  
                     u3490 177F                       u4530 11E2                       u4370 110C  
                     u4290 109D                       u3802 0E85                       u3722 0D77  
                     u3650 0CBB                       u2930 005D                       u2850 000A  
                     u5410 0713                       u5330 057D                       u5170 028C  
                     u5090 00DA                       u3571 17CC                       u3491 177E  
                     u3395 16C5                       u4531 11E1                       u4435 1176  
                     u4371 110B                       u4291 109C                       u2835 1C3A  
                     u3811 0EAB                       u3803 0E8C                       u3731 0D9C  
                     u3723 0D7E                       u3651 0CBA                       u2931 005C  
                     u2915 0045                       u2851 0009                       u4195 0B1B  
                     u5411 0712                       u5331 057C                       u5235 036A  
                     u5171 028B                       u5091 00D9                       u4700 1EE0  
                     u3580 17D6                       u4620 0919                       u4540 1C06  
                     u4460 11AD                       u4380 1113                       u3900 0F4F  
                     u3820 0ED5                       u3812 0EB2                       u3732 0DA3  
                     u3660 0CDC                       u2940 0062                       u2860 0015  
                     u5500 07A5                       u5420 071B                       u5340 059E  
                     u5260 049C                       u5180 02B0                       u4701 1EDF  
                     u3581 17D5                       u3565 17B9                       u4621 0918  
                     u4541 1C05                       u4525 11D4                       u4461 11AC  
                     u4445 118B                       u4381 1112                       u4365 10FC  
                     u3901 0F4E                       u3813 0EB9                       u3741 0DB8  
                     u3733 0DAA                       u3661 0CDB                       u2941 0061  
                     u2925 0051                       u2861 0014                       u5501 07A4  
                     u5421 071A                       u5341 059D                       u5325 0513  
                     u5261 049B                       u5181 02AF                       u3590 17DB  
                     u4470 11B1                       u3910 0F54                       u3742 0DBF  
                     u3670 0CE2                       u2870 0026                       u2950 101C  
                     u5510 07BC                       u5430 072C                       u5350 05AD  
                     u5270 04A7                       u5190 02C7                       u4711 1EEF  
                     u3591 17DA                       u4615 0900                       u4471 11B0  
                     u4455 11A0                       u3911 0F53                       u3831 0EE1  
                     u3743 0DC6                       u3671 0CE1                       u2871 0025  
                     u2951 101B                       u5511 07BB                       u5431 072B  
                     u5351 05AC                       u5271 04A6                       u5255 0469  
                     u5191 02C6                       u4720 1F08                       u4712 1EF0  
                     u4640 0937                       u4480 11B8                       u3920 0F68  
                     u3840 0EFD                       u3832 0EE8                       u3680 0CE7  
                     u2960 1027                       u5520 07C8                       u5440 0742  
                     u5360 05C8                       u5280 04C2                       u5600 1230  
                     u4721 1F07                       u4713 1EF5                       u4641 0936  
                     u4625 0915                       u4481 11B7                       u3921 0F67  
                     u3833 0EEF                       u3825 0ED0                       u3761 0DEE  
                     u3681 0CE6                       u2961 1026                       u5521 07C7  
                     u5441 0741                       u5361 05C7                       u5345 059A  
                     u5281 04C1                       u5265 0498                       u5601 122F  
                     u4650 1D4B                       u4714 1EF6                       u4810 1E7B  
                     u4570 1C20                       u3930 0F6F                       u3762 0DF5  
                     u3690 0CFE                       u2890 0038                       u2970 1032  
                     u5530 07E2                       u5450 0753                       u5290 04D4  
                     u5610 124D                       u4651 1D4A                       u4731 1F17  
                     u4715 1EFB                       u4811 1E7A                       u4635 0929  
                     u4571 1C1F                       u4555 1C0D                       u4395 1116  
                     u3931 0F6E                       u3851 0F09                       u3771 0E1B  
                     u3763 0DFC                       u3755 0DC8                       u3691 0CFD  
                     u2891 0037                       u2971 1031                       u5531 07E1  
                     u5451 0752                       u5435 0728                       u5355 05A9  
                     u5291 04D3                       u5195 02C3                       u5611 124C  
                     u5540 1B9A                       u4660 1D67                       u4740 1F42  
                     u4732 1F18                       u4716 1EFC                       u4820 1E82  
                     u4580 08EA                       u3940 0F75                       u3852 0F10  
                     u3772 0E22                       u5460 075F                       _RCIF 0065  
                     u5541 1B99                       u4661 1D66                       u4741 1F41  
                     u4733 1F1D                       u4821 1E81                       u4805 1E6B  
                     u4581 08E9                       u4565 1C14                       u3941 0F74  
                     u3853 0F17                       u3845 0EF8                       u3773 0E29  
                     u2885 002A                       u5461 075E                       u5445 073E  
                     u5550 1BAC                       u4670 1D81                       u4734 1F1E  
                     u4750 1B12                       u4910 1E1F                       u3950 0F87  
                     u2990 1044                       u5470 0769                       u5390 06F4  
                     u5551 1BAB                       u4671 1D80                       u4735 1F23  
                     u4751 1B11                       u4911 1E1E                       u4495 11BA  
                     u3951 0F86                       u3791 0E51                       u2991 1043  
                     u5471 0768                       u5391 06F3                       u5375 064F  
                     u5560 1CBE                       u4736 1F24                       u4680 1EB8  
                     u4840 1E93                       u4760 1E35                       u4920 1F4C  
                     u3960 0F96                       u3880 0F3B                       u3792 0E58  
                     u5480 0777                       u4745 1F3E                       u4681 1EB7  
                     u4841 1E92                       u4761 1E34                       u4905 1E11  
                     u4921 1F4B                       u3881 0F3A                       u3865 0F19  
                     u3793 0E5F                       u3785 0E2B                       u2985 1036  
                     u5481 0776                       u5385 06B5                       u5570 1CE0  
                     u4690 1ED4                       u4850 1E98                       u4770 1E4C  
                     u4930 1F50                       u3970 0FB3                       u5490 078F  
                     u5707 1DB1                       u4675 1D7D                       u4691 1ED3  
                     u4851 1E97                       u4835 1E85                       u4595 08EF  
                     u4931 1F4F                       u3971 0FB2                       u3875 0F30  
                     u5491 078E                       u5627 1221                       u5580 1CF2  
                     u4780 1E62                       u4860 1DDC                       u4940 1F70  
                     u3980 0FCD                       u5717 1B82                       u5581 1CF1  
                     u4781 1E61                       u4861 1DDB                       u4941 1F6F  
                     u3981 0FCC                       u3965 0F91                       u5485 0773  
                     u5637 123E                       u4790 1E69                       u3990 0FEB  
                     u5590 1213                       u5727 1B8E                       u4791 1E68  
                     u4775 1E47                       u3991 0FEA                       u3975 0FAF  
                     u3895 0F3E                       u5495 078B                       u5647 125B  
                     u5591 1212                       u4880 1DF0                       u4960 1F91  
                     u4881 1DEF                       u4961 1F90                       u3985 0FC9  
                     u5657 1363                       u4890 1E02                       u5667 1B65  
                     u4891 1E01                       u4875 1DE1                       u4955 1F83  
                     u4980 1FB3                       u5677 1B6D                       u4981 1FB2  
                     u5687 1D93                       u4895 1DFE                       u4975 1FA5  
                     u5697 1DA2                       u4995 1FB8                       _TRMT 04C1  
        ?_LCD_Write_String 0073                       _cont 00DE                       _main 11EB  
       __size_of_LCD_Clear 000D                       btemp 007E                       start 0000  
       ??_LCD_Write_String 0075               _sprintf$1188 00B2              ?_Init_Receive 0070  
         __end_of_LCD_Init 1DD4           __end_of_LCD_Port 1AFA              ___fltol@sign1 005A  
          __end_of___fladd 1800                      ?_main 0070            __end_of___awdiv 006C  
          __end_of___flneg 1B15            __end_of___awmod 1070            __end_of___flmul 1000  
          __end_of___flsub 1C00            __end_of___fltol 1EA4                      _ANSEL 0188  
          __end_of___lldiv 0940            ___awdiv@divisor 0077            __end_of___llmod 1E28  
          __end_of___lwdiv 1D37            __end_of___lwmod 1CB1            ___awdiv@counter 0020  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008                      _PORTE 0009  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019     __end_of_LCD_Set_Cursor 1BB8  
                    _Setup 1BB8            __end_of_dpowers 08A0            ?_USART_WriteStr 0071  
                    _scale 0940            __end_of_isdigit 1017                      pclath 000A  
              ?_SPI_MASTER 0070                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07E7               USART_Write@a 0070             _LCD_Write_Char 1B56  
          __initialization 07E7             ??_Init_Receive 0070                 _Init_Trans 1B2E  
             __end_of_main 136D                     ??_main 00CD          __end_of_LCD_Clear 1B2E  
                ??_LCD_Cmd 0071       __size_of__tdiv_to_l_ 00BD            ?_LCD_Set_Cursor 0074  
                   ?_Setup 0070           ___llmod@dividend 0074                     ?_scale 003E  
         ___awdiv@dividend 0079                     _ANSELH 0189                     _SSPBUF 0013  
                   _SSPCON 0014           __end_of___xxtofl 2000     __end_of_LCD_Write_Char 1B71  
                   _Lcdvar 0190           __end_of__powers_ 0844                     ___flge 1EA4  
                   ___fleq 1D37                  ??___fladd 005A                     _adcvar 00DF  
                   ___wmul 1C00                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0078  
                ??___lwdiv 007A                  ??___lwmod 0074                     _fround 136D  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
      __size_of_SPI_MASTER 001A              ?_Set_BaudRate 0070                  ??_isdigit 0070  
       __size_of__Umul8_16 0027                  ??_sprintf 00AD            LCD_Set_Cursor@a 0077  
          LCD_Set_Cursor@x 0076            LCD_Set_Cursor@y 0074                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                  ?_LCD_Init 0070                 ___flneg@f1 0070  
                ?_LCD_Port 0070                 ___fltol@f1 0051            ?_LCD_Write_Char 0070  
             ?_USART_Write 0070             __pcstackCOMMON 0070                ?_Init_Trans 0070  
            __end_of_Setup 1BDC                  LCD_Port@a 0070              __end_of_scale 0C9F  
           ??_Set_BaudRate 0070                 __div_to_l_ 112D                    ??_Setup 0070  
     __end_of_Init_Receive 1B02            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020               sprintf@width 00BD  
               __pbssBANK0 006E                 __pbssBANK1 00D1                 __pbssBANK3 0190  
               ??_LCD_Init 0074                 ??_LCD_Port 0070              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 1C4C                 __pmaintext 11EB  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
                  ?_fround 003E  __size_of_LCD_Write_String 0042           ??_USART_WriteStr 0073  
                  _LCD_Cmd 1B71                  ?___xxtofl 0070        __size_of_Init_Trans 000E  
                  _SSPSTAT 0094                 __stringtab 0800               ??_SPI_MASTER 0070  
        __end_of__npowers_ 0878                 _scale$1187 004C            __size_of___flge 00A2  
          __size_of___fleq 004E                    ___fladd 1578                    ___awdiv 0003  
                  ___flneg 1B0A                    ___awmod 1017                    ___flmul 0C9F  
                  ___flsub 1BDC                    ___fltol 1E28                    ___lldiv 08DA  
          __size_of___wmul 0025                    ___llmod 1DD4                    ___lwdiv 1CF3  
                  ___lwmod 1C77            __size_of_fround 020B           ??_LCD_Set_Cursor 0075  
                  __ptext1 006C                    __ptext2 0940                    __ptext3 1017  
                  __ptext4 0003                    __ptext5 1005                    __ptext6 136D  
                  __ptext7 1C77                    __ptext8 1CF3                    __ptext9 0C9F  
              ?__div_to_l_ 0070         __end_of_SPI_MASTER 1B56                    _dpowers 0878  
                  _isdigit 1005                 ??___xxtofl 0074                    _receive 006E  
         ___awmod@dividend 0072                  _LCD_Clear 1B21                    _sprintf 006C  
                  clrloop0 1B03       end_of_initialization 07FC       __end_of_Set_BaudRate 1005  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  _RCSTAbits 0018  
     __size_of_USART_Write 000C                 _temp_value 00DD             __tdiv_to_l_@f1 0070  
           __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078                  _PORTCbits 0007  
    __size_of_Init_Receive 0008                ___fladd@grs 0065              ___xxtofl@sign 0078  
                _TRISCbits 0087                 ?_LCD_Clear 0070          LCD_Write_String@a 0073  
        LCD_Write_String@i 0078           ??_LCD_Write_Char 0071                ___flmul@grs 0032  
                _TXSTAbits 0098          __size_of_LCD_Init 004F        __size_of__div_to_l_ 00BE  
        __size_of_LCD_Port 0006               ??_Init_Trans 0070               _Init_Receive 1AFA  
           __end_of___flge 1F46             __end_of___fleq 1D85             __end_of___wmul 1C25  
         _LCD_Write_String 1CB1             __end_of_fround 1578        start_initialization 07E7  
      __end_of__tdiv_to_l_ 112D         __end_of_Init_Trans 1B3C            ___llmod@divisor 0070  
          ___llmod@counter 0079                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 1C25            LCD_Write_Char@a 0072  
                 ??_fround 0042              sprintf@tmpval 00BF                  ___fladd@a 0056  
                ___fladd@b 0052                 fround@prec 0051                   ?_LCD_Cmd 0070  
                ___flmul@a 0028                  ___flmul@b 0024                   LCD_Cmd@a 0073  
                ___flsub@a 0066                  ___flsub@b 006A                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0                ??_LCD_Clear 0074  
        __size_of___xxtofl 00BA               _isdigit$1012 0070      __size_of_Set_BaudRate 0005  
              sprintf@flag 00BB                sprintf@eexp 00C3                sprintf@fval 00C5  
              sprintf@prec 00CA           ___lwdiv@dividend 0078                   ?___fladd 0052  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 0066                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0070                  __npowers_ 0844  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
                __pstrings 0800                __tdiv_to_l_ 1070               ??__div_to_l_ 0078  
             _Set_BaudRate 1000                   ?_isdigit 0070             __size_of_Setup 0024  
         ___lwdiv@quotient 007B                   ?_sprintf 00A0             __size_of_scale 035F  
                 _LCD_Init 1D85             ___wmul@product 0074                   _LCD_Port 1AF4  
                clear_ram0 1B02                   _PIE1bits 008C                   _PIR1bits 000C  
       __end_of__div_to_l_ 11EB                __stringbase 080F          ___wmul@multiplier 0070  
         __size_of_LCD_Cmd 0023   __end_of_LCD_Write_String 1CF3    __size_of_USART_WriteStr 002B  
            ??_USART_Write 0070                ??__Umul8_16 0072           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0024           __size_of___fltol 007C  
         __size_of___lldiv 0066           __size_of___llmod 0054           __size_of___lwdiv 0044  
         __size_of___lwmod 003A                _fround$1185 004D                _fround$1186 0049  
       __end_of__stringtab 0810                 sprintf@val 00B7                   ___xxtofl 1F46  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 1C25                   __ptext11 1070                   __ptext20 1B0A  
                 __ptext12 112D                   __ptext21 1EA4                   __ptext13 1F46  
                 __ptext30 1B94                   __ptext22 1D37                   __ptext14 1C00  
                 __ptext31 1D85                   __ptext23 1C4C                   __ptext15 1DD4  
                 __ptext32 1B21                   __ptext24 1B15                   __ptext16 08DA  
                 __ptext33 1B71                   __ptext25 1BB8                   __ptext17 1E28  
                 __ptext34 1AF4                   __ptext26 1B3C                   __ptext18 1BDC  
                 __ptext35 1B2E                   __ptext27 1000                   __ptext19 1578  
                 __ptext36 1AFA                   __ptext28 1CB1                   __ptext29 1B56  
                 __powers_ 0810    __size_of_LCD_Set_Cursor 0024           __size_of_sprintf 077B  
            __size_of_main 0182        __end_of_USART_Write 1B21                 _INTCONbits 000B  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00B6  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C9  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 080A    __size_of_LCD_Write_Char 001B               ?__tdiv_to_l_ 0070  
   __Umul8_16@multiplicand 0070                   sprintf@c 00CC                   sprintf@f 00A0  
         ___lldiv@quotient 0079            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 080A                   stringtab 0800              ___fladd@signs 0062  
           _USART_WriteStr 1C4C                 _SPI_MASTER 1B3C               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078            USART_WriteStr@a 0071  
          USART_WriteStr@i 0074                _USART_Write 1B15          __Umul8_16@product 0074  
