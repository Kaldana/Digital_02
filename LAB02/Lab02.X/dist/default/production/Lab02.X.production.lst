

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 20:32:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209  010D                     __pidataBANK0:
   210                           
   211                           ;initializer for _display
   212  010D  343F               	retlw	63
   213  010E  3406               	retlw	6
   214  010F  345B               	retlw	91
   215  0110  344F               	retlw	79
   216  0111  3466               	retlw	102
   217  0112  346D               	retlw	109
   218  0113  347D               	retlw	125
   219  0114  3407               	retlw	7
   220  0115  347F               	retlw	127
   221  0116  3467               	retlw	103
   222  0117  3477               	retlw	119
   223  0118  347C               	retlw	124
   224  0119  3439               	retlw	57
   225  011A  347E               	retlw	126
   226  011B  34F9               	retlw	249
   227  011C  3471               	retlw	113
   228  0001                     _TMR0	set	1
   229  0009                     _PORTEbits	set	9
   230  000C                     _PIR1bits	set	12
   231  001E                     _ADRESH	set	30
   232  001F                     _ADCON0bits	set	31
   233  0006                     _PORTBbits	set	6
   234  000B                     _INTCONbits	set	11
   235  001F                     _ADCON0	set	31
   236  000C                     _PIR1	set	12
   237  000B                     _INTCON	set	11
   238  0009                     _PORTE	set	9
   239  0008                     _PORTD	set	8
   240  0007                     _PORTC	set	7
   241  0006                     _PORTB	set	6
   242  0005                     _PORTA	set	5
   243  0081                     _OPTION_REG	set	129
   244  009F                     _ADCON1	set	159
   245  008C                     _PIE1	set	140
   246  0096                     _IOCB	set	150
   247  0089                     _TRISE	set	137
   248  0088                     _TRISD	set	136
   249  0087                     _TRISC	set	135
   250  0086                     _TRISB	set	134
   251  0085                     _TRISA	set	133
   252  0189                     _ANSELH	set	393
   253  0188                     _ANSEL	set	392
   254                           
   255                           	psect	cinit
   256  0011                     start_initialization:	
   257                           ; #config settings
   258                           
   259  0011                     __initialization:
   260                           
   261                           ; Initialize objects allocated to BANK0
   262  0011  1383               	bcf	3,7	;select IRP bank0
   263  0012  3030               	movlw	low (__pdataBANK0+16)
   264  0013  00FD               	movwf	btemp+-1
   265  0014  3001               	movlw	high __pidataBANK0
   266  0015  00FE               	movwf	btemp
   267  0016  300D               	movlw	low __pidataBANK0
   268  0017  00FF               	movwf	btemp+1
   269  0018  3020               	movlw	low __pdataBANK0
   270  0019  0084               	movwf	4
   271  001A  120A  118A  20FE  120A  118A  	fcall	init_ram0
   272                           
   273                           ; Clear objects allocated to COMMON
   274  001F  01F0               	clrf	__pbssCOMMON& (0+127)
   275  0020  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   276  0021  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   277  0022  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   278  0023  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   279  0024  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   280  0025                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  0025                     __end_of__initialization:
   284  0025  0183               	clrf	3
   285  0026  120A  118A  28D9   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMMON
   288  0070                     __pbssCOMMON:
   289  0070                     _displayizq:
   290  0070                     	ds	1
   291  0071                     _displayder:
   292  0071                     	ds	1
   293  0072                     _pre_var:
   294  0072                     	ds	1
   295  0073                     _dispvar:
   296  0073                     	ds	1
   297  0074                     _advar:
   298  0074                     	ds	1
   299  0075                     _cont:
   300  0075                     	ds	1
   301                           
   302                           	psect	dataBANK0
   303  0020                     __pdataBANK0:
   304  0020                     _display:
   305  0020                     	ds	16
   306                           
   307                           	psect	inittext
   308  00FA                     init_fetch0:	
   309                           ;	Called with low address in FSR and high address in W
   310                           
   311  00FA  087E               	movf	btemp,w
   312  00FB  008A               	movwf	10
   313  00FC  087F               	movf	btemp+1,w
   314  00FD  0082               	movwf	2
   315  00FE                     init_ram0:	
   316                           ;Called with:
   317                           ;	high address of idata address in btemp 
   318                           ;	low address of idata address in btemp+1 
   319                           ;	low address of data in FSR
   320                           ;	high address + 1 of data in btemp-1
   321                           
   322  00FE  120A  118A  20FA  120A  118A  	fcall	init_fetch0
   323  0103  0080               	movwf	0
   324  0104  0A84               	incf	4,f
   325  0105  0804               	movf	4,w
   326  0106  067D               	xorwf	btemp+-1,w
   327  0107  1903               	btfsc	3,2
   328  0108  3400               	retlw	0
   329  0109  0AFF               	incf	btemp+1,f
   330  010A  1903               	btfsc	3,2
   331  010B  0AFE               	incf	btemp,f
   332  010C  28FE               	goto	init_ram0
   333                           
   334                           	psect	cstackCOMMON
   335  0076                     __pcstackCOMMON:
   336  0076                     ?_Setup:
   337  0076                     ?_my_inte:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0076                     ??_my_inte:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0076                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 1 bytes @ 0x0
   348  0076                     	ds	5
   349  007B                     ??_Setup:
   350  007B                     ??_main:	
   351                           ; 1 bytes @ 0x5
   352                           
   353                           
   354                           ; 1 bytes @ 0x5
   355  007B                     	ds	1
   356                           
   357                           	psect	maintext
   358  00D9                     __pmaintext:	
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 145 in file "LAB01.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0, pclath, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : B00/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   378 ;;      Params:         0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0
   380 ;;      Temps:          1       0       0       0       0
   381 ;;      Totals:         1       0       0       0       0
   382 ;;Total ram usage:        1 bytes
   383 ;; Hardware stack levels required when called:    2
   384 ;; This function calls:
   385 ;;		_Setup
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           
   392                           ;psect for function _main
   393  00D9                     _main:
   394  00D9                     l765:	
   395                           ;incstack = 0
   396                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   397                           
   398                           
   399                           ;LAB01.c: 146:     Setup ();
   400  00D9  120A  118A  209D  120A  118A  	fcall	_Setup
   401  00DE                     l767:
   402                           
   403                           ;LAB01.c: 147:     PORTEbits.RE1 = 1;
   404  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   405  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   406  00E0  1489               	bsf	9,1	;volatile
   407  00E1                     l769:
   408                           
   409                           ;LAB01.c: 148:     _delay((unsigned long)((25)*(8000000/4000000.0)));
   410  00E1  3010               	movlw	16
   411  00E2  00FB               	movwf	??_main
   412  00E3                     u107:
   413  00E3  0BFB               	decfsz	??_main,f
   414  00E4  28E3               	goto	u107
   415  00E5  0000               	nop
   416  00E6                     l771:
   417                           
   418                           ;LAB01.c: 149:     ADCON0bits.GO_nDONE = 1;
   419  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   420  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   421  00E8  149F               	bsf	31,1	;volatile
   422  00E9                     l773:
   423                           
   424                           ;LAB01.c: 150:     TMR0 = 150;
   425  00E9  3096               	movlw	150
   426  00EA  0081               	movwf	1	;volatile
   427  00EB                     l775:
   428                           
   429                           ;LAB01.c: 152:         PORTD = cont;
   430  00EB  0875               	movf	_cont,w
   431  00EC  0088               	movwf	8	;volatile
   432  00ED                     l777:
   433                           
   434                           ;LAB01.c: 153:         if (advar <= cont){
   435  00ED  0874               	movf	_advar,w
   436  00EE  0275               	subwf	_cont,w
   437  00EF  1C03               	skipc
   438  00F0  28F2               	goto	u91
   439  00F1  28F3               	goto	u90
   440  00F2                     u91:
   441  00F2  28F5               	goto	l89
   442  00F3                     u90:
   443  00F3                     l779:
   444                           
   445                           ;LAB01.c: 154:             PORTEbits.RE2 = 0;
   446  00F3  1109               	bcf	9,2	;volatile
   447                           
   448                           ;LAB01.c: 155:         }
   449  00F4  28EB               	goto	l775
   450  00F5                     l89:	
   451                           ;LAB01.c: 156:         else{
   452                           
   453                           
   454                           ;LAB01.c: 157:             PORTEbits.RE2 = 1;
   455  00F5  1509               	bsf	9,2	;volatile
   456  00F6  28EB               	goto	l775
   457  00F7  120A  118A  280E   	ljmp	start
   458  00FA                     __end_of_main:
   459                           
   460                           	psect	text1
   461  009D                     __ptext1:	
   462 ;; *************** function _Setup *****************
   463 ;; Defined at:
   464 ;;		line 57 in file "LAB01.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, status,2
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; Hardware stack levels required when called:    1
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           
   493                           ;psect for function _Setup
   494  009D                     _Setup:
   495  009D                     l685:	
   496                           ;incstack = 0
   497                           ; Regs used in _Setup: [wreg+status,2]
   498                           
   499                           
   500                           ;LAB01.c: 59:     ANSEL = 0b00000001;
   501  009D  3001               	movlw	1
   502  009E  1683               	bsf	3,5	;RP0=1, select bank3
   503  009F  1703               	bsf	3,6	;RP1=1, select bank3
   504  00A0  0088               	movwf	8	;volatile
   505  00A1                     l687:
   506                           
   507                           ;LAB01.c: 60:     ANSELH = 0;
   508  00A1  0189               	clrf	9	;volatile
   509  00A2                     l689:
   510                           
   511                           ;LAB01.c: 62:     TRISA = 0b00000001;
   512  00A2  3001               	movlw	1
   513  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   514  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   515  00A5  0085               	movwf	5	;volatile
   516                           
   517                           ;LAB01.c: 63:     PORTA = 0;
   518  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   519  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   520  00A8  0185               	clrf	5	;volatile
   521  00A9                     l691:
   522                           
   523                           ;LAB01.c: 65:     TRISB = 0b00000011;
   524  00A9  3003               	movlw	3
   525  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   526  00AB  1303               	bcf	3,6	;RP1=0, select bank1
   527  00AC  0086               	movwf	6	;volatile
   528  00AD                     l693:
   529                           
   530                           ;LAB01.c: 66:     PORTB = 0;
   531  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   532  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   533  00AF  0186               	clrf	6	;volatile
   534  00B0                     l695:
   535                           
   536                           ;LAB01.c: 68:     TRISC = 0;
   537  00B0  1683               	bsf	3,5	;RP0=1, select bank1
   538  00B1  1303               	bcf	3,6	;RP1=0, select bank1
   539  00B2  0187               	clrf	7	;volatile
   540  00B3                     l697:
   541                           
   542                           ;LAB01.c: 69:     PORTC = 0;
   543  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   544  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   545  00B5  0187               	clrf	7	;volatile
   546  00B6                     l699:
   547                           
   548                           ;LAB01.c: 71:     TRISD = 0;
   549  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   550  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   551  00B8  0188               	clrf	8	;volatile
   552  00B9                     l701:
   553                           
   554                           ;LAB01.c: 72:     PORTD = 0;
   555  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   556  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   557  00BB  0188               	clrf	8	;volatile
   558  00BC                     l703:
   559                           
   560                           ;LAB01.c: 74:     TRISE = 0;
   561  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   562  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   563  00BE  0189               	clrf	9	;volatile
   564  00BF                     l705:
   565                           
   566                           ;LAB01.c: 75:     PORTE = 0;
   567  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   568  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   569  00C1  0189               	clrf	9	;volatile
   570                           
   571                           ;LAB01.c: 77:     INTCON = 0b11101000;
   572  00C2  30E8               	movlw	232
   573  00C3  008B               	movwf	11	;volatile
   574                           
   575                           ;LAB01.c: 78:     IOCB = 0b00000011;
   576  00C4  3003               	movlw	3
   577  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   578  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   579  00C7  0096               	movwf	22	;volatile
   580  00C8                     l707:
   581                           
   582                           ;LAB01.c: 80:     PIR1 = 0b00000000;
   583  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   584  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   585  00CA  018C               	clrf	12	;volatile
   586  00CB                     l709:
   587                           
   588                           ;LAB01.c: 81:     PIE1 = 0b01000000;
   589  00CB  3040               	movlw	64
   590  00CC  1683               	bsf	3,5	;RP0=1, select bank1
   591  00CD  1303               	bcf	3,6	;RP1=0, select bank1
   592  00CE  008C               	movwf	12	;volatile
   593                           
   594                           ;LAB01.c: 82:     ADCON1 = 0;
   595  00CF  019F               	clrf	31	;volatile
   596  00D0                     l711:
   597                           
   598                           ;LAB01.c: 83:     ADCON0 = 0b10000001;
   599  00D0  3081               	movlw	129
   600  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   601  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   602  00D3  009F               	movwf	31	;volatile
   603  00D4                     l713:
   604                           
   605                           ;LAB01.c: 84:     OPTION_REG = 0b0000101;
   606  00D4  3005               	movlw	5
   607  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   608  00D6  1303               	bcf	3,6	;RP1=0, select bank1
   609  00D7  0081               	movwf	1	;volatile
   610  00D8                     l71:
   611  00D8  0008               	return
   612  00D9                     __end_of_Setup:
   613                           
   614                           	psect	text2
   615  0029                     __ptext2:	
   616 ;; *************** function _my_inte *****************
   617 ;; Defined at:
   618 ;;		line 91 in file "LAB01.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0
   634 ;;      Temps:          5       0       0       0       0
   635 ;;      Totals:         5       0       0       0       0
   636 ;;Total ram usage:        5 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		Interrupt level 1
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _my_inte
   647  0029                     _my_inte:
   648  0029                     i1l715:
   649                           
   650                           ;LAB01.c: 93:     if (INTCONbits.RBIF){
   651  0029  1C0B               	btfss	11,0	;volatile
   652  002A  282C               	goto	u1_21
   653  002B  282D               	goto	u1_20
   654  002C                     u1_21:
   655  002C  283E               	goto	i1l727
   656  002D                     u1_20:
   657  002D                     i1l717:
   658                           
   659                           ;LAB01.c: 94:         if (PORTBbits.RB0 == 1){
   660  002D  1283               	bcf	3,5	;RP0=0, select bank0
   661  002E  1303               	bcf	3,6	;RP1=0, select bank0
   662  002F  1C06               	btfss	6,0	;volatile
   663  0030  2832               	goto	u2_21
   664  0031  2833               	goto	u2_20
   665  0032                     u2_21:
   666  0032  2837               	goto	i1l721
   667  0033                     u2_20:
   668  0033                     i1l719:
   669                           
   670                           ;LAB01.c: 95:             cont++;
   671  0033  3001               	movlw	1
   672  0034  00F6               	movwf	??_my_inte
   673  0035  0876               	movf	??_my_inte,w
   674  0036  07F5               	addwf	_cont,f
   675  0037                     i1l721:
   676                           
   677                           ;LAB01.c: 98:         if (PORTBbits.RB1 == 1){
   678  0037  1C86               	btfss	6,1	;volatile
   679  0038  283A               	goto	u3_21
   680  0039  283B               	goto	u3_20
   681  003A                     u3_21:
   682  003A  283D               	goto	i1l725
   683  003B                     u3_20:
   684  003B                     i1l723:
   685                           
   686                           ;LAB01.c: 99:             cont--;
   687  003B  3001               	movlw	1
   688  003C  02F5               	subwf	_cont,f
   689  003D                     i1l725:
   690                           
   691                           ;LAB01.c: 101:         INTCONbits.RBIF = 0;
   692  003D  100B               	bcf	11,0	;volatile
   693  003E                     i1l727:
   694                           
   695                           ;LAB01.c: 104:     if (ADCON0bits.GO == 0){
   696  003E  1283               	bcf	3,5	;RP0=0, select bank0
   697  003F  1303               	bcf	3,6	;RP1=0, select bank0
   698  0040  189F               	btfsc	31,1	;volatile
   699  0041  2843               	goto	u4_21
   700  0042  2844               	goto	u4_20
   701  0043                     u4_21:
   702  0043  2863               	goto	i1l741
   703  0044                     u4_20:
   704  0044                     i1l729:
   705                           
   706                           ;LAB01.c: 105:         advar = ADRESH;
   707  0044  081E               	movf	30,w	;volatile
   708  0045  00F6               	movwf	??_my_inte
   709  0046  0876               	movf	??_my_inte,w
   710  0047  00F4               	movwf	_advar
   711  0048                     i1l731:
   712                           
   713                           ;LAB01.c: 106:         displayizq = (ADRESH & 0xF0)>> 4;
   714  0048  081E               	movf	30,w	;volatile
   715  0049  00F6               	movwf	??_my_inte
   716  004A  3004               	movlw	4
   717  004B                     u5_25:
   718  004B  1003               	clrc
   719  004C  0CF6               	rrf	??_my_inte,f
   720  004D  3EFF               	addlw	-1
   721  004E  1D03               	skipz
   722  004F  284B               	goto	u5_25
   723  0050  0876               	movf	??_my_inte,w
   724  0051  390F               	andlw	15
   725  0052  00F7               	movwf	??_my_inte+1
   726  0053  0877               	movf	??_my_inte+1,w
   727  0054  00F0               	movwf	_displayizq
   728  0055                     i1l733:
   729                           
   730                           ;LAB01.c: 107:         displayder = (ADRESH & 0x0F);
   731  0055  081E               	movf	30,w	;volatile
   732  0056  390F               	andlw	15
   733  0057  00F6               	movwf	??_my_inte
   734  0058  0876               	movf	??_my_inte,w
   735  0059  00F1               	movwf	_displayder
   736  005A                     i1l735:
   737                           
   738                           ;LAB01.c: 108:         _delay((unsigned long)((25)*(8000000/4000000.0)));
   739  005A  3010               	movlw	16
   740  005B  00F6               	movwf	??_my_inte
   741  005C                     u11_27:
   742  005C  0BF6               	decfsz	??_my_inte,f
   743  005D  285C               	goto	u11_27
   744  005E  0000               	nop
   745  005F                     i1l737:
   746                           
   747                           ;LAB01.c: 109:         ADCON0bits.GO_DONE = 1;
   748  005F  1283               	bcf	3,5	;RP0=0, select bank0
   749  0060  1303               	bcf	3,6	;RP1=0, select bank0
   750  0061  149F               	bsf	31,1	;volatile
   751  0062                     i1l739:
   752                           
   753                           ;LAB01.c: 110:         PIR1bits.ADIF = 0;
   754  0062  130C               	bcf	12,6	;volatile
   755  0063                     i1l741:
   756                           
   757                           ;LAB01.c: 113:     if (INTCONbits.T0IF){
   758  0063  1D0B               	btfss	11,2	;volatile
   759  0064  2866               	goto	u6_21
   760  0065  2867               	goto	u6_20
   761  0066                     u6_21:
   762  0066  2894               	goto	i1l83
   763  0067                     u6_20:
   764  0067                     i1l743:
   765                           
   766                           ;LAB01.c: 125:         if (PORTEbits.RE0){
   767  0067  1C09               	btfss	9,0	;volatile
   768  0068  286A               	goto	u7_21
   769  0069  286B               	goto	u7_20
   770  006A                     u7_21:
   771  006A  287C               	goto	i1l753
   772  006B                     u7_20:
   773  006B                     i1l745:
   774                           
   775                           ;LAB01.c: 126:             PORTEbits.RE0 = 0;
   776  006B  1009               	bcf	9,0	;volatile
   777  006C                     i1l747:
   778                           
   779                           ;LAB01.c: 127:             PORTC = display[displayder];
   780  006C  0871               	movf	_displayder,w
   781  006D  3E20               	addlw	(low (_display| 0))& (0+255)
   782  006E  0084               	movwf	4
   783  006F  1383               	bcf	3,7	;select IRP bank0
   784  0070  0800               	movf	0,w
   785  0071  0087               	movwf	7	;volatile
   786  0072                     i1l749:
   787                           
   788                           ;LAB01.c: 128:             PORTEbits.RE1 = 1;
   789  0072  1489               	bsf	9,1	;volatile
   790  0073                     i1l751:
   791                           
   792                           ;LAB01.c: 129:             _delay((unsigned long)((8)*(8000000/4000.0)));
   793  0073  3015               	movlw	21
   794  0074  00F7               	movwf	??_my_inte+1
   795  0075  30C6               	movlw	198
   796  0076  00F6               	movwf	??_my_inte
   797  0077                     u12_27:
   798  0077  0BF6               	decfsz	??_my_inte,f
   799  0078  2877               	goto	u12_27
   800  0079  0BF7               	decfsz	??_my_inte+1,f
   801  007A  2877               	goto	u12_27
   802  007B  0000               	nop
   803  007C                     i1l753:
   804                           
   805                           ;LAB01.c: 131:         if (PORTEbits.RE1){
   806  007C  1283               	bcf	3,5	;RP0=0, select bank0
   807  007D  1303               	bcf	3,6	;RP1=0, select bank0
   808  007E  1C89               	btfss	9,1	;volatile
   809  007F  2881               	goto	u8_21
   810  0080  2882               	goto	u8_20
   811  0081                     u8_21:
   812  0081  2893               	goto	i1l763
   813  0082                     u8_20:
   814  0082                     i1l755:
   815                           
   816                           ;LAB01.c: 132:             PORTEbits.RE1 = 0;
   817  0082  1089               	bcf	9,1	;volatile
   818  0083                     i1l757:
   819                           
   820                           ;LAB01.c: 133:             PORTC = display[displayizq];
   821  0083  0870               	movf	_displayizq,w
   822  0084  3E20               	addlw	(low (_display| 0))& (0+255)
   823  0085  0084               	movwf	4
   824  0086  1383               	bcf	3,7	;select IRP bank0
   825  0087  0800               	movf	0,w
   826  0088  0087               	movwf	7	;volatile
   827  0089                     i1l759:
   828                           
   829                           ;LAB01.c: 134:             PORTEbits.RE0 = 1;
   830  0089  1409               	bsf	9,0	;volatile
   831  008A                     i1l761:
   832                           
   833                           ;LAB01.c: 135:             _delay((unsigned long)((8)*(8000000/4000.0)));
   834  008A  3015               	movlw	21
   835  008B  00F7               	movwf	??_my_inte+1
   836  008C  30C6               	movlw	198
   837  008D  00F6               	movwf	??_my_inte
   838  008E                     u13_27:
   839  008E  0BF6               	decfsz	??_my_inte,f
   840  008F  288E               	goto	u13_27
   841  0090  0BF7               	decfsz	??_my_inte+1,f
   842  0091  288E               	goto	u13_27
   843  0092  0000               	nop
   844  0093                     i1l763:
   845                           
   846                           ;LAB01.c: 137:         INTCONbits.T0IF = 0;
   847  0093  110B               	bcf	11,2	;volatile
   848  0094                     i1l83:
   849  0094  087A               	movf	??_my_inte+4,w
   850  0095  008A               	movwf	10
   851  0096  0879               	movf	??_my_inte+3,w
   852  0097  0084               	movwf	4
   853  0098  0E78               	swapf	??_my_inte+2,w
   854  0099  0083               	movwf	3
   855  009A  0EFE               	swapf	btemp,f
   856  009B  0E7E               	swapf	btemp,w
   857  009C  0009               	retfie
   858  009D                     __end_of_my_inte:
   859  007E                     btemp	set	126	;btemp
   860  007E                     wtemp0	set	126
   861                           
   862                           	psect	intentry
   863  0004                     __pintentry:	
   864                           ;incstack = 0
   865                           ; Regs used in _my_inte: [wreg-fsr0h+status,2+status,0]
   866                           
   867  0004                     interrupt_function:
   868  007E                     saved_w	set	btemp
   869  0004  00FE               	movwf	btemp
   870  0005  0E03               	swapf	3,w
   871  0006  00F8               	movwf	??_my_inte+2
   872  0007  0804               	movf	4,w
   873  0008  00F9               	movwf	??_my_inte+3
   874  0009  080A               	movf	10,w
   875  000A  00FA               	movwf	??_my_inte+4
   876  000B  120A  118A  2829   	ljmp	_my_inte
   877                           
   878                           	psect	config
   879                           
   880                           ;Config register CONFIG1 @ 0x2007
   881                           ;	Oscillator Selection bits
   882                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   883                           ;	Watchdog Timer Enable bit
   884                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   885                           ;	Power-up Timer Enable bit
   886                           ;	PWRTE = OFF, PWRT disabled
   887                           ;	RE3/MCLR pin function select bit
   888                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   889                           ;	Code Protection bit
   890                           ;	CP = OFF, Program memory code protection is disabled
   891                           ;	Data Code Protection bit
   892                           ;	CPD = OFF, Data memory code protection is disabled
   893                           ;	Brown Out Reset Selection bits
   894                           ;	BOREN = OFF, BOR disabled
   895                           ;	Internal External Switchover bit
   896                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   897                           ;	Fail-Safe Clock Monitor Enabled bit
   898                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   899                           ;	Low Voltage Programming Enable bit
   900                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   901                           ;	In-Circuit Debugger Mode bit
   902                           ;	DEBUG = 0x1, unprogrammed default
   903  2007                     	org	8199
   904  2007  20D1               	dw	8401
   905                           
   906                           ;Config register CONFIG2 @ 0x2008
   907                           ;	Brown-out Reset Selection bit
   908                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   909                           ;	Flash Program Memory Self Write Enable bits
   910                           ;	WRT = OFF, Write protection off
   911  2008                     	org	8200
   912  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_inte in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_inte in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_inte in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_inte in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_inte in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 COMMON     1     1      0
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _my_inte                                              5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup

 _my_inte (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 20:32:12 2021

                      pc 0002                       l71 00D8                       l89 00F5  
                     u90 00F3                       u91 00F2                       fsr 0004  
                    l701 00B9                      l711 00D0                      l703 00BC  
                    l713 00D4                      l705 00BF                      l707 00C8  
                    l709 00CB                      l691 00A9                      l771 00E6  
                    l693 00AD                      l685 009D                      l773 00E9  
                    l765 00D9                      l695 00B0                      l687 00A1  
                    l775 00EB                      l767 00DE                      l697 00B3  
                    l689 00A2                      l777 00ED                      l769 00E1  
                    l699 00B6                      l779 00F3                      u107 00E3  
                    fsr0 0004                      indf 0000                     _IOCB 0096  
                   _PIE1 008C                     _PIR1 000C                     i1l83 0094  
                   _TMR0 0001                     u1_20 002D                     u1_21 002C  
                   u2_20 0033                     u2_21 0032                     u3_20 003B  
                   u3_21 003A                     u4_20 0044                     u4_21 0043  
                   u5_25 004B                     u6_20 0067                     u6_21 0066  
                   u7_20 006B                     u7_21 006A                     u8_20 0082  
                   u8_21 0081                     _cont 0075                     _main 00D9  
                   btemp 007E                     start 000E                    ?_main 0076  
                  _ANSEL 0188                    i1l721 0037                    i1l731 0048  
                  i1l723 003B                    i1l715 0029                    i1l733 0055  
                  i1l741 0063                    i1l725 003D                    i1l717 002D  
                  i1l751 0073                    i1l743 0067                    i1l735 005A  
                  i1l719 0033                    i1l727 003E                    i1l761 008A  
                  i1l745 006B                    i1l753 007C                    i1l737 005F  
                  i1l729 0044                    i1l755 0082                    i1l763 0093  
                  i1l747 006C                    i1l739 0062                    i1l757 0083  
                  i1l749 0072                    i1l759 0089                    u11_27 005C  
                  u12_27 0077                    u13_27 008E                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _Setup 009D                    _advar 0074                    pclath 000A  
        __end_of_my_inte 009D                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 00FA                   ??_main 007B  
                 ?_Setup 0076                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ANSELH 0189                   _INTCON 000B  
                 saved_w 007E                ??_my_inte 0076  __end_of__initialization 0025  
         __pcstackCOMMON 0076            __end_of_Setup 00D9             __pidataBANK0 010D  
                ??_Setup 007B               __pmaintext 00D9               __pintentry 0004  
             _displayder 0071               _displayizq 0070                  __ptext1 009D  
                __ptext2 0029                  _display 0020                  _dispvar 0073  
                _pre_var 0072                  _my_inte 0029     end_of_initialization 0025  
              _PORTBbits 0006                _PORTEbits 0009      start_initialization 0011  
             init_fetch0 00FA              __pdataBANK0 0020              __pbssCOMMON 0070  
              ___latbits 0002                 ?_my_inte 0076           __size_of_Setup 003C  
      interrupt_function 0004                 _PIR1bits 000C               _ADCON0bits 001F  
       __size_of_my_inte 0074            __size_of_main 0021               _INTCONbits 000B  
               init_ram0 00FE                 intlevel1 0000               _OPTION_REG 0081  
