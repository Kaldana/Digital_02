

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 10 22:26:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000E                     	;# 
   382  000F                     	;# 
   383  0010                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0014                     	;# 
   388  0015                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001D                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  0081                     	;# 
   402  0085                     	;# 
   403  0086                     	;# 
   404  0087                     	;# 
   405  0088                     	;# 
   406  0089                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  008F                     	;# 
   411  0090                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  0105                     	;# 
   430  0107                     	;# 
   431  0108                     	;# 
   432  0109                     	;# 
   433  010C                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  010E                     	;# 
   437  010F                     	;# 
   438  0185                     	;# 
   439  0187                     	;# 
   440  0188                     	;# 
   441  0189                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444                           
   445                           	psect	idataBANK0
   446  0120                     __pidataBANK0:
   447                           
   448                           ;initializer for _display
   449  0120  343F               	retlw	63
   450  0121  3406               	retlw	6
   451  0122  345B               	retlw	91
   452  0123  344F               	retlw	79
   453  0124  3466               	retlw	102
   454  0125  346D               	retlw	109
   455  0126  347D               	retlw	125
   456  0127  3407               	retlw	7
   457  0128  347F               	retlw	127
   458  0129  3467               	retlw	103
   459  012A  3477               	retlw	119
   460  012B  347C               	retlw	124
   461  012C  3439               	retlw	57
   462  012D  345E               	retlw	94
   463  012E  34F9               	retlw	249
   464  012F  3471               	retlw	113
   465  000C                     _PIR1bits	set	12
   466  001E                     _ADRESH	set	30
   467  0001                     _TMR0	set	1
   468  001F                     _ADCON0bits	set	31
   469  0009                     _PORTEbits	set	9
   470  001F                     _ADCON0	set	31
   471  000C                     _PIR1	set	12
   472  000B                     _INTCON	set	11
   473  0009                     _PORTE	set	9
   474  0008                     _PORTD	set	8
   475  0007                     _PORTC	set	7
   476  0006                     _PORTB	set	6
   477  0005                     _PORTA	set	5
   478  0006                     _PORTBbits	set	6
   479  000B                     _INTCONbits	set	11
   480  0081                     _OPTION_REG	set	129
   481  009F                     _ADCON1	set	159
   482  008C                     _PIE1	set	140
   483  0096                     _IOCB	set	150
   484  0089                     _TRISE	set	137
   485  0088                     _TRISD	set	136
   486  0087                     _TRISC	set	135
   487  0086                     _TRISB	set	134
   488  0085                     _TRISA	set	133
   489  0189                     _ANSELH	set	393
   490  0188                     _ANSEL	set	392
   491                           
   492                           	psect	cinit
   493  0011                     start_initialization:	
   494                           ; #config settings
   495                           
   496  0011                     __initialization:
   497                           
   498                           ; Initialize objects allocated to BANK0
   499  0011  1383               	bcf	3,7	;select IRP bank0
   500  0012  3030               	movlw	low (__pdataBANK0+16)
   501  0013  00FD               	movwf	btemp+-1
   502  0014  3001               	movlw	high __pidataBANK0
   503  0015  00FE               	movwf	btemp
   504  0016  3020               	movlw	low __pidataBANK0
   505  0017  00FF               	movwf	btemp+1
   506  0018  3020               	movlw	low __pdataBANK0
   507  0019  0084               	movwf	4
   508  001A  120A  118A  2111  120A  118A  	fcall	init_ram0
   509                           
   510                           ; Clear objects allocated to COMMON
   511  001F  01F0               	clrf	__pbssCOMMON& (0+127)
   512  0020  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   513  0021  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   514  0022  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   515  0023  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   516  0024  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   517  0025                     end_of_initialization:	
   518                           ;End of C runtime variable initialization code
   519                           
   520  0025                     __end_of__initialization:
   521  0025  0183               	clrf	3
   522  0026  120A  118A  28BF   	ljmp	_main	;jump to C main() function
   523                           
   524                           	psect	bssCOMMON
   525  0070                     __pbssCOMMON:
   526  0070                     _pre_var:
   527  0070                     	ds	1
   528  0071                     _dispvar:
   529  0071                     	ds	1
   530  0072                     _displayder:
   531  0072                     	ds	1
   532  0073                     _displayizq:
   533  0073                     	ds	1
   534  0074                     _adcvar:
   535  0074                     	ds	1
   536  0075                     _cont:
   537  0075                     	ds	1
   538                           
   539                           	psect	dataBANK0
   540  0020                     __pdataBANK0:
   541  0020                     _display:
   542  0020                     	ds	16
   543                           
   544                           	psect	inittext
   545  010D                     init_fetch0:	
   546                           ;	Called with low address in FSR and high address in W
   547                           
   548  010D  087E               	movf	btemp,w
   549  010E  008A               	movwf	10
   550  010F  087F               	movf	btemp+1,w
   551  0110  0082               	movwf	2
   552  0111                     init_ram0:	
   553                           ;Called with:
   554                           ;	high address of idata address in btemp 
   555                           ;	low address of idata address in btemp+1 
   556                           ;	low address of data in FSR
   557                           ;	high address + 1 of data in btemp-1
   558                           
   559  0111  120A  118A  210D  120A  118A  	fcall	init_fetch0
   560  0116  0080               	movwf	0
   561  0117  0A84               	incf	4,f
   562  0118  0804               	movf	4,w
   563  0119  067D               	xorwf	btemp+-1,w
   564  011A  1903               	btfsc	3,2
   565  011B  3400               	retlw	0
   566  011C  0AFF               	incf	btemp+1,f
   567  011D  1903               	btfsc	3,2
   568  011E  0AFE               	incf	btemp,f
   569  011F  2911               	goto	init_ram0
   570                           
   571                           	psect	cstackCOMMON
   572  0076                     __pcstackCOMMON:
   573  0076                     ?_ADConvert:
   574  0076                     ??_ADConvert:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0076                     ?_MP7SEG:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0076                     ??_MP7SEG:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0076                     ?_PuertoB:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0076                     ??_PuertoB:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0076                     ?_Setup:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0076                     ?_my_inte:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0076                     ?_main:	
   596                           ; 1 bytes @ 0x0
   597                           
   598                           
   599                           ; 1 bytes @ 0x0
   600  0076                     	ds	2
   601  0078                     ??_my_inte:
   602                           
   603                           ; 1 bytes @ 0x2
   604  0078                     	ds	3
   605  007B                     ??_Setup:
   606  007B                     ??_main:	
   607                           ; 1 bytes @ 0x5
   608                           
   609                           
   610                           ; 1 bytes @ 0x5
   611  007B                     	ds	1
   612                           
   613                           	psect	maintext
   614  00BF                     __pmaintext:	
   615 ;;
   616 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 116 in file "LAB02.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0, pclath, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : B00/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          1       0       0       0       0
   637 ;;      Totals:         1       0       0       0       0
   638 ;;Total ram usage:        1 bytes
   639 ;; Hardware stack levels required when called:    3
   640 ;; This function calls:
   641 ;;		_Setup
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _main
   649  00BF                     _main:
   650  00BF                     l822:	
   651                           ;incstack = 0
   652                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   653                           
   654                           
   655                           ;LAB02.c: 117:     Setup ();
   656  00BF  120A  118A  2029  120A  118A  	fcall	_Setup
   657  00C4                     l824:
   658                           
   659                           ;LAB02.c: 118:     PORTEbits.RE1 = 1;
   660  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   661  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   662  00C6  1489               	bsf	9,1	;volatile
   663  00C7                     l826:
   664                           
   665                           ;LAB02.c: 119:     _delay((unsigned long)((25)*(8000000/4000000.0)));
   666  00C7  3010               	movlw	16
   667  00C8  00FB               	movwf	??_main
   668  00C9                     u107:
   669  00C9  0BFB               	decfsz	??_main,f
   670  00CA  28C9               	goto	u107
   671  00CB  0000               	nop
   672  00CC                     l828:
   673                           
   674                           ;LAB02.c: 121:     ADCON0bits.GO_nDONE = 1;
   675  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   676  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   677  00CE  149F               	bsf	31,1	;volatile
   678  00CF                     l830:
   679                           
   680                           ;LAB02.c: 122:     TMR0 = 0;
   681  00CF  0181               	clrf	1	;volatile
   682  00D0                     l832:
   683                           
   684                           ;LAB02.c: 125:         PORTD = cont;
   685  00D0  0875               	movf	_cont,w
   686  00D1  0088               	movwf	8	;volatile
   687  00D2                     l834:
   688                           
   689                           ;LAB02.c: 127:         if (adcvar <= cont){
   690  00D2  0874               	movf	_adcvar,w
   691  00D3  0275               	subwf	_cont,w
   692  00D4  1C03               	skipc
   693  00D5  28D7               	goto	u91
   694  00D6  28D8               	goto	u90
   695  00D7                     u91:
   696  00D7  28DA               	goto	l104
   697  00D8                     u90:
   698  00D8                     l836:
   699                           
   700                           ;LAB02.c: 128:             PORTEbits.RE2 = 0;
   701  00D8  1109               	bcf	9,2	;volatile
   702                           
   703                           ;LAB02.c: 129:         }
   704  00D9  28D0               	goto	l832
   705  00DA                     l104:	
   706                           ;LAB02.c: 130:         else{
   707                           
   708                           
   709                           ;LAB02.c: 131:             PORTEbits.RE2 = 1;
   710  00DA  1509               	bsf	9,2	;volatile
   711  00DB  28D0               	goto	l832
   712  00DC  120A  118A  280E   	ljmp	start
   713  00DF                     __end_of_main:
   714                           
   715                           	psect	text1
   716  0029                     __ptext1:	
   717 ;; *************** function _Setup *****************
   718 ;; Defined at:
   719 ;;		line 59 in file "LAB02.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    2
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _Setup
   749  0029                     _Setup:
   750  0029                     l750:	
   751                           ;incstack = 0
   752                           ; Regs used in _Setup: [wreg+status,2]
   753                           
   754                           
   755                           ;LAB02.c: 61:     ANSEL = 0b00000001;
   756  0029  3001               	movlw	1
   757  002A  1683               	bsf	3,5	;RP0=1, select bank3
   758  002B  1703               	bsf	3,6	;RP1=1, select bank3
   759  002C  0088               	movwf	8	;volatile
   760  002D                     l752:
   761                           
   762                           ;LAB02.c: 62:     ANSELH = 0;
   763  002D  0189               	clrf	9	;volatile
   764  002E                     l754:
   765                           
   766                           ;LAB02.c: 65:     TRISA = 0b00000001;
   767  002E  3001               	movlw	1
   768  002F  1683               	bsf	3,5	;RP0=1, select bank1
   769  0030  1303               	bcf	3,6	;RP1=0, select bank1
   770  0031  0085               	movwf	5	;volatile
   771                           
   772                           ;LAB02.c: 66:     PORTA = 0;
   773  0032  1283               	bcf	3,5	;RP0=0, select bank0
   774  0033  1303               	bcf	3,6	;RP1=0, select bank0
   775  0034  0185               	clrf	5	;volatile
   776  0035                     l756:
   777                           
   778                           ;LAB02.c: 69:     TRISB = 0b00000011;
   779  0035  3003               	movlw	3
   780  0036  1683               	bsf	3,5	;RP0=1, select bank1
   781  0037  1303               	bcf	3,6	;RP1=0, select bank1
   782  0038  0086               	movwf	6	;volatile
   783  0039                     l758:
   784                           
   785                           ;LAB02.c: 70:     PORTB = 0;
   786  0039  1283               	bcf	3,5	;RP0=0, select bank0
   787  003A  1303               	bcf	3,6	;RP1=0, select bank0
   788  003B  0186               	clrf	6	;volatile
   789  003C                     l760:
   790                           
   791                           ;LAB02.c: 73:     TRISC = 0;
   792  003C  1683               	bsf	3,5	;RP0=1, select bank1
   793  003D  1303               	bcf	3,6	;RP1=0, select bank1
   794  003E  0187               	clrf	7	;volatile
   795  003F                     l762:
   796                           
   797                           ;LAB02.c: 74:     PORTC = 0;
   798  003F  1283               	bcf	3,5	;RP0=0, select bank0
   799  0040  1303               	bcf	3,6	;RP1=0, select bank0
   800  0041  0187               	clrf	7	;volatile
   801  0042                     l764:
   802                           
   803                           ;LAB02.c: 76:     TRISD = 0;
   804  0042  1683               	bsf	3,5	;RP0=1, select bank1
   805  0043  1303               	bcf	3,6	;RP1=0, select bank1
   806  0044  0188               	clrf	8	;volatile
   807  0045                     l766:
   808                           
   809                           ;LAB02.c: 77:     PORTD = 0;
   810  0045  1283               	bcf	3,5	;RP0=0, select bank0
   811  0046  1303               	bcf	3,6	;RP1=0, select bank0
   812  0047  0188               	clrf	8	;volatile
   813  0048                     l768:
   814                           
   815                           ;LAB02.c: 79:     TRISE = 0;
   816  0048  1683               	bsf	3,5	;RP0=1, select bank1
   817  0049  1303               	bcf	3,6	;RP1=0, select bank1
   818  004A  0189               	clrf	9	;volatile
   819  004B                     l770:
   820                           
   821                           ;LAB02.c: 80:     PORTE = 0;
   822  004B  1283               	bcf	3,5	;RP0=0, select bank0
   823  004C  1303               	bcf	3,6	;RP1=0, select bank0
   824  004D  0189               	clrf	9	;volatile
   825                           
   826                           ;LAB02.c: 83:     INTCON = 0b11101000;
   827  004E  30E8               	movlw	232
   828  004F  008B               	movwf	11	;volatile
   829                           
   830                           ;LAB02.c: 85:     IOCB = 0b00000011;
   831  0050  3003               	movlw	3
   832  0051  1683               	bsf	3,5	;RP0=1, select bank1
   833  0052  1303               	bcf	3,6	;RP1=0, select bank1
   834  0053  0096               	movwf	22	;volatile
   835  0054                     l772:
   836                           
   837                           ;LAB02.c: 89:     PIR1 = 0b00000000;
   838  0054  1283               	bcf	3,5	;RP0=0, select bank0
   839  0055  1303               	bcf	3,6	;RP1=0, select bank0
   840  0056  018C               	clrf	12	;volatile
   841  0057                     l774:
   842                           
   843                           ;LAB02.c: 90:     PIE1 = 0b01000000;
   844  0057  3040               	movlw	64
   845  0058  1683               	bsf	3,5	;RP0=1, select bank1
   846  0059  1303               	bcf	3,6	;RP1=0, select bank1
   847  005A  008C               	movwf	12	;volatile
   848                           
   849                           ;LAB02.c: 91:     ADCON1 = 0;
   850  005B  019F               	clrf	31	;volatile
   851  005C                     l776:
   852                           
   853                           ;LAB02.c: 93:     ADCON0 = 0b10000001;
   854  005C  3081               	movlw	129
   855  005D  1283               	bcf	3,5	;RP0=0, select bank0
   856  005E  1303               	bcf	3,6	;RP1=0, select bank0
   857  005F  009F               	movwf	31	;volatile
   858  0060                     l778:
   859                           
   860                           ;LAB02.c: 95:     OPTION_REG = 0b0000101;
   861  0060  3005               	movlw	5
   862  0061  1683               	bsf	3,5	;RP0=1, select bank1
   863  0062  1303               	bcf	3,6	;RP1=0, select bank1
   864  0063  0081               	movwf	1	;volatile
   865  0064                     l93:
   866  0064  0008               	return
   867  0065                     __end_of_Setup:
   868                           
   869                           	psect	text2
   870  00DF                     __ptext2:	
   871 ;; *************** function _my_inte *****************
   872 ;; Defined at:
   873 ;;		line 102 in file "LAB02.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0
   889 ;;      Temps:          3       0       0       0       0
   890 ;;      Totals:         3       0       0       0       0
   891 ;;Total ram usage:        3 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    1
   894 ;; This function calls:
   895 ;;		_ADConvert
   896 ;;		_MP7SEG
   897 ;;		_PuertoB
   898 ;; This function is called by:
   899 ;;		Interrupt level 1
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _my_inte
   905  00DF                     _my_inte:
   906  00DF                     i1l818:
   907                           
   908                           ;LAB02.c: 104:     PuertoB();
   909  00DF  120A  118A  20F7  120A  118A  	fcall	_PuertoB
   910                           
   911                           ;LAB02.c: 107:     ADConvert();
   912  00E4  120A  118A  2099  120A  118A  	fcall	_ADConvert
   913  00E9                     i1l820:
   914                           
   915                           ;LAB02.c: 109:     MP7SEG();
   916  00E9  120A  118A  2065  120A  118A  	fcall	_MP7SEG
   917  00EE                     i1l98:
   918  00EE  087A               	movf	??_my_inte+2,w
   919  00EF  008A               	movwf	10
   920  00F0  0879               	movf	??_my_inte+1,w
   921  00F1  0084               	movwf	4
   922  00F2  0E78               	swapf	??_my_inte,w
   923  00F3  0083               	movwf	3
   924  00F4  0EFE               	swapf	btemp,f
   925  00F5  0E7E               	swapf	btemp,w
   926  00F6  0009               	retfie
   927  00F7                     __end_of_my_inte:
   928                           
   929                           	psect	intentry
   930  0004                     __pintentry:	
   931                           ;incstack = 0
   932                           ; Regs used in _my_inte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   933                           
   934  0004                     interrupt_function:
   935  007E                     saved_w	set	btemp
   936  0004  00FE               	movwf	btemp
   937  0005  0E03               	swapf	3,w
   938  0006  00F8               	movwf	??_my_inte
   939  0007  0804               	movf	4,w
   940  0008  00F9               	movwf	??_my_inte+1
   941  0009  080A               	movf	10,w
   942  000A  00FA               	movwf	??_my_inte+2
   943  000B  120A  118A  28DF   	ljmp	_my_inte
   944                           
   945                           	psect	text3
   946  00F7                     __ptext3:	
   947 ;; *************** function _PuertoB *****************
   948 ;; Defined at:
   949 ;;		line 3 in file "INT_PORTB.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          1       0       0       0       0
   966 ;;      Totals:         1       0       0       0       0
   967 ;;Total ram usage:        1 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_my_inte
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _PuertoB
   978  00F7                     _PuertoB:
   979  00F7                     i1l738:	
   980                           ;incstack = 0
   981                           ; Regs used in _PuertoB: [wreg+status,2+status,0]
   982                           
   983                           
   984                           ;INT_PORTB.c: 4:     if (INTCONbits.RBIF){
   985  00F7  1C0B               	btfss	11,0	;volatile
   986  00F8  28FA               	goto	u1_21
   987  00F9  28FB               	goto	u1_20
   988  00FA                     u1_21:
   989  00FA  290C               	goto	i1l12
   990  00FB                     u1_20:
   991  00FB                     i1l740:
   992                           
   993                           ;INT_PORTB.c: 5:         if (PORTBbits.RB0 == 1){
   994  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   995  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   996  00FD  1C06               	btfss	6,0	;volatile
   997  00FE  2900               	goto	u2_21
   998  00FF  2901               	goto	u2_20
   999  0100                     u2_21:
  1000  0100  2905               	goto	i1l744
  1001  0101                     u2_20:
  1002  0101                     i1l742:
  1003                           
  1004                           ;INT_PORTB.c: 6:             cont++;
  1005  0101  3001               	movlw	1
  1006  0102  00F6               	movwf	??_PuertoB
  1007  0103  0876               	movf	??_PuertoB,w
  1008  0104  07F5               	addwf	_cont,f
  1009  0105                     i1l744:
  1010                           
  1011                           ;INT_PORTB.c: 9:         if (PORTBbits.RB1 == 1){
  1012  0105  1C86               	btfss	6,1	;volatile
  1013  0106  2908               	goto	u3_21
  1014  0107  2909               	goto	u3_20
  1015  0108                     u3_21:
  1016  0108  290B               	goto	i1l748
  1017  0109                     u3_20:
  1018  0109                     i1l746:
  1019                           
  1020                           ;INT_PORTB.c: 10:             cont--;
  1021  0109  3001               	movlw	1
  1022  010A  02F5               	subwf	_cont,f
  1023  010B                     i1l748:
  1024                           
  1025                           ;INT_PORTB.c: 12:         INTCONbits.RBIF = 0;
  1026  010B  100B               	bcf	11,0	;volatile
  1027  010C                     i1l12:
  1028  010C  0008               	return
  1029  010D                     __end_of_PuertoB:
  1030                           
  1031                           	psect	text4
  1032  0065                     __ptext4:	
  1033 ;; *************** function _MP7SEG *****************
  1034 ;; Defined at:
  1035 ;;		line 3 in file "LIB_MP.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0
  1051 ;;      Temps:          2       0       0       0       0
  1052 ;;      Totals:         2       0       0       0       0
  1053 ;;Total ram usage:        2 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_my_inte
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _MP7SEG
  1064  0065                     _MP7SEG:
  1065  0065                     i1l794:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _MP7SEG: [wreg-fsr0h+status,2+status,0]
  1068                           
  1069                           
  1070                           ;LIB_MP.c: 4:     if (INTCONbits.T0IF){
  1071  0065  1D0B               	btfss	11,2	;volatile
  1072  0066  2868               	goto	u6_21
  1073  0067  2869               	goto	u6_20
  1074  0068                     u6_21:
  1075  0068  2898               	goto	i1l146
  1076  0069                     u6_20:
  1077  0069                     i1l796:
  1078                           
  1079                           ;LIB_MP.c: 6:         if (PORTEbits.RE0){
  1080  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1081  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1082  006B  1C09               	btfss	9,0	;volatile
  1083  006C  286E               	goto	u7_21
  1084  006D  286F               	goto	u7_20
  1085  006E                     u7_21:
  1086  006E  2880               	goto	i1l806
  1087  006F                     u7_20:
  1088  006F                     i1l798:
  1089                           
  1090                           ;LIB_MP.c: 7:             PORTEbits.RE0 = 0;
  1091  006F  1009               	bcf	9,0	;volatile
  1092  0070                     i1l800:
  1093                           
  1094                           ;LIB_MP.c: 8:             PORTC = display[displayder];
  1095  0070  0872               	movf	_displayder,w
  1096  0071  3E20               	addlw	(low (_display| 0))& (0+255)
  1097  0072  0084               	movwf	4
  1098  0073  1383               	bcf	3,7	;select IRP bank0
  1099  0074  0800               	movf	0,w
  1100  0075  0087               	movwf	7	;volatile
  1101  0076                     i1l802:
  1102                           
  1103                           ;LIB_MP.c: 9:             PORTEbits.RE1 = 1;
  1104  0076  1489               	bsf	9,1	;volatile
  1105  0077                     i1l804:
  1106                           
  1107                           ;LIB_MP.c: 10:             _delay((unsigned long)((8)*(8000000/4000.0)));
  1108  0077  3015               	movlw	21
  1109  0078  00F7               	movwf	??_MP7SEG+1
  1110  0079  30C6               	movlw	198
  1111  007A  00F6               	movwf	??_MP7SEG
  1112  007B                     u11_27:
  1113  007B  0BF6               	decfsz	??_MP7SEG,f
  1114  007C  287B               	goto	u11_27
  1115  007D  0BF7               	decfsz	??_MP7SEG+1,f
  1116  007E  287B               	goto	u11_27
  1117  007F  0000               	nop
  1118  0080                     i1l806:
  1119                           
  1120                           ;LIB_MP.c: 12:         if (PORTEbits.RE1){
  1121  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0082  1C89               	btfss	9,1	;volatile
  1124  0083  2885               	goto	u8_21
  1125  0084  2886               	goto	u8_20
  1126  0085                     u8_21:
  1127  0085  2897               	goto	i1l816
  1128  0086                     u8_20:
  1129  0086                     i1l808:
  1130                           
  1131                           ;LIB_MP.c: 13:             PORTEbits.RE1 = 0;
  1132  0086  1089               	bcf	9,1	;volatile
  1133  0087                     i1l810:
  1134                           
  1135                           ;LIB_MP.c: 14:             PORTC = display[displayizq];
  1136  0087  0873               	movf	_displayizq,w
  1137  0088  3E20               	addlw	(low (_display| 0))& (0+255)
  1138  0089  0084               	movwf	4
  1139  008A  1383               	bcf	3,7	;select IRP bank0
  1140  008B  0800               	movf	0,w
  1141  008C  0087               	movwf	7	;volatile
  1142  008D                     i1l812:
  1143                           
  1144                           ;LIB_MP.c: 15:             PORTEbits.RE0 = 1;
  1145  008D  1409               	bsf	9,0	;volatile
  1146  008E                     i1l814:
  1147                           
  1148                           ;LIB_MP.c: 16:             _delay((unsigned long)((8)*(8000000/4000.0)));
  1149  008E  3015               	movlw	21
  1150  008F  00F7               	movwf	??_MP7SEG+1
  1151  0090  30C6               	movlw	198
  1152  0091  00F6               	movwf	??_MP7SEG
  1153  0092                     u12_27:
  1154  0092  0BF6               	decfsz	??_MP7SEG,f
  1155  0093  2892               	goto	u12_27
  1156  0094  0BF7               	decfsz	??_MP7SEG+1,f
  1157  0095  2892               	goto	u12_27
  1158  0096  0000               	nop
  1159  0097                     i1l816:
  1160                           
  1161                           ;LIB_MP.c: 18:         INTCONbits.T0IF = 0;
  1162  0097  110B               	bcf	11,2	;volatile
  1163  0098                     i1l146:
  1164  0098  0008               	return
  1165  0099                     __end_of_MP7SEG:
  1166                           
  1167                           	psect	text5
  1168  0099                     __ptext5:	
  1169 ;; *************** function _ADConvert *****************
  1170 ;; Defined at:
  1171 ;;		line 3 in file "LIB_ADC.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1185 ;;      Params:         0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0
  1187 ;;      Temps:          2       0       0       0       0
  1188 ;;      Totals:         2       0       0       0       0
  1189 ;;Total ram usage:        2 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_my_inte
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _ADConvert
  1200  0099                     _ADConvert:
  1201  0099                     i1l780:	
  1202                           ;incstack = 0
  1203                           ; Regs used in _ADConvert: [wreg+status,2+status,0]
  1204                           
  1205                           
  1206                           ;LIB_ADC.c: 4:     if (ADCON0bits.GO == 0){
  1207  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1208  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1209  009B  189F               	btfsc	31,1	;volatile
  1210  009C  289E               	goto	u4_21
  1211  009D  289F               	goto	u4_20
  1212  009E                     u4_21:
  1213  009E  28BE               	goto	i1l126
  1214  009F                     u4_20:
  1215  009F                     i1l782:
  1216                           
  1217                           ;LIB_ADC.c: 5:         adcvar = ADRESH;
  1218  009F  081E               	movf	30,w	;volatile
  1219  00A0  00F6               	movwf	??_ADConvert
  1220  00A1  0876               	movf	??_ADConvert,w
  1221  00A2  00F4               	movwf	_adcvar
  1222  00A3                     i1l784:
  1223                           
  1224                           ;LIB_ADC.c: 6:         displayizq = (ADRESH & 0xF0)>> 4;
  1225  00A3  081E               	movf	30,w	;volatile
  1226  00A4  00F6               	movwf	??_ADConvert
  1227  00A5  3004               	movlw	4
  1228  00A6                     u5_25:
  1229  00A6  1003               	clrc
  1230  00A7  0CF6               	rrf	??_ADConvert,f
  1231  00A8  3EFF               	addlw	-1
  1232  00A9  1D03               	skipz
  1233  00AA  28A6               	goto	u5_25
  1234  00AB  0876               	movf	??_ADConvert,w
  1235  00AC  390F               	andlw	15
  1236  00AD  00F7               	movwf	??_ADConvert+1
  1237  00AE  0877               	movf	??_ADConvert+1,w
  1238  00AF  00F3               	movwf	_displayizq
  1239  00B0                     i1l786:
  1240                           
  1241                           ;LIB_ADC.c: 7:         displayder = (ADRESH & 0x0F);
  1242  00B0  081E               	movf	30,w	;volatile
  1243  00B1  390F               	andlw	15
  1244  00B2  00F6               	movwf	??_ADConvert
  1245  00B3  0876               	movf	??_ADConvert,w
  1246  00B4  00F2               	movwf	_displayder
  1247  00B5                     i1l788:
  1248                           
  1249                           ;LIB_ADC.c: 8:         _delay((unsigned long)((25)*(8000000/4000000.0)));
  1250  00B5  3010               	movlw	16
  1251  00B6  00F6               	movwf	??_ADConvert
  1252  00B7                     u13_27:
  1253  00B7  0BF6               	decfsz	??_ADConvert,f
  1254  00B8  28B7               	goto	u13_27
  1255  00B9  0000               	nop
  1256  00BA                     i1l790:
  1257                           
  1258                           ;LIB_ADC.c: 9:         ADCON0bits.GO_DONE = 1;
  1259  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1260  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1261  00BC  149F               	bsf	31,1	;volatile
  1262  00BD                     i1l792:
  1263                           
  1264                           ;LIB_ADC.c: 10:         PIR1bits.ADIF = 0;
  1265  00BD  130C               	bcf	12,6	;volatile
  1266  00BE                     i1l126:
  1267  00BE  0008               	return
  1268  00BF                     __end_of_ADConvert:
  1269  007E                     btemp	set	126	;btemp
  1270  007E                     wtemp0	set	126
  1271                           
  1272                           	psect	config
  1273                           
  1274                           ;Config register CONFIG1 @ 0x2007
  1275                           ;	Oscillator Selection bits
  1276                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1277                           ;	Watchdog Timer Enable bit
  1278                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1279                           ;	Power-up Timer Enable bit
  1280                           ;	PWRTE = OFF, PWRT disabled
  1281                           ;	RE3/MCLR pin function select bit
  1282                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1283                           ;	Code Protection bit
  1284                           ;	CP = OFF, Program memory code protection is disabled
  1285                           ;	Data Code Protection bit
  1286                           ;	CPD = OFF, Data memory code protection is disabled
  1287                           ;	Brown Out Reset Selection bits
  1288                           ;	BOREN = OFF, BOR disabled
  1289                           ;	Internal External Switchover bit
  1290                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1291                           ;	Fail-Safe Clock Monitor Enabled bit
  1292                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1293                           ;	Low Voltage Programming Enable bit
  1294                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1295                           ;	In-Circuit Debugger Mode bit
  1296                           ;	DEBUG = 0x1, unprogrammed default
  1297  2007                     	org	8199
  1298  2007  20D1               	dw	8401
  1299                           
  1300                           ;Config register CONFIG2 @ 0x2008
  1301                           ;	Brown-out Reset Selection bit
  1302                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1303                           ;	Flash Program Memory Self Write Enable bits
  1304                           ;	WRT = OFF, Write protection off
  1305  2008                     	org	8200
  1306  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_inte in COMMON

    _my_inte->_ADConvert
    _my_inte->_MP7SEG

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_inte in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_inte in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_inte in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_inte in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 COMMON     1     1      0
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _my_inte                                              3     3      0       0
                                              2 COMMON     3     3      0
                          _ADConvert
                             _MP7SEG
                            _PuertoB
 ---------------------------------------------------------------------------------
 (3) _PuertoB                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MP7SEG                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ADConvert                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup

 _my_inte (ROOT)
   _ADConvert
   _MP7SEG
   _PuertoB

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 10 22:26:20 2021

                      pc 0002                       l93 0064                       u90 00D8  
                     u91 00D7                       fsr 0004                      l104 00DA  
                    l750 0029                      l830 00CF                      l822 00BF  
                    l760 003C                      l752 002D                      l832 00D0  
                    l824 00C4                      l770 004B                      l762 003F  
                    l754 002E                      l834 00D2                      l826 00C7  
                    l772 0054                      l764 0042                      l756 0035  
                    l836 00D8                      l828 00CC                      l774 0057  
                    l766 0045                      l758 0039                      l776 005C  
                    l768 0048                      l778 0060                      u107 00C9  
                    fsr0 0004                      indf 0000       __size_of_ADConvert 0026  
                   _IOCB 0096                     _PIE1 008C                     i1l12 010C  
                   _PIR1 000C                     i1l98 00EE                     _TMR0 0001  
                   u1_20 00FB                     u1_21 00FA                     u2_20 0101  
                   u2_21 0100                     u3_20 0109                     u3_21 0108  
                   u4_20 009F                     u4_21 009E                     u5_25 00A6  
                   u6_20 0069                     u6_21 0068                     u7_20 006F  
                   u7_21 006E                     u8_20 0086                     u8_21 0085  
                   _cont 0075                     _main 00BF                     btemp 007E  
                   start 000E          __end_of_PuertoB 010D                    ?_main 0076  
                  _ANSEL 0188                    i1l126 00BE                    i1l146 0098  
                  i1l800 0070                    i1l810 0087                    i1l802 0076  
                  i1l812 008D                    i1l804 0077                    i1l740 00FB  
                  i1l820 00E9                    i1l814 008E                    i1l806 0080  
                  i1l742 0101                    i1l808 0086                    i1l816 0097  
                  i1l744 0105                    i1l746 0109                    i1l738 00F7  
                  i1l818 00DF                    i1l780 0099                    i1l748 010B  
                  i1l790 00BA                    i1l782 009F                    i1l792 00BD  
                  i1l784 00A3                    i1l786 00B0                    i1l794 0065  
                  i1l788 00B5                    i1l796 0069                    i1l798 006F  
                  u11_27 007B                    u12_27 0092                    u13_27 00B7  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _Setup 0029                    pclath 000A  
        __end_of_my_inte 00F7                    status 0003                    wtemp0 007E  
      __end_of_ADConvert 00BF          __initialization 0011             __end_of_main 00DF  
                 ??_main 007B                   ?_Setup 0076                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ANSELH 0189  
                 _MP7SEG 0065                   _INTCON 000B                ??_PuertoB 0076  
                 _adcvar 0074                   saved_w 007E                ??_my_inte 0078  
__end_of__initialization 0025           __pcstackCOMMON 0076            __end_of_Setup 0065  
           __pidataBANK0 0120                  ??_Setup 007B                  ?_MP7SEG 0076  
             __pmaintext 00BF               __pintentry 0004               _displayder 0072  
             _displayizq 0073          __size_of_MP7SEG 0034                  _PuertoB 00F7  
              _ADConvert 0099                  __ptext1 0029                  __ptext2 00DF  
                __ptext3 00F7                  __ptext4 0065                  __ptext5 0099  
                _display 0020                  _dispvar 0071                  _pre_var 0070  
                _my_inte 00DF     end_of_initialization 0025               ?_ADConvert 0076  
              _PORTBbits 0006                _PORTEbits 0009           __end_of_MP7SEG 0099  
    start_initialization 0011                 ??_MP7SEG 0076               init_fetch0 010D  
            ??_ADConvert 0076              __pdataBANK0 0020              __pbssCOMMON 0070  
              ___latbits 0002                 ?_PuertoB 0076                 ?_my_inte 0076  
         __size_of_Setup 003C        interrupt_function 0004                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_PuertoB 0016         __size_of_my_inte 0018  
          __size_of_main 0020               _INTCONbits 000B                 init_ram0 0111  
               intlevel1 0000               _OPTION_REG 0081  
