

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 10 22:18:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000E                     	;# 
   382  000F                     	;# 
   383  0010                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0014                     	;# 
   388  0015                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001D                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  0081                     	;# 
   402  0085                     	;# 
   403  0086                     	;# 
   404  0087                     	;# 
   405  0088                     	;# 
   406  0089                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  008F                     	;# 
   411  0090                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  0105                     	;# 
   430  0107                     	;# 
   431  0108                     	;# 
   432  0109                     	;# 
   433  010C                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  010E                     	;# 
   437  010F                     	;# 
   438  0185                     	;# 
   439  0187                     	;# 
   440  0188                     	;# 
   441  0189                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444                           
   445                           	psect	idataBANK0
   446  0119                     __pidataBANK0:
   447                           
   448                           ;initializer for _display
   449  0119  343F               	retlw	63
   450  011A  3406               	retlw	6
   451  011B  345B               	retlw	91
   452  011C  344F               	retlw	79
   453  011D  3466               	retlw	102
   454  011E  346D               	retlw	109
   455  011F  347D               	retlw	125
   456  0120  3407               	retlw	7
   457  0121  347F               	retlw	127
   458  0122  3467               	retlw	103
   459  0123  3477               	retlw	119
   460  0124  347C               	retlw	124
   461  0125  3439               	retlw	57
   462  0126  345E               	retlw	94
   463  0127  34F9               	retlw	249
   464  0128  3471               	retlw	113
   465  000C                     _PIR1bits	set	12
   466  001E                     _ADRESH	set	30
   467  0001                     _TMR0	set	1
   468  001F                     _ADCON0bits	set	31
   469  0009                     _PORTEbits	set	9
   470  001F                     _ADCON0	set	31
   471  000C                     _PIR1	set	12
   472  000B                     _INTCON	set	11
   473  0009                     _PORTE	set	9
   474  0008                     _PORTD	set	8
   475  0007                     _PORTC	set	7
   476  0006                     _PORTB	set	6
   477  0005                     _PORTA	set	5
   478  0006                     _PORTBbits	set	6
   479  000B                     _INTCONbits	set	11
   480  0081                     _OPTION_REG	set	129
   481  009F                     _ADCON1	set	159
   482  008C                     _PIE1	set	140
   483  0096                     _IOCB	set	150
   484  0089                     _TRISE	set	137
   485  0088                     _TRISD	set	136
   486  0087                     _TRISC	set	135
   487  0086                     _TRISB	set	134
   488  0085                     _TRISA	set	133
   489  0189                     _ANSELH	set	393
   490  0188                     _ANSEL	set	392
   491                           
   492                           	psect	cinit
   493  0011                     start_initialization:	
   494                           ; #config settings
   495                           
   496  0011                     __initialization:
   497                           
   498                           ; Initialize objects allocated to BANK0
   499  0011  1383               	bcf	3,7	;select IRP bank0
   500  0012  3030               	movlw	low (__pdataBANK0+16)
   501  0013  00FD               	movwf	btemp+-1
   502  0014  3001               	movlw	high __pidataBANK0
   503  0015  00FE               	movwf	btemp
   504  0016  3019               	movlw	low __pidataBANK0
   505  0017  00FF               	movwf	btemp+1
   506  0018  3020               	movlw	low __pdataBANK0
   507  0019  0084               	movwf	4
   508  001A  120A  118A  210A  120A  118A  	fcall	init_ram0
   509                           
   510                           ; Clear objects allocated to COMMON
   511  001F  01F0               	clrf	__pbssCOMMON& (0+127)
   512  0020  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   513  0021  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   514  0022  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   515  0023  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   516  0024  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   517  0025  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   518  0026                     end_of_initialization:	
   519                           ;End of C runtime variable initialization code
   520                           
   521  0026                     __end_of__initialization:
   522  0026  0183               	clrf	3
   523  0027  120A  118A  28C0   	ljmp	_main	;jump to C main() function
   524                           
   525                           	psect	bssCOMMON
   526  0070                     __pbssCOMMON:
   527  0070                     _pre_var:
   528  0070                     	ds	1
   529  0071                     _dispvar:
   530  0071                     	ds	1
   531  0072                     _advar:
   532  0072                     	ds	1
   533  0073                     _displayder:
   534  0073                     	ds	1
   535  0074                     _displayizq:
   536  0074                     	ds	1
   537  0075                     _adcvar:
   538  0075                     	ds	1
   539  0076                     _cont:
   540  0076                     	ds	1
   541                           
   542                           	psect	dataBANK0
   543  0020                     __pdataBANK0:
   544  0020                     _display:
   545  0020                     	ds	16
   546                           
   547                           	psect	inittext
   548  0106                     init_fetch0:	
   549                           ;	Called with low address in FSR and high address in W
   550                           
   551  0106  087E               	movf	btemp,w
   552  0107  008A               	movwf	10
   553  0108  087F               	movf	btemp+1,w
   554  0109  0082               	movwf	2
   555  010A                     init_ram0:	
   556                           ;Called with:
   557                           ;	high address of idata address in btemp 
   558                           ;	low address of idata address in btemp+1 
   559                           ;	low address of data in FSR
   560                           ;	high address + 1 of data in btemp-1
   561                           
   562  010A  120A  118A  2106  120A  118A  	fcall	init_fetch0
   563  010F  0080               	movwf	0
   564  0110  0A84               	incf	4,f
   565  0111  0804               	movf	4,w
   566  0112  067D               	xorwf	btemp+-1,w
   567  0113  1903               	btfsc	3,2
   568  0114  3400               	retlw	0
   569  0115  0AFF               	incf	btemp+1,f
   570  0116  1903               	btfsc	3,2
   571  0117  0AFE               	incf	btemp,f
   572  0118  290A               	goto	init_ram0
   573                           
   574                           	psect	cstackCOMMON
   575  0077                     __pcstackCOMMON:
   576  0077                     ?_ADConvert:
   577  0077                     ??_ADConvert:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0077                     ?_MP7SEG:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0077                     ??_MP7SEG:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0077                     ?_PuertoB:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0077                     ??_PuertoB:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0077                     ?_Setup:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0077                     ?_my_inte:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0077                     ?_main:	
   599                           ; 1 bytes @ 0x0
   600                           
   601                           
   602                           ; 1 bytes @ 0x0
   603  0077                     	ds	2
   604  0079                     ??_my_inte:
   605                           
   606                           ; 1 bytes @ 0x2
   607  0079                     	ds	3
   608  007C                     ??_Setup:
   609  007C                     ??_main:	
   610                           ; 1 bytes @ 0x5
   611                           
   612                           
   613                           ; 1 bytes @ 0x5
   614  007C                     	ds	1
   615                           
   616                           	psect	maintext
   617  00C0                     __pmaintext:	
   618 ;;
   619 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   620 ;;
   621 ;; *************** function _main *****************
   622 ;; Defined at:
   623 ;;		line 116 in file "LAB02.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, pclath, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : B00/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0
   639 ;;      Temps:          1       0       0       0       0
   640 ;;      Totals:         1       0       0       0       0
   641 ;;Total ram usage:        1 bytes
   642 ;; Hardware stack levels required when called:    3
   643 ;; This function calls:
   644 ;;		_Setup
   645 ;; This function is called by:
   646 ;;		Startup code after reset
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _main
   652  00C0                     _main:
   653  00C0                     l822:	
   654                           ;incstack = 0
   655                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   656                           
   657                           
   658                           ;LAB02.c: 117:     Setup ();
   659  00C0  120A  118A  202A  120A  118A  	fcall	_Setup
   660  00C5                     l824:
   661                           
   662                           ;LAB02.c: 118:     PORTEbits.RE1 = 1;
   663  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   664  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   665  00C7  1489               	bsf	9,1	;volatile
   666  00C8                     l826:
   667                           
   668                           ;LAB02.c: 119:     _delay((unsigned long)((25)*(8000000/4000000.0)));
   669  00C8  3010               	movlw	16
   670  00C9  00FC               	movwf	??_main
   671  00CA                     u97:
   672  00CA  0BFC               	decfsz	??_main,f
   673  00CB  28CA               	goto	u97
   674  00CC  0000               	nop
   675  00CD                     l828:
   676                           
   677                           ;LAB02.c: 121:     ADCON0bits.GO_nDONE = 1;
   678  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   679  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   680  00CF  149F               	bsf	31,1	;volatile
   681  00D0                     l830:
   682                           
   683                           ;LAB02.c: 122:     TMR0 = 0;
   684  00D0  0181               	clrf	1	;volatile
   685  00D1                     l832:
   686                           
   687                           ;LAB02.c: 127:         if (advar <= cont){
   688  00D1  0876               	movf	_cont,w
   689  00D2  0088               	movwf	8	;volatile
   690  00D3                     l834:
   691                           
   692                           ;LAB02.c: 128:             PORTEbits.RE2 = 0;
   693  00D3  1109               	bcf	9,2	;volatile
   694                           
   695                           ;LAB02.c: 129:         }
   696  00D4  28D1               	goto	l832
   697  00D5  120A  118A  280E   	ljmp	start
   698  00D8                     __end_of_main:
   699                           
   700                           	psect	text1
   701  002A                     __ptext1:	
   702 ;; *************** function _Setup *****************
   703 ;; Defined at:
   704 ;;		line 59 in file "LAB02.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, status,2
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   718 ;;      Params:         0       0       0       0       0
   719 ;;      Locals:         0       0       0       0       0
   720 ;;      Temps:          0       0       0       0       0
   721 ;;      Totals:         0       0       0       0       0
   722 ;;Total ram usage:        0 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    2
   725 ;; This function calls:
   726 ;;		Nothing
   727 ;; This function is called by:
   728 ;;		_main
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           
   733                           ;psect for function _Setup
   734  002A                     _Setup:
   735  002A                     l750:	
   736                           ;incstack = 0
   737                           ; Regs used in _Setup: [wreg+status,2]
   738                           
   739                           
   740                           ;LAB02.c: 61:     ANSEL = 0b00000001;
   741  002A  3001               	movlw	1
   742  002B  1683               	bsf	3,5	;RP0=1, select bank3
   743  002C  1703               	bsf	3,6	;RP1=1, select bank3
   744  002D  0088               	movwf	8	;volatile
   745  002E                     l752:
   746                           
   747                           ;LAB02.c: 62:     ANSELH = 0;
   748  002E  0189               	clrf	9	;volatile
   749  002F                     l754:
   750                           
   751                           ;LAB02.c: 65:     TRISA = 0b00000001;
   752  002F  3001               	movlw	1
   753  0030  1683               	bsf	3,5	;RP0=1, select bank1
   754  0031  1303               	bcf	3,6	;RP1=0, select bank1
   755  0032  0085               	movwf	5	;volatile
   756                           
   757                           ;LAB02.c: 66:     PORTA = 0;
   758  0033  1283               	bcf	3,5	;RP0=0, select bank0
   759  0034  1303               	bcf	3,6	;RP1=0, select bank0
   760  0035  0185               	clrf	5	;volatile
   761  0036                     l756:
   762                           
   763                           ;LAB02.c: 69:     TRISB = 0b00000011;
   764  0036  3003               	movlw	3
   765  0037  1683               	bsf	3,5	;RP0=1, select bank1
   766  0038  1303               	bcf	3,6	;RP1=0, select bank1
   767  0039  0086               	movwf	6	;volatile
   768  003A                     l758:
   769                           
   770                           ;LAB02.c: 70:     PORTB = 0;
   771  003A  1283               	bcf	3,5	;RP0=0, select bank0
   772  003B  1303               	bcf	3,6	;RP1=0, select bank0
   773  003C  0186               	clrf	6	;volatile
   774  003D                     l760:
   775                           
   776                           ;LAB02.c: 73:     TRISC = 0;
   777  003D  1683               	bsf	3,5	;RP0=1, select bank1
   778  003E  1303               	bcf	3,6	;RP1=0, select bank1
   779  003F  0187               	clrf	7	;volatile
   780  0040                     l762:
   781                           
   782                           ;LAB02.c: 74:     PORTC = 0;
   783  0040  1283               	bcf	3,5	;RP0=0, select bank0
   784  0041  1303               	bcf	3,6	;RP1=0, select bank0
   785  0042  0187               	clrf	7	;volatile
   786  0043                     l764:
   787                           
   788                           ;LAB02.c: 76:     TRISD = 0;
   789  0043  1683               	bsf	3,5	;RP0=1, select bank1
   790  0044  1303               	bcf	3,6	;RP1=0, select bank1
   791  0045  0188               	clrf	8	;volatile
   792  0046                     l766:
   793                           
   794                           ;LAB02.c: 77:     PORTD = 0;
   795  0046  1283               	bcf	3,5	;RP0=0, select bank0
   796  0047  1303               	bcf	3,6	;RP1=0, select bank0
   797  0048  0188               	clrf	8	;volatile
   798  0049                     l768:
   799                           
   800                           ;LAB02.c: 79:     TRISE = 0;
   801  0049  1683               	bsf	3,5	;RP0=1, select bank1
   802  004A  1303               	bcf	3,6	;RP1=0, select bank1
   803  004B  0189               	clrf	9	;volatile
   804  004C                     l770:
   805                           
   806                           ;LAB02.c: 80:     PORTE = 0;
   807  004C  1283               	bcf	3,5	;RP0=0, select bank0
   808  004D  1303               	bcf	3,6	;RP1=0, select bank0
   809  004E  0189               	clrf	9	;volatile
   810                           
   811                           ;LAB02.c: 83:     INTCON = 0b11101000;
   812  004F  30E8               	movlw	232
   813  0050  008B               	movwf	11	;volatile
   814                           
   815                           ;LAB02.c: 85:     IOCB = 0b00000011;
   816  0051  3003               	movlw	3
   817  0052  1683               	bsf	3,5	;RP0=1, select bank1
   818  0053  1303               	bcf	3,6	;RP1=0, select bank1
   819  0054  0096               	movwf	22	;volatile
   820  0055                     l772:
   821                           
   822                           ;LAB02.c: 89:     PIR1 = 0b00000000;
   823  0055  1283               	bcf	3,5	;RP0=0, select bank0
   824  0056  1303               	bcf	3,6	;RP1=0, select bank0
   825  0057  018C               	clrf	12	;volatile
   826  0058                     l774:
   827                           
   828                           ;LAB02.c: 90:     PIE1 = 0b01000000;
   829  0058  3040               	movlw	64
   830  0059  1683               	bsf	3,5	;RP0=1, select bank1
   831  005A  1303               	bcf	3,6	;RP1=0, select bank1
   832  005B  008C               	movwf	12	;volatile
   833                           
   834                           ;LAB02.c: 91:     ADCON1 = 0;
   835  005C  019F               	clrf	31	;volatile
   836  005D                     l776:
   837                           
   838                           ;LAB02.c: 93:     ADCON0 = 0b10000001;
   839  005D  3081               	movlw	129
   840  005E  1283               	bcf	3,5	;RP0=0, select bank0
   841  005F  1303               	bcf	3,6	;RP1=0, select bank0
   842  0060  009F               	movwf	31	;volatile
   843  0061                     l778:
   844                           
   845                           ;LAB02.c: 95:     OPTION_REG = 0b0000101;
   846  0061  3005               	movlw	5
   847  0062  1683               	bsf	3,5	;RP0=1, select bank1
   848  0063  1303               	bcf	3,6	;RP1=0, select bank1
   849  0064  0081               	movwf	1	;volatile
   850  0065                     l93:
   851  0065  0008               	return
   852  0066                     __end_of_Setup:
   853                           
   854                           	psect	text2
   855  00D8                     __ptext2:	
   856 ;; *************** function _my_inte *****************
   857 ;; Defined at:
   858 ;;		line 102 in file "LAB02.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   872 ;;      Params:         0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0
   874 ;;      Temps:          3       0       0       0       0
   875 ;;      Totals:         3       0       0       0       0
   876 ;;Total ram usage:        3 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:    1
   879 ;; This function calls:
   880 ;;		_ADConvert
   881 ;;		_MP7SEG
   882 ;;		_PuertoB
   883 ;; This function is called by:
   884 ;;		Interrupt level 1
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _my_inte
   890  00D8                     _my_inte:
   891  00D8                     i1l818:
   892                           
   893                           ;LAB02.c: 104:     PuertoB();
   894  00D8  120A  118A  20F0  120A  118A  	fcall	_PuertoB
   895                           
   896                           ;LAB02.c: 107:     ADConvert();
   897  00DD  120A  118A  209A  120A  118A  	fcall	_ADConvert
   898  00E2                     i1l820:
   899                           
   900                           ;LAB02.c: 109:     MP7SEG();
   901  00E2  120A  118A  2066  120A  118A  	fcall	_MP7SEG
   902  00E7                     i1l98:
   903  00E7  087B               	movf	??_my_inte+2,w
   904  00E8  008A               	movwf	10
   905  00E9  087A               	movf	??_my_inte+1,w
   906  00EA  0084               	movwf	4
   907  00EB  0E79               	swapf	??_my_inte,w
   908  00EC  0083               	movwf	3
   909  00ED  0EFE               	swapf	btemp,f
   910  00EE  0E7E               	swapf	btemp,w
   911  00EF  0009               	retfie
   912  00F0                     __end_of_my_inte:
   913                           
   914                           	psect	intentry
   915  0004                     __pintentry:	
   916                           ;incstack = 0
   917                           ; Regs used in _my_inte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   918                           
   919  0004                     interrupt_function:
   920  007E                     saved_w	set	btemp
   921  0004  00FE               	movwf	btemp
   922  0005  0E03               	swapf	3,w
   923  0006  00F9               	movwf	??_my_inte
   924  0007  0804               	movf	4,w
   925  0008  00FA               	movwf	??_my_inte+1
   926  0009  080A               	movf	10,w
   927  000A  00FB               	movwf	??_my_inte+2
   928  000B  120A  118A  28D8   	ljmp	_my_inte
   929                           
   930                           	psect	text3
   931  00F0                     __ptext3:	
   932 ;; *************** function _PuertoB *****************
   933 ;; Defined at:
   934 ;;		line 3 in file "INT_PORTB.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          1       0       0       0       0
   951 ;;      Totals:         1       0       0       0       0
   952 ;;Total ram usage:        1 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_my_inte
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _PuertoB
   963  00F0                     _PuertoB:
   964  00F0                     i1l738:	
   965                           ;incstack = 0
   966                           ; Regs used in _PuertoB: [wreg+status,2+status,0]
   967                           
   968                           
   969                           ;INT_PORTB.c: 4:     if (INTCONbits.RBIF){
   970  00F0  1C0B               	btfss	11,0	;volatile
   971  00F1  28F3               	goto	u1_21
   972  00F2  28F4               	goto	u1_20
   973  00F3                     u1_21:
   974  00F3  2905               	goto	i1l12
   975  00F4                     u1_20:
   976  00F4                     i1l740:
   977                           
   978                           ;INT_PORTB.c: 5:         if (PORTBbits.RB0 == 1){
   979  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   980  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   981  00F6  1C06               	btfss	6,0	;volatile
   982  00F7  28F9               	goto	u2_21
   983  00F8  28FA               	goto	u2_20
   984  00F9                     u2_21:
   985  00F9  28FE               	goto	i1l744
   986  00FA                     u2_20:
   987  00FA                     i1l742:
   988                           
   989                           ;INT_PORTB.c: 6:             cont++;
   990  00FA  3001               	movlw	1
   991  00FB  00F7               	movwf	??_PuertoB
   992  00FC  0877               	movf	??_PuertoB,w
   993  00FD  07F6               	addwf	_cont,f
   994  00FE                     i1l744:
   995                           
   996                           ;INT_PORTB.c: 9:         if (PORTBbits.RB1 == 1){
   997  00FE  1C86               	btfss	6,1	;volatile
   998  00FF  2901               	goto	u3_21
   999  0100  2902               	goto	u3_20
  1000  0101                     u3_21:
  1001  0101  2904               	goto	i1l748
  1002  0102                     u3_20:
  1003  0102                     i1l746:
  1004                           
  1005                           ;INT_PORTB.c: 10:             cont--;
  1006  0102  3001               	movlw	1
  1007  0103  02F6               	subwf	_cont,f
  1008  0104                     i1l748:
  1009                           
  1010                           ;INT_PORTB.c: 12:         INTCONbits.RBIF = 0;
  1011  0104  100B               	bcf	11,0	;volatile
  1012  0105                     i1l12:
  1013  0105  0008               	return
  1014  0106                     __end_of_PuertoB:
  1015                           
  1016                           	psect	text4
  1017  0066                     __ptext4:	
  1018 ;; *************** function _MP7SEG *****************
  1019 ;; Defined at:
  1020 ;;		line 3 in file "LIB_MP.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0
  1036 ;;      Temps:          2       0       0       0       0
  1037 ;;      Totals:         2       0       0       0       0
  1038 ;;Total ram usage:        2 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_my_inte
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function _MP7SEG
  1049  0066                     _MP7SEG:
  1050  0066                     i1l794:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _MP7SEG: [wreg-fsr0h+status,2+status,0]
  1053                           
  1054                           
  1055                           ;LIB_MP.c: 4:     if (INTCONbits.T0IF){
  1056  0066  1D0B               	btfss	11,2	;volatile
  1057  0067  2869               	goto	u6_21
  1058  0068  286A               	goto	u6_20
  1059  0069                     u6_21:
  1060  0069  2899               	goto	i1l146
  1061  006A                     u6_20:
  1062  006A                     i1l796:
  1063                           
  1064                           ;LIB_MP.c: 6:         if (PORTEbits.RE0){
  1065  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1066  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1067  006C  1C09               	btfss	9,0	;volatile
  1068  006D  286F               	goto	u7_21
  1069  006E  2870               	goto	u7_20
  1070  006F                     u7_21:
  1071  006F  2881               	goto	i1l806
  1072  0070                     u7_20:
  1073  0070                     i1l798:
  1074                           
  1075                           ;LIB_MP.c: 7:             PORTEbits.RE0 = 0;
  1076  0070  1009               	bcf	9,0	;volatile
  1077  0071                     i1l800:
  1078                           
  1079                           ;LIB_MP.c: 8:             PORTC = display[displayder];
  1080  0071  0873               	movf	_displayder,w
  1081  0072  3E20               	addlw	(low (_display| 0))& (0+255)
  1082  0073  0084               	movwf	4
  1083  0074  1383               	bcf	3,7	;select IRP bank0
  1084  0075  0800               	movf	0,w
  1085  0076  0087               	movwf	7	;volatile
  1086  0077                     i1l802:
  1087                           
  1088                           ;LIB_MP.c: 9:             PORTEbits.RE1 = 1;
  1089  0077  1489               	bsf	9,1	;volatile
  1090  0078                     i1l804:
  1091                           
  1092                           ;LIB_MP.c: 10:             _delay((unsigned long)((8)*(8000000/4000.0)));
  1093  0078  3015               	movlw	21
  1094  0079  00F8               	movwf	??_MP7SEG+1
  1095  007A  30C6               	movlw	198
  1096  007B  00F7               	movwf	??_MP7SEG
  1097  007C                     u10_27:
  1098  007C  0BF7               	decfsz	??_MP7SEG,f
  1099  007D  287C               	goto	u10_27
  1100  007E  0BF8               	decfsz	??_MP7SEG+1,f
  1101  007F  287C               	goto	u10_27
  1102  0080  0000               	nop
  1103  0081                     i1l806:
  1104                           
  1105                           ;LIB_MP.c: 12:         if (PORTEbits.RE1){
  1106  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0083  1C89               	btfss	9,1	;volatile
  1109  0084  2886               	goto	u8_21
  1110  0085  2887               	goto	u8_20
  1111  0086                     u8_21:
  1112  0086  2898               	goto	i1l816
  1113  0087                     u8_20:
  1114  0087                     i1l808:
  1115                           
  1116                           ;LIB_MP.c: 13:             PORTEbits.RE1 = 0;
  1117  0087  1089               	bcf	9,1	;volatile
  1118  0088                     i1l810:
  1119                           
  1120                           ;LIB_MP.c: 14:             PORTC = display[displayizq];
  1121  0088  0874               	movf	_displayizq,w
  1122  0089  3E20               	addlw	(low (_display| 0))& (0+255)
  1123  008A  0084               	movwf	4
  1124  008B  1383               	bcf	3,7	;select IRP bank0
  1125  008C  0800               	movf	0,w
  1126  008D  0087               	movwf	7	;volatile
  1127  008E                     i1l812:
  1128                           
  1129                           ;LIB_MP.c: 15:             PORTEbits.RE0 = 1;
  1130  008E  1409               	bsf	9,0	;volatile
  1131  008F                     i1l814:
  1132                           
  1133                           ;LIB_MP.c: 16:             _delay((unsigned long)((8)*(8000000/4000.0)));
  1134  008F  3015               	movlw	21
  1135  0090  00F8               	movwf	??_MP7SEG+1
  1136  0091  30C6               	movlw	198
  1137  0092  00F7               	movwf	??_MP7SEG
  1138  0093                     u11_27:
  1139  0093  0BF7               	decfsz	??_MP7SEG,f
  1140  0094  2893               	goto	u11_27
  1141  0095  0BF8               	decfsz	??_MP7SEG+1,f
  1142  0096  2893               	goto	u11_27
  1143  0097  0000               	nop
  1144  0098                     i1l816:
  1145                           
  1146                           ;LIB_MP.c: 18:         INTCONbits.T0IF = 0;
  1147  0098  110B               	bcf	11,2	;volatile
  1148  0099                     i1l146:
  1149  0099  0008               	return
  1150  009A                     __end_of_MP7SEG:
  1151                           
  1152                           	psect	text5
  1153  009A                     __ptext5:	
  1154 ;; *************** function _ADConvert *****************
  1155 ;; Defined at:
  1156 ;;		line 3 in file "LIB_ADC.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0
  1172 ;;      Temps:          2       0       0       0       0
  1173 ;;      Totals:         2       0       0       0       0
  1174 ;;Total ram usage:        2 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_my_inte
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           
  1184                           ;psect for function _ADConvert
  1185  009A                     _ADConvert:
  1186  009A                     i1l780:	
  1187                           ;incstack = 0
  1188                           ; Regs used in _ADConvert: [wreg+status,2+status,0]
  1189                           
  1190                           
  1191                           ;LIB_ADC.c: 4:     if (ADCON0bits.GO == 0){
  1192  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1193  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1194  009C  189F               	btfsc	31,1	;volatile
  1195  009D  289F               	goto	u4_21
  1196  009E  28A0               	goto	u4_20
  1197  009F                     u4_21:
  1198  009F  28BF               	goto	i1l126
  1199  00A0                     u4_20:
  1200  00A0                     i1l782:
  1201                           
  1202                           ;LIB_ADC.c: 5:         adcvar = ADRESH;
  1203  00A0  081E               	movf	30,w	;volatile
  1204  00A1  00F7               	movwf	??_ADConvert
  1205  00A2  0877               	movf	??_ADConvert,w
  1206  00A3  00F5               	movwf	_adcvar
  1207  00A4                     i1l784:
  1208                           
  1209                           ;LIB_ADC.c: 6:         displayizq = (ADRESH & 0xF0)>> 4;
  1210  00A4  081E               	movf	30,w	;volatile
  1211  00A5  00F7               	movwf	??_ADConvert
  1212  00A6  3004               	movlw	4
  1213  00A7                     u5_25:
  1214  00A7  1003               	clrc
  1215  00A8  0CF7               	rrf	??_ADConvert,f
  1216  00A9  3EFF               	addlw	-1
  1217  00AA  1D03               	skipz
  1218  00AB  28A7               	goto	u5_25
  1219  00AC  0877               	movf	??_ADConvert,w
  1220  00AD  390F               	andlw	15
  1221  00AE  00F8               	movwf	??_ADConvert+1
  1222  00AF  0878               	movf	??_ADConvert+1,w
  1223  00B0  00F4               	movwf	_displayizq
  1224  00B1                     i1l786:
  1225                           
  1226                           ;LIB_ADC.c: 7:         displayder = (ADRESH & 0x0F);
  1227  00B1  081E               	movf	30,w	;volatile
  1228  00B2  390F               	andlw	15
  1229  00B3  00F7               	movwf	??_ADConvert
  1230  00B4  0877               	movf	??_ADConvert,w
  1231  00B5  00F3               	movwf	_displayder
  1232  00B6                     i1l788:
  1233                           
  1234                           ;LIB_ADC.c: 8:         _delay((unsigned long)((25)*(8000000/4000000.0)));
  1235  00B6  3010               	movlw	16
  1236  00B7  00F7               	movwf	??_ADConvert
  1237  00B8                     u12_27:
  1238  00B8  0BF7               	decfsz	??_ADConvert,f
  1239  00B9  28B8               	goto	u12_27
  1240  00BA  0000               	nop
  1241  00BB                     i1l790:
  1242                           
  1243                           ;LIB_ADC.c: 9:         ADCON0bits.GO_DONE = 1;
  1244  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1245  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1246  00BD  149F               	bsf	31,1	;volatile
  1247  00BE                     i1l792:
  1248                           
  1249                           ;LIB_ADC.c: 10:         PIR1bits.ADIF = 0;
  1250  00BE  130C               	bcf	12,6	;volatile
  1251  00BF                     i1l126:
  1252  00BF  0008               	return
  1253  00C0                     __end_of_ADConvert:
  1254  007E                     btemp	set	126	;btemp
  1255  007E                     wtemp0	set	126
  1256                           
  1257                           	psect	config
  1258                           
  1259                           ;Config register CONFIG1 @ 0x2007
  1260                           ;	Oscillator Selection bits
  1261                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1262                           ;	Watchdog Timer Enable bit
  1263                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1264                           ;	Power-up Timer Enable bit
  1265                           ;	PWRTE = OFF, PWRT disabled
  1266                           ;	RE3/MCLR pin function select bit
  1267                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1268                           ;	Code Protection bit
  1269                           ;	CP = OFF, Program memory code protection is disabled
  1270                           ;	Data Code Protection bit
  1271                           ;	CPD = OFF, Data memory code protection is disabled
  1272                           ;	Brown Out Reset Selection bits
  1273                           ;	BOREN = OFF, BOR disabled
  1274                           ;	Internal External Switchover bit
  1275                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1276                           ;	Fail-Safe Clock Monitor Enabled bit
  1277                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1278                           ;	Low Voltage Programming Enable bit
  1279                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1280                           ;	In-Circuit Debugger Mode bit
  1281                           ;	DEBUG = 0x1, unprogrammed default
  1282  2007                     	org	8199
  1283  2007  20D1               	dw	8401
  1284                           
  1285                           ;Config register CONFIG2 @ 0x2008
  1286                           ;	Brown-out Reset Selection bit
  1287                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1288                           ;	Flash Program Memory Self Write Enable bits
  1289                           ;	WRT = OFF, Write protection off
  1290  2008                     	org	8200
  1291  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_inte in COMMON

    _my_inte->_ADConvert
    _my_inte->_MP7SEG

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_inte in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_inte in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_inte in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_inte in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 COMMON     1     1      0
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _my_inte                                              3     3      0       0
                                              2 COMMON     3     3      0
                          _ADConvert
                             _MP7SEG
                            _PuertoB
 ---------------------------------------------------------------------------------
 (3) _PuertoB                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _MP7SEG                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ADConvert                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup

 _my_inte (ROOT)
   _ADConvert
   _MP7SEG
   _PuertoB

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 10 22:18:45 2021

                      pc 0002                       l93 0065                       u97 00CA  
                     fsr 0004                      l750 002A                      l830 00D0  
                    l822 00C0                      l760 003D                      l752 002E  
                    l832 00D1                      l824 00C5                      l770 004C  
                    l762 0040                      l754 002F                      l834 00D3  
                    l826 00C8                      l772 0055                      l764 0043  
                    l756 0036                      l828 00CD                      l774 0058  
                    l766 0046                      l758 003A                      l776 005D  
                    l768 0049                      l778 0061                      fsr0 0004  
                    indf 0000       __size_of_ADConvert 0026                     _IOCB 0096  
                   _PIE1 008C                     i1l12 0105                     _PIR1 000C  
                   i1l98 00E7                     _TMR0 0001                     u1_20 00F4  
                   u1_21 00F3                     u2_20 00FA                     u2_21 00F9  
                   u3_20 0102                     u3_21 0101                     u4_20 00A0  
                   u4_21 009F                     u5_25 00A7                     u6_20 006A  
                   u6_21 0069                     u7_20 0070                     u7_21 006F  
                   u8_20 0087                     u8_21 0086                     _cont 0076  
                   _main 00C0                     btemp 007E                     start 000E  
        __end_of_PuertoB 0106                    ?_main 0077                    _ANSEL 0188  
                  i1l126 00BF                    i1l146 0099                    i1l800 0071  
                  i1l810 0088                    i1l802 0077                    i1l812 008E  
                  i1l804 0078                    i1l740 00F4                    i1l820 00E2  
                  i1l814 008F                    i1l806 0081                    i1l742 00FA  
                  i1l808 0087                    i1l816 0098                    i1l744 00FE  
                  i1l746 0102                    i1l738 00F0                    i1l818 00D8  
                  i1l780 009A                    i1l748 0104                    i1l790 00BB  
                  i1l782 00A0                    i1l792 00BE                    i1l784 00A4  
                  i1l786 00B1                    i1l794 0066                    i1l788 00B6  
                  i1l796 006A                    i1l798 0070                    u10_27 007C  
                  u11_27 0093                    u12_27 00B8                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _Setup 002A                    _advar 0072                    pclath 000A  
        __end_of_my_inte 00F0                    status 0003                    wtemp0 007E  
      __end_of_ADConvert 00C0          __initialization 0011             __end_of_main 00D8  
                 ??_main 007C                   ?_Setup 0077                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ANSELH 0189  
                 _MP7SEG 0066                   _INTCON 000B                ??_PuertoB 0077  
                 _adcvar 0075                   saved_w 007E                ??_my_inte 0079  
__end_of__initialization 0026           __pcstackCOMMON 0077            __end_of_Setup 0066  
           __pidataBANK0 0119                  ??_Setup 007C                  ?_MP7SEG 0077  
             __pmaintext 00C0               __pintentry 0004               _displayder 0073  
             _displayizq 0074          __size_of_MP7SEG 0034                  _PuertoB 00F0  
              _ADConvert 009A                  __ptext1 002A                  __ptext2 00D8  
                __ptext3 00F0                  __ptext4 0066                  __ptext5 009A  
                _display 0020                  _dispvar 0071                  _pre_var 0070  
                _my_inte 00D8     end_of_initialization 0026               ?_ADConvert 0077  
              _PORTBbits 0006                _PORTEbits 0009           __end_of_MP7SEG 009A  
    start_initialization 0011                 ??_MP7SEG 0077               init_fetch0 0106  
            ??_ADConvert 0077              __pdataBANK0 0020              __pbssCOMMON 0070  
              ___latbits 0002                 ?_PuertoB 0077                 ?_my_inte 0077  
         __size_of_Setup 003C        interrupt_function 0004                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_PuertoB 0016         __size_of_my_inte 0018  
          __size_of_main 0018               _INTCONbits 000B                 init_ram0 010A  
               intlevel1 0000               _OPTION_REG 0081  
