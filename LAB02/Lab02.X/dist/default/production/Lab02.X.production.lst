

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 00:07:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataBANK0
   211  014C                     __pidataBANK0:
   212                           
   213                           ;initializer for _display
   214  014C  343F               	retlw	63
   215  014D  3406               	retlw	6
   216  014E  345B               	retlw	91
   217  014F  344F               	retlw	79
   218  0150  3466               	retlw	102
   219  0151  346D               	retlw	109
   220  0152  347D               	retlw	125
   221  0153  3407               	retlw	7
   222  0154  347F               	retlw	127
   223  0155  3467               	retlw	103
   224  0156  3477               	retlw	119
   225  0157  347C               	retlw	124
   226  0158  3439               	retlw	57
   227  0159  347E               	retlw	126
   228  015A  34F9               	retlw	249
   229  015B  3471               	retlw	113
   230  0001                     _TMR0	set	1
   231  0009                     _PORTEbits	set	9
   232  0006                     _PORTBbits	set	6
   233  000B                     _INTCONbits	set	11
   234  000C                     _PIR1bits	set	12
   235  001E                     _ADRESH	set	30
   236  001F                     _ADCON0bits	set	31
   237  001F                     _ADCON0	set	31
   238  000C                     _PIR1	set	12
   239  000B                     _INTCON	set	11
   240  0009                     _PORTE	set	9
   241  0008                     _PORTD	set	8
   242  0007                     _PORTC	set	7
   243  0006                     _PORTB	set	6
   244  0005                     _PORTA	set	5
   245  0081                     _OPTION_REG	set	129
   246  009F                     _ADCON1	set	159
   247  008C                     _PIE1	set	140
   248  0096                     _IOCB	set	150
   249  0089                     _TRISE	set	137
   250  0088                     _TRISD	set	136
   251  0087                     _TRISC	set	135
   252  0086                     _TRISB	set	134
   253  0085                     _TRISA	set	133
   254  0189                     _ANSELH	set	393
   255  0188                     _ANSEL	set	392
   256                           
   257                           	psect	cinit
   258  0013                     start_initialization:	
   259                           ; #config settings
   260                           
   261  0013                     __initialization:
   262                           
   263                           ; Initialize objects allocated to BANK0
   264  0013  1383               	bcf	3,7	;select IRP bank0
   265  0014  3030               	movlw	low (__pdataBANK0+16)
   266  0015  00FD               	movwf	btemp+-1
   267  0016  3001               	movlw	high __pidataBANK0
   268  0017  00FE               	movwf	btemp
   269  0018  304C               	movlw	low __pidataBANK0
   270  0019  00FF               	movwf	btemp+1
   271  001A  3020               	movlw	low __pdataBANK0
   272  001B  0084               	movwf	4
   273  001C  120A  118A  213D  120A  118A  	fcall	init_ram0
   274                           
   275                           ; Clear objects allocated to COMMON
   276  0021  01F9               	clrf	__pbssCOMMON& (0+127)
   277  0022  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   278  0023  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   279  0024  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   280  0025                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  0025                     __end_of__initialization:
   284  0025  0183               	clrf	3
   285  0026  120A  118A  2920   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMMON
   288  0079                     __pbssCOMMON:
   289  0079                     _pre_var:
   290  0079                     	ds	1
   291  007A                     _tmr0_var:
   292  007A                     	ds	1
   293  007B                     _advar:
   294  007B                     	ds	1
   295  007C                     _cont:
   296  007C                     	ds	1
   297                           
   298                           	psect	dataBANK0
   299  0020                     __pdataBANK0:
   300  0020                     _display:
   301  0020                     	ds	16
   302                           
   303                           	psect	inittext
   304  0139                     init_fetch0:	
   305                           ;	Called with low address in FSR and high address in W
   306                           
   307  0139  087E               	movf	btemp,w
   308  013A  008A               	movwf	10
   309  013B  087F               	movf	btemp+1,w
   310  013C  0082               	movwf	2
   311  013D                     init_ram0:	
   312                           ;Called with:
   313                           ;	high address of idata address in btemp 
   314                           ;	low address of idata address in btemp+1 
   315                           ;	low address of data in FSR
   316                           ;	high address + 1 of data in btemp-1
   317                           
   318  013D  120A  118A  2139  120A  118A  	fcall	init_fetch0
   319  0142  0080               	movwf	0
   320  0143  0A84               	incf	4,f
   321  0144  0804               	movf	4,w
   322  0145  067D               	xorwf	btemp+-1,w
   323  0146  1903               	btfsc	3,2
   324  0147  3400               	retlw	0
   325  0148  0AFF               	incf	btemp+1,f
   326  0149  1903               	btfsc	3,2
   327  014A  0AFE               	incf	btemp,f
   328  014B  293D               	goto	init_ram0
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_Setup:
   333  0070                     ?_my_inte:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?___awdiv:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ___awdiv@divisor:	
   343                           ; 2 bytes @ 0x0
   344                           
   345                           
   346                           ; 2 bytes @ 0x0
   347  0070                     	ds	2
   348  0072                     ___awdiv@dividend:
   349                           
   350                           ; 2 bytes @ 0x2
   351  0072                     	ds	2
   352  0074                     ??___awdiv:
   353                           
   354                           ; 1 bytes @ 0x4
   355  0074                     	ds	1
   356  0075                     ___awdiv@counter:
   357                           
   358                           ; 1 bytes @ 0x5
   359  0075                     	ds	1
   360  0076                     ___awdiv@sign:
   361                           
   362                           ; 1 bytes @ 0x6
   363  0076                     	ds	1
   364  0077                     ___awdiv@quotient:
   365                           
   366                           ; 2 bytes @ 0x7
   367  0077                     	ds	2
   368                           
   369                           	psect	cstackBANK0
   370  0030                     __pcstackBANK0:
   371  0030                     ??_my_inte:
   372                           
   373                           ; 1 bytes @ 0x0
   374  0030                     	ds	6
   375  0036                     ??_Setup:
   376  0036                     ??_main:	
   377                           ; 1 bytes @ 0x6
   378                           
   379                           
   380                           ; 1 bytes @ 0x6
   381  0036                     	ds	1
   382                           
   383                           	psect	maintext
   384  0120                     __pmaintext:	
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 135 in file "LAB01.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, pclath, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : B00/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0
   406 ;;      Temps:          0       1       0       0       0
   407 ;;      Totals:         0       1       0       0       0
   408 ;;Total ram usage:        1 bytes
   409 ;; Hardware stack levels required when called:    3
   410 ;; This function calls:
   411 ;;		_Setup
   412 ;; This function is called by:
   413 ;;		Startup code after reset
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           
   418                           ;psect for function _main
   419  0120                     _main:
   420  0120                     l929:	
   421                           ;incstack = 0
   422                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   423                           
   424                           
   425                           ;LAB01.c: 136:     Setup ();
   426  0120  120A  118A  20E5  120A  118A  	fcall	_Setup
   427  0125                     l931:
   428                           
   429                           ;LAB01.c: 137:     PORTEbits.RE0 = 1;
   430  0125  1283               	bcf	3,5	;RP0=0, select bank0
   431  0126  1303               	bcf	3,6	;RP1=0, select bank0
   432  0127  1409               	bsf	9,0	;volatile
   433  0128                     l933:
   434                           
   435                           ;LAB01.c: 138:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   436  0128  3019               	movlw	25
   437  0129  1283               	bcf	3,5	;RP0=0, select bank0
   438  012A  1303               	bcf	3,6	;RP1=0, select bank0
   439  012B  00B6               	movwf	??_main
   440  012C                     u317:
   441  012C  0BB6               	decfsz	??_main,f
   442  012D  292C               	goto	u317
   443  012E  292F               	nop2
   444  012F                     l935:
   445                           
   446                           ;LAB01.c: 139:     ADCON0bits.GO_nDONE = 1;
   447  012F  1283               	bcf	3,5	;RP0=0, select bank0
   448  0130  1303               	bcf	3,6	;RP1=0, select bank0
   449  0131  149F               	bsf	31,1	;volatile
   450  0132                     l937:
   451                           
   452                           ;LAB01.c: 140:     TMR0 = 0;
   453  0132  0181               	clrf	1	;volatile
   454  0133                     l939:
   455                           
   456                           ;LAB01.c: 142:         PORTD = cont;
   457  0133  087C               	movf	_cont,w
   458  0134  0088               	movwf	8	;volatile
   459  0135  2933               	goto	l939
   460  0136  120A  118A  2810   	ljmp	start
   461  0139                     __end_of_main:
   462                           
   463                           	psect	text1
   464  00E5                     __ptext1:	
   465 ;; *************** function _Setup *****************
   466 ;; Defined at:
   467 ;;		line 55 in file "LAB01.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, status,2
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   481 ;;      Params:         0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0
   484 ;;      Totals:         0       0       0       0       0
   485 ;;Total ram usage:        0 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; Hardware stack levels required when called:    2
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           
   496                           ;psect for function _Setup
   497  00E5                     _Setup:
   498  00E5                     l811:	
   499                           ;incstack = 0
   500                           ; Regs used in _Setup: [wreg+status,2]
   501                           
   502                           
   503                           ;LAB01.c: 57:     ANSEL = 0b00000001;
   504  00E5  3001               	movlw	1
   505  00E6  1683               	bsf	3,5	;RP0=1, select bank3
   506  00E7  1703               	bsf	3,6	;RP1=1, select bank3
   507  00E8  0088               	movwf	8	;volatile
   508  00E9                     l813:
   509                           
   510                           ;LAB01.c: 58:     ANSELH = 0;
   511  00E9  0189               	clrf	9	;volatile
   512  00EA                     l815:
   513                           
   514                           ;LAB01.c: 60:     TRISA = 0b00000001;
   515  00EA  3001               	movlw	1
   516  00EB  1683               	bsf	3,5	;RP0=1, select bank1
   517  00EC  1303               	bcf	3,6	;RP1=0, select bank1
   518  00ED  0085               	movwf	5	;volatile
   519                           
   520                           ;LAB01.c: 61:     PORTA = 0;
   521  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   522  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   523  00F0  0185               	clrf	5	;volatile
   524  00F1                     l817:
   525                           
   526                           ;LAB01.c: 63:     TRISB = 0b00000011;
   527  00F1  3003               	movlw	3
   528  00F2  1683               	bsf	3,5	;RP0=1, select bank1
   529  00F3  1303               	bcf	3,6	;RP1=0, select bank1
   530  00F4  0086               	movwf	6	;volatile
   531  00F5                     l819:
   532                           
   533                           ;LAB01.c: 64:     PORTB = 0;
   534  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   535  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   536  00F7  0186               	clrf	6	;volatile
   537  00F8                     l821:
   538                           
   539                           ;LAB01.c: 66:     TRISC = 0;
   540  00F8  1683               	bsf	3,5	;RP0=1, select bank1
   541  00F9  1303               	bcf	3,6	;RP1=0, select bank1
   542  00FA  0187               	clrf	7	;volatile
   543  00FB                     l823:
   544                           
   545                           ;LAB01.c: 67:     PORTC = 0;
   546  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   547  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   548  00FD  0187               	clrf	7	;volatile
   549  00FE                     l825:
   550                           
   551                           ;LAB01.c: 69:     TRISD = 0;
   552  00FE  1683               	bsf	3,5	;RP0=1, select bank1
   553  00FF  1303               	bcf	3,6	;RP1=0, select bank1
   554  0100  0188               	clrf	8	;volatile
   555  0101                     l827:
   556                           
   557                           ;LAB01.c: 70:     PORTD = 0;
   558  0101  1283               	bcf	3,5	;RP0=0, select bank0
   559  0102  1303               	bcf	3,6	;RP1=0, select bank0
   560  0103  0188               	clrf	8	;volatile
   561  0104                     l829:
   562                           
   563                           ;LAB01.c: 72:     TRISE = 0;
   564  0104  1683               	bsf	3,5	;RP0=1, select bank1
   565  0105  1303               	bcf	3,6	;RP1=0, select bank1
   566  0106  0189               	clrf	9	;volatile
   567  0107                     l831:
   568                           
   569                           ;LAB01.c: 73:     PORTE = 0;
   570  0107  1283               	bcf	3,5	;RP0=0, select bank0
   571  0108  1303               	bcf	3,6	;RP1=0, select bank0
   572  0109  0189               	clrf	9	;volatile
   573                           
   574                           ;LAB01.c: 75:     INTCON = 0b11101000;
   575  010A  30E8               	movlw	232
   576  010B  008B               	movwf	11	;volatile
   577                           
   578                           ;LAB01.c: 76:     IOCB = 0b00000011;
   579  010C  3003               	movlw	3
   580  010D  1683               	bsf	3,5	;RP0=1, select bank1
   581  010E  1303               	bcf	3,6	;RP1=0, select bank1
   582  010F  0096               	movwf	22	;volatile
   583  0110                     l833:
   584                           
   585                           ;LAB01.c: 78:     PIR1 = 0b00000000;
   586  0110  1283               	bcf	3,5	;RP0=0, select bank0
   587  0111  1303               	bcf	3,6	;RP1=0, select bank0
   588  0112  018C               	clrf	12	;volatile
   589  0113                     l835:
   590                           
   591                           ;LAB01.c: 79:     PIE1 = 0b01000000;
   592  0113  3040               	movlw	64
   593  0114  1683               	bsf	3,5	;RP0=1, select bank1
   594  0115  1303               	bcf	3,6	;RP1=0, select bank1
   595  0116  008C               	movwf	12	;volatile
   596                           
   597                           ;LAB01.c: 80:     ADCON1 = 0;
   598  0117  019F               	clrf	31	;volatile
   599  0118                     l837:
   600                           
   601                           ;LAB01.c: 81:     ADCON0 = 0b10000001;
   602  0118  3081               	movlw	129
   603  0119  1283               	bcf	3,5	;RP0=0, select bank0
   604  011A  1303               	bcf	3,6	;RP1=0, select bank0
   605  011B  009F               	movwf	31	;volatile
   606  011C                     l839:
   607                           
   608                           ;LAB01.c: 82:     OPTION_REG = 0b0000000;
   609  011C  1683               	bsf	3,5	;RP0=1, select bank1
   610  011D  1303               	bcf	3,6	;RP1=0, select bank1
   611  011E  0181               	clrf	1	;volatile
   612  011F                     l67:
   613  011F  0008               	return
   614  0120                     __end_of_Setup:
   615                           
   616                           	psect	text2
   617  0090                     __ptext2:	
   618 ;; *************** function _my_inte *****************
   619 ;; Defined at:
   620 ;;		line 89 in file "LAB01.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          0       6       0       0       0
   637 ;;      Totals:         0       6       0       0       0
   638 ;;Total ram usage:        6 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; Hardware stack levels required when called:    1
   641 ;; This function calls:
   642 ;;		___awdiv
   643 ;; This function is called by:
   644 ;;		Interrupt level 1
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _my_inte
   650  0090                     _my_inte:
   651  0090                     i1l885:
   652                           
   653                           ;LAB01.c: 91:     if (ADCON0bits.GO == 0){
   654  0090  189F               	btfsc	31,1	;volatile
   655  0091  2893               	goto	u26_21
   656  0092  2894               	goto	u26_20
   657  0093                     u26_21:
   658  0093  28BF               	goto	i1l899
   659  0094                     u26_20:
   660  0094                     i1l887:
   661                           
   662                           ;LAB01.c: 92:         advar = ADRESH;
   663  0094  081E               	movf	30,w	;volatile
   664  0095  00B0               	movwf	??_my_inte
   665  0096  0830               	movf	??_my_inte,w
   666  0097  00FB               	movwf	_advar
   667  0098                     i1l889:
   668                           
   669                           ;LAB01.c: 93:         advar = advar/16;
   670  0098  3010               	movlw	16
   671  0099  00F0               	movwf	___awdiv@divisor
   672  009A  3000               	movlw	0
   673  009B  00F1               	movwf	___awdiv@divisor+1
   674  009C  087B               	movf	_advar,w
   675  009D  00B0               	movwf	??_my_inte
   676  009E  01B1               	clrf	??_my_inte+1
   677  009F  0830               	movf	??_my_inte,w
   678  00A0  00F2               	movwf	___awdiv@dividend
   679  00A1  0831               	movf	??_my_inte+1,w
   680  00A2  00F3               	movwf	___awdiv@dividend+1
   681  00A3  120A  118A  2029  120A  118A  	fcall	___awdiv
   682  00A8  0870               	movf	?___awdiv,w
   683  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   684  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   685  00AB  00B2               	movwf	??_my_inte+2
   686  00AC  0832               	movf	??_my_inte+2,w
   687  00AD  00FB               	movwf	_advar
   688  00AE                     i1l891:
   689                           
   690                           ;LAB01.c: 94:         PORTC = display[advar];
   691  00AE  087B               	movf	_advar,w
   692  00AF  3E20               	addlw	(low (_display| 0))& (0+255)
   693  00B0  0084               	movwf	4
   694  00B1  1383               	bcf	3,7	;select IRP bank0
   695  00B2  0800               	movf	0,w
   696  00B3  0087               	movwf	7	;volatile
   697  00B4                     i1l893:
   698                           
   699                           ;LAB01.c: 95:         _delay((unsigned long)((25)*(8000000/4000000.0)));
   700  00B4  300F               	movlw	15
   701  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   702  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   703  00B7  00B0               	movwf	??_my_inte
   704  00B8                     u32_27:
   705  00B8  0BB0               	decfsz	??_my_inte,f
   706  00B9  28B8               	goto	u32_27
   707  00BA  28BB               	nop2
   708  00BB                     i1l895:
   709                           
   710                           ;LAB01.c: 96:         ADCON0bits.GO_DONE = 1;
   711  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   712  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   713  00BD  149F               	bsf	31,1	;volatile
   714  00BE                     i1l897:
   715                           
   716                           ;LAB01.c: 97:         PIR1bits.ADIF = 0;
   717  00BE  130C               	bcf	12,6	;volatile
   718  00BF                     i1l899:
   719                           
   720                           ;LAB01.c: 100:     if (INTCONbits.RBIF){
   721  00BF  1C0B               	btfss	11,0	;volatile
   722  00C0  28C2               	goto	u27_21
   723  00C1  28C3               	goto	u27_20
   724  00C2                     u27_21:
   725  00C2  28D3               	goto	i1l913
   726  00C3                     u27_20:
   727  00C3                     i1l901:
   728                           
   729                           ;LAB01.c: 101:         if (PORTBbits.RB0 == 1){
   730  00C3  1C06               	btfss	6,0	;volatile
   731  00C4  28C6               	goto	u28_21
   732  00C5  28C7               	goto	u28_20
   733  00C6                     u28_21:
   734  00C6  28CC               	goto	i1l907
   735  00C7                     u28_20:
   736  00C7                     i1l903:
   737                           
   738                           ;LAB01.c: 102:             cont++;
   739  00C7  3001               	movlw	1
   740  00C8  00B0               	movwf	??_my_inte
   741  00C9  0830               	movf	??_my_inte,w
   742  00CA  07FC               	addwf	_cont,f
   743  00CB                     i1l905:
   744                           
   745                           ;LAB01.c: 103:             INTCONbits.RBIF = 0;
   746  00CB  100B               	bcf	11,0	;volatile
   747  00CC                     i1l907:
   748                           
   749                           ;LAB01.c: 106:         if (PORTBbits.RB1 == 1){
   750  00CC  1C86               	btfss	6,1	;volatile
   751  00CD  28CF               	goto	u29_21
   752  00CE  28D0               	goto	u29_20
   753  00CF                     u29_21:
   754  00CF  28D3               	goto	i1l913
   755  00D0                     u29_20:
   756  00D0                     i1l909:
   757                           
   758                           ;LAB01.c: 107:             cont--;
   759  00D0  3001               	movlw	1
   760  00D1  02FC               	subwf	_cont,f
   761  00D2                     i1l911:
   762                           
   763                           ;LAB01.c: 108:             INTCONbits.RBIF = 0;
   764  00D2  100B               	bcf	11,0	;volatile
   765  00D3                     i1l913:
   766                           
   767                           ;LAB01.c: 112:     if (INTCONbits.T0IF){
   768  00D3  1D0B               	btfss	11,2	;volatile
   769  00D4  28D6               	goto	u30_21
   770  00D5  28D7               	goto	u30_20
   771  00D6                     u30_21:
   772  00D6  28DC               	goto	i1l81
   773  00D7                     u30_20:
   774  00D7                     i1l925:
   775                           
   776                           ;LAB01.c: 125:             pre_var++;
   777  00D7  3001               	movlw	1
   778  00D8  00B0               	movwf	??_my_inte
   779  00D9  0830               	movf	??_my_inte,w
   780  00DA  07F9               	addwf	_pre_var,f
   781  00DB                     i1l927:
   782                           
   783                           ;LAB01.c: 127:         INTCONbits.T0IF = 0;
   784  00DB  110B               	bcf	11,2	;volatile
   785  00DC                     i1l81:
   786  00DC  0835               	movf	??_my_inte+5,w
   787  00DD  008A               	movwf	10
   788  00DE  0834               	movf	??_my_inte+4,w
   789  00DF  0084               	movwf	4
   790  00E0  0E33               	swapf	??_my_inte+3,w
   791  00E1  0083               	movwf	3
   792  00E2  0EFE               	swapf	btemp,f
   793  00E3  0E7E               	swapf	btemp,w
   794  00E4  0009               	retfie
   795  00E5                     __end_of_my_inte:
   796                           
   797                           	psect	intentry
   798  0004                     __pintentry:	
   799                           ;incstack = 0
   800                           ; Regs used in _my_inte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   801                           
   802  0004                     interrupt_function:
   803  007E                     saved_w	set	btemp
   804  0004  00FE               	movwf	btemp
   805  0005  0E03               	swapf	3,w
   806  0006  1283               	bcf	3,5	;RP0=0, select bank0
   807  0007  1303               	bcf	3,6	;RP1=0, select bank0
   808  0008  00B3               	movwf	??_my_inte+3
   809  0009  0804               	movf	4,w
   810  000A  00B4               	movwf	??_my_inte+4
   811  000B  080A               	movf	10,w
   812  000C  00B5               	movwf	??_my_inte+5
   813  000D  120A  118A  2890   	ljmp	_my_inte
   814                           
   815                           	psect	text3
   816  0029                     __ptext3:	
   817 ;; *************** function ___awdiv *****************
   818 ;; Defined at:
   819 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  divisor         2    0[COMMON] int 
   822 ;;  dividend        2    2[COMMON] int 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  quotient        2    7[COMMON] int 
   825 ;;  sign            1    6[COMMON] unsigned char 
   826 ;;  counter         1    5[COMMON] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  2    0[COMMON] int 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         4       0       0       0       0
   837 ;;      Locals:         4       0       0       0       0
   838 ;;      Temps:          1       0       0       0       0
   839 ;;      Totals:         9       0       0       0       0
   840 ;;Total ram usage:        9 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_my_inte
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function ___awdiv
   851  0029                     ___awdiv:
   852  0029                     i1l841:	
   853                           ;incstack = 0
   854                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   855                           
   856  0029  01F6               	clrf	___awdiv@sign
   857  002A                     i1l843:
   858  002A  1FF1               	btfss	___awdiv@divisor+1,7
   859  002B  282D               	goto	u16_21
   860  002C  282E               	goto	u16_20
   861  002D                     u16_21:
   862  002D  2835               	goto	i1l849
   863  002E                     u16_20:
   864  002E                     i1l845:
   865  002E  09F0               	comf	___awdiv@divisor,f
   866  002F  09F1               	comf	___awdiv@divisor+1,f
   867  0030  0AF0               	incf	___awdiv@divisor,f
   868  0031  1903               	skipnz
   869  0032  0AF1               	incf	___awdiv@divisor+1,f
   870  0033                     i1l847:
   871  0033  01F6               	clrf	___awdiv@sign
   872  0034  0AF6               	incf	___awdiv@sign,f
   873  0035                     i1l849:
   874  0035  1FF3               	btfss	___awdiv@dividend+1,7
   875  0036  2838               	goto	u17_21
   876  0037  2839               	goto	u17_20
   877  0038                     u17_21:
   878  0038  2842               	goto	i1l855
   879  0039                     u17_20:
   880  0039                     i1l851:
   881  0039  09F2               	comf	___awdiv@dividend,f
   882  003A  09F3               	comf	___awdiv@dividend+1,f
   883  003B  0AF2               	incf	___awdiv@dividend,f
   884  003C  1903               	skipnz
   885  003D  0AF3               	incf	___awdiv@dividend+1,f
   886  003E                     i1l853:
   887  003E  3001               	movlw	1
   888  003F  00F4               	movwf	??___awdiv
   889  0040  0874               	movf	??___awdiv,w
   890  0041  06F6               	xorwf	___awdiv@sign,f
   891  0042                     i1l855:
   892  0042  01F7               	clrf	___awdiv@quotient
   893  0043  01F8               	clrf	___awdiv@quotient+1
   894  0044                     i1l857:
   895  0044  0870               	movf	___awdiv@divisor,w
   896  0045  0471               	iorwf	___awdiv@divisor+1,w
   897  0046  1903               	btfsc	3,2
   898  0047  2849               	goto	u18_21
   899  0048  284A               	goto	u18_20
   900  0049                     u18_21:
   901  0049  2881               	goto	i1l877
   902  004A                     u18_20:
   903  004A                     i1l859:
   904  004A  01F5               	clrf	___awdiv@counter
   905  004B  0AF5               	incf	___awdiv@counter,f
   906  004C  2858               	goto	i1l865
   907  004D                     i1l861:
   908  004D  3001               	movlw	1
   909  004E                     u19_25:
   910  004E  1003               	clrc
   911  004F  0DF0               	rlf	___awdiv@divisor,f
   912  0050  0DF1               	rlf	___awdiv@divisor+1,f
   913  0051  3EFF               	addlw	-1
   914  0052  1D03               	skipz
   915  0053  284E               	goto	u19_25
   916  0054                     i1l863:
   917  0054  3001               	movlw	1
   918  0055  00F4               	movwf	??___awdiv
   919  0056  0874               	movf	??___awdiv,w
   920  0057  07F5               	addwf	___awdiv@counter,f
   921  0058                     i1l865:
   922  0058  1FF1               	btfss	___awdiv@divisor+1,7
   923  0059  285B               	goto	u20_21
   924  005A  285C               	goto	u20_20
   925  005B                     u20_21:
   926  005B  284D               	goto	i1l861
   927  005C                     u20_20:
   928  005C                     i1l867:
   929  005C  3001               	movlw	1
   930  005D                     u21_25:
   931  005D  1003               	clrc
   932  005E  0DF7               	rlf	___awdiv@quotient,f
   933  005F  0DF8               	rlf	___awdiv@quotient+1,f
   934  0060  3EFF               	addlw	-1
   935  0061  1D03               	skipz
   936  0062  285D               	goto	u21_25
   937  0063  0871               	movf	___awdiv@divisor+1,w
   938  0064  0273               	subwf	___awdiv@dividend+1,w
   939  0065  1D03               	skipz
   940  0066  2869               	goto	u22_25
   941  0067  0870               	movf	___awdiv@divisor,w
   942  0068  0272               	subwf	___awdiv@dividend,w
   943  0069                     u22_25:
   944  0069  1C03               	skipc
   945  006A  286C               	goto	u22_21
   946  006B  286D               	goto	u22_20
   947  006C                     u22_21:
   948  006C  2874               	goto	i1l873
   949  006D                     u22_20:
   950  006D                     i1l869:
   951  006D  0870               	movf	___awdiv@divisor,w
   952  006E  02F2               	subwf	___awdiv@dividend,f
   953  006F  0871               	movf	___awdiv@divisor+1,w
   954  0070  1C03               	skipc
   955  0071  03F3               	decf	___awdiv@dividend+1,f
   956  0072  02F3               	subwf	___awdiv@dividend+1,f
   957  0073                     i1l871:
   958  0073  1477               	bsf	___awdiv@quotient,0
   959  0074                     i1l873:
   960  0074  3001               	movlw	1
   961  0075                     u23_25:
   962  0075  1003               	clrc
   963  0076  0CF1               	rrf	___awdiv@divisor+1,f
   964  0077  0CF0               	rrf	___awdiv@divisor,f
   965  0078  3EFF               	addlw	-1
   966  0079  1D03               	skipz
   967  007A  2875               	goto	u23_25
   968  007B                     i1l875:
   969  007B  3001               	movlw	1
   970  007C  02F5               	subwf	___awdiv@counter,f
   971  007D  1D03               	btfss	3,2
   972  007E  2880               	goto	u24_21
   973  007F  2881               	goto	u24_20
   974  0080                     u24_21:
   975  0080  285C               	goto	i1l867
   976  0081                     u24_20:
   977  0081                     i1l877:
   978  0081  0876               	movf	___awdiv@sign,w
   979  0082  1903               	btfsc	3,2
   980  0083  2885               	goto	u25_21
   981  0084  2886               	goto	u25_20
   982  0085                     u25_21:
   983  0085  288B               	goto	i1l881
   984  0086                     u25_20:
   985  0086                     i1l879:
   986  0086  09F7               	comf	___awdiv@quotient,f
   987  0087  09F8               	comf	___awdiv@quotient+1,f
   988  0088  0AF7               	incf	___awdiv@quotient,f
   989  0089  1903               	skipnz
   990  008A  0AF8               	incf	___awdiv@quotient+1,f
   991  008B                     i1l881:
   992  008B  0878               	movf	___awdiv@quotient+1,w
   993  008C  00F1               	movwf	?___awdiv+1
   994  008D  0877               	movf	___awdiv@quotient,w
   995  008E  00F0               	movwf	?___awdiv
   996  008F                     i1l328:
   997  008F  0008               	return
   998  0090                     __end_of___awdiv:
   999  007E                     btemp	set	126	;btemp
  1000  007E                     wtemp0	set	126
  1001                           
  1002                           	psect	config
  1003                           
  1004                           ;Config register CONFIG1 @ 0x2007
  1005                           ;	Oscillator Selection bits
  1006                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1007                           ;	Watchdog Timer Enable bit
  1008                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1009                           ;	Power-up Timer Enable bit
  1010                           ;	PWRTE = OFF, PWRT disabled
  1011                           ;	RE3/MCLR pin function select bit
  1012                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1013                           ;	Code Protection bit
  1014                           ;	CP = OFF, Program memory code protection is disabled
  1015                           ;	Data Code Protection bit
  1016                           ;	CPD = OFF, Data memory code protection is disabled
  1017                           ;	Brown Out Reset Selection bits
  1018                           ;	BOREN = OFF, BOR disabled
  1019                           ;	Internal External Switchover bit
  1020                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1021                           ;	Fail-Safe Clock Monitor Enabled bit
  1022                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1023                           ;	Low Voltage Programming Enable bit
  1024                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1025                           ;	In-Circuit Debugger Mode bit
  1026                           ;	DEBUG = 0x1, unprogrammed default
  1027  2007                     	org	8199
  1028  2007  20D1               	dw	8401
  1029                           
  1030                           ;Config register CONFIG2 @ 0x2008
  1031                           ;	Brown-out Reset Selection bit
  1032                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1033                           ;	Flash Program Memory Self Write Enable bits
  1034                           ;	WRT = OFF, Write protection off
  1035  2008                     	org	8200
  1036  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      7      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_inte in COMMON

    _my_inte->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_inte in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_inte in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_inte in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_inte in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              6 BANK0      1     1      0
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _my_inte                                              6     6      0     452
                                              0 BANK0      6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup

 _my_inte (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 00:07:29 2021

                      pc 0002                       l67 011F             ___awdiv@sign 0076  
                     fsr 0004                      l811 00E5                      l821 00F8  
                    l813 00E9                      l831 0107                      l823 00FB  
                    l815 00EA                      l833 0110                      l825 00FE  
                    l817 00F1                      l835 0113                      l827 0101  
                    l819 00F5                      l931 0125                      l837 0118  
                    l829 0104                      l933 0128                      l839 011C  
                    l935 012F                      l937 0132                      l929 0120  
                    l939 0133                      u317 012C                      fsr0 0004  
                    indf 0000                     _IOCB 0096                     _PIE1 008C  
                   i1l81 00DC                     _PIR1 000C                     _TMR0 0001  
                   _cont 007C                     _main 0120                     btemp 007E  
                   start 0010                    ?_main 0070          __end_of___awdiv 0090  
                  _ANSEL 0188          ___awdiv@divisor 0070                    i1l328 008F  
                  i1l901 00C3                    i1l911 00D2                    i1l903 00C7  
                  i1l841 0029                    i1l905 00CB                    i1l913 00D3  
                  i1l851 0039                    i1l843 002A                    i1l907 00CC  
                  i1l861 004D                    i1l853 003E                    i1l845 002E  
                  i1l925 00D7                    i1l909 00D0                    i1l871 0073  
                  i1l863 0054                    i1l855 0042                    i1l847 0033  
                  i1l927 00DB                    i1l881 008B                    i1l873 0074  
                  i1l865 0058                    i1l857 0044                    i1l849 0035  
                  i1l875 007B                    i1l867 005C                    i1l859 004A  
                  i1l891 00AE                    i1l869 006D                    i1l877 0081  
                  i1l893 00B4                    i1l885 0090                    i1l879 0086  
                  i1l895 00BB                    i1l887 0094                    i1l897 00BE  
                  i1l889 0098                    i1l899 00BF          ___awdiv@counter 0075  
                  u20_20 005C                    u20_21 005B                    u21_25 005D  
                  u22_20 006D                    u30_20 00D7                    u22_21 006C  
                  u30_21 00D6                    u22_25 0069                    u23_25 0075  
                  u24_20 0081                    u16_20 002E                    u24_21 0080  
                  u16_21 002D                    u32_27 00B8                    u25_20 0086  
                  u17_20 0039                    u25_21 0085                    u17_21 0038  
                  u18_20 004A                    u26_20 0094                    u18_21 0049  
                  u26_21 0093                    u27_20 00C3                    u27_21 00C2  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u19_25 004E                    _PORTE 0009  
                  u28_20 00C7                    u28_21 00C6                    u29_20 00D0  
                  u29_21 00CF                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _Setup 00E5                    _advar 007B                    pclath 000A  
        __end_of_my_inte 00E5                    status 0003                    wtemp0 007E  
        __initialization 0013             __end_of_main 0139                   ??_main 0036  
                 ?_Setup 0070                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E         ___awdiv@dividend 0072                   _ANSELH 0189  
                 _INTCON 000B                ??___awdiv 0074         ___awdiv@quotient 0077  
                 saved_w 007E                ??_my_inte 0030  __end_of__initialization 0025  
         __pcstackCOMMON 0070            __end_of_Setup 0120             __pidataBANK0 014C  
                ??_Setup 0036               __pmaintext 0120               __pintentry 0004  
                ___awdiv 0029                  __ptext1 00E5                  __ptext2 0090  
                __ptext3 0029                  _display 0020                  _pre_var 0079  
                _my_inte 0090     end_of_initialization 0025                _PORTBbits 0006  
              _PORTEbits 0009      start_initialization 0013               init_fetch0 0139  
            __pdataBANK0 0020              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0030                 ?___awdiv 0070                 ?_my_inte 0070  
         __size_of_Setup 003B        interrupt_function 0004                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of___awdiv 0067         __size_of_my_inte 0055  
          __size_of_main 0019                 _tmr0_var 007A               _INTCONbits 000B  
               init_ram0 013D                 intlevel1 0000               _OPTION_REG 0081  
