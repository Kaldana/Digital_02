

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 21:34:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  0107                     	;# 
   155  0108                     	;# 
   156  0109                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0185                     	;# 
   163  0187                     	;# 
   164  0188                     	;# 
   165  0189                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0185                     	;# 
   241  0187                     	;# 
   242  0188                     	;# 
   243  0189                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  008F                     	;# 
   369  0090                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  0105                     	;# 
   388  0107                     	;# 
   389  0108                     	;# 
   390  0109                     	;# 
   391  010C                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  0185                     	;# 
   397  0187                     	;# 
   398  0188                     	;# 
   399  0189                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0088                     	;# 
   442  0089                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  008F                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  0105                     	;# 
   466  0107                     	;# 
   467  0108                     	;# 
   468  0109                     	;# 
   469  010C                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0185                     	;# 
   475  0187                     	;# 
   476  0188                     	;# 
   477  0189                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480                           
   481                           	psect	strings
   482  0800                     __pstrings:
   483  0800                     stringtab:
   484  0800                     __stringtab:
   485                           
   486                           ;	String table - string pointers are 1 byte each
   487  0800  1BFF               	btfsc	btemp+1,7
   488  0801  280A               	ljmp	stringcode
   489  0802  1383               	bcf	3,7
   490  0803  187F               	btfsc	btemp+1,0
   491  0804  1783               	bsf	3,7
   492  0805  0800               	movf	0,w
   493  0806  0A84               	incf	4,f
   494  0807  1903               	skipnz
   495  0808  0AFF               	incf	btemp+1,f
   496  0809  0008               	return
   497  080A                     stringcode:
   498  080A                     stringdir:
   499  080A  3008               	movlw	high stringdir
   500  080B  008A               	movwf	10
   501  080C  0804               	movf	4,w
   502  080D  0A84               	incf	4,f
   503  080E  0782               	addwf	2,f
   504  080F                     __stringbase:
   505  080F  3400               	retlw	0
   506  0810                     __end_of__stringtab:
   507  0810                     __powers_:
   508  0810  3400               	retlw	0
   509  0811  3480               	retlw	128
   510  0812  343F               	retlw	63
   511  0813  3400               	retlw	0
   512  0814  3420               	retlw	32
   513  0815  3441               	retlw	65
   514  0816  3400               	retlw	0
   515  0817  34C8               	retlw	200
   516  0818  3442               	retlw	66
   517  0819  3400               	retlw	0
   518  081A  347A               	retlw	122
   519  081B  3444               	retlw	68
   520  081C  3440               	retlw	64
   521  081D  341C               	retlw	28
   522  081E  3446               	retlw	70
   523  081F  3450               	retlw	80
   524  0820  34C3               	retlw	195
   525  0821  3447               	retlw	71
   526  0822  3424               	retlw	36
   527  0823  3474               	retlw	116
   528  0824  3449               	retlw	73
   529  0825  3497               	retlw	151
   530  0826  3418               	retlw	24
   531  0827  344B               	retlw	75
   532  0828  34BC               	retlw	188
   533  0829  34BE               	retlw	190
   534  082A  344C               	retlw	76
   535  082B  346B               	retlw	107
   536  082C  346E               	retlw	110
   537  082D  344E               	retlw	78
   538  082E  3403               	retlw	3
   539  082F  3415               	retlw	21
   540  0830  3450               	retlw	80
   541  0831  3479               	retlw	121
   542  0832  34AD               	retlw	173
   543  0833  3460               	retlw	96
   544  0834  34F3               	retlw	243
   545  0835  3449               	retlw	73
   546  0836  3471               	retlw	113
   547  0837                     __end_of__powers_:
   548  0837                     __npowers_:
   549  0837  3400               	retlw	0
   550  0838  3480               	retlw	128
   551  0839  343F               	retlw	63
   552  083A  34CD               	retlw	205
   553  083B  34CC               	retlw	204
   554  083C  343D               	retlw	61
   555  083D  34D7               	retlw	215
   556  083E  3423               	retlw	35
   557  083F  343C               	retlw	60
   558  0840  3412               	retlw	18
   559  0841  3483               	retlw	131
   560  0842  343A               	retlw	58
   561  0843  34B7               	retlw	183
   562  0844  34D1               	retlw	209
   563  0845  3438               	retlw	56
   564  0846  34C6               	retlw	198
   565  0847  3427               	retlw	39
   566  0848  3437               	retlw	55
   567  0849  3438               	retlw	56
   568  084A  3486               	retlw	134
   569  084B  3435               	retlw	53
   570  084C  34C0               	retlw	192
   571  084D  34D6               	retlw	214
   572  084E  3433               	retlw	51
   573  084F  34CC               	retlw	204
   574  0850  342B               	retlw	43
   575  0851  3432               	retlw	50
   576  0852  3470               	retlw	112
   577  0853  3489               	retlw	137
   578  0854  3430               	retlw	48
   579  0855  34E7               	retlw	231
   580  0856  34DB               	retlw	219
   581  0857  342E               	retlw	46
   582  0858  34E5               	retlw	229
   583  0859  343C               	retlw	60
   584  085A  341E               	retlw	30
   585  085B  3442               	retlw	66
   586  085C  34A2               	retlw	162
   587  085D  340D               	retlw	13
   588  085E                     __end_of__npowers_:
   589  085E                     _dpowers:
   590  085E  3401               	retlw	1
   591  085F  3400               	retlw	0
   592  0860  3400               	retlw	0
   593  0861  3400               	retlw	0
   594  0862  340A               	retlw	10
   595  0863  3400               	retlw	0
   596  0864  3400               	retlw	0
   597  0865  3400               	retlw	0
   598  0866  3464               	retlw	100
   599  0867  3400               	retlw	0
   600  0868  3400               	retlw	0
   601  0869  3400               	retlw	0
   602  086A  34E8               	retlw	232
   603  086B  3403               	retlw	3
   604  086C  3400               	retlw	0
   605  086D  3400               	retlw	0
   606  086E  3410               	retlw	16
   607  086F  3427               	retlw	39
   608  0870  3400               	retlw	0
   609  0871  3400               	retlw	0
   610  0872  34A0               	retlw	160
   611  0873  3486               	retlw	134
   612  0874  3401               	retlw	1
   613  0875  3400               	retlw	0
   614  0876  3440               	retlw	64
   615  0877  3442               	retlw	66
   616  0878  340F               	retlw	15
   617  0879  3400               	retlw	0
   618  087A  3480               	retlw	128
   619  087B  3496               	retlw	150
   620  087C  3498               	retlw	152
   621  087D  3400               	retlw	0
   622  087E  3400               	retlw	0
   623  087F  34E1               	retlw	225
   624  0880  34F5               	retlw	245
   625  0881  3405               	retlw	5
   626  0882  3400               	retlw	0
   627  0883  34CA               	retlw	202
   628  0884  349A               	retlw	154
   629  0885  343B               	retlw	59
   630  0886                     __end_of_dpowers:
   631  0019                     _TXREG	set	25
   632  0018                     _RCSTAbits	set	24
   633  000B                     _INTCONbits	set	11
   634  000C                     _PIR1bits	set	12
   635  001E                     _ADRESH	set	30
   636  001A                     _RCREG	set	26
   637  001F                     _ADCON0bits	set	31
   638  0009                     _PORTE	set	9
   639  0008                     _PORTD	set	8
   640  0007                     _PORTC	set	7
   641  0005                     _PORTA	set	5
   642  0049                     _RE1	set	73
   643  0048                     _RE0	set	72
   644  0065                     _RCIF	set	101
   645  0087                     _TRISCbits	set	135
   646  0098                     _TXSTAbits	set	152
   647  0099                     _SPBRG	set	153
   648  009F                     _ADCON1	set	159
   649  008C                     _PIE1bits	set	140
   650  0089                     _TRISE	set	137
   651  0088                     _TRISD	set	136
   652  0087                     _TRISC	set	135
   653  0085                     _TRISA	set	133
   654  04C1                     _TRMT	set	1217
   655  0189                     _ANSELH	set	393
   656  0188                     _ANSEL	set	392
   657  0886                     STR_1:
   658  0886  3456               	retlw	86	;'V'
   659  0887  3431               	retlw	49	;'1'
   660  0888  3420               	retlw	32	;' '
   661  0889  3420               	retlw	32	;' '
   662  088A  3420               	retlw	32	;' '
   663  088B  3420               	retlw	32	;' '
   664  088C  3420               	retlw	32	;' '
   665  088D  3456               	retlw	86	;'V'
   666  088E  3432               	retlw	50	;'2'
   667  088F  3420               	retlw	32	;' '
   668  0890  3420               	retlw	32	;' '
   669  0891  3420               	retlw	32	;' '
   670  0892  3443               	retlw	67	;'C'
   671  0893  344F               	retlw	79	;'O'
   672  0894  344E               	retlw	78	;'N'
   673  0895  3454               	retlw	84	;'T'
   674  0896  3420               	retlw	32	;' '
   675  0897  340A               	retlw	10
   676  0898  3400               	retlw	0
   677  0899                     STR_3:
   678  0899  3456               	retlw	86	;'V'
   679  089A  3431               	retlw	49	;'1'
   680  089B  3420               	retlw	32	;' '
   681  089C  3420               	retlw	32	;' '
   682  089D  3420               	retlw	32	;' '
   683  089E  3456               	retlw	86	;'V'
   684  089F  3432               	retlw	50	;'2'
   685  08A0  3420               	retlw	32	;' '
   686  08A1  3420               	retlw	32	;' '
   687  08A2  3420               	retlw	32	;' '
   688  08A3  3420               	retlw	32	;' '
   689  08A4  3420               	retlw	32	;' '
   690  08A5  3420               	retlw	32	;' '
   691  08A6  3420               	retlw	32	;' '
   692  08A7  3443               	retlw	67	;'C'
   693  08A8  344F               	retlw	79	;'O'
   694  08A9  344E               	retlw	78	;'N'
   695  08AA  3454               	retlw	84	;'T'
   696  08AB  3400               	retlw	0
   697  08AC                     STR_2:
   698  08AC  3425               	retlw	37	;'%'
   699  08AD  3431               	retlw	49	;'1'
   700  08AE  342E               	retlw	46	;'.'
   701  08AF  3432               	retlw	50	;'2'
   702  08B0  3466               	retlw	102	;'f'
   703  08B1  3420               	retlw	32	;' '
   704  08B2  3420               	retlw	32	;' '
   705  08B3  3425               	retlw	37	;'%'
   706  08B4  3431               	retlw	49	;'1'
   707  08B5  342E               	retlw	46	;'.'
   708  08B6  3432               	retlw	50	;'2'
   709  08B7  3466               	retlw	102	;'f'
   710  08B8  3420               	retlw	32	;' '
   711  08B9  3425               	retlw	37	;'%'
   712  08BA  3433               	retlw	51	;'3'
   713  08BB  3464               	retlw	100	;'d'
   714  08BC  3400               	retlw	0
   715                           
   716                           	psect	cinit
   717  000F                     start_initialization:	
   718                           ; #config settings
   719                           
   720  000F                     __initialization:
   721                           
   722                           ; Clear objects allocated to COMMON
   723  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   724                           
   725                           ; Clear objects allocated to BANK1
   726  0010  1383               	bcf	3,7	;select IRP bank0
   727  0011  30BF               	movlw	low __pbssBANK1
   728  0012  0084               	movwf	4
   729  0013  30DC               	movlw	low (__pbssBANK1+29)
   730  0014  160A  158A  2620  120A  118A  	fcall	clear_ram0
   731  0019                     end_of_initialization:	
   732                           ;End of C runtime variable initialization code
   733                           
   734  0019                     __end_of__initialization:
   735  0019  0183               	clrf	3
   736  001A  160A  118A  2ECC   	ljmp	_main	;jump to C main() function
   737                           
   738                           	psect	bssCOMMON
   739  0079                     __pbssCOMMON:
   740  0079                     _receive:
   741  0079                     	ds	1
   742                           
   743                           	psect	bssBANK1
   744  00BF                     __pbssBANK1:
   745  00BF                     _Vol2:
   746  00BF                     	ds	3
   747  00C2                     _Vol1:
   748  00C2                     	ds	3
   749  00C5                     _contador:
   750  00C5                     	ds	1
   751  00C6                     _adcvar1:
   752  00C6                     	ds	1
   753  00C7                     _adcvar:
   754  00C7                     	ds	1
   755  00C8                     _Lcdvar:
   756  00C8                     	ds	20
   757                           
   758                           	psect	clrtext
   759  1E20                     clear_ram0:	
   760                           ;	Called with FSR containing the base address, and
   761                           ;	W with the last address+1
   762                           
   763  1E20  0064               	clrwdt	;clear the watchdog before getting into this loop
   764  1E21                     clrloop0:
   765  1E21  0180               	clrf	0	;clear RAM location pointed to by FSR
   766  1E22  0A84               	incf	4,f	;increment pointer
   767  1E23  0604               	xorwf	4,w	;XOR with final address
   768  1E24  1903               	btfsc	3,2	;have we reached the end yet?
   769  1E25  3400               	retlw	0	;all done for this memory range, return
   770  1E26  0604               	xorwf	4,w	;XOR again to restore value
   771  1E27  2E21               	goto	clrloop0	;do the next byte
   772                           
   773                           	psect	cstackBANK1
   774  00A0                     __pcstackBANK1:
   775  00A0                     ??_sprintf:
   776                           
   777                           ; 1 bytes @ 0x0
   778  00A0                     	ds	6
   779  00A6                     _sprintf$1127:
   780                           
   781                           ; 3 bytes @ 0x6
   782  00A6                     	ds	3
   783  00A9                     sprintf@ap:
   784                           
   785                           ; 1 bytes @ 0x9
   786  00A9                     	ds	1
   787  00AA                     sprintf@flag:
   788                           
   789                           ; 2 bytes @ 0xA
   790  00AA                     	ds	2
   791  00AC                     sprintf@width:
   792                           
   793                           ; 2 bytes @ 0xC
   794  00AC                     	ds	2
   795  00AE                     sprintf@tmpval:
   796                           
   797                           ; 4 bytes @ 0xE
   798  00AE                     	ds	4
   799  00B2                     sprintf@val:
   800                           
   801                           ; 4 bytes @ 0x12
   802  00B2                     	ds	4
   803  00B6                     sprintf@eexp:
   804                           
   805                           ; 2 bytes @ 0x16
   806  00B6                     	ds	2
   807  00B8                     sprintf@fval:
   808                           
   809                           ; 3 bytes @ 0x18
   810  00B8                     	ds	3
   811  00BB                     sprintf@sp:
   812                           
   813                           ; 1 bytes @ 0x1B
   814  00BB                     	ds	1
   815  00BC                     sprintf@prec:
   816                           
   817                           ; 2 bytes @ 0x1C
   818  00BC                     	ds	2
   819  00BE                     sprintf@c:
   820                           
   821                           ; 1 bytes @ 0x1E
   822  00BE                     	ds	1
   823                           
   824                           	psect	cstackCOMMON
   825  0070                     __pcstackCOMMON:
   826  0070                     ?_isdigit:
   827  0070                     ?_ADC_CONFIG:	
   828                           ; 1 bit 
   829                           
   830  0070                     ?_LCD_Init:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_LCD_Clear:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_Set_BaudRate:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_Init_Trans:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_Init_Receive:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_USART_Write:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_LCD_Port:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_LCD_Cmd:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_Setup:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_ISR:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ??_ISR:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_main:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_LCD_Write_Char:	
   867                           ; 1 bytes @ 0x0
   868                           
   869                           
   870                           ; 1 bytes @ 0x0
   871  0070                     	ds	4
   872  0074                     ??_ADC_CONFIG:
   873  0074                     ??_Set_BaudRate:	
   874                           ; 1 bytes @ 0x4
   875                           
   876  0074                     ??_Init_Trans:	
   877                           ; 1 bytes @ 0x4
   878                           
   879  0074                     ??_Init_Receive:	
   880                           ; 1 bytes @ 0x4
   881                           
   882  0074                     ??_USART_Write:	
   883                           ; 1 bytes @ 0x4
   884                           
   885  0074                     ??_LCD_Port:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0074                     ??_isdigit:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0074                     ??__tdiv_to_l_:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     ??_Setup:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0074                     ??___lldiv:	
   898                           ; 1 bytes @ 0x4
   899                           
   900  0074                     ??___ftge:	
   901                           ; 1 bytes @ 0x4
   902                           
   903  0074                     ?___wmul:	
   904                           ; 1 bytes @ 0x4
   905                           
   906  0074                     ?___awmod:	
   907                           ; 2 bytes @ 0x4
   908                           
   909  0074                     ?___lwmod:	
   910                           ; 2 bytes @ 0x4
   911                           
   912  0074                     ?___ftpack:	
   913                           ; 2 bytes @ 0x4
   914                           
   915  0074                     ?___ftneg:	
   916                           ; 3 bytes @ 0x4
   917                           
   918  0074                     LCD_Port@a:	
   919                           ; 3 bytes @ 0x4
   920                           
   921  0074                     USART_Write@a:	
   922                           ; 1 bytes @ 0x4
   923                           
   924  0074                     _isdigit$933:	
   925                           ; 1 bytes @ 0x4
   926                           
   927  0074                     ___wmul@multiplier:	
   928                           ; 1 bytes @ 0x4
   929                           
   930  0074                     ___awmod@divisor:	
   931                           ; 2 bytes @ 0x4
   932                           
   933  0074                     ___lwmod@divisor:	
   934                           ; 2 bytes @ 0x4
   935                           
   936  0074                     ___ftpack@arg:	
   937                           ; 2 bytes @ 0x4
   938                           
   939  0074                     ___ftneg@f1:	
   940                           ; 3 bytes @ 0x4
   941                           
   942                           
   943                           ; 3 bytes @ 0x4
   944  0074                     	ds	1
   945  0075                     ?_USART_WriteStr:
   946  0075                     ??_LCD_Cmd:	
   947                           ; 1 bytes @ 0x5
   948                           
   949  0075                     ??_LCD_Write_Char:	
   950                           ; 1 bytes @ 0x5
   951                           
   952  0075                     ??___llmod:	
   953                           ; 1 bytes @ 0x5
   954                           
   955  0075                     isdigit@c:	
   956                           ; 1 bytes @ 0x5
   957                           
   958  0075                     USART_WriteStr@a:	
   959                           ; 1 bytes @ 0x5
   960                           
   961                           
   962                           ; 2 bytes @ 0x5
   963  0075                     	ds	1
   964  0076                     LCD_Write_Char@a:
   965  0076                     ___llmod@counter:	
   966                           ; 1 bytes @ 0x6
   967                           
   968  0076                     ___wmul@multiplicand:	
   969                           ; 1 bytes @ 0x6
   970                           
   971  0076                     ___awmod@dividend:	
   972                           ; 2 bytes @ 0x6
   973                           
   974  0076                     ___lwmod@dividend:	
   975                           ; 2 bytes @ 0x6
   976                           
   977                           
   978                           ; 2 bytes @ 0x6
   979  0076                     	ds	1
   980  0077                     ??_USART_WriteStr:
   981  0077                     ?_LCD_Write_String:	
   982                           ; 1 bytes @ 0x7
   983                           
   984  0077                     ??___ftneg:	
   985                           ; 1 bytes @ 0x7
   986                           
   987  0077                     LCD_Cmd@a:	
   988                           ; 1 bytes @ 0x7
   989                           
   990  0077                     ___ftpack@exp:	
   991                           ; 1 bytes @ 0x7
   992                           
   993  0077                     LCD_Write_String@a:	
   994                           ; 1 bytes @ 0x7
   995                           
   996                           
   997                           ; 2 bytes @ 0x7
   998  0077                     	ds	1
   999  0078                     ??_LCD_Clear:
  1000  0078                     ?_LCD_Set_Cursor:	
  1001                           ; 1 bytes @ 0x8
  1002                           
  1003  0078                     ??___wmul:	
  1004                           ; 1 bytes @ 0x8
  1005                           
  1006  0078                     ??___awmod:	
  1007                           ; 1 bytes @ 0x8
  1008                           
  1009  0078                     ??___lwmod:	
  1010                           ; 1 bytes @ 0x8
  1011                           
  1012  0078                     LCD_Set_Cursor@y:	
  1013                           ; 1 bytes @ 0x8
  1014                           
  1015  0078                     USART_WriteStr@i:	
  1016                           ; 1 bytes @ 0x8
  1017                           
  1018  0078                     ___ftpack@sign:	
  1019                           ; 1 bytes @ 0x8
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x8
  1023  0078                     	ds	1
  1024  0079                     ??___ftsub:
  1025                           
  1026                           	psect	cstackBANK0
  1027  0020                     __pcstackBANK0:	
  1028                           ; 1 bytes @ 0x9
  1029                           
  1030  0020                     ?___ftge:
  1031  0020                     ??_LCD_Init:	
  1032                           ; 1 bit 
  1033                           
  1034  0020                     ??_LCD_Set_Cursor:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0020                     ??_LCD_Write_String:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0020                     ??___ftpack:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0020                     ?__tdiv_to_l_:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0020                     ?__div_to_l_:	
  1047                           ; 4 bytes @ 0x0
  1048                           
  1049  0020                     ?___lldiv:	
  1050                           ; 4 bytes @ 0x0
  1051                           
  1052  0020                     ___awmod@counter:	
  1053                           ; 4 bytes @ 0x0
  1054                           
  1055  0020                     ___lwmod@counter:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0020                     ___wmul@product:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0020                     __div_to_l_@f1:	
  1062                           ; 2 bytes @ 0x0
  1063                           
  1064  0020                     __tdiv_to_l_@f1:	
  1065                           ; 3 bytes @ 0x0
  1066                           
  1067  0020                     ___ftge@ff1:	
  1068                           ; 3 bytes @ 0x0
  1069                           
  1070  0020                     ___lldiv@divisor:	
  1071                           ; 3 bytes @ 0x0
  1072                           
  1073                           
  1074                           ; 4 bytes @ 0x0
  1075  0020                     	ds	1
  1076  0021                     ?___lwdiv:
  1077  0021                     LCD_Set_Cursor@x:	
  1078                           ; 2 bytes @ 0x1
  1079                           
  1080  0021                     ___awmod@sign:	
  1081                           ; 1 bytes @ 0x1
  1082                           
  1083  0021                     ___lwdiv@divisor:	
  1084                           ; 1 bytes @ 0x1
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x1
  1088  0021                     	ds	1
  1089  0022                     ?___awdiv:
  1090  0022                     LCD_Set_Cursor@a:	
  1091                           ; 2 bytes @ 0x2
  1092                           
  1093  0022                     ___awdiv@divisor:	
  1094                           ; 1 bytes @ 0x2
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x2
  1098  0022                     	ds	1
  1099  0023                     ?___awtoft:
  1100  0023                     ?___lltoft:	
  1101                           ; 3 bytes @ 0x3
  1102                           
  1103  0023                     LCD_Write_String@i:	
  1104                           ; 3 bytes @ 0x3
  1105                           
  1106  0023                     ___awtoft@c:	
  1107                           ; 2 bytes @ 0x3
  1108                           
  1109  0023                     ___lwdiv@dividend:	
  1110                           ; 2 bytes @ 0x3
  1111                           
  1112  0023                     __div_to_l_@f2:	
  1113                           ; 2 bytes @ 0x3
  1114                           
  1115  0023                     __tdiv_to_l_@f2:	
  1116                           ; 3 bytes @ 0x3
  1117                           
  1118  0023                     ___ftge@ff2:	
  1119                           ; 3 bytes @ 0x3
  1120                           
  1121  0023                     ___lltoft@c:	
  1122                           ; 3 bytes @ 0x3
  1123                           
  1124                           
  1125                           ; 4 bytes @ 0x3
  1126  0023                     	ds	1
  1127  0024                     ___awdiv@dividend:
  1128  0024                     ___lldiv@dividend:	
  1129                           ; 2 bytes @ 0x4
  1130                           
  1131                           
  1132                           ; 4 bytes @ 0x4
  1133  0024                     	ds	1
  1134  0025                     ??___lwdiv:
  1135                           
  1136                           ; 1 bytes @ 0x5
  1137  0025                     	ds	1
  1138  0026                     ??__div_to_l_:
  1139  0026                     ??___awdiv:	
  1140                           ; 1 bytes @ 0x6
  1141                           
  1142  0026                     ??___awtoft:	
  1143                           ; 1 bytes @ 0x6
  1144                           
  1145  0026                     ___lwdiv@quotient:	
  1146                           ; 1 bytes @ 0x6
  1147                           
  1148  0026                     __tdiv_to_l_@quot:	
  1149                           ; 2 bytes @ 0x6
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0x6
  1153  0026                     	ds	1
  1154  0027                     ??___lltoft:
  1155  0027                     ___awdiv@counter:	
  1156                           ; 1 bytes @ 0x7
  1157                           
  1158                           
  1159                           ; 1 bytes @ 0x7
  1160  0027                     	ds	1
  1161  0028                     ___awdiv@sign:
  1162  0028                     ___awtoft@sign:	
  1163                           ; 1 bytes @ 0x8
  1164                           
  1165  0028                     ___lltoft@exp:	
  1166                           ; 1 bytes @ 0x8
  1167                           
  1168  0028                     ___lwdiv@counter:	
  1169                           ; 1 bytes @ 0x8
  1170                           
  1171  0028                     ___lldiv@quotient:	
  1172                           ; 1 bytes @ 0x8
  1173                           
  1174                           
  1175                           ; 4 bytes @ 0x8
  1176  0028                     	ds	1
  1177  0029                     ___awdiv@quotient:
  1178                           
  1179                           ; 2 bytes @ 0x9
  1180  0029                     	ds	1
  1181  002A                     __tdiv_to_l_@cntr:
  1182                           
  1183                           ; 1 bytes @ 0xA
  1184  002A                     	ds	1
  1185  002B                     ?___bmul:
  1186  002B                     ___bmul@multiplicand:	
  1187                           ; 1 bytes @ 0xB
  1188                           
  1189  002B                     __tdiv_to_l_@exp1:	
  1190                           ; 1 bytes @ 0xB
  1191                           
  1192                           
  1193                           ; 1 bytes @ 0xB
  1194  002B                     	ds	1
  1195  002C                     ??___bmul:
  1196  002C                     ___lldiv@counter:	
  1197                           ; 1 bytes @ 0xC
  1198                           
  1199                           
  1200                           ; 1 bytes @ 0xC
  1201  002C                     	ds	1
  1202  002D                     ?___llmod:
  1203  002D                     ___bmul@product:	
  1204                           ; 4 bytes @ 0xD
  1205                           
  1206  002D                     ___llmod@divisor:	
  1207                           ; 1 bytes @ 0xD
  1208                           
  1209                           
  1210                           ; 4 bytes @ 0xD
  1211  002D                     	ds	1
  1212  002E                     ___bmul@multiplier:
  1213  002E                     __div_to_l_@quot:	
  1214                           ; 1 bytes @ 0xE
  1215                           
  1216                           
  1217                           ; 4 bytes @ 0xE
  1218  002E                     	ds	1
  1219  002F                     ?___ftmul:
  1220  002F                     ___ftmul@f1:	
  1221                           ; 3 bytes @ 0xF
  1222                           
  1223                           
  1224                           ; 3 bytes @ 0xF
  1225  002F                     	ds	2
  1226  0031                     ___llmod@dividend:
  1227                           
  1228                           ; 4 bytes @ 0x11
  1229  0031                     	ds	1
  1230  0032                     __div_to_l_@cntr:
  1231  0032                     ___ftmul@f2:	
  1232                           ; 1 bytes @ 0x12
  1233                           
  1234                           
  1235                           ; 3 bytes @ 0x12
  1236  0032                     	ds	1
  1237  0033                     __div_to_l_@exp1:
  1238                           
  1239                           ; 1 bytes @ 0x13
  1240  0033                     	ds	2
  1241  0035                     ??___ftmul:
  1242                           
  1243                           ; 1 bytes @ 0x15
  1244  0035                     	ds	4
  1245  0039                     ___ftmul@exp:
  1246                           
  1247                           ; 1 bytes @ 0x19
  1248  0039                     	ds	1
  1249  003A                     ___ftmul@f3_as_product:
  1250                           
  1251                           ; 3 bytes @ 0x1A
  1252  003A                     	ds	3
  1253  003D                     ___ftmul@cntr:
  1254                           
  1255                           ; 1 bytes @ 0x1D
  1256  003D                     	ds	1
  1257  003E                     ___ftmul@sign:
  1258                           
  1259                           ; 1 bytes @ 0x1E
  1260  003E                     	ds	1
  1261  003F                     ?_fround:
  1262  003F                     ?_scale:	
  1263                           ; 3 bytes @ 0x1F
  1264                           
  1265                           
  1266                           ; 3 bytes @ 0x1F
  1267  003F                     	ds	3
  1268  0042                     ??_fround:
  1269  0042                     ??_scale:	
  1270                           ; 1 bytes @ 0x22
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0x22
  1274  0042                     	ds	2
  1275  0044                     _scale$1126:
  1276                           
  1277                           ; 3 bytes @ 0x24
  1278  0044                     	ds	3
  1279  0047                     scale@scl:
  1280                           
  1281                           ; 1 bytes @ 0x27
  1282  0047                     	ds	1
  1283  0048                     ?___fttol:
  1284  0048                     ___fttol@f1:	
  1285                           ; 4 bytes @ 0x28
  1286                           
  1287  0048                     _fround$1125:	
  1288                           ; 3 bytes @ 0x28
  1289                           
  1290                           
  1291                           ; 3 bytes @ 0x28
  1292  0048                     	ds	3
  1293  004B                     _fround$1124:
  1294                           
  1295                           ; 3 bytes @ 0x2B
  1296  004B                     	ds	1
  1297  004C                     ??___fttol:
  1298                           
  1299                           ; 1 bytes @ 0x2C
  1300  004C                     	ds	2
  1301  004E                     fround@prec:
  1302                           
  1303                           ; 1 bytes @ 0x2E
  1304  004E                     	ds	1
  1305  004F                     ?___ftadd:
  1306  004F                     ___ftadd@f1:	
  1307                           ; 3 bytes @ 0x2F
  1308                           
  1309                           
  1310                           ; 3 bytes @ 0x2F
  1311  004F                     	ds	1
  1312  0050                     ___fttol@sign1:
  1313                           
  1314                           ; 1 bytes @ 0x30
  1315  0050                     	ds	1
  1316  0051                     ___fttol@lval:
  1317                           
  1318                           ; 4 bytes @ 0x31
  1319  0051                     	ds	1
  1320  0052                     ___ftadd@f2:
  1321                           
  1322                           ; 3 bytes @ 0x32
  1323  0052                     	ds	3
  1324  0055                     ??___ftadd:
  1325  0055                     ___fttol@exp1:	
  1326                           ; 1 bytes @ 0x35
  1327                           
  1328                           
  1329                           ; 1 bytes @ 0x35
  1330  0055                     	ds	4
  1331  0059                     ___ftadd@sign:
  1332                           
  1333                           ; 1 bytes @ 0x39
  1334  0059                     	ds	1
  1335  005A                     ___ftadd@exp2:
  1336                           
  1337                           ; 1 bytes @ 0x3A
  1338  005A                     	ds	1
  1339  005B                     ___ftadd@exp1:
  1340                           
  1341                           ; 1 bytes @ 0x3B
  1342  005B                     	ds	1
  1343  005C                     ?___ftsub:
  1344  005C                     ___ftsub@f2:	
  1345                           ; 3 bytes @ 0x3C
  1346                           
  1347                           
  1348                           ; 3 bytes @ 0x3C
  1349  005C                     	ds	3
  1350  005F                     ___ftsub@f1:
  1351                           
  1352                           ; 3 bytes @ 0x3F
  1353  005F                     	ds	3
  1354  0062                     ?_sprintf:
  1355  0062                     sprintf@f:	
  1356                           ; 2 bytes @ 0x42
  1357                           
  1358                           
  1359                           ; 1 bytes @ 0x42
  1360  0062                     	ds	9
  1361  006B                     ??_main:
  1362                           
  1363                           ; 1 bytes @ 0x4B
  1364  006B                     	ds	3
  1365                           
  1366                           	psect	maintext
  1367  16CC                     __pmaintext:	
  1368 ;;
  1369 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1370 ;;
  1371 ;; *************** function _main *****************
  1372 ;; Defined at:
  1373 ;;		line 126 in file "LAB03.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : B00/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0
  1389 ;;      Temps:          0       3       0       0       0
  1390 ;;      Totals:         0       3       0       0       0
  1391 ;;Total ram usage:        3 bytes
  1392 ;; Hardware stack levels required when called:    5
  1393 ;; This function calls:
  1394 ;;		_Init_Receive
  1395 ;;		_Init_Trans
  1396 ;;		_LCD_Clear
  1397 ;;		_LCD_Init
  1398 ;;		_LCD_Set_Cursor
  1399 ;;		_LCD_Write_String
  1400 ;;		_Set_BaudRate
  1401 ;;		_Setup
  1402 ;;		_USART_Write
  1403 ;;		_USART_WriteStr
  1404 ;;		___awtoft
  1405 ;;		___ftmul
  1406 ;;		_sprintf
  1407 ;; This function is called by:
  1408 ;;		Startup code after reset
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           
  1413                           ;psect for function _main
  1414  16CC                     _main:
  1415  16CC                     l3961:	
  1416                           ;incstack = 0
  1417                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1418                           
  1419                           
  1420                           ;LAB03.c: 127:     Setup();
  1421  16CC  160A  158A  271F  160A  118A  	fcall	_Setup
  1422                           
  1423                           ;LAB03.c: 128:     LCD_Init();
  1424  16D1  160A  118A  2101  160A  118A  	fcall	_LCD_Init
  1425                           
  1426                           ;LAB03.c: 129:     LCD_Clear();
  1427  16D6  160A  158A  263E  160A  118A  	fcall	_LCD_Clear
  1428                           
  1429                           ;LAB03.c: 130:     Set_BaudRate();
  1430  16DB  160A  118A  2001  160A  118A  	fcall	_Set_BaudRate
  1431  16E0                     l3963:
  1432                           
  1433                           ;LAB03.c: 131:     Init_Trans();
  1434  16E0  160A  158A  264B  160A  118A  	fcall	_Init_Trans
  1435  16E5                     l3965:
  1436                           
  1437                           ;LAB03.c: 132:     Init_Receive();
  1438  16E5  160A  158A  2618  160A  118A  	fcall	_Init_Receive
  1439  16EA                     l3967:
  1440                           
  1441                           ;LAB03.c: 134:     _delay((unsigned long)((25)*(8000000/4000000.0)));
  1442  16EA  300F               	movlw	15
  1443  16EB  1283               	bcf	3,5	;RP0=0, select bank0
  1444  16EC  1303               	bcf	3,6	;RP1=0, select bank0
  1445  16ED  00EB               	movwf	??_main
  1446  16EE                     u6267:
  1447  16EE  0BEB               	decfsz	??_main,f
  1448  16EF  2EEE               	goto	u6267
  1449  16F0  2EF1               	nop2
  1450  16F1                     l3969:
  1451                           
  1452                           ;LAB03.c: 135:     ADCON0bits.GO_DONE = 1;
  1453  16F1  1283               	bcf	3,5	;RP0=0, select bank0
  1454  16F2  1303               	bcf	3,6	;RP1=0, select bank0
  1455  16F3  149F               	bsf	31,1	;volatile
  1456  16F4                     l3971:
  1457                           
  1458                           ;LAB03.c: 139:         Vol1 = adcvar*(0.0196);
  1459  16F4  3090               	movlw	144
  1460  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  1461  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  1462  16F7  00AF               	movwf	___ftmul@f1
  1463  16F8  30A0               	movlw	160
  1464  16F9  00B0               	movwf	___ftmul@f1+1
  1465  16FA  303C               	movlw	60
  1466  16FB  00B1               	movwf	___ftmul@f1+2
  1467  16FC  1683               	bsf	3,5	;RP0=1, select bank1
  1468  16FD  1303               	bcf	3,6	;RP1=0, select bank1
  1469  16FE  0847               	movf	_adcvar^(0+128),w
  1470  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  1471  1700  1303               	bcf	3,6	;RP1=0, select bank0
  1472  1701  00EB               	movwf	??_main
  1473  1702  01EC               	clrf	??_main+1
  1474  1703  086B               	movf	??_main,w
  1475  1704  00A3               	movwf	___awtoft@c
  1476  1705  086C               	movf	??_main+1,w
  1477  1706  00A4               	movwf	___awtoft@c+1
  1478  1707  160A  158A  2747  160A  118A  	fcall	___awtoft
  1479  170C  1283               	bcf	3,5	;RP0=0, select bank0
  1480  170D  1303               	bcf	3,6	;RP1=0, select bank0
  1481  170E  0823               	movf	?___awtoft,w
  1482  170F  00B2               	movwf	___ftmul@f2
  1483  1710  0824               	movf	?___awtoft+1,w
  1484  1711  00B3               	movwf	___ftmul@f2+1
  1485  1712  0825               	movf	?___awtoft+2,w
  1486  1713  00B4               	movwf	___ftmul@f2+2
  1487  1714  160A  118A  24BA  160A  118A  	fcall	___ftmul
  1488  1719  1283               	bcf	3,5	;RP0=0, select bank0
  1489  171A  1303               	bcf	3,6	;RP1=0, select bank0
  1490  171B  082F               	movf	?___ftmul,w
  1491  171C  1683               	bsf	3,5	;RP0=1, select bank1
  1492  171D  1303               	bcf	3,6	;RP1=0, select bank1
  1493  171E  00C2               	movwf	_Vol1^(0+128)
  1494  171F  1283               	bcf	3,5	;RP0=0, select bank0
  1495  1720  1303               	bcf	3,6	;RP1=0, select bank0
  1496  1721  0830               	movf	?___ftmul+1,w
  1497  1722  1683               	bsf	3,5	;RP0=1, select bank1
  1498  1723  1303               	bcf	3,6	;RP1=0, select bank1
  1499  1724  00C3               	movwf	(_Vol1+1)^(0+128)
  1500  1725  1283               	bcf	3,5	;RP0=0, select bank0
  1501  1726  1303               	bcf	3,6	;RP1=0, select bank0
  1502  1727  0831               	movf	?___ftmul+2,w
  1503  1728  1683               	bsf	3,5	;RP0=1, select bank1
  1504  1729  1303               	bcf	3,6	;RP1=0, select bank1
  1505  172A  00C4               	movwf	(_Vol1+2)^(0+128)
  1506  172B                     l3973:
  1507                           
  1508                           ;LAB03.c: 140:         Vol2 = adcvar1*(0.0196);
  1509  172B  3090               	movlw	144
  1510  172C  1283               	bcf	3,5	;RP0=0, select bank0
  1511  172D  1303               	bcf	3,6	;RP1=0, select bank0
  1512  172E  00AF               	movwf	___ftmul@f1
  1513  172F  30A0               	movlw	160
  1514  1730  00B0               	movwf	___ftmul@f1+1
  1515  1731  303C               	movlw	60
  1516  1732  00B1               	movwf	___ftmul@f1+2
  1517  1733  1683               	bsf	3,5	;RP0=1, select bank1
  1518  1734  1303               	bcf	3,6	;RP1=0, select bank1
  1519  1735  0846               	movf	_adcvar1^(0+128),w
  1520  1736  1283               	bcf	3,5	;RP0=0, select bank0
  1521  1737  1303               	bcf	3,6	;RP1=0, select bank0
  1522  1738  00EB               	movwf	??_main
  1523  1739  01EC               	clrf	??_main+1
  1524  173A  086B               	movf	??_main,w
  1525  173B  00A3               	movwf	___awtoft@c
  1526  173C  086C               	movf	??_main+1,w
  1527  173D  00A4               	movwf	___awtoft@c+1
  1528  173E  160A  158A  2747  160A  118A  	fcall	___awtoft
  1529  1743  1283               	bcf	3,5	;RP0=0, select bank0
  1530  1744  1303               	bcf	3,6	;RP1=0, select bank0
  1531  1745  0823               	movf	?___awtoft,w
  1532  1746  00B2               	movwf	___ftmul@f2
  1533  1747  0824               	movf	?___awtoft+1,w
  1534  1748  00B3               	movwf	___ftmul@f2+1
  1535  1749  0825               	movf	?___awtoft+2,w
  1536  174A  00B4               	movwf	___ftmul@f2+2
  1537  174B  160A  118A  24BA  160A  118A  	fcall	___ftmul
  1538  1750  1283               	bcf	3,5	;RP0=0, select bank0
  1539  1751  1303               	bcf	3,6	;RP1=0, select bank0
  1540  1752  082F               	movf	?___ftmul,w
  1541  1753  1683               	bsf	3,5	;RP0=1, select bank1
  1542  1754  1303               	bcf	3,6	;RP1=0, select bank1
  1543  1755  00BF               	movwf	_Vol2^(0+128)
  1544  1756  1283               	bcf	3,5	;RP0=0, select bank0
  1545  1757  1303               	bcf	3,6	;RP1=0, select bank0
  1546  1758  0830               	movf	?___ftmul+1,w
  1547  1759  1683               	bsf	3,5	;RP0=1, select bank1
  1548  175A  1303               	bcf	3,6	;RP1=0, select bank1
  1549  175B  00C0               	movwf	(_Vol2+1)^(0+128)
  1550  175C  1283               	bcf	3,5	;RP0=0, select bank0
  1551  175D  1303               	bcf	3,6	;RP1=0, select bank0
  1552  175E  0831               	movf	?___ftmul+2,w
  1553  175F  1683               	bsf	3,5	;RP0=1, select bank1
  1554  1760  1303               	bcf	3,6	;RP1=0, select bank1
  1555  1761  00C1               	movwf	(_Vol2+2)^(0+128)
  1556  1762                     l3975:
  1557                           
  1558                           ;LAB03.c: 141:         USART_WriteStr("V1     V2   CONT \n");
  1559  1762  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1560  1763  00F5               	movwf	USART_WriteStr@a
  1561  1764  3080               	movlw	128
  1562  1765  00F6               	movwf	USART_WriteStr@a+1
  1563  1766  160A  158A  2770  160A  118A  	fcall	_USART_WriteStr
  1564  176B                     l3977:
  1565                           
  1566                           ;LAB03.c: 142:         USART_Write(13);
  1567  176B  300D               	movlw	13
  1568  176C  160A  158A  2632  160A  118A  	fcall	_USART_Write
  1569  1771                     l3979:
  1570                           
  1571                           ;LAB03.c: 143:         USART_Write(10);
  1572  1771  300A               	movlw	10
  1573  1772  160A  158A  2632  160A  118A  	fcall	_USART_Write
  1574  1777                     l3981:
  1575                           
  1576                           ;LAB03.c: 144:         sprintf(Lcdvar, "%1.2f  %1.2f %3d", Vol1,Vol2,contador);
  1577  1777  309D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1578  1778  1283               	bcf	3,5	;RP0=0, select bank0
  1579  1779  1303               	bcf	3,6	;RP1=0, select bank0
  1580  177A  00EB               	movwf	??_main
  1581  177B  086B               	movf	??_main,w
  1582  177C  00E2               	movwf	sprintf@f
  1583  177D  1683               	bsf	3,5	;RP0=1, select bank1
  1584  177E  1303               	bcf	3,6	;RP1=0, select bank1
  1585  177F  0842               	movf	_Vol1^(0+128),w
  1586  1780  1283               	bcf	3,5	;RP0=0, select bank0
  1587  1781  1303               	bcf	3,6	;RP1=0, select bank0
  1588  1782  00E3               	movwf	?_sprintf+1
  1589  1783  1683               	bsf	3,5	;RP0=1, select bank1
  1590  1784  1303               	bcf	3,6	;RP1=0, select bank1
  1591  1785  0843               	movf	(_Vol1+1)^(0+128),w
  1592  1786  1283               	bcf	3,5	;RP0=0, select bank0
  1593  1787  1303               	bcf	3,6	;RP1=0, select bank0
  1594  1788  00E4               	movwf	?_sprintf+2
  1595  1789  1683               	bsf	3,5	;RP0=1, select bank1
  1596  178A  1303               	bcf	3,6	;RP1=0, select bank1
  1597  178B  0844               	movf	(_Vol1+2)^(0+128),w
  1598  178C  1283               	bcf	3,5	;RP0=0, select bank0
  1599  178D  1303               	bcf	3,6	;RP1=0, select bank0
  1600  178E  00E5               	movwf	?_sprintf+3
  1601  178F  1683               	bsf	3,5	;RP0=1, select bank1
  1602  1790  1303               	bcf	3,6	;RP1=0, select bank1
  1603  1791  083F               	movf	_Vol2^(0+128),w
  1604  1792  1283               	bcf	3,5	;RP0=0, select bank0
  1605  1793  1303               	bcf	3,6	;RP1=0, select bank0
  1606  1794  00E6               	movwf	?_sprintf+4
  1607  1795  1683               	bsf	3,5	;RP0=1, select bank1
  1608  1796  1303               	bcf	3,6	;RP1=0, select bank1
  1609  1797  0840               	movf	(_Vol2+1)^(0+128),w
  1610  1798  1283               	bcf	3,5	;RP0=0, select bank0
  1611  1799  1303               	bcf	3,6	;RP1=0, select bank0
  1612  179A  00E7               	movwf	?_sprintf+5
  1613  179B  1683               	bsf	3,5	;RP0=1, select bank1
  1614  179C  1303               	bcf	3,6	;RP1=0, select bank1
  1615  179D  0841               	movf	(_Vol2+2)^(0+128),w
  1616  179E  1283               	bcf	3,5	;RP0=0, select bank0
  1617  179F  1303               	bcf	3,6	;RP1=0, select bank0
  1618  17A0  00E8               	movwf	?_sprintf+6
  1619  17A1  1683               	bsf	3,5	;RP0=1, select bank1
  1620  17A2  1303               	bcf	3,6	;RP1=0, select bank1
  1621  17A3  0845               	movf	_contador^(0+128),w
  1622  17A4  1283               	bcf	3,5	;RP0=0, select bank0
  1623  17A5  1303               	bcf	3,6	;RP1=0, select bank0
  1624  17A6  00EC               	movwf	??_main+1
  1625  17A7  01ED               	clrf	??_main+2
  1626  17A8  086C               	movf	??_main+1,w
  1627  17A9  00E9               	movwf	?_sprintf+7
  1628  17AA  086D               	movf	??_main+2,w
  1629  17AB  00EA               	movwf	?_sprintf+8
  1630  17AC  30C8               	movlw	(low (_Lcdvar| 0))& (0+255)
  1631  17AD  120A  158A  2528  160A  118A  	fcall	_sprintf
  1632  17B2                     l3983:
  1633                           
  1634                           ;LAB03.c: 146:         USART_WriteStr(Lcdvar);
  1635  17B2  30C8               	movlw	(low (_Lcdvar| 0))& (0+255)
  1636  17B3  00F5               	movwf	USART_WriteStr@a
  1637  17B4  3000               	movlw	0
  1638  17B5  00F6               	movwf	USART_WriteStr@a+1
  1639  17B6  160A  158A  2770  160A  118A  	fcall	_USART_WriteStr
  1640  17BB                     l3985:
  1641                           
  1642                           ;LAB03.c: 148:         USART_Write(13);
  1643  17BB  300D               	movlw	13
  1644  17BC  160A  158A  2632  160A  118A  	fcall	_USART_Write
  1645  17C1                     l3987:
  1646                           
  1647                           ;LAB03.c: 149:         USART_Write(10);
  1648  17C1  300A               	movlw	10
  1649  17C2  160A  158A  2632  160A  118A  	fcall	_USART_Write
  1650  17C7                     l3989:
  1651                           
  1652                           ;LAB03.c: 151:         LCD_Clear();
  1653  17C7  160A  158A  263E  160A  118A  	fcall	_LCD_Clear
  1654  17CC                     l3991:
  1655                           
  1656                           ;LAB03.c: 152:         LCD_Set_Cursor(1,1);
  1657  17CC  01F8               	clrf	LCD_Set_Cursor@y
  1658  17CD  0AF8               	incf	LCD_Set_Cursor@y,f
  1659  17CE  3001               	movlw	1
  1660  17CF  160A  158A  26F9  160A  118A  	fcall	_LCD_Set_Cursor
  1661  17D4                     l3993:
  1662                           
  1663                           ;LAB03.c: 153:         LCD_Write_String("V1   V2       CONT");
  1664  17D4  308A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1665  17D5  00F7               	movwf	LCD_Write_String@a
  1666  17D6  3080               	movlw	128
  1667  17D7  00F8               	movwf	LCD_Write_String@a+1
  1668  17D8  160A  118A  2075  160A  118A  	fcall	_LCD_Write_String
  1669  17DD                     l3995:
  1670                           
  1671                           ;LAB03.c: 154:         LCD_Set_Cursor(2,1);
  1672  17DD  01F8               	clrf	LCD_Set_Cursor@y
  1673  17DE  0AF8               	incf	LCD_Set_Cursor@y,f
  1674  17DF  3002               	movlw	2
  1675  17E0  160A  158A  26F9  160A  118A  	fcall	_LCD_Set_Cursor
  1676  17E5                     l3997:
  1677                           
  1678                           ;LAB03.c: 155:         LCD_Write_String(Lcdvar);
  1679  17E5  30C8               	movlw	(low (_Lcdvar| 0))& (0+255)
  1680  17E6  00F7               	movwf	LCD_Write_String@a
  1681  17E7  3000               	movlw	0
  1682  17E8  00F8               	movwf	LCD_Write_String@a+1
  1683  17E9  160A  118A  2075  160A  118A  	fcall	_LCD_Write_String
  1684  17EE                     l3999:
  1685                           
  1686                           ;LAB03.c: 157:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1687  17EE  3006               	movlw	6
  1688  17EF  1283               	bcf	3,5	;RP0=0, select bank0
  1689  17F0  1303               	bcf	3,6	;RP1=0, select bank0
  1690  17F1  00ED               	movwf	??_main+2
  1691  17F2  3013               	movlw	19
  1692  17F3  00EC               	movwf	??_main+1
  1693  17F4  30AD               	movlw	173
  1694  17F5  00EB               	movwf	??_main
  1695  17F6                     u6277:
  1696  17F6  0BEB               	decfsz	??_main,f
  1697  17F7  2FF6               	goto	u6277
  1698  17F8  0BEC               	decfsz	??_main+1,f
  1699  17F9  2FF6               	goto	u6277
  1700  17FA  0BED               	decfsz	??_main+2,f
  1701  17FB  2FF6               	goto	u6277
  1702  17FC  2EF4               	goto	l3971
  1703  17FD  120A  118A  280C   	ljmp	start
  1704  1800                     __end_of_main:
  1705                           
  1706                           	psect	text1
  1707  0D28                     __ptext1:	
  1708 ;; *************** function _sprintf *****************
  1709 ;; Defined at:
  1710 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  sp              1    wreg     PTR unsigned char 
  1713 ;;		 -> Lcdvar(20), 
  1714 ;;  f               1   66[BANK0 ] PTR const unsigned char 
  1715 ;;		 -> STR_2(17), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1718 ;;		 -> Lcdvar(20), 
  1719 ;;  val             4   18[BANK1 ] unsigned long 
  1720 ;;  tmpval          4   14[BANK1 ] struct .
  1721 ;;  fval            3   24[BANK1 ] struct .
  1722 ;;  prec            2   28[BANK1 ] int 
  1723 ;;  eexp            2   22[BANK1 ] int 
  1724 ;;  width           2   12[BANK1 ] int 
  1725 ;;  flag            2   10[BANK1 ] unsigned short 
  1726 ;;  cp              2    0        PTR const unsigned char 
  1727 ;;  len             2    0        unsigned int 
  1728 ;;  c               1   30[BANK1 ] unsigned char 
  1729 ;;  ap              1    9[BANK1 ] PTR void [1]
  1730 ;;		 -> ?_sprintf(2), 
  1731 ;;  d               1    0        unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  2   66[BANK0 ] int 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         0       9       0       0       0
  1742 ;;      Locals:         0       0      25       0       0
  1743 ;;      Temps:          0       0       6       0       0
  1744 ;;      Totals:         0       9      31       0       0
  1745 ;;Total ram usage:       40 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    4
  1748 ;; This function calls:
  1749 ;;		___awdiv
  1750 ;;		___ftadd
  1751 ;;		___ftge
  1752 ;;		___ftmul
  1753 ;;		___ftneg
  1754 ;;		___ftsub
  1755 ;;		___fttol
  1756 ;;		___lldiv
  1757 ;;		___llmod
  1758 ;;		___lltoft
  1759 ;;		___wmul
  1760 ;;		__div_to_l_
  1761 ;;		__tdiv_to_l_
  1762 ;;		_fround
  1763 ;;		_isdigit
  1764 ;;		_scale
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _sprintf
  1772  0D28                     _sprintf:
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1776                           ;sprintf@sp stored from wreg
  1777  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  1778  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  1779  0D2A  00BB               	movwf	sprintf@sp^(0+128)
  1780  0D2B                     l3645:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1783  0D2B  3063               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1784  0D2C  00A0               	movwf	??_sprintf^(0+128)
  1785  0D2D  0820               	movf	??_sprintf^(0+128),w
  1786  0D2E  00A9               	movwf	sprintf@ap^(0+128)
  1787  0D2F                     L1:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1790  0D2F  120A  118A  2E45   	goto	l3925
  1791  0D32                     l3647:
  1792                           
  1793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1794  0D32  3025               	movlw	37
  1795  0D33  063E               	xorwf	sprintf@c^(0+128),w
  1796  0D34  1903               	btfsc	3,2
  1797  0D35  2D37               	goto	u5691
  1798  0D36  2D38               	goto	u5690
  1799  0D37                     u5691:
  1800  0D37  2D44               	goto	l3653
  1801  0D38                     u5690:
  1802  0D38                     l3649:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1805  0D38  083E               	movf	sprintf@c^(0+128),w
  1806  0D39  00A0               	movwf	??_sprintf^(0+128)
  1807  0D3A  083B               	movf	sprintf@sp^(0+128),w
  1808  0D3B  0084               	movwf	4
  1809  0D3C  0820               	movf	??_sprintf^(0+128),w
  1810  0D3D  1383               	bcf	3,7	;select IRP bank0
  1811  0D3E  0080               	movwf	0
  1812  0D3F                     l3651:
  1813  0D3F  3001               	movlw	1
  1814  0D40  00A0               	movwf	??_sprintf^(0+128)
  1815  0D41  0820               	movf	??_sprintf^(0+128),w
  1816  0D42  07BB               	addwf	sprintf@sp^(0+128),f
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1819  0D43  2D2F               	goto	L1
  1820  0D44                     l3653:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1823  0D44  01AC               	clrf	sprintf@width^(0+128)
  1824  0D45  01AD               	clrf	(sprintf@width+1)^(0+128)
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1827  0D46  01AA               	clrf	sprintf@flag^(0+128)
  1828  0D47  01AB               	clrf	(sprintf@flag+1)^(0+128)
  1829  0D48                     l3655:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1832  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0D4A  0862               	movf	sprintf@f,w
  1835  0D4B  0084               	movwf	4
  1836  0D4C  120A  158A  200A  120A  158A  	fcall	stringdir
  1837  0D51  160A  158A  2659  120A  158A  	fcall	_isdigit
  1838  0D56  1C03               	btfss	3,0
  1839  0D57  2D59               	goto	u5701
  1840  0D58  2D5A               	goto	u5700
  1841  0D59                     u5701:
  1842  0D59  2DA0               	goto	l3667
  1843  0D5A                     u5700:
  1844  0D5A                     l3657:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1847  0D5A  1683               	bsf	3,5	;RP0=1, select bank1
  1848  0D5B  1303               	bcf	3,6	;RP1=0, select bank1
  1849  0D5C  01AC               	clrf	sprintf@width^(0+128)
  1850  0D5D  01AD               	clrf	(sprintf@width+1)^(0+128)
  1851  0D5E                     l3659:
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1854  0D5E  300A               	movlw	10
  1855  0D5F  00F4               	movwf	___wmul@multiplier
  1856  0D60  3000               	movlw	0
  1857  0D61  00F5               	movwf	___wmul@multiplier+1
  1858  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  1859  0D63  1303               	bcf	3,6	;RP1=0, select bank1
  1860  0D64  082D               	movf	(sprintf@width+1)^(0+128),w
  1861  0D65  00F7               	movwf	___wmul@multiplicand+1
  1862  0D66  082C               	movf	sprintf@width^(0+128),w
  1863  0D67  00F6               	movwf	___wmul@multiplicand
  1864  0D68  160A  158A  279B  120A  158A  	fcall	___wmul
  1865  0D6D  0875               	movf	?___wmul+1,w
  1866  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  1867  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  1868  0D70  00AD               	movwf	(sprintf@width+1)^(0+128)
  1869  0D71  0874               	movf	?___wmul,w
  1870  0D72  00AC               	movwf	sprintf@width^(0+128)
  1871  0D73                     l3661:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1874  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0D75  0862               	movf	sprintf@f,w
  1877  0D76  0084               	movwf	4
  1878  0D77  120A  158A  200A  120A  158A  	fcall	stringdir
  1879  0D7C  3ED0               	addlw	208
  1880  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  1881  0D7E  1303               	bcf	3,6	;RP1=0, select bank1
  1882  0D7F  00A0               	movwf	??_sprintf^(0+128)
  1883  0D80  30FF               	movlw	255
  1884  0D81  1803               	skipnc
  1885  0D82  3000               	movlw	0
  1886  0D83  00A1               	movwf	(??_sprintf^(0+128)+1)
  1887  0D84  0820               	movf	??_sprintf^(0+128),w
  1888  0D85  07AC               	addwf	sprintf@width^(0+128),f
  1889  0D86  1803               	skipnc
  1890  0D87  0AAD               	incf	(sprintf@width+1)^(0+128),f
  1891  0D88  0821               	movf	(??_sprintf+1)^(0+128),w
  1892  0D89  07AD               	addwf	(sprintf@width+1)^(0+128),f
  1893  0D8A                     l3663:
  1894  0D8A  3001               	movlw	1
  1895  0D8B  00A0               	movwf	??_sprintf^(0+128)
  1896  0D8C  0820               	movf	??_sprintf^(0+128),w
  1897  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0D8F  07E2               	addwf	sprintf@f,f
  1900  0D90                     l3665:
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1903  0D90  0862               	movf	sprintf@f,w
  1904  0D91  0084               	movwf	4
  1905  0D92  120A  158A  200A  120A  158A  	fcall	stringdir
  1906  0D97  160A  158A  2659  120A  158A  	fcall	_isdigit
  1907  0D9C  1803               	btfsc	3,0
  1908  0D9D  2D9F               	goto	u5711
  1909  0D9E  2DA0               	goto	u5710
  1910  0D9F                     u5711:
  1911  0D9F  2D5E               	goto	l3659
  1912  0DA0                     u5710:
  1913  0DA0                     l3667:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1916  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0DA2  0862               	movf	sprintf@f,w
  1919  0DA3  0084               	movwf	4
  1920  0DA4  120A  158A  200A  120A  158A  	fcall	stringdir
  1921  0DA9  3A2E               	xorlw	46
  1922  0DAA  1D03               	skipz
  1923  0DAB  2DAD               	goto	u5721
  1924  0DAC  2DAE               	goto	u5720
  1925  0DAD                     u5721:
  1926  0DAD  2E00               	goto	l3683
  1927  0DAE                     u5720:
  1928  0DAE                     l3669:
  1929                           
  1930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1931  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  1932  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  1933  0DB0  172B               	bsf	(sprintf@flag^(0+128)+1),6
  1934  0DB1                     l3671:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1937  0DB1  3001               	movlw	1
  1938  0DB2  00A0               	movwf	??_sprintf^(0+128)
  1939  0DB3  0820               	movf	??_sprintf^(0+128),w
  1940  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0DB6  07E2               	addwf	sprintf@f,f
  1943  0DB7                     l3673:
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1946  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  1947  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  1948  0DB9  01BC               	clrf	sprintf@prec^(0+128)
  1949  0DBA  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1952  0DBB  2DEE               	goto	l3681
  1953  0DBC                     l3675:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1956  0DBC  300A               	movlw	10
  1957  0DBD  00F4               	movwf	___wmul@multiplier
  1958  0DBE  3000               	movlw	0
  1959  0DBF  00F5               	movwf	___wmul@multiplier+1
  1960  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  1961  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  1962  0DC2  083D               	movf	(sprintf@prec+1)^(0+128),w
  1963  0DC3  00F7               	movwf	___wmul@multiplicand+1
  1964  0DC4  083C               	movf	sprintf@prec^(0+128),w
  1965  0DC5  00F6               	movwf	___wmul@multiplicand
  1966  0DC6  160A  158A  279B  120A  158A  	fcall	___wmul
  1967  0DCB  0875               	movf	?___wmul+1,w
  1968  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  1969  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  1970  0DCE  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1971  0DCF  0874               	movf	?___wmul,w
  1972  0DD0  00BC               	movwf	sprintf@prec^(0+128)
  1973  0DD1                     l3677:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1976  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0DD3  0862               	movf	sprintf@f,w
  1979  0DD4  0084               	movwf	4
  1980  0DD5  120A  158A  200A  120A  158A  	fcall	stringdir
  1981  0DDA  3ED0               	addlw	208
  1982  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  1983  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  1984  0DDD  00A0               	movwf	??_sprintf^(0+128)
  1985  0DDE  30FF               	movlw	255
  1986  0DDF  1803               	skipnc
  1987  0DE0  3000               	movlw	0
  1988  0DE1  00A1               	movwf	(??_sprintf^(0+128)+1)
  1989  0DE2  0820               	movf	??_sprintf^(0+128),w
  1990  0DE3  07BC               	addwf	sprintf@prec^(0+128),f
  1991  0DE4  1803               	skipnc
  1992  0DE5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  1993  0DE6  0821               	movf	(??_sprintf+1)^(0+128),w
  1994  0DE7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  1995  0DE8                     l3679:
  1996  0DE8  3001               	movlw	1
  1997  0DE9  00A0               	movwf	??_sprintf^(0+128)
  1998  0DEA  0820               	movf	??_sprintf^(0+128),w
  1999  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0DED  07E2               	addwf	sprintf@f,f
  2002  0DEE                     l3681:
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2005  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0DEF  0862               	movf	sprintf@f,w
  2007  0DF0  0084               	movwf	4
  2008  0DF1  120A  158A  200A  120A  158A  	fcall	stringdir
  2009  0DF6  160A  158A  2659  120A  158A  	fcall	_isdigit
  2010  0DFB  1803               	btfsc	3,0
  2011  0DFC  2DFE               	goto	u5731
  2012  0DFD  2DFF               	goto	u5730
  2013  0DFE                     u5731:
  2014  0DFE  2DBC               	goto	l3675
  2015  0DFF                     u5730:
  2016  0DFF  2E08               	goto	l3689
  2017  0E00                     l3683:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2020  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  2021  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  2022  0E02  01BC               	clrf	sprintf@prec^(0+128)
  2023  0E03  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2024  0E04                     l3685:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2027  0E04  162B               	bsf	(sprintf@flag^(0+128)+1),4
  2028  0E05  2E08               	goto	l3689
  2029  0E06                     l321:	
  2030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2031                           
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2034  0E06  152B               	bsf	(sprintf@flag^(0+128)+1),2
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2037  0E07  2E2C               	goto	l3691
  2038  0E08                     l3689:
  2039  0E08  3001               	movlw	1
  2040  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0E0B  07E2               	addwf	sprintf@f,f
  2043  0E0C  30FF               	movlw	-1
  2044  0E0D  0762               	addwf	sprintf@f,w
  2045  0E0E  0084               	movwf	4
  2046  0E0F  120A  158A  200A  120A  158A  	fcall	stringdir
  2047  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0E16  00BE               	movwf	sprintf@c^(0+128)
  2050  0E17  00A0               	movwf	??_sprintf^(0+128)
  2051  0E18  01A1               	clrf	(??_sprintf^(0+128)+1)
  2052                           
  2053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2054                           ; Switch size 1, requested type "simple"
  2055                           ; Number of cases is 1, Range of values is 0 to 0
  2056                           ; switch strategies available:
  2057                           ; Name         Instructions Cycles
  2058                           ; simple_byte            4     3 (average)
  2059                           ; direct_byte           11     8 (fixed)
  2060                           ; jumptable            260     6 (fixed)
  2061                           ;	Chosen strategy is simple_byte
  2062  0E19  0821               	movf	(??_sprintf+1)^(0+128),w
  2063  0E1A  3A00               	xorlw	0	; case 0
  2064  0E1B  1903               	skipnz
  2065  0E1C  2E1E               	goto	l4031
  2066  0E1D  2D2F               	goto	L1
  2067  0E1E                     l4031:
  2068                           
  2069                           ; Switch size 1, requested type "simple"
  2070                           ; Number of cases is 4, Range of values is 0 to 105
  2071                           ; switch strategies available:
  2072                           ; Name         Instructions Cycles
  2073                           ; simple_byte           13     7 (average)
  2074                           ; jumptable            260     6 (fixed)
  2075                           ;	Chosen strategy is simple_byte
  2076  0E1E  0820               	movf	??_sprintf^(0+128),w
  2077  0E1F  3A00               	xorlw	0	; case 0
  2078  0E20  1903               	skipnz
  2079  0E21  2FFD               	goto	L3
  2080  0E22  3A64               	xorlw	100	; case 100
  2081  0E23  1903               	skipnz
  2082  0E24  2E2C               	goto	l3691
  2083  0E25  3A02               	xorlw	2	; case 102
  2084  0E26  1903               	skipnz
  2085  0E27  2E06               	goto	l321
  2086  0E28  3A0F               	xorlw	15	; case 105
  2087  0E29  1903               	skipnz
  2088  0E2A  2E2C               	goto	l3691
  2089  0E2B  2D2F               	goto	L1
  2090  0E2C                     l3691:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2093  0E2C  3000               	movlw	0
  2094  0E2D  052A               	andwf	sprintf@flag^(0+128),w
  2095  0E2E  00A0               	movwf	??_sprintf^(0+128)
  2096  0E2F  3007               	movlw	7
  2097  0E30  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2098  0E31  00A1               	movwf	(??_sprintf+1)^(0+128)
  2099  0E32  0820               	movf	??_sprintf^(0+128),w
  2100  0E33  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2101  0E34  1903               	btfsc	3,2
  2102  0E35  2E37               	goto	u5741
  2103  0E36  2E3A               	goto	u5740
  2104  0E37                     u5741:
  2105  0E37  120A  118A  2C96   	goto	l3847
  2106  0E3A                     u5740:
  2107  0E3A                     l3693:
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2110  0E3A  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  2111  0E3B  2E3D               	goto	u5751
  2112  0E3C  2E3E               	goto	u5750
  2113  0E3D                     u5751:
  2114  0E3D  2E42               	goto	l3697
  2115  0E3E                     u5750:
  2116  0E3E                     l3695:
  2117                           
  2118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2119  0E3E  3006               	movlw	6
  2120  0E3F  00BC               	movwf	sprintf@prec^(0+128)
  2121  0E40  3000               	movlw	0
  2122  0E41  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2123  0E42                     l3697:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2126  0E42  0829               	movf	sprintf@ap^(0+128),w
  2127  0E43  0084               	movwf	4
  2128  0E44  1383               	bcf	3,7	;select IRP bank0
  2129  0E45  0800               	movf	0,w
  2130  0E46  00B8               	movwf	sprintf@fval^(0+128)
  2131  0E47  0A84               	incf	4,f
  2132  0E48  0800               	movf	0,w
  2133  0E49  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2134  0E4A  0A84               	incf	4,f
  2135  0E4B  0800               	movf	0,w
  2136  0E4C  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2137  0E4D                     l3699:
  2138  0E4D  3003               	movlw	3
  2139  0E4E  00A0               	movwf	??_sprintf^(0+128)
  2140  0E4F  0820               	movf	??_sprintf^(0+128),w
  2141  0E50  07A9               	addwf	sprintf@ap^(0+128),f
  2142  0E51                     l3701:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2145  0E51  0838               	movf	sprintf@fval^(0+128),w
  2146  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0E54  00A0               	movwf	___ftge@ff1
  2149  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  2150  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  2151  0E57  0839               	movf	(sprintf@fval+1)^(0+128),w
  2152  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0E5A  00A1               	movwf	___ftge@ff1+1
  2155  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  2156  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  2157  0E5D  083A               	movf	(sprintf@fval+2)^(0+128),w
  2158  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0E60  00A2               	movwf	___ftge@ff1+2
  2161  0E61  3000               	movlw	0
  2162  0E62  00A3               	movwf	___ftge@ff2
  2163  0E63  3000               	movlw	0
  2164  0E64  00A4               	movwf	___ftge@ff2+1
  2165  0E65  3000               	movlw	0
  2166  0E66  00A5               	movwf	___ftge@ff2+2
  2167  0E67  160A  158A  27C6  120A  158A  	fcall	___ftge
  2168  0E6C  1803               	btfsc	3,0
  2169  0E6D  2E6F               	goto	u5761
  2170  0E6E  2E70               	goto	u5760
  2171  0E6F                     u5761:
  2172  0E6F  2E89               	goto	l3707
  2173  0E70                     u5760:
  2174  0E70                     l3703:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2177  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0E71  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0E72  0838               	movf	sprintf@fval^(0+128),w
  2180  0E73  00F4               	movwf	___ftneg@f1
  2181  0E74  0839               	movf	(sprintf@fval+1)^(0+128),w
  2182  0E75  00F5               	movwf	___ftneg@f1+1
  2183  0E76  083A               	movf	(sprintf@fval+2)^(0+128),w
  2184  0E77  00F6               	movwf	___ftneg@f1+2
  2185  0E78  160A  158A  2628  120A  158A  	fcall	___ftneg
  2186  0E7D  0874               	movf	?___ftneg,w
  2187  0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  2188  0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  2189  0E80  00B8               	movwf	sprintf@fval^(0+128)
  2190  0E81  0875               	movf	?___ftneg+1,w
  2191  0E82  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2192  0E83  0876               	movf	?___ftneg+2,w
  2193  0E84  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2194  0E85                     l3705:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2197  0E85  3003               	movlw	3
  2198  0E86  04AA               	iorwf	sprintf@flag^(0+128),f
  2199  0E87  3000               	movlw	0
  2200  0E88  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  2201  0E89                     l3707:
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2204  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  2206  0E8B  01B6               	clrf	sprintf@eexp^(0+128)
  2207  0E8C  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  2208  0E8D                     l3709:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2211  0E8D  083A               	movf	(sprintf@fval+2)^(0+128),w
  2212  0E8E  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  2213  0E8F  0438               	iorwf	sprintf@fval^(0+128),w
  2214  0E90  1903               	skipnz
  2215  0E91  2E93               	goto	u5771
  2216  0E92  2E94               	goto	u5770
  2217  0E93                     u5771:
  2218  0E93  2FA2               	goto	l3735
  2219  0E94                     u5770:
  2220  0E94                     l3711:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2223  0E94  30B8               	movlw	low (sprintf@fval| 0)
  2224  0E95  0084               	movwf	4
  2225  0E96  1383               	bcf	3,7	;select IRP bank1
  2226  0E97  0800               	movf	0,w
  2227  0E98  00A0               	movwf	??_sprintf^(0+128)
  2228  0E99  0A84               	incf	4,f
  2229  0E9A  0800               	movf	0,w
  2230  0E9B  00A1               	movwf	(??_sprintf^(0+128)+1)
  2231  0E9C  0A84               	incf	4,f
  2232  0E9D  0800               	movf	0,w
  2233  0E9E  00A2               	movwf	(??_sprintf^(0+128)+2)
  2234  0E9F  0A84               	incf	4,f
  2235  0EA0  0800               	movf	0,w
  2236  0EA1  00A3               	movwf	(??_sprintf^(0+128)+3)
  2237  0EA2  300F               	movlw	15
  2238  0EA3                     u5785:
  2239  0EA3  1003               	clrc
  2240  0EA4  0CA3               	rrf	(??_sprintf^(0+128)+3),f
  2241  0EA5  0CA2               	rrf	(??_sprintf^(0+128)+2),f
  2242  0EA6  0CA1               	rrf	(??_sprintf^(0+128)+1),f
  2243  0EA7  0CA0               	rrf	??_sprintf^(0+128),f
  2244  0EA8                     u5780:
  2245  0EA8  3EFF               	addlw	-1
  2246  0EA9  1D03               	skipz
  2247  0EAA  2EA3               	goto	u5785
  2248  0EAB  30FF               	movlw	255
  2249  0EAC  0520               	andwf	??_sprintf^(0+128),w
  2250  0EAD  00A4               	movwf	(??_sprintf+4)^(0+128)
  2251  0EAE  3000               	movlw	0
  2252  0EAF  0521               	andwf	(??_sprintf+1)^(0+128),w
  2253  0EB0  00A5               	movwf	(??_sprintf+5)^(0+128)
  2254  0EB1  0824               	movf	(??_sprintf+4)^(0+128),w
  2255  0EB2  3E82               	addlw	130
  2256  0EB3  00B6               	movwf	sprintf@eexp^(0+128)
  2257  0EB4  0825               	movf	(??_sprintf+5)^(0+128),w
  2258  0EB5  1803               	skipnc
  2259  0EB6  3E01               	addlw	1
  2260  0EB7  3EFF               	addlw	255
  2261  0EB8  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2262  0EB9                     l3713:
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2265  0EB9  30FF               	movlw	255
  2266  0EBA  07B6               	addwf	sprintf@eexp^(0+128),f
  2267  0EBB  1803               	skipnc
  2268  0EBC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2269  0EBD  30FF               	movlw	255
  2270  0EBE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2271  0EBF                     l3715:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2274  0EBF  3003               	movlw	3
  2275  0EC0  00F4               	movwf	___wmul@multiplier
  2276  0EC1  3000               	movlw	0
  2277  0EC2  00F5               	movwf	___wmul@multiplier+1
  2278  0EC3  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2279  0EC4  00F7               	movwf	___wmul@multiplicand+1
  2280  0EC5  0836               	movf	sprintf@eexp^(0+128),w
  2281  0EC6  00F6               	movwf	___wmul@multiplicand
  2282  0EC7  160A  158A  279B  120A  158A  	fcall	___wmul
  2283  0ECC  0875               	movf	?___wmul+1,w
  2284  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0ECF  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2287  0ED0  0874               	movf	?___wmul,w
  2288  0ED1  00B6               	movwf	sprintf@eexp^(0+128)
  2289  0ED2                     l3717:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2292  0ED2  300A               	movlw	10
  2293  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0ED5  00A2               	movwf	___awdiv@divisor
  2296  0ED6  3000               	movlw	0
  2297  0ED7  00A3               	movwf	___awdiv@divisor+1
  2298  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  2299  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  2300  0EDA  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2301  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0EDD  00A5               	movwf	___awdiv@dividend+1
  2304  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  2305  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  2306  0EE0  0836               	movf	sprintf@eexp^(0+128),w
  2307  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0EE3  00A4               	movwf	___awdiv@dividend
  2310  0EE4  160A  118A  2206  120A  158A  	fcall	___awdiv
  2311  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0EEB  0823               	movf	?___awdiv+1,w
  2314  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0EEE  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2317  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0EF1  0822               	movf	?___awdiv,w
  2320  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  2322  0EF4  00B6               	movwf	sprintf@eexp^(0+128)
  2323  0EF5                     l3719:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2326  0EF5  1FB7               	btfss	(sprintf@eexp+1)^(0+128),7
  2327  0EF6  2EF8               	goto	u5791
  2328  0EF7  2EF9               	goto	u5790
  2329  0EF8                     u5791:
  2330  0EF8  2EFF               	goto	l3723
  2331  0EF9                     u5790:
  2332  0EF9                     l3721:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2335  0EF9  30FF               	movlw	255
  2336  0EFA  07B6               	addwf	sprintf@eexp^(0+128),f
  2337  0EFB  1803               	skipnc
  2338  0EFC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2339  0EFD  30FF               	movlw	255
  2340  0EFE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2341  0EFF                     l3723:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2344  0EFF  0336               	decf	sprintf@eexp^(0+128),w
  2345  0F00  3AFF               	xorlw	255
  2346  0F01  120A  158A  226D  120A  158A  	fcall	_scale
  2347  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  2349  0F08  083F               	movf	?_scale,w
  2350  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  2351  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  2352  0F0B  00AE               	movwf	sprintf@tmpval^(0+128)
  2353  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0F0E  0840               	movf	?_scale+1,w
  2356  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0F11  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2359  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0F14  0841               	movf	?_scale+2,w
  2362  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0F17  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2365  0F18                     l3725:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2368  0F18  0838               	movf	sprintf@fval^(0+128),w
  2369  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2370  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2371  0F1B  00AF               	movwf	___ftmul@f1
  2372  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  2373  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  2374  0F1E  0839               	movf	(sprintf@fval+1)^(0+128),w
  2375  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0F21  00B0               	movwf	___ftmul@f1+1
  2378  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  2379  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  2380  0F24  083A               	movf	(sprintf@fval+2)^(0+128),w
  2381  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2383  0F27  00B1               	movwf	___ftmul@f1+2
  2384  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0F2A  082E               	movf	sprintf@tmpval^(0+128),w
  2387  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0F2D  00B2               	movwf	___ftmul@f2
  2390  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  2392  0F30  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2393  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0F33  00B3               	movwf	___ftmul@f2+1
  2396  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0F36  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2399  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0F39  00B4               	movwf	___ftmul@f2+2
  2402  0F3A  160A  118A  24BA  120A  158A  	fcall	___ftmul
  2403  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0F41  082F               	movf	?___ftmul,w
  2406  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2407  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2408  0F44  00AE               	movwf	sprintf@tmpval^(0+128)
  2409  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0F47  0830               	movf	?___ftmul+1,w
  2412  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2413  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2414  0F4A  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2415  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0F4D  0831               	movf	?___ftmul+2,w
  2418  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0F50  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2421  0F51                     l3727:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2424  0F51  082E               	movf	sprintf@tmpval^(0+128),w
  2425  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0F54  00A0               	movwf	___ftge@ff1
  2428  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  2429  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  2430  0F57  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2431  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0F5A  00A1               	movwf	___ftge@ff1+1
  2434  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  2435  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  2436  0F5D  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2437  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0F60  00A2               	movwf	___ftge@ff1+2
  2440  0F61  3000               	movlw	0
  2441  0F62  00A3               	movwf	___ftge@ff2
  2442  0F63  3080               	movlw	128
  2443  0F64  00A4               	movwf	___ftge@ff2+1
  2444  0F65  303F               	movlw	63
  2445  0F66  00A5               	movwf	___ftge@ff2+2
  2446  0F67  160A  158A  27C6  120A  158A  	fcall	___ftge
  2447  0F6C  1803               	btfsc	3,0
  2448  0F6D  2F6F               	goto	u5801
  2449  0F6E  2F70               	goto	u5800
  2450  0F6F                     u5801:
  2451  0F6F  2F79               	goto	l3731
  2452  0F70                     u5800:
  2453  0F70                     l3729:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2456  0F70  30FF               	movlw	255
  2457  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  2458  0F72  1303               	bcf	3,6	;RP1=0, select bank1
  2459  0F73  07B6               	addwf	sprintf@eexp^(0+128),f
  2460  0F74  1803               	skipnc
  2461  0F75  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2462  0F76  30FF               	movlw	255
  2463  0F77  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2464  0F78  2FA2               	goto	l3735
  2465  0F79                     l3731:
  2466  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  2468  0F7B  082E               	movf	sprintf@tmpval^(0+128),w
  2469  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0F7E  00A0               	movwf	___ftge@ff1
  2472  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0F81  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2475  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0F84  00A1               	movwf	___ftge@ff1+1
  2478  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0F87  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2481  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0F8A  00A2               	movwf	___ftge@ff1+2
  2484  0F8B  3000               	movlw	0
  2485  0F8C  00A3               	movwf	___ftge@ff2
  2486  0F8D  3020               	movlw	32
  2487  0F8E  00A4               	movwf	___ftge@ff2+1
  2488  0F8F  3041               	movlw	65
  2489  0F90  00A5               	movwf	___ftge@ff2+2
  2490  0F91  160A  158A  27C6  120A  158A  	fcall	___ftge
  2491  0F96  1C03               	btfss	3,0
  2492  0F97  2F99               	goto	u5811
  2493  0F98  2F9A               	goto	u5810
  2494  0F99                     u5811:
  2495  0F99  2FA2               	goto	l3735
  2496  0F9A                     u5810:
  2497  0F9A                     l3733:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2500  0F9A  3001               	movlw	1
  2501  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2502  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2503  0F9D  07B6               	addwf	sprintf@eexp^(0+128),f
  2504  0F9E  1803               	skipnc
  2505  0F9F  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2506  0FA0  3000               	movlw	0
  2507  0FA1  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2508  0FA2                     l3735:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2511  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2513  0FA4  083D               	movf	(sprintf@prec+1)^(0+128),w
  2514  0FA5  3A80               	xorlw	128
  2515  0FA6  00FF               	movwf	btemp+1
  2516  0FA7  3080               	movlw	128
  2517  0FA8  027F               	subwf	btemp+1,w
  2518  0FA9  1D03               	skipz
  2519  0FAA  2FAD               	goto	u5825
  2520  0FAB  300D               	movlw	13
  2521  0FAC  023C               	subwf	sprintf@prec^(0+128),w
  2522  0FAD                     u5825:
  2523  0FAD  1803               	skipnc
  2524  0FAE  2FB0               	goto	u5821
  2525  0FAF  2FB1               	goto	u5820
  2526  0FB0                     u5821:
  2527  0FB0  2FEA               	goto	l3739
  2528  0FB1                     u5820:
  2529  0FB1                     l3737:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2532  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0FB3  083C               	movf	sprintf@prec^(0+128),w
  2535  0FB4  120A  158A  20C4  120A  158A  	fcall	_fround
  2536  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0FBB  083F               	movf	?_fround,w
  2539  0FBC  00CF               	movwf	___ftadd@f1
  2540  0FBD  0840               	movf	?_fround+1,w
  2541  0FBE  00D0               	movwf	___ftadd@f1+1
  2542  0FBF  0841               	movf	?_fround+2,w
  2543  0FC0  00D1               	movwf	___ftadd@f1+2
  2544  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2545  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2546  0FC3  0838               	movf	sprintf@fval^(0+128),w
  2547  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0FC6  00D2               	movwf	___ftadd@f2
  2550  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2551  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2552  0FC9  0839               	movf	(sprintf@fval+1)^(0+128),w
  2553  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0FCC  00D3               	movwf	___ftadd@f2+1
  2556  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2557  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2558  0FCF  083A               	movf	(sprintf@fval+2)^(0+128),w
  2559  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0FD2  00D4               	movwf	___ftadd@f2+2
  2562  0FD3  120A  118A  2662  120A  158A  	fcall	___ftadd
  2563  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2564  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2565  0FDA  084F               	movf	?___ftadd,w
  2566  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2567  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2568  0FDD  00B8               	movwf	sprintf@fval^(0+128)
  2569  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0FE0  0850               	movf	?___ftadd+1,w
  2572  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2573  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2574  0FE3  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2575  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0FE6  0851               	movf	?___ftadd+2,w
  2578  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0FE9  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2581  0FEA                     l3739:
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2584  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2585  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2586  0FEC  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2587  0FED  3A80               	xorlw	128
  2588  0FEE  00FF               	movwf	btemp+1
  2589  0FEF  3080               	movlw	128
  2590  0FF0  027F               	subwf	btemp+1,w
  2591  0FF1  1D03               	skipz
  2592  0FF2  2FF5               	goto	u5835
  2593  0FF3  300A               	movlw	10
  2594  0FF4  0236               	subwf	sprintf@eexp^(0+128),w
  2595  0FF5                     u5835:
  2596  0FF5  1803               	skipnc
  2597  0FF6  2FFA               	goto	u5831
  2598  0FF7  120A  118A  281D   	goto	u5830
  2599  0FFA                     u5831:
  2600  0FFA  120A  118A  2854   	goto	l3747
  2601  0FFD                     L3:
  2602  0FFD                     L2:
  2603  0FFD  120A  118A  2E5D   	ljmp	l3927
  2604                           
  2605                           	psect	text2
  2606  0A6D                     __ptext2:	
  2607 ;; *************** function _scale *****************
  2608 ;; Defined at:
  2609 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  scl             1    wreg     char 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  scl             1   39[BANK0 ] char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  3   31[BANK0 ] char 
  2616 ;; Registers used:
  2617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2623 ;;      Params:         0       3       0       0       0
  2624 ;;      Locals:         0       4       0       0       0
  2625 ;;      Temps:          0       2       0       0       0
  2626 ;;      Totals:         0       9       0       0       0
  2627 ;;Total ram usage:        9 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:    3
  2630 ;; This function calls:
  2631 ;;		___awdiv
  2632 ;;		___awmod
  2633 ;;		___bmul
  2634 ;;		___ftmul
  2635 ;; This function is called by:
  2636 ;;		_sprintf
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           
  2641                           ;psect for function _scale
  2642  0A6D                     _scale:
  2643                           
  2644                           ;incstack = 0
  2645                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2646                           ;scale@scl stored from wreg
  2647  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0A6F  00C7               	movwf	scale@scl
  2650  0A70                     l3393:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2653  0A70  1FC7               	btfss	scale@scl,7
  2654  0A71  2A73               	goto	u5161
  2655  0A72  2A74               	goto	u5160
  2656  0A73                     u5161:
  2657  0A73  2BCF               	goto	l3415
  2658  0A74                     u5160:
  2659  0A74                     l3395:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2662  0A74  09C7               	comf	scale@scl,f
  2663  0A75  0AC7               	incf	scale@scl,f
  2664  0A76                     l3397:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2667  0A76  0847               	movf	scale@scl,w
  2668  0A77  3A80               	xorlw	128
  2669  0A78  3E12               	addlw	-238
  2670  0A79  1C03               	skipc
  2671  0A7A  2A7C               	goto	u5171
  2672  0A7B  2A7D               	goto	u5170
  2673  0A7C                     u5171:
  2674  0A7C  2B3B               	goto	l3405
  2675  0A7D                     u5170:
  2676  0A7D                     l3399:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2679  0A7D  3003               	movlw	3
  2680  0A7E  00C2               	movwf	??_scale
  2681  0A7F  0842               	movf	??_scale,w
  2682  0A80  00AB               	movwf	___bmul@multiplicand
  2683  0A81  0847               	movf	scale@scl,w
  2684  0A82  00F6               	movwf	___awmod@dividend
  2685  0A83  01F7               	clrf	___awmod@dividend+1
  2686  0A84  1BF6               	btfsc	___awmod@dividend,7
  2687  0A85  03F7               	decf	___awmod@dividend+1,f
  2688  0A86  3064               	movlw	100
  2689  0A87  00F4               	movwf	___awmod@divisor
  2690  0A88  3000               	movlw	0
  2691  0A89  00F5               	movwf	___awmod@divisor+1
  2692  0A8A  160A  118A  21AB  120A  158A  	fcall	___awmod
  2693  0A8F  0875               	movf	?___awmod+1,w
  2694  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0A92  00A5               	movwf	___awdiv@dividend+1
  2697  0A93  0874               	movf	?___awmod,w
  2698  0A94  00A4               	movwf	___awdiv@dividend
  2699  0A95  300A               	movlw	10
  2700  0A96  00A2               	movwf	___awdiv@divisor
  2701  0A97  3000               	movlw	0
  2702  0A98  00A3               	movwf	___awdiv@divisor+1
  2703  0A99  160A  118A  2206  120A  158A  	fcall	___awdiv
  2704  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0AA0  0822               	movf	?___awdiv,w
  2707  0AA1  160A  158A  267F  120A  158A  	fcall	___bmul
  2708  0AA6  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2709  0AA7  0084               	movwf	4
  2710  0AA8  120A  158A  200A  120A  158A  	fcall	stringdir
  2711  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0AAF  00AF               	movwf	___ftmul@f1
  2714  0AB0  120A  158A  200A  120A  158A  	fcall	stringdir
  2715  0AB5  00B0               	movwf	___ftmul@f1+1
  2716  0AB6  120A  158A  200A  120A  158A  	fcall	stringdir
  2717  0ABB  00B1               	movwf	___ftmul@f1+2
  2718  0ABC  3003               	movlw	3
  2719  0ABD  00C3               	movwf	??_scale+1
  2720  0ABE  0843               	movf	??_scale+1,w
  2721  0ABF  00AB               	movwf	___bmul@multiplicand
  2722  0AC0  0847               	movf	scale@scl,w
  2723  0AC1  00A4               	movwf	___awdiv@dividend
  2724  0AC2  01A5               	clrf	___awdiv@dividend+1
  2725  0AC3  1BA4               	btfsc	___awdiv@dividend,7
  2726  0AC4  03A5               	decf	___awdiv@dividend+1,f
  2727  0AC5  3064               	movlw	100
  2728  0AC6  00A2               	movwf	___awdiv@divisor
  2729  0AC7  3000               	movlw	0
  2730  0AC8  00A3               	movwf	___awdiv@divisor+1
  2731  0AC9  160A  118A  2206  120A  158A  	fcall	___awdiv
  2732  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  2733  0ACF  1303               	bcf	3,6	;RP1=0, select bank0
  2734  0AD0  0822               	movf	?___awdiv,w
  2735  0AD1  160A  158A  267F  120A  158A  	fcall	___bmul
  2736  0AD6  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2737  0AD7  0084               	movwf	4
  2738  0AD8  120A  158A  200A  120A  158A  	fcall	stringdir
  2739  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0ADF  00B2               	movwf	___ftmul@f2
  2742  0AE0  120A  158A  200A  120A  158A  	fcall	stringdir
  2743  0AE5  00B3               	movwf	___ftmul@f2+1
  2744  0AE6  120A  158A  200A  120A  158A  	fcall	stringdir
  2745  0AEB  00B4               	movwf	___ftmul@f2+2
  2746  0AEC  160A  118A  24BA  120A  158A  	fcall	___ftmul
  2747  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0AF3  082F               	movf	?___ftmul,w
  2750  0AF4  00C4               	movwf	_scale$1126
  2751  0AF5  0830               	movf	?___ftmul+1,w
  2752  0AF6  00C5               	movwf	_scale$1126+1
  2753  0AF7  0831               	movf	?___ftmul+2,w
  2754  0AF8  00C6               	movwf	_scale$1126+2
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2757  0AF9  3003               	movlw	3
  2758  0AFA  00C2               	movwf	??_scale
  2759  0AFB  0842               	movf	??_scale,w
  2760  0AFC  00AB               	movwf	___bmul@multiplicand
  2761  0AFD  0847               	movf	scale@scl,w
  2762  0AFE  00F6               	movwf	___awmod@dividend
  2763  0AFF  01F7               	clrf	___awmod@dividend+1
  2764  0B00  1BF6               	btfsc	___awmod@dividend,7
  2765  0B01  03F7               	decf	___awmod@dividend+1,f
  2766  0B02  300A               	movlw	10
  2767  0B03  00F4               	movwf	___awmod@divisor
  2768  0B04  3000               	movlw	0
  2769  0B05  00F5               	movwf	___awmod@divisor+1
  2770  0B06  160A  118A  21AB  120A  158A  	fcall	___awmod
  2771  0B0B  0874               	movf	?___awmod,w
  2772  0B0C  160A  158A  267F  120A  158A  	fcall	___bmul
  2773  0B11  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2774  0B12  0084               	movwf	4
  2775  0B13  120A  158A  200A  120A  158A  	fcall	stringdir
  2776  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  2777  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  2778  0B1A  00AF               	movwf	___ftmul@f1
  2779  0B1B  120A  158A  200A  120A  158A  	fcall	stringdir
  2780  0B20  00B0               	movwf	___ftmul@f1+1
  2781  0B21  120A  158A  200A  120A  158A  	fcall	stringdir
  2782  0B26  00B1               	movwf	___ftmul@f1+2
  2783  0B27  0844               	movf	_scale$1126,w
  2784  0B28  00B2               	movwf	___ftmul@f2
  2785  0B29  0845               	movf	_scale$1126+1,w
  2786  0B2A  00B3               	movwf	___ftmul@f2+1
  2787  0B2B  0846               	movf	_scale$1126+2,w
  2788  0B2C  00B4               	movwf	___ftmul@f2+2
  2789  0B2D  160A  118A  24BA  120A  158A  	fcall	___ftmul
  2790  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0B34  082F               	movf	?___ftmul,w
  2793  0B35  00BF               	movwf	?_scale
  2794  0B36  0830               	movf	?___ftmul+1,w
  2795  0B37  00C0               	movwf	?_scale+1
  2796  0B38  0831               	movf	?___ftmul+2,w
  2797  0B39  00C1               	movwf	?_scale+2
  2798  0B3A  2D27               	goto	l299
  2799  0B3B                     l3405:
  2800  0B3B  0847               	movf	scale@scl,w
  2801  0B3C  3A80               	xorlw	128
  2802  0B3D  3E75               	addlw	-139
  2803  0B3E  1C03               	skipc
  2804  0B3F  2B41               	goto	u5181
  2805  0B40  2B42               	goto	u5180
  2806  0B41                     u5181:
  2807  0B41  2BAE               	goto	l3411
  2808  0B42                     u5180:
  2809  0B42                     l3407:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2812  0B42  3003               	movlw	3
  2813  0B43  00C2               	movwf	??_scale
  2814  0B44  0842               	movf	??_scale,w
  2815  0B45  00AB               	movwf	___bmul@multiplicand
  2816  0B46  0847               	movf	scale@scl,w
  2817  0B47  00F6               	movwf	___awmod@dividend
  2818  0B48  01F7               	clrf	___awmod@dividend+1
  2819  0B49  1BF6               	btfsc	___awmod@dividend,7
  2820  0B4A  03F7               	decf	___awmod@dividend+1,f
  2821  0B4B  300A               	movlw	10
  2822  0B4C  00F4               	movwf	___awmod@divisor
  2823  0B4D  3000               	movlw	0
  2824  0B4E  00F5               	movwf	___awmod@divisor+1
  2825  0B4F  160A  118A  21AB  120A  158A  	fcall	___awmod
  2826  0B54  0874               	movf	?___awmod,w
  2827  0B55  160A  158A  267F  120A  158A  	fcall	___bmul
  2828  0B5A  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2829  0B5B  0084               	movwf	4
  2830  0B5C  120A  158A  200A  120A  158A  	fcall	stringdir
  2831  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0B63  00AF               	movwf	___ftmul@f1
  2834  0B64  120A  158A  200A  120A  158A  	fcall	stringdir
  2835  0B69  00B0               	movwf	___ftmul@f1+1
  2836  0B6A  120A  158A  200A  120A  158A  	fcall	stringdir
  2837  0B6F  00B1               	movwf	___ftmul@f1+2
  2838  0B70  3003               	movlw	3
  2839  0B71  00C3               	movwf	??_scale+1
  2840  0B72  0843               	movf	??_scale+1,w
  2841  0B73  00AB               	movwf	___bmul@multiplicand
  2842  0B74  0847               	movf	scale@scl,w
  2843  0B75  00A4               	movwf	___awdiv@dividend
  2844  0B76  01A5               	clrf	___awdiv@dividend+1
  2845  0B77  1BA4               	btfsc	___awdiv@dividend,7
  2846  0B78  03A5               	decf	___awdiv@dividend+1,f
  2847  0B79  300A               	movlw	10
  2848  0B7A  00A2               	movwf	___awdiv@divisor
  2849  0B7B  3000               	movlw	0
  2850  0B7C  00A3               	movwf	___awdiv@divisor+1
  2851  0B7D  160A  118A  2206  120A  158A  	fcall	___awdiv
  2852  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  2853  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  2854  0B84  0822               	movf	?___awdiv,w
  2855  0B85  160A  158A  267F  120A  158A  	fcall	___bmul
  2856  0B8A  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2857  0B8B  0084               	movwf	4
  2858  0B8C  120A  158A  200A  120A  158A  	fcall	stringdir
  2859  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  2860  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  2861  0B93  00B2               	movwf	___ftmul@f2
  2862  0B94  120A  158A  200A  120A  158A  	fcall	stringdir
  2863  0B99  00B3               	movwf	___ftmul@f2+1
  2864  0B9A  120A  158A  200A  120A  158A  	fcall	stringdir
  2865  0B9F  00B4               	movwf	___ftmul@f2+2
  2866  0BA0  160A  118A  24BA  120A  158A  	fcall	___ftmul
  2867  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0BA7  082F               	movf	?___ftmul,w
  2870  0BA8  00BF               	movwf	?_scale
  2871  0BA9  0830               	movf	?___ftmul+1,w
  2872  0BAA  00C0               	movwf	?_scale+1
  2873  0BAB  0831               	movf	?___ftmul+2,w
  2874  0BAC  00C1               	movwf	?_scale+2
  2875  0BAD  2D27               	goto	l299
  2876  0BAE                     l3411:
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2879  0BAE  3003               	movlw	3
  2880  0BAF  00C2               	movwf	??_scale
  2881  0BB0  0842               	movf	??_scale,w
  2882  0BB1  00AB               	movwf	___bmul@multiplicand
  2883  0BB2  0847               	movf	scale@scl,w
  2884  0BB3  160A  158A  267F  120A  158A  	fcall	___bmul
  2885  0BB8  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2886  0BB9  0084               	movwf	4
  2887  0BBA  120A  158A  200A  120A  158A  	fcall	stringdir
  2888  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0BC1  00BF               	movwf	?_scale
  2891  0BC2  120A  158A  200A  120A  158A  	fcall	stringdir
  2892  0BC7  00C0               	movwf	?_scale+1
  2893  0BC8  120A  158A  200A  120A  158A  	fcall	stringdir
  2894  0BCD  00C1               	movwf	?_scale+2
  2895  0BCE  2D27               	goto	l299
  2896  0BCF                     l3415:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2899  0BCF  0847               	movf	scale@scl,w
  2900  0BD0  3A80               	xorlw	128
  2901  0BD1  3E12               	addlw	-238
  2902  0BD2  1C03               	skipc
  2903  0BD3  2BD5               	goto	u5191
  2904  0BD4  2BD6               	goto	u5190
  2905  0BD5                     u5191:
  2906  0BD5  2C94               	goto	l3423
  2907  0BD6                     u5190:
  2908  0BD6                     l3417:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2911  0BD6  3003               	movlw	3
  2912  0BD7  00C2               	movwf	??_scale
  2913  0BD8  0842               	movf	??_scale,w
  2914  0BD9  00AB               	movwf	___bmul@multiplicand
  2915  0BDA  0847               	movf	scale@scl,w
  2916  0BDB  00F6               	movwf	___awmod@dividend
  2917  0BDC  01F7               	clrf	___awmod@dividend+1
  2918  0BDD  1BF6               	btfsc	___awmod@dividend,7
  2919  0BDE  03F7               	decf	___awmod@dividend+1,f
  2920  0BDF  3064               	movlw	100
  2921  0BE0  00F4               	movwf	___awmod@divisor
  2922  0BE1  3000               	movlw	0
  2923  0BE2  00F5               	movwf	___awmod@divisor+1
  2924  0BE3  160A  118A  21AB  120A  158A  	fcall	___awmod
  2925  0BE8  0875               	movf	?___awmod+1,w
  2926  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0BEB  00A5               	movwf	___awdiv@dividend+1
  2929  0BEC  0874               	movf	?___awmod,w
  2930  0BED  00A4               	movwf	___awdiv@dividend
  2931  0BEE  300A               	movlw	10
  2932  0BEF  00A2               	movwf	___awdiv@divisor
  2933  0BF0  3000               	movlw	0
  2934  0BF1  00A3               	movwf	___awdiv@divisor+1
  2935  0BF2  160A  118A  2206  120A  158A  	fcall	___awdiv
  2936  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0BF9  0822               	movf	?___awdiv,w
  2939  0BFA  160A  158A  267F  120A  158A  	fcall	___bmul
  2940  0BFF  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2941  0C00  0084               	movwf	4
  2942  0C01  120A  158A  200A  120A  158A  	fcall	stringdir
  2943  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0C08  00AF               	movwf	___ftmul@f1
  2946  0C09  120A  158A  200A  120A  158A  	fcall	stringdir
  2947  0C0E  00B0               	movwf	___ftmul@f1+1
  2948  0C0F  120A  158A  200A  120A  158A  	fcall	stringdir
  2949  0C14  00B1               	movwf	___ftmul@f1+2
  2950  0C15  3003               	movlw	3
  2951  0C16  00C3               	movwf	??_scale+1
  2952  0C17  0843               	movf	??_scale+1,w
  2953  0C18  00AB               	movwf	___bmul@multiplicand
  2954  0C19  0847               	movf	scale@scl,w
  2955  0C1A  00A4               	movwf	___awdiv@dividend
  2956  0C1B  01A5               	clrf	___awdiv@dividend+1
  2957  0C1C  1BA4               	btfsc	___awdiv@dividend,7
  2958  0C1D  03A5               	decf	___awdiv@dividend+1,f
  2959  0C1E  3064               	movlw	100
  2960  0C1F  00A2               	movwf	___awdiv@divisor
  2961  0C20  3000               	movlw	0
  2962  0C21  00A3               	movwf	___awdiv@divisor+1
  2963  0C22  160A  118A  2206  120A  158A  	fcall	___awdiv
  2964  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0C29  0822               	movf	?___awdiv,w
  2967  0C2A  160A  158A  267F  120A  158A  	fcall	___bmul
  2968  0C2F  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  2969  0C30  0084               	movwf	4
  2970  0C31  120A  158A  200A  120A  158A  	fcall	stringdir
  2971  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0C38  00B2               	movwf	___ftmul@f2
  2974  0C39  120A  158A  200A  120A  158A  	fcall	stringdir
  2975  0C3E  00B3               	movwf	___ftmul@f2+1
  2976  0C3F  120A  158A  200A  120A  158A  	fcall	stringdir
  2977  0C44  00B4               	movwf	___ftmul@f2+2
  2978  0C45  160A  118A  24BA  120A  158A  	fcall	___ftmul
  2979  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  2980  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  2981  0C4C  082F               	movf	?___ftmul,w
  2982  0C4D  00C4               	movwf	_scale$1126
  2983  0C4E  0830               	movf	?___ftmul+1,w
  2984  0C4F  00C5               	movwf	_scale$1126+1
  2985  0C50  0831               	movf	?___ftmul+2,w
  2986  0C51  00C6               	movwf	_scale$1126+2
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2989  0C52  3003               	movlw	3
  2990  0C53  00C2               	movwf	??_scale
  2991  0C54  0842               	movf	??_scale,w
  2992  0C55  00AB               	movwf	___bmul@multiplicand
  2993  0C56  0847               	movf	scale@scl,w
  2994  0C57  00F6               	movwf	___awmod@dividend
  2995  0C58  01F7               	clrf	___awmod@dividend+1
  2996  0C59  1BF6               	btfsc	___awmod@dividend,7
  2997  0C5A  03F7               	decf	___awmod@dividend+1,f
  2998  0C5B  300A               	movlw	10
  2999  0C5C  00F4               	movwf	___awmod@divisor
  3000  0C5D  3000               	movlw	0
  3001  0C5E  00F5               	movwf	___awmod@divisor+1
  3002  0C5F  160A  118A  21AB  120A  158A  	fcall	___awmod
  3003  0C64  0874               	movf	?___awmod,w
  3004  0C65  160A  158A  267F  120A  158A  	fcall	___bmul
  3005  0C6A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3006  0C6B  0084               	movwf	4
  3007  0C6C  120A  158A  200A  120A  158A  	fcall	stringdir
  3008  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0C73  00AF               	movwf	___ftmul@f1
  3011  0C74  120A  158A  200A  120A  158A  	fcall	stringdir
  3012  0C79  00B0               	movwf	___ftmul@f1+1
  3013  0C7A  120A  158A  200A  120A  158A  	fcall	stringdir
  3014  0C7F  00B1               	movwf	___ftmul@f1+2
  3015  0C80  0844               	movf	_scale$1126,w
  3016  0C81  00B2               	movwf	___ftmul@f2
  3017  0C82  0845               	movf	_scale$1126+1,w
  3018  0C83  00B3               	movwf	___ftmul@f2+1
  3019  0C84  0846               	movf	_scale$1126+2,w
  3020  0C85  00B4               	movwf	___ftmul@f2+2
  3021  0C86  160A  118A  24BA  120A  158A  	fcall	___ftmul
  3022  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0C8D  082F               	movf	?___ftmul,w
  3025  0C8E  00BF               	movwf	?_scale
  3026  0C8F  0830               	movf	?___ftmul+1,w
  3027  0C90  00C0               	movwf	?_scale+1
  3028  0C91  0831               	movf	?___ftmul+2,w
  3029  0C92  00C1               	movwf	?_scale+2
  3030  0C93  2D27               	goto	l299
  3031  0C94                     l3423:
  3032  0C94  0847               	movf	scale@scl,w
  3033  0C95  3A80               	xorlw	128
  3034  0C96  3E75               	addlw	-139
  3035  0C97  1C03               	skipc
  3036  0C98  2C9A               	goto	u5201
  3037  0C99  2C9B               	goto	u5200
  3038  0C9A                     u5201:
  3039  0C9A  2D07               	goto	l3429
  3040  0C9B                     u5200:
  3041  0C9B                     l3425:
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3044  0C9B  3003               	movlw	3
  3045  0C9C  00C2               	movwf	??_scale
  3046  0C9D  0842               	movf	??_scale,w
  3047  0C9E  00AB               	movwf	___bmul@multiplicand
  3048  0C9F  0847               	movf	scale@scl,w
  3049  0CA0  00F6               	movwf	___awmod@dividend
  3050  0CA1  01F7               	clrf	___awmod@dividend+1
  3051  0CA2  1BF6               	btfsc	___awmod@dividend,7
  3052  0CA3  03F7               	decf	___awmod@dividend+1,f
  3053  0CA4  300A               	movlw	10
  3054  0CA5  00F4               	movwf	___awmod@divisor
  3055  0CA6  3000               	movlw	0
  3056  0CA7  00F5               	movwf	___awmod@divisor+1
  3057  0CA8  160A  118A  21AB  120A  158A  	fcall	___awmod
  3058  0CAD  0874               	movf	?___awmod,w
  3059  0CAE  160A  158A  267F  120A  158A  	fcall	___bmul
  3060  0CB3  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3061  0CB4  0084               	movwf	4
  3062  0CB5  120A  158A  200A  120A  158A  	fcall	stringdir
  3063  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  3064  0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  3065  0CBC  00AF               	movwf	___ftmul@f1
  3066  0CBD  120A  158A  200A  120A  158A  	fcall	stringdir
  3067  0CC2  00B0               	movwf	___ftmul@f1+1
  3068  0CC3  120A  158A  200A  120A  158A  	fcall	stringdir
  3069  0CC8  00B1               	movwf	___ftmul@f1+2
  3070  0CC9  3003               	movlw	3
  3071  0CCA  00C3               	movwf	??_scale+1
  3072  0CCB  0843               	movf	??_scale+1,w
  3073  0CCC  00AB               	movwf	___bmul@multiplicand
  3074  0CCD  0847               	movf	scale@scl,w
  3075  0CCE  00A4               	movwf	___awdiv@dividend
  3076  0CCF  01A5               	clrf	___awdiv@dividend+1
  3077  0CD0  1BA4               	btfsc	___awdiv@dividend,7
  3078  0CD1  03A5               	decf	___awdiv@dividend+1,f
  3079  0CD2  300A               	movlw	10
  3080  0CD3  00A2               	movwf	___awdiv@divisor
  3081  0CD4  3000               	movlw	0
  3082  0CD5  00A3               	movwf	___awdiv@divisor+1
  3083  0CD6  160A  118A  2206  120A  158A  	fcall	___awdiv
  3084  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0CDD  0822               	movf	?___awdiv,w
  3087  0CDE  160A  158A  267F  120A  158A  	fcall	___bmul
  3088  0CE3  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3089  0CE4  0084               	movwf	4
  3090  0CE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3091  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  3093  0CEC  00B2               	movwf	___ftmul@f2
  3094  0CED  120A  158A  200A  120A  158A  	fcall	stringdir
  3095  0CF2  00B3               	movwf	___ftmul@f2+1
  3096  0CF3  120A  158A  200A  120A  158A  	fcall	stringdir
  3097  0CF8  00B4               	movwf	___ftmul@f2+2
  3098  0CF9  160A  118A  24BA  120A  158A  	fcall	___ftmul
  3099  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0D00  082F               	movf	?___ftmul,w
  3102  0D01  00BF               	movwf	?_scale
  3103  0D02  0830               	movf	?___ftmul+1,w
  3104  0D03  00C0               	movwf	?_scale+1
  3105  0D04  0831               	movf	?___ftmul+2,w
  3106  0D05  00C1               	movwf	?_scale+2
  3107  0D06  2D27               	goto	l299
  3108  0D07                     l3429:
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3111  0D07  3003               	movlw	3
  3112  0D08  00C2               	movwf	??_scale
  3113  0D09  0842               	movf	??_scale,w
  3114  0D0A  00AB               	movwf	___bmul@multiplicand
  3115  0D0B  0847               	movf	scale@scl,w
  3116  0D0C  160A  158A  267F  120A  158A  	fcall	___bmul
  3117  0D11  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3118  0D12  0084               	movwf	4
  3119  0D13  120A  158A  200A  120A  158A  	fcall	stringdir
  3120  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0D1A  00BF               	movwf	?_scale
  3123  0D1B  120A  158A  200A  120A  158A  	fcall	stringdir
  3124  0D20  00C0               	movwf	?_scale+1
  3125  0D21  120A  158A  200A  120A  158A  	fcall	stringdir
  3126  0D26  00C1               	movwf	?_scale+2
  3127  0D27                     l299:
  3128  0D27  0008               	return
  3129  0D28                     __end_of_scale:
  3130                           
  3131                           	psect	text3
  3132  11AB                     __ptext3:	
  3133 ;; *************** function ___awmod *****************
  3134 ;; Defined at:
  3135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  divisor         2    4[COMMON] int 
  3138 ;;  dividend        2    6[COMMON] int 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  sign            1    1[BANK0 ] unsigned char 
  3141 ;;  counter         1    0[BANK0 ] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  2    4[COMMON] int 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         4       0       0       0       0
  3152 ;;      Locals:         0       2       0       0       0
  3153 ;;      Temps:          1       0       0       0       0
  3154 ;;      Totals:         5       2       0       0       0
  3155 ;;Total ram usage:        7 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    1
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_scale
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function ___awmod
  3167  11AB                     ___awmod:
  3168  11AB                     l2119:	
  3169                           ;incstack = 0
  3170                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3171                           
  3172  11AB  1283               	bcf	3,5	;RP0=0, select bank0
  3173  11AC  1303               	bcf	3,6	;RP1=0, select bank0
  3174  11AD  01A1               	clrf	___awmod@sign
  3175  11AE                     l2121:
  3176  11AE  1FF7               	btfss	___awmod@dividend+1,7
  3177  11AF  29B1               	goto	u2491
  3178  11B0  29B2               	goto	u2490
  3179  11B1                     u2491:
  3180  11B1  29B9               	goto	l2127
  3181  11B2                     u2490:
  3182  11B2                     l2123:
  3183  11B2  09F6               	comf	___awmod@dividend,f
  3184  11B3  09F7               	comf	___awmod@dividend+1,f
  3185  11B4  0AF6               	incf	___awmod@dividend,f
  3186  11B5  1903               	skipnz
  3187  11B6  0AF7               	incf	___awmod@dividend+1,f
  3188  11B7                     l2125:
  3189  11B7  01A1               	clrf	___awmod@sign
  3190  11B8  0AA1               	incf	___awmod@sign,f
  3191  11B9                     l2127:
  3192  11B9  1FF5               	btfss	___awmod@divisor+1,7
  3193  11BA  29BC               	goto	u2501
  3194  11BB  29BD               	goto	u2500
  3195  11BC                     u2501:
  3196  11BC  29C2               	goto	l2131
  3197  11BD                     u2500:
  3198  11BD                     l2129:
  3199  11BD  09F4               	comf	___awmod@divisor,f
  3200  11BE  09F5               	comf	___awmod@divisor+1,f
  3201  11BF  0AF4               	incf	___awmod@divisor,f
  3202  11C0  1903               	skipnz
  3203  11C1  0AF5               	incf	___awmod@divisor+1,f
  3204  11C2                     l2131:
  3205  11C2  0874               	movf	___awmod@divisor,w
  3206  11C3  0475               	iorwf	___awmod@divisor+1,w
  3207  11C4  1903               	btfsc	3,2
  3208  11C5  29C7               	goto	u2511
  3209  11C6  29C8               	goto	u2510
  3210  11C7                     u2511:
  3211  11C7  29F7               	goto	l2149
  3212  11C8                     u2510:
  3213  11C8                     l2133:
  3214  11C8  01A0               	clrf	___awmod@counter
  3215  11C9  0AA0               	incf	___awmod@counter,f
  3216  11CA  29D6               	goto	l2139
  3217  11CB                     l2135:
  3218  11CB  3001               	movlw	1
  3219  11CC                     u2525:
  3220  11CC  1003               	clrc
  3221  11CD  0DF4               	rlf	___awmod@divisor,f
  3222  11CE  0DF5               	rlf	___awmod@divisor+1,f
  3223  11CF  3EFF               	addlw	-1
  3224  11D0  1D03               	skipz
  3225  11D1  29CC               	goto	u2525
  3226  11D2                     l2137:
  3227  11D2  3001               	movlw	1
  3228  11D3  00F8               	movwf	??___awmod
  3229  11D4  0878               	movf	??___awmod,w
  3230  11D5  07A0               	addwf	___awmod@counter,f
  3231  11D6                     l2139:
  3232  11D6  1FF5               	btfss	___awmod@divisor+1,7
  3233  11D7  29D9               	goto	u2531
  3234  11D8  29DA               	goto	u2530
  3235  11D9                     u2531:
  3236  11D9  29CB               	goto	l2135
  3237  11DA                     u2530:
  3238  11DA                     l2141:
  3239  11DA  0875               	movf	___awmod@divisor+1,w
  3240  11DB  0277               	subwf	___awmod@dividend+1,w
  3241  11DC  1D03               	skipz
  3242  11DD  29E0               	goto	u2545
  3243  11DE  0874               	movf	___awmod@divisor,w
  3244  11DF  0276               	subwf	___awmod@dividend,w
  3245  11E0                     u2545:
  3246  11E0  1C03               	skipc
  3247  11E1  29E3               	goto	u2541
  3248  11E2  29E4               	goto	u2540
  3249  11E3                     u2541:
  3250  11E3  29EA               	goto	l2145
  3251  11E4                     u2540:
  3252  11E4                     l2143:
  3253  11E4  0874               	movf	___awmod@divisor,w
  3254  11E5  02F6               	subwf	___awmod@dividend,f
  3255  11E6  0875               	movf	___awmod@divisor+1,w
  3256  11E7  1C03               	skipc
  3257  11E8  03F7               	decf	___awmod@dividend+1,f
  3258  11E9  02F7               	subwf	___awmod@dividend+1,f
  3259  11EA                     l2145:
  3260  11EA  3001               	movlw	1
  3261  11EB                     u2555:
  3262  11EB  1003               	clrc
  3263  11EC  0CF5               	rrf	___awmod@divisor+1,f
  3264  11ED  0CF4               	rrf	___awmod@divisor,f
  3265  11EE  3EFF               	addlw	-1
  3266  11EF  1D03               	skipz
  3267  11F0  29EB               	goto	u2555
  3268  11F1                     l2147:
  3269  11F1  3001               	movlw	1
  3270  11F2  02A0               	subwf	___awmod@counter,f
  3271  11F3  1D03               	btfss	3,2
  3272  11F4  29F6               	goto	u2561
  3273  11F5  29F7               	goto	u2560
  3274  11F6                     u2561:
  3275  11F6  29DA               	goto	l2141
  3276  11F7                     u2560:
  3277  11F7                     l2149:
  3278  11F7  0821               	movf	___awmod@sign,w
  3279  11F8  1903               	btfsc	3,2
  3280  11F9  29FB               	goto	u2571
  3281  11FA  29FC               	goto	u2570
  3282  11FB                     u2571:
  3283  11FB  2A01               	goto	l2153
  3284  11FC                     u2570:
  3285  11FC                     l2151:
  3286  11FC  09F6               	comf	___awmod@dividend,f
  3287  11FD  09F7               	comf	___awmod@dividend+1,f
  3288  11FE  0AF6               	incf	___awmod@dividend,f
  3289  11FF  1903               	skipnz
  3290  1200  0AF7               	incf	___awmod@dividend+1,f
  3291  1201                     l2153:
  3292  1201  0877               	movf	___awmod@dividend+1,w
  3293  1202  00F5               	movwf	?___awmod+1
  3294  1203  0876               	movf	___awmod@dividend,w
  3295  1204  00F4               	movwf	?___awmod
  3296  1205                     l591:
  3297  1205  0008               	return
  3298  1206                     __end_of___awmod:
  3299                           
  3300                           	psect	text4
  3301  1206                     __ptext4:	
  3302 ;; *************** function ___awdiv *****************
  3303 ;; Defined at:
  3304 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  divisor         2    2[BANK0 ] int 
  3307 ;;  dividend        2    4[BANK0 ] int 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  quotient        2    9[BANK0 ] int 
  3310 ;;  sign            1    8[BANK0 ] unsigned char 
  3311 ;;  counter         1    7[BANK0 ] unsigned char 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  2    2[BANK0 ] int 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         0       4       0       0       0
  3322 ;;      Locals:         0       4       0       0       0
  3323 ;;      Temps:          0       1       0       0       0
  3324 ;;      Totals:         0       9       0       0       0
  3325 ;;Total ram usage:        9 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    1
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_scale
  3332 ;;		_sprintf
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function ___awdiv
  3338  1206                     ___awdiv:
  3339  1206                     l3185:	
  3340                           ;incstack = 0
  3341                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3342                           
  3343  1206  1283               	bcf	3,5	;RP0=0, select bank0
  3344  1207  1303               	bcf	3,6	;RP1=0, select bank0
  3345  1208  01A8               	clrf	___awdiv@sign
  3346  1209                     l3187:
  3347  1209  1FA3               	btfss	___awdiv@divisor+1,7
  3348  120A  2A0C               	goto	u4601
  3349  120B  2A0D               	goto	u4600
  3350  120C                     u4601:
  3351  120C  2A14               	goto	l3193
  3352  120D                     u4600:
  3353  120D                     l3189:
  3354  120D  09A2               	comf	___awdiv@divisor,f
  3355  120E  09A3               	comf	___awdiv@divisor+1,f
  3356  120F  0AA2               	incf	___awdiv@divisor,f
  3357  1210  1903               	skipnz
  3358  1211  0AA3               	incf	___awdiv@divisor+1,f
  3359  1212                     l3191:
  3360  1212  01A8               	clrf	___awdiv@sign
  3361  1213  0AA8               	incf	___awdiv@sign,f
  3362  1214                     l3193:
  3363  1214  1FA5               	btfss	___awdiv@dividend+1,7
  3364  1215  2A17               	goto	u4611
  3365  1216  2A18               	goto	u4610
  3366  1217                     u4611:
  3367  1217  2A21               	goto	l3199
  3368  1218                     u4610:
  3369  1218                     l3195:
  3370  1218  09A4               	comf	___awdiv@dividend,f
  3371  1219  09A5               	comf	___awdiv@dividend+1,f
  3372  121A  0AA4               	incf	___awdiv@dividend,f
  3373  121B  1903               	skipnz
  3374  121C  0AA5               	incf	___awdiv@dividend+1,f
  3375  121D                     l3197:
  3376  121D  3001               	movlw	1
  3377  121E  00A6               	movwf	??___awdiv
  3378  121F  0826               	movf	??___awdiv,w
  3379  1220  06A8               	xorwf	___awdiv@sign,f
  3380  1221                     l3199:
  3381  1221  01A9               	clrf	___awdiv@quotient
  3382  1222  01AA               	clrf	___awdiv@quotient+1
  3383  1223                     l3201:
  3384  1223  0822               	movf	___awdiv@divisor,w
  3385  1224  0423               	iorwf	___awdiv@divisor+1,w
  3386  1225  1903               	btfsc	3,2
  3387  1226  2A28               	goto	u4621
  3388  1227  2A29               	goto	u4620
  3389  1228                     u4621:
  3390  1228  2A60               	goto	l3221
  3391  1229                     u4620:
  3392  1229                     l3203:
  3393  1229  01A7               	clrf	___awdiv@counter
  3394  122A  0AA7               	incf	___awdiv@counter,f
  3395  122B  2A37               	goto	l3209
  3396  122C                     l3205:
  3397  122C  3001               	movlw	1
  3398  122D                     u4635:
  3399  122D  1003               	clrc
  3400  122E  0DA2               	rlf	___awdiv@divisor,f
  3401  122F  0DA3               	rlf	___awdiv@divisor+1,f
  3402  1230  3EFF               	addlw	-1
  3403  1231  1D03               	skipz
  3404  1232  2A2D               	goto	u4635
  3405  1233                     l3207:
  3406  1233  3001               	movlw	1
  3407  1234  00A6               	movwf	??___awdiv
  3408  1235  0826               	movf	??___awdiv,w
  3409  1236  07A7               	addwf	___awdiv@counter,f
  3410  1237                     l3209:
  3411  1237  1FA3               	btfss	___awdiv@divisor+1,7
  3412  1238  2A3A               	goto	u4641
  3413  1239  2A3B               	goto	u4640
  3414  123A                     u4641:
  3415  123A  2A2C               	goto	l3205
  3416  123B                     u4640:
  3417  123B                     l3211:
  3418  123B  3001               	movlw	1
  3419  123C                     u4655:
  3420  123C  1003               	clrc
  3421  123D  0DA9               	rlf	___awdiv@quotient,f
  3422  123E  0DAA               	rlf	___awdiv@quotient+1,f
  3423  123F  3EFF               	addlw	-1
  3424  1240  1D03               	skipz
  3425  1241  2A3C               	goto	u4655
  3426  1242  0823               	movf	___awdiv@divisor+1,w
  3427  1243  0225               	subwf	___awdiv@dividend+1,w
  3428  1244  1D03               	skipz
  3429  1245  2A48               	goto	u4665
  3430  1246  0822               	movf	___awdiv@divisor,w
  3431  1247  0224               	subwf	___awdiv@dividend,w
  3432  1248                     u4665:
  3433  1248  1C03               	skipc
  3434  1249  2A4B               	goto	u4661
  3435  124A  2A4C               	goto	u4660
  3436  124B                     u4661:
  3437  124B  2A53               	goto	l3217
  3438  124C                     u4660:
  3439  124C                     l3213:
  3440  124C  0822               	movf	___awdiv@divisor,w
  3441  124D  02A4               	subwf	___awdiv@dividend,f
  3442  124E  0823               	movf	___awdiv@divisor+1,w
  3443  124F  1C03               	skipc
  3444  1250  03A5               	decf	___awdiv@dividend+1,f
  3445  1251  02A5               	subwf	___awdiv@dividend+1,f
  3446  1252                     l3215:
  3447  1252  1429               	bsf	___awdiv@quotient,0
  3448  1253                     l3217:
  3449  1253  3001               	movlw	1
  3450  1254                     u4675:
  3451  1254  1003               	clrc
  3452  1255  0CA3               	rrf	___awdiv@divisor+1,f
  3453  1256  0CA2               	rrf	___awdiv@divisor,f
  3454  1257  3EFF               	addlw	-1
  3455  1258  1D03               	skipz
  3456  1259  2A54               	goto	u4675
  3457  125A                     l3219:
  3458  125A  3001               	movlw	1
  3459  125B  02A7               	subwf	___awdiv@counter,f
  3460  125C  1D03               	btfss	3,2
  3461  125D  2A5F               	goto	u4681
  3462  125E  2A60               	goto	u4680
  3463  125F                     u4681:
  3464  125F  2A3B               	goto	l3211
  3465  1260                     u4680:
  3466  1260                     l3221:
  3467  1260  0828               	movf	___awdiv@sign,w
  3468  1261  1903               	btfsc	3,2
  3469  1262  2A64               	goto	u4691
  3470  1263  2A65               	goto	u4690
  3471  1264                     u4691:
  3472  1264  2A6A               	goto	l3225
  3473  1265                     u4690:
  3474  1265                     l3223:
  3475  1265  09A9               	comf	___awdiv@quotient,f
  3476  1266  09AA               	comf	___awdiv@quotient+1,f
  3477  1267  0AA9               	incf	___awdiv@quotient,f
  3478  1268  1903               	skipnz
  3479  1269  0AAA               	incf	___awdiv@quotient+1,f
  3480  126A                     l3225:
  3481  126A  082A               	movf	___awdiv@quotient+1,w
  3482  126B  00A3               	movwf	?___awdiv+1
  3483  126C  0829               	movf	___awdiv@quotient,w
  3484  126D  00A2               	movwf	?___awdiv
  3485  126E                     l578:
  3486  126E  0008               	return
  3487  126F                     __end_of___awdiv:
  3488                           
  3489                           	psect	text5
  3490  1E59                     __ptext5:	
  3491 ;; *************** function _isdigit *****************
  3492 ;; Defined at:
  3493 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  c               1    wreg     unsigned char 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  c               1    5[COMMON] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;		None               void
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3507 ;;      Params:         0       0       0       0       0
  3508 ;;      Locals:         2       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0
  3510 ;;      Totals:         2       0       0       0       0
  3511 ;;Total ram usage:        2 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    1
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_sprintf
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           
  3522                           ;psect for function _isdigit
  3523  1E59                     _isdigit:
  3524                           
  3525                           ;incstack = 0
  3526                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3527                           ;isdigit@c stored from wreg
  3528  1E59  00F5               	movwf	isdigit@c
  3529  1E5A                     l2425:
  3530  1E5A  01F4               	clrf	_isdigit$933
  3531  1E5B                     l2427:
  3532  1E5B  303A               	movlw	58
  3533  1E5C  0275               	subwf	isdigit@c,w
  3534  1E5D  1803               	skipnc
  3535  1E5E  2E60               	goto	u3171
  3536  1E5F  2E61               	goto	u3170
  3537  1E60                     u3171:
  3538  1E60  2E69               	goto	l2433
  3539  1E61                     u3170:
  3540  1E61                     l2429:
  3541  1E61  3030               	movlw	48
  3542  1E62  0275               	subwf	isdigit@c,w
  3543  1E63  1C03               	skipc
  3544  1E64  2E66               	goto	u3181
  3545  1E65  2E67               	goto	u3180
  3546  1E66                     u3181:
  3547  1E66  2E69               	goto	l2433
  3548  1E67                     u3180:
  3549  1E67                     l2431:
  3550  1E67  01F4               	clrf	_isdigit$933
  3551  1E68  0AF4               	incf	_isdigit$933,f
  3552  1E69                     l2433:
  3553  1E69  0C74               	rrf	_isdigit$933,w
  3554  1E6A                     l857:
  3555  1E6A  0008               	return
  3556  1E6B                     __end_of_isdigit:
  3557                           
  3558                           	psect	text6
  3559  08C4                     __ptext6:	
  3560 ;; *************** function _fround *****************
  3561 ;; Defined at:
  3562 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  prec            1    wreg     unsigned char 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  prec            1   46[BANK0 ] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  3   31[BANK0 ] unsigned char 
  3569 ;; Registers used:
  3570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3576 ;;      Params:         0       3       0       0       0
  3577 ;;      Locals:         0       7       0       0       0
  3578 ;;      Temps:          0       6       0       0       0
  3579 ;;      Totals:         0      16       0       0       0
  3580 ;;Total ram usage:       16 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    3
  3583 ;; This function calls:
  3584 ;;		___bmul
  3585 ;;		___ftmul
  3586 ;;		___lwdiv
  3587 ;;		___lwmod
  3588 ;; This function is called by:
  3589 ;;		_sprintf
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _fround
  3595  08C4                     _fround:
  3596                           
  3597                           ;incstack = 0
  3598                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3599                           ;fround@prec stored from wreg
  3600  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  3601  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  3602  08C6  00CE               	movwf	fround@prec
  3603  08C7                     l3371:
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3606  08C7  306E               	movlw	110
  3607  08C8  024E               	subwf	fround@prec,w
  3608  08C9  1C03               	skipc
  3609  08CA  28CC               	goto	u5141
  3610  08CB  28CD               	goto	u5140
  3611  08CC                     u5141:
  3612  08CC  29AA               	goto	l3381
  3613  08CD                     u5140:
  3614  08CD                     l3373:
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3617  08CD  3003               	movlw	3
  3618  08CE  00C2               	movwf	??_fround
  3619  08CF  0842               	movf	??_fround,w
  3620  08D0  00AB               	movwf	___bmul@multiplicand
  3621  08D1  084E               	movf	fround@prec,w
  3622  08D2  00C3               	movwf	??_fround+1
  3623  08D3  01C4               	clrf	??_fround+2
  3624  08D4  0843               	movf	??_fround+1,w
  3625  08D5  00F6               	movwf	___lwmod@dividend
  3626  08D6  0844               	movf	??_fround+2,w
  3627  08D7  00F7               	movwf	___lwmod@dividend+1
  3628  08D8  3064               	movlw	100
  3629  08D9  00F4               	movwf	___lwmod@divisor
  3630  08DA  3000               	movlw	0
  3631  08DB  00F5               	movwf	___lwmod@divisor+1
  3632  08DC  160A  118A  2039  120A  158A  	fcall	___lwmod
  3633  08E1  0875               	movf	?___lwmod+1,w
  3634  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  3635  08E3  1303               	bcf	3,6	;RP1=0, select bank0
  3636  08E4  00A4               	movwf	___lwdiv@dividend+1
  3637  08E5  0874               	movf	?___lwmod,w
  3638  08E6  00A3               	movwf	___lwdiv@dividend
  3639  08E7  300A               	movlw	10
  3640  08E8  00A1               	movwf	___lwdiv@divisor
  3641  08E9  3000               	movlw	0
  3642  08EA  00A2               	movwf	___lwdiv@divisor+1
  3643  08EB  160A  118A  20BB  120A  158A  	fcall	___lwdiv
  3644  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  3645  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  3646  08F2  0821               	movf	?___lwdiv,w
  3647  08F3  160A  158A  267F  120A  158A  	fcall	___bmul
  3648  08F8  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3649  08F9  0084               	movwf	4
  3650  08FA  120A  158A  200A  120A  158A  	fcall	stringdir
  3651  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0900  1303               	bcf	3,6	;RP1=0, select bank0
  3653  0901  00AF               	movwf	___ftmul@f1
  3654  0902  120A  158A  200A  120A  158A  	fcall	stringdir
  3655  0907  00B0               	movwf	___ftmul@f1+1
  3656  0908  120A  158A  200A  120A  158A  	fcall	stringdir
  3657  090D  00B1               	movwf	___ftmul@f1+2
  3658  090E  3003               	movlw	3
  3659  090F  00C5               	movwf	??_fround+3
  3660  0910  0845               	movf	??_fround+3,w
  3661  0911  00AB               	movwf	___bmul@multiplicand
  3662  0912  084E               	movf	fround@prec,w
  3663  0913  00C6               	movwf	??_fround+4
  3664  0914  01C7               	clrf	??_fround+5
  3665  0915  0846               	movf	??_fround+4,w
  3666  0916  00A3               	movwf	___lwdiv@dividend
  3667  0917  0847               	movf	??_fround+5,w
  3668  0918  00A4               	movwf	___lwdiv@dividend+1
  3669  0919  3064               	movlw	100
  3670  091A  00A1               	movwf	___lwdiv@divisor
  3671  091B  3000               	movlw	0
  3672  091C  00A2               	movwf	___lwdiv@divisor+1
  3673  091D  160A  118A  20BB  120A  158A  	fcall	___lwdiv
  3674  0922  1283               	bcf	3,5	;RP0=0, select bank0
  3675  0923  1303               	bcf	3,6	;RP1=0, select bank0
  3676  0924  0821               	movf	?___lwdiv,w
  3677  0925  160A  158A  267F  120A  158A  	fcall	___bmul
  3678  092A  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3679  092B  0084               	movwf	4
  3680  092C  120A  158A  200A  120A  158A  	fcall	stringdir
  3681  0931  1283               	bcf	3,5	;RP0=0, select bank0
  3682  0932  1303               	bcf	3,6	;RP1=0, select bank0
  3683  0933  00B2               	movwf	___ftmul@f2
  3684  0934  120A  158A  200A  120A  158A  	fcall	stringdir
  3685  0939  00B3               	movwf	___ftmul@f2+1
  3686  093A  120A  158A  200A  120A  158A  	fcall	stringdir
  3687  093F  00B4               	movwf	___ftmul@f2+2
  3688  0940  160A  118A  24BA  120A  158A  	fcall	___ftmul
  3689  0945  1283               	bcf	3,5	;RP0=0, select bank0
  3690  0946  1303               	bcf	3,6	;RP1=0, select bank0
  3691  0947  082F               	movf	?___ftmul,w
  3692  0948  00CB               	movwf	_fround$1124
  3693  0949  0830               	movf	?___ftmul+1,w
  3694  094A  00CC               	movwf	_fround$1124+1
  3695  094B  0831               	movf	?___ftmul+2,w
  3696  094C  00CD               	movwf	_fround$1124+2
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3699  094D  3003               	movlw	3
  3700  094E  00C2               	movwf	??_fround
  3701  094F  0842               	movf	??_fround,w
  3702  0950  00AB               	movwf	___bmul@multiplicand
  3703  0951  084E               	movf	fround@prec,w
  3704  0952  00C3               	movwf	??_fround+1
  3705  0953  01C4               	clrf	??_fround+2
  3706  0954  0843               	movf	??_fround+1,w
  3707  0955  00F6               	movwf	___lwmod@dividend
  3708  0956  0844               	movf	??_fround+2,w
  3709  0957  00F7               	movwf	___lwmod@dividend+1
  3710  0958  300A               	movlw	10
  3711  0959  00F4               	movwf	___lwmod@divisor
  3712  095A  3000               	movlw	0
  3713  095B  00F5               	movwf	___lwmod@divisor+1
  3714  095C  160A  118A  2039  120A  158A  	fcall	___lwmod
  3715  0961  0874               	movf	?___lwmod,w
  3716  0962  160A  158A  267F  120A  158A  	fcall	___bmul
  3717  0967  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3718  0968  0084               	movwf	4
  3719  0969  120A  158A  200A  120A  158A  	fcall	stringdir
  3720  096E  1283               	bcf	3,5	;RP0=0, select bank0
  3721  096F  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0970  00AF               	movwf	___ftmul@f1
  3723  0971  120A  158A  200A  120A  158A  	fcall	stringdir
  3724  0976  00B0               	movwf	___ftmul@f1+1
  3725  0977  120A  158A  200A  120A  158A  	fcall	stringdir
  3726  097C  00B1               	movwf	___ftmul@f1+2
  3727  097D  084B               	movf	_fround$1124,w
  3728  097E  00B2               	movwf	___ftmul@f2
  3729  097F  084C               	movf	_fround$1124+1,w
  3730  0980  00B3               	movwf	___ftmul@f2+1
  3731  0981  084D               	movf	_fround$1124+2,w
  3732  0982  00B4               	movwf	___ftmul@f2+2
  3733  0983  160A  118A  24BA  120A  158A  	fcall	___ftmul
  3734  0988  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0989  1303               	bcf	3,6	;RP1=0, select bank0
  3736  098A  082F               	movf	?___ftmul,w
  3737  098B  00C8               	movwf	_fround$1125
  3738  098C  0830               	movf	?___ftmul+1,w
  3739  098D  00C9               	movwf	_fround$1125+1
  3740  098E  0831               	movf	?___ftmul+2,w
  3741  098F  00CA               	movwf	_fround$1125+2
  3742  0990                     l3375:
  3743                           
  3744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3745  0990  3000               	movlw	0
  3746  0991  00AF               	movwf	___ftmul@f1
  3747  0992  3000               	movlw	0
  3748  0993  00B0               	movwf	___ftmul@f1+1
  3749  0994  303F               	movlw	63
  3750  0995  00B1               	movwf	___ftmul@f1+2
  3751  0996  0848               	movf	_fround$1125,w
  3752  0997  00B2               	movwf	___ftmul@f2
  3753  0998  0849               	movf	_fround$1125+1,w
  3754  0999  00B3               	movwf	___ftmul@f2+1
  3755  099A  084A               	movf	_fround$1125+2,w
  3756  099B  00B4               	movwf	___ftmul@f2+2
  3757  099C  160A  118A  24BA  120A  158A  	fcall	___ftmul
  3758  09A1  1283               	bcf	3,5	;RP0=0, select bank0
  3759  09A2  1303               	bcf	3,6	;RP1=0, select bank0
  3760  09A3  082F               	movf	?___ftmul,w
  3761  09A4  00BF               	movwf	?_fround
  3762  09A5  0830               	movf	?___ftmul+1,w
  3763  09A6  00C0               	movwf	?_fround+1
  3764  09A7  0831               	movf	?___ftmul+2,w
  3765  09A8  00C1               	movwf	?_fround+2
  3766  09A9  2A6C               	goto	l292
  3767  09AA                     l3381:
  3768  09AA  300B               	movlw	11
  3769  09AB  024E               	subwf	fround@prec,w
  3770  09AC  1C03               	skipc
  3771  09AD  29AF               	goto	u5151
  3772  09AE  29B0               	goto	u5150
  3773  09AF                     u5151:
  3774  09AF  2A39               	goto	l3389
  3775  09B0                     u5150:
  3776  09B0                     l3383:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3779  09B0  3003               	movlw	3
  3780  09B1  00C2               	movwf	??_fround
  3781  09B2  0842               	movf	??_fround,w
  3782  09B3  00AB               	movwf	___bmul@multiplicand
  3783  09B4  084E               	movf	fround@prec,w
  3784  09B5  00C3               	movwf	??_fround+1
  3785  09B6  01C4               	clrf	??_fround+2
  3786  09B7  0843               	movf	??_fround+1,w
  3787  09B8  00F6               	movwf	___lwmod@dividend
  3788  09B9  0844               	movf	??_fround+2,w
  3789  09BA  00F7               	movwf	___lwmod@dividend+1
  3790  09BB  300A               	movlw	10
  3791  09BC  00F4               	movwf	___lwmod@divisor
  3792  09BD  3000               	movlw	0
  3793  09BE  00F5               	movwf	___lwmod@divisor+1
  3794  09BF  160A  118A  2039  120A  158A  	fcall	___lwmod
  3795  09C4  0874               	movf	?___lwmod,w
  3796  09C5  160A  158A  267F  120A  158A  	fcall	___bmul
  3797  09CA  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3798  09CB  0084               	movwf	4
  3799  09CC  120A  158A  200A  120A  158A  	fcall	stringdir
  3800  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  3801  09D2  1303               	bcf	3,6	;RP1=0, select bank0
  3802  09D3  00AF               	movwf	___ftmul@f1
  3803  09D4  120A  158A  200A  120A  158A  	fcall	stringdir
  3804  09D9  00B0               	movwf	___ftmul@f1+1
  3805  09DA  120A  158A  200A  120A  158A  	fcall	stringdir
  3806  09DF  00B1               	movwf	___ftmul@f1+2
  3807  09E0  3003               	movlw	3
  3808  09E1  00C5               	movwf	??_fround+3
  3809  09E2  0845               	movf	??_fround+3,w
  3810  09E3  00AB               	movwf	___bmul@multiplicand
  3811  09E4  084E               	movf	fround@prec,w
  3812  09E5  00C6               	movwf	??_fround+4
  3813  09E6  01C7               	clrf	??_fround+5
  3814  09E7  0846               	movf	??_fround+4,w
  3815  09E8  00A3               	movwf	___lwdiv@dividend
  3816  09E9  0847               	movf	??_fround+5,w
  3817  09EA  00A4               	movwf	___lwdiv@dividend+1
  3818  09EB  300A               	movlw	10
  3819  09EC  00A1               	movwf	___lwdiv@divisor
  3820  09ED  3000               	movlw	0
  3821  09EE  00A2               	movwf	___lwdiv@divisor+1
  3822  09EF  160A  118A  20BB  120A  158A  	fcall	___lwdiv
  3823  09F4  1283               	bcf	3,5	;RP0=0, select bank0
  3824  09F5  1303               	bcf	3,6	;RP1=0, select bank0
  3825  09F6  0821               	movf	?___lwdiv,w
  3826  09F7  160A  158A  267F  120A  158A  	fcall	___bmul
  3827  09FC  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3828  09FD  0084               	movwf	4
  3829  09FE  120A  158A  200A  120A  158A  	fcall	stringdir
  3830  0A03  1283               	bcf	3,5	;RP0=0, select bank0
  3831  0A04  1303               	bcf	3,6	;RP1=0, select bank0
  3832  0A05  00B2               	movwf	___ftmul@f2
  3833  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  3834  0A0B  00B3               	movwf	___ftmul@f2+1
  3835  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3836  0A11  00B4               	movwf	___ftmul@f2+2
  3837  0A12  160A  118A  24BA  120A  158A  	fcall	___ftmul
  3838  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  3839  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  3840  0A19  082F               	movf	?___ftmul,w
  3841  0A1A  00CB               	movwf	_fround$1124
  3842  0A1B  0830               	movf	?___ftmul+1,w
  3843  0A1C  00CC               	movwf	_fround$1124+1
  3844  0A1D  0831               	movf	?___ftmul+2,w
  3845  0A1E  00CD               	movwf	_fround$1124+2
  3846  0A1F                     l3385:
  3847                           
  3848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3849  0A1F  3000               	movlw	0
  3850  0A20  00AF               	movwf	___ftmul@f1
  3851  0A21  3000               	movlw	0
  3852  0A22  00B0               	movwf	___ftmul@f1+1
  3853  0A23  303F               	movlw	63
  3854  0A24  00B1               	movwf	___ftmul@f1+2
  3855  0A25  084B               	movf	_fround$1124,w
  3856  0A26  00B2               	movwf	___ftmul@f2
  3857  0A27  084C               	movf	_fround$1124+1,w
  3858  0A28  00B3               	movwf	___ftmul@f2+1
  3859  0A29  084D               	movf	_fround$1124+2,w
  3860  0A2A  00B4               	movwf	___ftmul@f2+2
  3861  0A2B  160A  118A  24BA  120A  158A  	fcall	___ftmul
  3862  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  3863  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  3864  0A32  082F               	movf	?___ftmul,w
  3865  0A33  00BF               	movwf	?_fround
  3866  0A34  0830               	movf	?___ftmul+1,w
  3867  0A35  00C0               	movwf	?_fround+1
  3868  0A36  0831               	movf	?___ftmul+2,w
  3869  0A37  00C1               	movwf	?_fround+2
  3870  0A38  2A6C               	goto	l292
  3871  0A39                     l3389:
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3874  0A39  3000               	movlw	0
  3875  0A3A  00AF               	movwf	___ftmul@f1
  3876  0A3B  3000               	movlw	0
  3877  0A3C  00B0               	movwf	___ftmul@f1+1
  3878  0A3D  303F               	movlw	63
  3879  0A3E  00B1               	movwf	___ftmul@f1+2
  3880  0A3F  3003               	movlw	3
  3881  0A40  00C2               	movwf	??_fround
  3882  0A41  0842               	movf	??_fround,w
  3883  0A42  00AB               	movwf	___bmul@multiplicand
  3884  0A43  084E               	movf	fround@prec,w
  3885  0A44  160A  158A  267F  120A  158A  	fcall	___bmul
  3886  0A49  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3887  0A4A  0084               	movwf	4
  3888  0A4B  120A  158A  200A  120A  158A  	fcall	stringdir
  3889  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0A51  1303               	bcf	3,6	;RP1=0, select bank0
  3891  0A52  00B2               	movwf	___ftmul@f2
  3892  0A53  120A  158A  200A  120A  158A  	fcall	stringdir
  3893  0A58  00B3               	movwf	___ftmul@f2+1
  3894  0A59  120A  158A  200A  120A  158A  	fcall	stringdir
  3895  0A5E  00B4               	movwf	___ftmul@f2+2
  3896  0A5F  160A  118A  24BA  120A  158A  	fcall	___ftmul
  3897  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0A66  082F               	movf	?___ftmul,w
  3900  0A67  00BF               	movwf	?_fround
  3901  0A68  0830               	movf	?___ftmul+1,w
  3902  0A69  00C0               	movwf	?_fround+1
  3903  0A6A  0831               	movf	?___ftmul+2,w
  3904  0A6B  00C1               	movwf	?_fround+2
  3905  0A6C                     l292:
  3906  0A6C  0008               	return
  3907  0A6D                     __end_of_fround:
  3908                           
  3909                           	psect	text7
  3910  1039                     __ptext7:	
  3911 ;; *************** function ___lwmod *****************
  3912 ;; Defined at:
  3913 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  divisor         2    4[COMMON] unsigned int 
  3916 ;;  dividend        2    6[COMMON] unsigned int 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  counter         1    0[BANK0 ] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  2    4[COMMON] unsigned int 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         4       0       0       0       0
  3929 ;;      Locals:         0       1       0       0       0
  3930 ;;      Temps:          1       0       0       0       0
  3931 ;;      Totals:         5       1       0       0       0
  3932 ;;Total ram usage:        6 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_fround
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function ___lwmod
  3944  1039                     ___lwmod:
  3945  1039                     l3349:	
  3946                           ;incstack = 0
  3947                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3948                           
  3949  1039  0874               	movf	___lwmod@divisor,w
  3950  103A  0475               	iorwf	___lwmod@divisor+1,w
  3951  103B  1903               	btfsc	3,2
  3952  103C  283E               	goto	u5081
  3953  103D  283F               	goto	u5080
  3954  103E                     u5081:
  3955  103E  2870               	goto	l3367
  3956  103F                     u5080:
  3957  103F                     l3351:
  3958  103F  1283               	bcf	3,5	;RP0=0, select bank0
  3959  1040  1303               	bcf	3,6	;RP1=0, select bank0
  3960  1041  01A0               	clrf	___lwmod@counter
  3961  1042  0AA0               	incf	___lwmod@counter,f
  3962  1043  284F               	goto	l3357
  3963  1044                     l3353:
  3964  1044  3001               	movlw	1
  3965  1045                     u5095:
  3966  1045  1003               	clrc
  3967  1046  0DF4               	rlf	___lwmod@divisor,f
  3968  1047  0DF5               	rlf	___lwmod@divisor+1,f
  3969  1048  3EFF               	addlw	-1
  3970  1049  1D03               	skipz
  3971  104A  2845               	goto	u5095
  3972  104B                     l3355:
  3973  104B  3001               	movlw	1
  3974  104C  00F8               	movwf	??___lwmod
  3975  104D  0878               	movf	??___lwmod,w
  3976  104E  07A0               	addwf	___lwmod@counter,f
  3977  104F                     l3357:
  3978  104F  1FF5               	btfss	___lwmod@divisor+1,7
  3979  1050  2852               	goto	u5101
  3980  1051  2853               	goto	u5100
  3981  1052                     u5101:
  3982  1052  2844               	goto	l3353
  3983  1053                     u5100:
  3984  1053                     l3359:
  3985  1053  0875               	movf	___lwmod@divisor+1,w
  3986  1054  0277               	subwf	___lwmod@dividend+1,w
  3987  1055  1D03               	skipz
  3988  1056  2859               	goto	u5115
  3989  1057  0874               	movf	___lwmod@divisor,w
  3990  1058  0276               	subwf	___lwmod@dividend,w
  3991  1059                     u5115:
  3992  1059  1C03               	skipc
  3993  105A  285C               	goto	u5111
  3994  105B  285D               	goto	u5110
  3995  105C                     u5111:
  3996  105C  2863               	goto	l3363
  3997  105D                     u5110:
  3998  105D                     l3361:
  3999  105D  0874               	movf	___lwmod@divisor,w
  4000  105E  02F6               	subwf	___lwmod@dividend,f
  4001  105F  0875               	movf	___lwmod@divisor+1,w
  4002  1060  1C03               	skipc
  4003  1061  03F7               	decf	___lwmod@dividend+1,f
  4004  1062  02F7               	subwf	___lwmod@dividend+1,f
  4005  1063                     l3363:
  4006  1063  3001               	movlw	1
  4007  1064                     u5125:
  4008  1064  1003               	clrc
  4009  1065  0CF5               	rrf	___lwmod@divisor+1,f
  4010  1066  0CF4               	rrf	___lwmod@divisor,f
  4011  1067  3EFF               	addlw	-1
  4012  1068  1D03               	skipz
  4013  1069  2864               	goto	u5125
  4014  106A                     l3365:
  4015  106A  3001               	movlw	1
  4016  106B  02A0               	subwf	___lwmod@counter,f
  4017  106C  1D03               	btfss	3,2
  4018  106D  286F               	goto	u5131
  4019  106E  2870               	goto	u5130
  4020  106F                     u5131:
  4021  106F  2853               	goto	l3359
  4022  1070                     u5130:
  4023  1070                     l3367:
  4024  1070  0877               	movf	___lwmod@dividend+1,w
  4025  1071  00F5               	movwf	?___lwmod+1
  4026  1072  0876               	movf	___lwmod@dividend,w
  4027  1073  00F4               	movwf	?___lwmod
  4028  1074                     l847:
  4029  1074  0008               	return
  4030  1075                     __end_of___lwmod:
  4031                           
  4032                           	psect	text8
  4033  10BB                     __ptext8:	
  4034 ;; *************** function ___lwdiv *****************
  4035 ;; Defined at:
  4036 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  divisor         2    1[BANK0 ] unsigned int 
  4039 ;;  dividend        2    3[BANK0 ] unsigned int 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  quotient        2    6[BANK0 ] unsigned int 
  4042 ;;  counter         1    8[BANK0 ] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  2    1[BANK0 ] unsigned int 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4052 ;;      Params:         0       4       0       0       0
  4053 ;;      Locals:         0       3       0       0       0
  4054 ;;      Temps:          0       1       0       0       0
  4055 ;;      Totals:         0       8       0       0       0
  4056 ;;Total ram usage:        8 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    1
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_fround
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           
  4067                           ;psect for function ___lwdiv
  4068  10BB                     ___lwdiv:
  4069  10BB                     l2277:	
  4070                           ;incstack = 0
  4071                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4072                           
  4073  10BB  1283               	bcf	3,5	;RP0=0, select bank0
  4074  10BC  1303               	bcf	3,6	;RP1=0, select bank0
  4075  10BD  01A6               	clrf	___lwdiv@quotient
  4076  10BE  01A7               	clrf	___lwdiv@quotient+1
  4077  10BF                     l2279:
  4078  10BF  0821               	movf	___lwdiv@divisor,w
  4079  10C0  0422               	iorwf	___lwdiv@divisor+1,w
  4080  10C1  1903               	btfsc	3,2
  4081  10C2  28C4               	goto	u2961
  4082  10C3  28C5               	goto	u2960
  4083  10C4                     u2961:
  4084  10C4  28FC               	goto	l2299
  4085  10C5                     u2960:
  4086  10C5                     l2281:
  4087  10C5  01A8               	clrf	___lwdiv@counter
  4088  10C6  0AA8               	incf	___lwdiv@counter,f
  4089  10C7  28D3               	goto	l2287
  4090  10C8                     l2283:
  4091  10C8  3001               	movlw	1
  4092  10C9                     u2975:
  4093  10C9  1003               	clrc
  4094  10CA  0DA1               	rlf	___lwdiv@divisor,f
  4095  10CB  0DA2               	rlf	___lwdiv@divisor+1,f
  4096  10CC  3EFF               	addlw	-1
  4097  10CD  1D03               	skipz
  4098  10CE  28C9               	goto	u2975
  4099  10CF                     l2285:
  4100  10CF  3001               	movlw	1
  4101  10D0  00A5               	movwf	??___lwdiv
  4102  10D1  0825               	movf	??___lwdiv,w
  4103  10D2  07A8               	addwf	___lwdiv@counter,f
  4104  10D3                     l2287:
  4105  10D3  1FA2               	btfss	___lwdiv@divisor+1,7
  4106  10D4  28D6               	goto	u2981
  4107  10D5  28D7               	goto	u2980
  4108  10D6                     u2981:
  4109  10D6  28C8               	goto	l2283
  4110  10D7                     u2980:
  4111  10D7                     l2289:
  4112  10D7  3001               	movlw	1
  4113  10D8                     u2995:
  4114  10D8  1003               	clrc
  4115  10D9  0DA6               	rlf	___lwdiv@quotient,f
  4116  10DA  0DA7               	rlf	___lwdiv@quotient+1,f
  4117  10DB  3EFF               	addlw	-1
  4118  10DC  1D03               	skipz
  4119  10DD  28D8               	goto	u2995
  4120  10DE  0822               	movf	___lwdiv@divisor+1,w
  4121  10DF  0224               	subwf	___lwdiv@dividend+1,w
  4122  10E0  1D03               	skipz
  4123  10E1  28E4               	goto	u3005
  4124  10E2  0821               	movf	___lwdiv@divisor,w
  4125  10E3  0223               	subwf	___lwdiv@dividend,w
  4126  10E4                     u3005:
  4127  10E4  1C03               	skipc
  4128  10E5  28E7               	goto	u3001
  4129  10E6  28E8               	goto	u3000
  4130  10E7                     u3001:
  4131  10E7  28EF               	goto	l2295
  4132  10E8                     u3000:
  4133  10E8                     l2291:
  4134  10E8  0821               	movf	___lwdiv@divisor,w
  4135  10E9  02A3               	subwf	___lwdiv@dividend,f
  4136  10EA  0822               	movf	___lwdiv@divisor+1,w
  4137  10EB  1C03               	skipc
  4138  10EC  03A4               	decf	___lwdiv@dividend+1,f
  4139  10ED  02A4               	subwf	___lwdiv@dividend+1,f
  4140  10EE                     l2293:
  4141  10EE  1426               	bsf	___lwdiv@quotient,0
  4142  10EF                     l2295:
  4143  10EF  3001               	movlw	1
  4144  10F0                     u3015:
  4145  10F0  1003               	clrc
  4146  10F1  0CA2               	rrf	___lwdiv@divisor+1,f
  4147  10F2  0CA1               	rrf	___lwdiv@divisor,f
  4148  10F3  3EFF               	addlw	-1
  4149  10F4  1D03               	skipz
  4150  10F5  28F0               	goto	u3015
  4151  10F6                     l2297:
  4152  10F6  3001               	movlw	1
  4153  10F7  02A8               	subwf	___lwdiv@counter,f
  4154  10F8  1D03               	btfss	3,2
  4155  10F9  28FB               	goto	u3021
  4156  10FA  28FC               	goto	u3020
  4157  10FB                     u3021:
  4158  10FB  28D7               	goto	l2289
  4159  10FC                     u3020:
  4160  10FC                     l2299:
  4161  10FC  0827               	movf	___lwdiv@quotient+1,w
  4162  10FD  00A2               	movwf	?___lwdiv+1
  4163  10FE  0826               	movf	___lwdiv@quotient,w
  4164  10FF  00A1               	movwf	?___lwdiv
  4165  1100                     l837:
  4166  1100  0008               	return
  4167  1101                     __end_of___lwdiv:
  4168                           
  4169                           	psect	text9
  4170  14BA                     __ptext9:	
  4171 ;; *************** function ___ftmul *****************
  4172 ;; Defined at:
  4173 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  f1              3   15[BANK0 ] float 
  4176 ;;  f2              3   18[BANK0 ] float 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  f3_as_produc    3   26[BANK0 ] unsigned um
  4179 ;;  sign            1   30[BANK0 ] unsigned char 
  4180 ;;  cntr            1   29[BANK0 ] unsigned char 
  4181 ;;  exp             1   25[BANK0 ] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  3   15[BANK0 ] float 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0, pclath, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4191 ;;      Params:         0       6       0       0       0
  4192 ;;      Locals:         0       6       0       0       0
  4193 ;;      Temps:          0       4       0       0       0
  4194 ;;      Totals:         0      16       0       0       0
  4195 ;;Total ram usage:       16 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    2
  4198 ;; This function calls:
  4199 ;;		___ftpack
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;;		_fround
  4203 ;;		_scale
  4204 ;;		_sprintf
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function ___ftmul
  4210  14BA                     ___ftmul:
  4211  14BA                     l3299:	
  4212                           ;incstack = 0
  4213                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4214                           
  4215  14BA  1283               	bcf	3,5	;RP0=0, select bank0
  4216  14BB  1303               	bcf	3,6	;RP1=0, select bank0
  4217  14BC  082F               	movf	___ftmul@f1,w
  4218  14BD  00B5               	movwf	??___ftmul
  4219  14BE  0830               	movf	___ftmul@f1+1,w
  4220  14BF  00B6               	movwf	??___ftmul+1
  4221  14C0  0831               	movf	___ftmul@f1+2,w
  4222  14C1  00B7               	movwf	??___ftmul+2
  4223  14C2  1003               	clrc
  4224  14C3  0D36               	rlf	??___ftmul+1,w
  4225  14C4  0D37               	rlf	??___ftmul+2,w
  4226  14C5  00B8               	movwf	??___ftmul+3
  4227  14C6  0838               	movf	??___ftmul+3,w
  4228  14C7  00B9               	movwf	___ftmul@exp
  4229  14C8  0839               	movf	___ftmul@exp,w
  4230  14C9  1D03               	btfss	3,2
  4231  14CA  2CCC               	goto	u4941
  4232  14CB  2CCD               	goto	u4940
  4233  14CC                     u4941:
  4234  14CC  2CD4               	goto	l3305
  4235  14CD                     u4940:
  4236  14CD                     l3301:
  4237  14CD  3000               	movlw	0
  4238  14CE  00AF               	movwf	?___ftmul
  4239  14CF  3000               	movlw	0
  4240  14D0  00B0               	movwf	?___ftmul+1
  4241  14D1  3000               	movlw	0
  4242  14D2  00B1               	movwf	?___ftmul+2
  4243  14D3  2D9E               	goto	l704
  4244  14D4                     l3305:
  4245  14D4  0832               	movf	___ftmul@f2,w
  4246  14D5  00B5               	movwf	??___ftmul
  4247  14D6  0833               	movf	___ftmul@f2+1,w
  4248  14D7  00B6               	movwf	??___ftmul+1
  4249  14D8  0834               	movf	___ftmul@f2+2,w
  4250  14D9  00B7               	movwf	??___ftmul+2
  4251  14DA  1003               	clrc
  4252  14DB  0D36               	rlf	??___ftmul+1,w
  4253  14DC  0D37               	rlf	??___ftmul+2,w
  4254  14DD  00B8               	movwf	??___ftmul+3
  4255  14DE  0838               	movf	??___ftmul+3,w
  4256  14DF  00BE               	movwf	___ftmul@sign
  4257  14E0  083E               	movf	___ftmul@sign,w
  4258  14E1  1D03               	btfss	3,2
  4259  14E2  2CE4               	goto	u4951
  4260  14E3  2CE5               	goto	u4950
  4261  14E4                     u4951:
  4262  14E4  2CEC               	goto	l3311
  4263  14E5                     u4950:
  4264  14E5                     l3307:
  4265  14E5  3000               	movlw	0
  4266  14E6  00AF               	movwf	?___ftmul
  4267  14E7  3000               	movlw	0
  4268  14E8  00B0               	movwf	?___ftmul+1
  4269  14E9  3000               	movlw	0
  4270  14EA  00B1               	movwf	?___ftmul+2
  4271  14EB  2D9E               	goto	l704
  4272  14EC                     l3311:
  4273  14EC  083E               	movf	___ftmul@sign,w
  4274  14ED  3E7B               	addlw	123
  4275  14EE  00B5               	movwf	??___ftmul
  4276  14EF  0835               	movf	??___ftmul,w
  4277  14F0  07B9               	addwf	___ftmul@exp,f
  4278  14F1  082F               	movf	___ftmul@f1,w
  4279  14F2  00B5               	movwf	??___ftmul
  4280  14F3  0830               	movf	___ftmul@f1+1,w
  4281  14F4  00B6               	movwf	??___ftmul+1
  4282  14F5  0831               	movf	___ftmul@f1+2,w
  4283  14F6  00B7               	movwf	??___ftmul+2
  4284  14F7  3010               	movlw	16
  4285  14F8                     u4965:
  4286  14F8  1003               	clrc
  4287  14F9  0CB7               	rrf	??___ftmul+2,f
  4288  14FA  0CB6               	rrf	??___ftmul+1,f
  4289  14FB  0CB5               	rrf	??___ftmul,f
  4290  14FC                     u4960:
  4291  14FC  3EFF               	addlw	-1
  4292  14FD  1D03               	skipz
  4293  14FE  2CF8               	goto	u4965
  4294  14FF  0835               	movf	??___ftmul,w
  4295  1500  00B8               	movwf	??___ftmul+3
  4296  1501  0838               	movf	??___ftmul+3,w
  4297  1502  00BE               	movwf	___ftmul@sign
  4298  1503  0832               	movf	___ftmul@f2,w
  4299  1504  00B5               	movwf	??___ftmul
  4300  1505  0833               	movf	___ftmul@f2+1,w
  4301  1506  00B6               	movwf	??___ftmul+1
  4302  1507  0834               	movf	___ftmul@f2+2,w
  4303  1508  00B7               	movwf	??___ftmul+2
  4304  1509  3010               	movlw	16
  4305  150A                     u4975:
  4306  150A  1003               	clrc
  4307  150B  0CB7               	rrf	??___ftmul+2,f
  4308  150C  0CB6               	rrf	??___ftmul+1,f
  4309  150D  0CB5               	rrf	??___ftmul,f
  4310  150E                     u4970:
  4311  150E  3EFF               	addlw	-1
  4312  150F  1D03               	skipz
  4313  1510  2D0A               	goto	u4975
  4314  1511  0835               	movf	??___ftmul,w
  4315  1512  00B8               	movwf	??___ftmul+3
  4316  1513  0838               	movf	??___ftmul+3,w
  4317  1514  06BE               	xorwf	___ftmul@sign,f
  4318  1515  3080               	movlw	128
  4319  1516  00B5               	movwf	??___ftmul
  4320  1517  0835               	movf	??___ftmul,w
  4321  1518  05BE               	andwf	___ftmul@sign,f
  4322  1519                     l3313:
  4323  1519  17B0               	bsf	___ftmul@f1+1,7
  4324  151A                     l3315:
  4325  151A  17B3               	bsf	___ftmul@f2+1,7
  4326  151B                     l3317:
  4327  151B  30FF               	movlw	255
  4328  151C  05B2               	andwf	___ftmul@f2,f
  4329  151D  30FF               	movlw	255
  4330  151E  05B3               	andwf	___ftmul@f2+1,f
  4331  151F  3000               	movlw	0
  4332  1520  05B4               	andwf	___ftmul@f2+2,f
  4333  1521                     l3319:
  4334  1521  3000               	movlw	0
  4335  1522  00BA               	movwf	___ftmul@f3_as_product
  4336  1523  3000               	movlw	0
  4337  1524  00BB               	movwf	___ftmul@f3_as_product+1
  4338  1525  3000               	movlw	0
  4339  1526  00BC               	movwf	___ftmul@f3_as_product+2
  4340  1527                     l3321:
  4341  1527  3007               	movlw	7
  4342  1528  00B5               	movwf	??___ftmul
  4343  1529  0835               	movf	??___ftmul,w
  4344  152A  00BD               	movwf	___ftmul@cntr
  4345  152B                     l3323:
  4346  152B  1C2F               	btfss	___ftmul@f1,0
  4347  152C  2D2E               	goto	u4981
  4348  152D  2D2F               	goto	u4980
  4349  152E                     u4981:
  4350  152E  2D3F               	goto	l3327
  4351  152F                     u4980:
  4352  152F                     l3325:
  4353  152F  0832               	movf	___ftmul@f2,w
  4354  1530  07BA               	addwf	___ftmul@f3_as_product,f
  4355  1531  0833               	movf	___ftmul@f2+1,w
  4356  1532  1103               	clrz
  4357  1533  1803               	skipnc
  4358  1534  0A33               	incf	___ftmul@f2+1,w
  4359  1535  1903               	skipnz
  4360  1536  2D38               	goto	u4991
  4361  1537  07BB               	addwf	___ftmul@f3_as_product+1,f
  4362  1538                     u4991:
  4363  1538  0834               	movf	___ftmul@f2+2,w
  4364  1539  1103               	clrz
  4365  153A  1803               	skipnc
  4366  153B  0A34               	incf	___ftmul@f2+2,w
  4367  153C  1903               	skipnz
  4368  153D  2D3F               	goto	u4992
  4369  153E  07BC               	addwf	___ftmul@f3_as_product+2,f
  4370  153F                     u4992:
  4371  153F                     l3327:
  4372  153F  3001               	movlw	1
  4373  1540                     u5005:
  4374  1540  1003               	clrc
  4375  1541  0CB1               	rrf	___ftmul@f1+2,f
  4376  1542  0CB0               	rrf	___ftmul@f1+1,f
  4377  1543  0CAF               	rrf	___ftmul@f1,f
  4378  1544  3EFF               	addlw	-1
  4379  1545  1D03               	skipz
  4380  1546  2D40               	goto	u5005
  4381  1547                     l3329:
  4382  1547  3001               	movlw	1
  4383  1548                     u5015:
  4384  1548  1003               	clrc
  4385  1549  0DB2               	rlf	___ftmul@f2,f
  4386  154A  0DB3               	rlf	___ftmul@f2+1,f
  4387  154B  0DB4               	rlf	___ftmul@f2+2,f
  4388  154C  3EFF               	addlw	-1
  4389  154D  1D03               	skipz
  4390  154E  2D48               	goto	u5015
  4391  154F                     l3331:
  4392  154F  3001               	movlw	1
  4393  1550  02BD               	subwf	___ftmul@cntr,f
  4394  1551  1D03               	btfss	3,2
  4395  1552  2D54               	goto	u5021
  4396  1553  2D55               	goto	u5020
  4397  1554                     u5021:
  4398  1554  2D2B               	goto	l3323
  4399  1555                     u5020:
  4400  1555                     l3333:
  4401  1555  3009               	movlw	9
  4402  1556  00B5               	movwf	??___ftmul
  4403  1557  0835               	movf	??___ftmul,w
  4404  1558  00BD               	movwf	___ftmul@cntr
  4405  1559                     l3335:
  4406  1559  1C2F               	btfss	___ftmul@f1,0
  4407  155A  2D5C               	goto	u5031
  4408  155B  2D5D               	goto	u5030
  4409  155C                     u5031:
  4410  155C  2D6D               	goto	l3339
  4411  155D                     u5030:
  4412  155D                     l3337:
  4413  155D  0832               	movf	___ftmul@f2,w
  4414  155E  07BA               	addwf	___ftmul@f3_as_product,f
  4415  155F  0833               	movf	___ftmul@f2+1,w
  4416  1560  1103               	clrz
  4417  1561  1803               	skipnc
  4418  1562  0A33               	incf	___ftmul@f2+1,w
  4419  1563  1903               	skipnz
  4420  1564  2D66               	goto	u5041
  4421  1565  07BB               	addwf	___ftmul@f3_as_product+1,f
  4422  1566                     u5041:
  4423  1566  0834               	movf	___ftmul@f2+2,w
  4424  1567  1103               	clrz
  4425  1568  1803               	skipnc
  4426  1569  0A34               	incf	___ftmul@f2+2,w
  4427  156A  1903               	skipnz
  4428  156B  2D6D               	goto	u5042
  4429  156C  07BC               	addwf	___ftmul@f3_as_product+2,f
  4430  156D                     u5042:
  4431  156D                     l3339:
  4432  156D  3001               	movlw	1
  4433  156E                     u5055:
  4434  156E  1003               	clrc
  4435  156F  0CB1               	rrf	___ftmul@f1+2,f
  4436  1570  0CB0               	rrf	___ftmul@f1+1,f
  4437  1571  0CAF               	rrf	___ftmul@f1,f
  4438  1572  3EFF               	addlw	-1
  4439  1573  1D03               	skipz
  4440  1574  2D6E               	goto	u5055
  4441  1575                     l3341:
  4442  1575  3001               	movlw	1
  4443  1576                     u5065:
  4444  1576  1003               	clrc
  4445  1577  0CBC               	rrf	___ftmul@f3_as_product+2,f
  4446  1578  0CBB               	rrf	___ftmul@f3_as_product+1,f
  4447  1579  0CBA               	rrf	___ftmul@f3_as_product,f
  4448  157A  3EFF               	addlw	-1
  4449  157B  1D03               	skipz
  4450  157C  2D76               	goto	u5065
  4451  157D                     l3343:
  4452  157D  3001               	movlw	1
  4453  157E  02BD               	subwf	___ftmul@cntr,f
  4454  157F  1D03               	btfss	3,2
  4455  1580  2D82               	goto	u5071
  4456  1581  2D83               	goto	u5070
  4457  1582                     u5071:
  4458  1582  2D59               	goto	l3335
  4459  1583                     u5070:
  4460  1583                     l3345:
  4461  1583  083A               	movf	___ftmul@f3_as_product,w
  4462  1584  00F4               	movwf	___ftpack@arg
  4463  1585  083B               	movf	___ftmul@f3_as_product+1,w
  4464  1586  00F5               	movwf	___ftpack@arg+1
  4465  1587  083C               	movf	___ftmul@f3_as_product+2,w
  4466  1588  00F6               	movwf	___ftpack@arg+2
  4467  1589  0839               	movf	___ftmul@exp,w
  4468  158A  00B5               	movwf	??___ftmul
  4469  158B  0835               	movf	??___ftmul,w
  4470  158C  00F7               	movwf	___ftpack@exp
  4471  158D  083E               	movf	___ftmul@sign,w
  4472  158E  00B6               	movwf	??___ftmul+1
  4473  158F  0836               	movf	??___ftmul+1,w
  4474  1590  00F8               	movwf	___ftpack@sign
  4475  1591  160A  118A  22EF  160A  118A  	fcall	___ftpack
  4476  1596  0874               	movf	?___ftpack,w
  4477  1597  1283               	bcf	3,5	;RP0=0, select bank0
  4478  1598  1303               	bcf	3,6	;RP1=0, select bank0
  4479  1599  00AF               	movwf	?___ftmul
  4480  159A  0875               	movf	?___ftpack+1,w
  4481  159B  00B0               	movwf	?___ftmul+1
  4482  159C  0876               	movf	?___ftpack+2,w
  4483  159D  00B1               	movwf	?___ftmul+2
  4484  159E                     l704:
  4485  159E  0008               	return
  4486  159F                     __end_of___ftmul:
  4487                           
  4488                           	psect	text10
  4489  1E7F                     __ptext10:	
  4490 ;; *************** function ___bmul *****************
  4491 ;; Defined at:
  4492 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  multiplier      1    wreg     unsigned char 
  4495 ;;  multiplicand    1   11[BANK0 ] unsigned char 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  multiplier      1   14[BANK0 ] unsigned char 
  4498 ;;  product         1   13[BANK0 ] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      unsigned char 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4508 ;;      Params:         0       1       0       0       0
  4509 ;;      Locals:         0       2       0       0       0
  4510 ;;      Temps:          0       1       0       0       0
  4511 ;;      Totals:         0       4       0       0       0
  4512 ;;Total ram usage:        4 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_fround
  4519 ;;		_scale
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function ___bmul
  4525  1E7F                     ___bmul:
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4529                           ;___bmul@multiplier stored from wreg
  4530  1E7F  1283               	bcf	3,5	;RP0=0, select bank0
  4531  1E80  1303               	bcf	3,6	;RP1=0, select bank0
  4532  1E81  00AE               	movwf	___bmul@multiplier
  4533  1E82                     l2061:
  4534  1E82  01AD               	clrf	___bmul@product
  4535  1E83                     l2063:
  4536  1E83  1C2E               	btfss	___bmul@multiplier,0
  4537  1E84  2E86               	goto	u2371
  4538  1E85  2E87               	goto	u2370
  4539  1E86                     u2371:
  4540  1E86  2E8B               	goto	l2067
  4541  1E87                     u2370:
  4542  1E87                     l2065:
  4543  1E87  082B               	movf	___bmul@multiplicand,w
  4544  1E88  00AC               	movwf	??___bmul
  4545  1E89  082C               	movf	??___bmul,w
  4546  1E8A  07AD               	addwf	___bmul@product,f
  4547  1E8B                     l2067:
  4548  1E8B  1003               	clrc
  4549  1E8C  0DAB               	rlf	___bmul@multiplicand,f
  4550  1E8D                     l2069:
  4551  1E8D  1003               	clrc
  4552  1E8E  0CAE               	rrf	___bmul@multiplier,f
  4553  1E8F  082E               	movf	___bmul@multiplier,w
  4554  1E90  1D03               	btfss	3,2
  4555  1E91  2E93               	goto	u2381
  4556  1E92  2E94               	goto	u2380
  4557  1E93                     u2381:
  4558  1E93  2E83               	goto	l2063
  4559  1E94                     u2380:
  4560  1E94                     l2071:
  4561  1E94  082D               	movf	___bmul@product,w
  4562  1E95                     l421:
  4563  1E95  0008               	return
  4564  1E96                     __end_of___bmul:
  4565                           
  4566                           	psect	text11
  4567  13FD                     __ptext11:	
  4568 ;; *************** function __tdiv_to_l_ *****************
  4569 ;; Defined at:
  4570 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  f1              3    0[BANK0 ] float 
  4573 ;;  f2              3    3[BANK0 ] float 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  quot            4    6[BANK0 ] unsigned long 
  4576 ;;  exp1            1   11[BANK0 ] unsigned char 
  4577 ;;  cntr            1   10[BANK0 ] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  4    0[BANK0 ] unsigned long 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4587 ;;      Params:         0       6       0       0       0
  4588 ;;      Locals:         0       6       0       0       0
  4589 ;;      Temps:          4       0       0       0       0
  4590 ;;      Totals:         4      12       0       0       0
  4591 ;;Total ram usage:       16 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    1
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_sprintf
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function __tdiv_to_l_
  4603  13FD                     __tdiv_to_l_:
  4604  13FD                     l3433:	
  4605                           ;incstack = 0
  4606                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4607                           
  4608  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  4609  13FE  1303               	bcf	3,6	;RP1=0, select bank0
  4610  13FF  0820               	movf	__tdiv_to_l_@f1,w
  4611  1400  00F4               	movwf	??__tdiv_to_l_
  4612  1401  0821               	movf	__tdiv_to_l_@f1+1,w
  4613  1402  00F5               	movwf	??__tdiv_to_l_+1
  4614  1403  0822               	movf	__tdiv_to_l_@f1+2,w
  4615  1404  00F6               	movwf	??__tdiv_to_l_+2
  4616  1405  1003               	clrc
  4617  1406  0D75               	rlf	??__tdiv_to_l_+1,w
  4618  1407  0D76               	rlf	??__tdiv_to_l_+2,w
  4619  1408  00F7               	movwf	??__tdiv_to_l_+3
  4620  1409  0877               	movf	??__tdiv_to_l_+3,w
  4621  140A  00AB               	movwf	__tdiv_to_l_@exp1
  4622  140B  082B               	movf	__tdiv_to_l_@exp1,w
  4623  140C  1D03               	btfss	3,2
  4624  140D  2C0F               	goto	u5211
  4625  140E  2C10               	goto	u5210
  4626  140F                     u5211:
  4627  140F  2C19               	goto	l3439
  4628  1410                     u5210:
  4629  1410                     l3435:
  4630  1410  3000               	movlw	0
  4631  1411  00A3               	movwf	?__tdiv_to_l_+3
  4632  1412  3000               	movlw	0
  4633  1413  00A2               	movwf	?__tdiv_to_l_+2
  4634  1414  3000               	movlw	0
  4635  1415  00A1               	movwf	?__tdiv_to_l_+1
  4636  1416  3000               	movlw	0
  4637  1417  00A0               	movwf	?__tdiv_to_l_
  4638  1418  2CB9               	goto	l680
  4639  1419                     l3439:
  4640  1419  0823               	movf	__tdiv_to_l_@f2,w
  4641  141A  00F4               	movwf	??__tdiv_to_l_
  4642  141B  0824               	movf	__tdiv_to_l_@f2+1,w
  4643  141C  00F5               	movwf	??__tdiv_to_l_+1
  4644  141D  0825               	movf	__tdiv_to_l_@f2+2,w
  4645  141E  00F6               	movwf	??__tdiv_to_l_+2
  4646  141F  1003               	clrc
  4647  1420  0D75               	rlf	??__tdiv_to_l_+1,w
  4648  1421  0D76               	rlf	??__tdiv_to_l_+2,w
  4649  1422  00F7               	movwf	??__tdiv_to_l_+3
  4650  1423  0877               	movf	??__tdiv_to_l_+3,w
  4651  1424  00AA               	movwf	__tdiv_to_l_@cntr
  4652  1425  082A               	movf	__tdiv_to_l_@cntr,w
  4653  1426  1D03               	btfss	3,2
  4654  1427  2C29               	goto	u5221
  4655  1428  2C2A               	goto	u5220
  4656  1429                     u5221:
  4657  1429  2C2B               	goto	l681
  4658  142A                     u5220:
  4659  142A  2C10               	goto	l3435
  4660  142B                     l681:
  4661  142B  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4662  142C                     l3445:
  4663  142C  30FF               	movlw	255
  4664  142D  05A0               	andwf	__tdiv_to_l_@f1,f
  4665  142E  30FF               	movlw	255
  4666  142F  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4667  1430  3000               	movlw	0
  4668  1431  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4669  1432                     l3447:
  4670  1432  17A4               	bsf	__tdiv_to_l_@f2+1,7
  4671  1433  30FF               	movlw	255
  4672  1434  05A3               	andwf	__tdiv_to_l_@f2,f
  4673  1435  30FF               	movlw	255
  4674  1436  05A4               	andwf	__tdiv_to_l_@f2+1,f
  4675  1437  3000               	movlw	0
  4676  1438  05A5               	andwf	__tdiv_to_l_@f2+2,f
  4677  1439  3000               	movlw	0
  4678  143A  00A9               	movwf	__tdiv_to_l_@quot+3
  4679  143B  3000               	movlw	0
  4680  143C  00A8               	movwf	__tdiv_to_l_@quot+2
  4681  143D  3000               	movlw	0
  4682  143E  00A7               	movwf	__tdiv_to_l_@quot+1
  4683  143F  3000               	movlw	0
  4684  1440  00A6               	movwf	__tdiv_to_l_@quot
  4685  1441                     l3449:
  4686  1441  307F               	movlw	127
  4687  1442  02AB               	subwf	__tdiv_to_l_@exp1,f
  4688  1443                     l3451:
  4689  1443  3098               	movlw	152
  4690  1444  072A               	addwf	__tdiv_to_l_@cntr,w
  4691  1445  00F4               	movwf	??__tdiv_to_l_
  4692  1446  0874               	movf	??__tdiv_to_l_,w
  4693  1447  02AB               	subwf	__tdiv_to_l_@exp1,f
  4694  1448  3018               	movlw	24
  4695  1449  00F4               	movwf	??__tdiv_to_l_
  4696  144A  0874               	movf	??__tdiv_to_l_,w
  4697  144B  00AA               	movwf	__tdiv_to_l_@cntr
  4698  144C                     l3453:
  4699  144C  3001               	movlw	1
  4700  144D  00F4               	movwf	??__tdiv_to_l_
  4701  144E                     u5235:
  4702  144E  1003               	clrc
  4703  144F  0DA6               	rlf	__tdiv_to_l_@quot,f
  4704  1450  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  4705  1451  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  4706  1452  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  4707  1453  0BF4               	decfsz	??__tdiv_to_l_,f
  4708  1454  2C4E               	goto	u5235
  4709  1455                     l3455:
  4710  1455  0825               	movf	__tdiv_to_l_@f2+2,w
  4711  1456  0222               	subwf	__tdiv_to_l_@f1+2,w
  4712  1457  1D03               	skipz
  4713  1458  2C5F               	goto	u5245
  4714  1459  0824               	movf	__tdiv_to_l_@f2+1,w
  4715  145A  0221               	subwf	__tdiv_to_l_@f1+1,w
  4716  145B  1D03               	skipz
  4717  145C  2C5F               	goto	u5245
  4718  145D  0823               	movf	__tdiv_to_l_@f2,w
  4719  145E  0220               	subwf	__tdiv_to_l_@f1,w
  4720  145F                     u5245:
  4721  145F  1C03               	skipc
  4722  1460  2C62               	goto	u5241
  4723  1461  2C63               	goto	u5240
  4724  1462                     u5241:
  4725  1462  2C6E               	goto	l3461
  4726  1463                     u5240:
  4727  1463                     l3457:
  4728  1463  0823               	movf	__tdiv_to_l_@f2,w
  4729  1464  02A0               	subwf	__tdiv_to_l_@f1,f
  4730  1465  0824               	movf	__tdiv_to_l_@f2+1,w
  4731  1466  1C03               	skipc
  4732  1467  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  4733  1468  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4734  1469  0825               	movf	__tdiv_to_l_@f2+2,w
  4735  146A  1C03               	skipc
  4736  146B  0A25               	incf	__tdiv_to_l_@f2+2,w
  4737  146C  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4738  146D                     l3459:
  4739  146D  1426               	bsf	__tdiv_to_l_@quot,0
  4740  146E                     l3461:
  4741  146E  3001               	movlw	1
  4742  146F                     u5255:
  4743  146F  1003               	clrc
  4744  1470  0DA0               	rlf	__tdiv_to_l_@f1,f
  4745  1471  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4746  1472  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4747  1473  3EFF               	addlw	-1
  4748  1474  1D03               	skipz
  4749  1475  2C6F               	goto	u5255
  4750  1476                     l3463:
  4751  1476  3001               	movlw	1
  4752  1477  02AA               	subwf	__tdiv_to_l_@cntr,f
  4753  1478  1D03               	btfss	3,2
  4754  1479  2C7B               	goto	u5261
  4755  147A  2C7C               	goto	u5260
  4756  147B                     u5261:
  4757  147B  2C4C               	goto	l3453
  4758  147C                     u5260:
  4759  147C                     l684:
  4760  147C  1FAB               	btfss	__tdiv_to_l_@exp1,7
  4761  147D  2C7F               	goto	u5271
  4762  147E  2C80               	goto	u5270
  4763  147F                     u5271:
  4764  147F  2C9A               	goto	l3473
  4765  1480                     u5270:
  4766  1480                     l3465:
  4767  1480  082B               	movf	__tdiv_to_l_@exp1,w
  4768  1481  3A80               	xorlw	128
  4769  1482  3E97               	addlw	151
  4770  1483  1803               	skipnc
  4771  1484  2C86               	goto	u5281
  4772  1485  2C87               	goto	u5280
  4773  1486                     u5281:
  4774  1486  2C88               	goto	l3471
  4775  1487                     u5280:
  4776  1487  2C10               	goto	l3435
  4777  1488                     l3471:
  4778  1488  3001               	movlw	1
  4779  1489                     u5295:
  4780  1489  1003               	clrc
  4781  148A  0CA9               	rrf	__tdiv_to_l_@quot+3,f
  4782  148B  0CA8               	rrf	__tdiv_to_l_@quot+2,f
  4783  148C  0CA7               	rrf	__tdiv_to_l_@quot+1,f
  4784  148D  0CA6               	rrf	__tdiv_to_l_@quot,f
  4785  148E  3EFF               	addlw	-1
  4786  148F  1D03               	skipz
  4787  1490  2C89               	goto	u5295
  4788  1491  3001               	movlw	1
  4789  1492  00F4               	movwf	??__tdiv_to_l_
  4790  1493  0874               	movf	??__tdiv_to_l_,w
  4791  1494  07AB               	addwf	__tdiv_to_l_@exp1,f
  4792  1495  1D03               	btfss	3,2
  4793  1496  2C98               	goto	u5301
  4794  1497  2C99               	goto	u5300
  4795  1498                     u5301:
  4796  1498  2C88               	goto	l3471
  4797  1499                     u5300:
  4798  1499  2CB1               	goto	l3481
  4799  149A                     l3473:
  4800  149A  3018               	movlw	24
  4801  149B  022B               	subwf	__tdiv_to_l_@exp1,w
  4802  149C  1C03               	skipc
  4803  149D  2C9F               	goto	u5311
  4804  149E  2CA0               	goto	u5310
  4805  149F                     u5311:
  4806  149F  2CAC               	goto	l691
  4807  14A0                     u5310:
  4808  14A0  2C10               	goto	l3435
  4809  14A1                     l3479:
  4810  14A1  3001               	movlw	1
  4811  14A2  00F4               	movwf	??__tdiv_to_l_
  4812  14A3                     u5325:
  4813  14A3  1003               	clrc
  4814  14A4  0DA6               	rlf	__tdiv_to_l_@quot,f
  4815  14A5  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  4816  14A6  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  4817  14A7  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  4818  14A8  0BF4               	decfsz	??__tdiv_to_l_,f
  4819  14A9  2CA3               	goto	u5325
  4820  14AA  3001               	movlw	1
  4821  14AB  02AB               	subwf	__tdiv_to_l_@exp1,f
  4822  14AC                     l691:
  4823  14AC  082B               	movf	__tdiv_to_l_@exp1,w
  4824  14AD  1D03               	btfss	3,2
  4825  14AE  2CB0               	goto	u5331
  4826  14AF  2CB1               	goto	u5330
  4827  14B0                     u5331:
  4828  14B0  2CA1               	goto	l3479
  4829  14B1                     u5330:
  4830  14B1                     l3481:
  4831  14B1  0829               	movf	__tdiv_to_l_@quot+3,w
  4832  14B2  00A3               	movwf	?__tdiv_to_l_+3
  4833  14B3  0828               	movf	__tdiv_to_l_@quot+2,w
  4834  14B4  00A2               	movwf	?__tdiv_to_l_+2
  4835  14B5  0827               	movf	__tdiv_to_l_@quot+1,w
  4836  14B6  00A1               	movwf	?__tdiv_to_l_+1
  4837  14B7  0826               	movf	__tdiv_to_l_@quot,w
  4838  14B8  00A0               	movwf	?__tdiv_to_l_
  4839  14B9                     l680:
  4840  14B9  0008               	return
  4841  14BA                     __end_of__tdiv_to_l_:
  4842                           
  4843                           	psect	text12
  4844  159F                     __ptext12:	
  4845 ;; *************** function __div_to_l_ *****************
  4846 ;; Defined at:
  4847 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  f1              3    0[BANK0 ] unsigned long 
  4850 ;;  f2              3    3[BANK0 ] unsigned long 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  quot            4   14[BANK0 ] unsigned long 
  4853 ;;  exp1            1   19[BANK0 ] unsigned char 
  4854 ;;  cntr            1   18[BANK0 ] unsigned char 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  4    0[BANK0 ] unsigned long 
  4857 ;; Registers used:
  4858 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4864 ;;      Params:         0       6       0       0       0
  4865 ;;      Locals:         0       6       0       0       0
  4866 ;;      Temps:          0       8       0       0       0
  4867 ;;      Totals:         0      20       0       0       0
  4868 ;;Total ram usage:       20 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:    1
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_sprintf
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           
  4879                           ;psect for function __div_to_l_
  4880  159F                     __div_to_l_:
  4881  159F                     l3485:	
  4882                           ;incstack = 0
  4883                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4884                           
  4885  159F  3020               	movlw	low (__div_to_l_@f1| 0)
  4886  15A0  0084               	movwf	4
  4887  15A1  1383               	bcf	3,7	;select IRP bank0
  4888  15A2  0800               	movf	0,w
  4889  15A3  1283               	bcf	3,5	;RP0=0, select bank0
  4890  15A4  1303               	bcf	3,6	;RP1=0, select bank0
  4891  15A5  00A6               	movwf	??__div_to_l_
  4892  15A6  0A84               	incf	4,f
  4893  15A7  0800               	movf	0,w
  4894  15A8  00A7               	movwf	??__div_to_l_+1
  4895  15A9  0A84               	incf	4,f
  4896  15AA  0800               	movf	0,w
  4897  15AB  00A8               	movwf	??__div_to_l_+2
  4898  15AC  0A84               	incf	4,f
  4899  15AD  0800               	movf	0,w
  4900  15AE  00A9               	movwf	??__div_to_l_+3
  4901  15AF  1003               	clrc
  4902  15B0  0D28               	rlf	??__div_to_l_+2,w
  4903  15B1  0D29               	rlf	??__div_to_l_+3,w
  4904  15B2  00AA               	movwf	??__div_to_l_+4
  4905  15B3  082A               	movf	??__div_to_l_+4,w
  4906  15B4  00B3               	movwf	__div_to_l_@exp1
  4907  15B5  0833               	movf	__div_to_l_@exp1,w
  4908  15B6  1D03               	btfss	3,2
  4909  15B7  2DB9               	goto	u5341
  4910  15B8  2DBA               	goto	u5340
  4911  15B9                     u5341:
  4912  15B9  2DC3               	goto	l3491
  4913  15BA                     u5340:
  4914  15BA                     l3487:
  4915  15BA  3000               	movlw	0
  4916  15BB  00A3               	movwf	?__div_to_l_+3
  4917  15BC  3000               	movlw	0
  4918  15BD  00A2               	movwf	?__div_to_l_+2
  4919  15BE  3000               	movlw	0
  4920  15BF  00A1               	movwf	?__div_to_l_+1
  4921  15C0  3000               	movlw	0
  4922  15C1  00A0               	movwf	?__div_to_l_
  4923  15C2  2ECB               	goto	l601
  4924  15C3                     l3491:
  4925  15C3  3023               	movlw	low (__div_to_l_@f2| 0)
  4926  15C4  0084               	movwf	4
  4927  15C5  0800               	movf	0,w
  4928  15C6  00A6               	movwf	??__div_to_l_
  4929  15C7  0A84               	incf	4,f
  4930  15C8  0800               	movf	0,w
  4931  15C9  00A7               	movwf	??__div_to_l_+1
  4932  15CA  0A84               	incf	4,f
  4933  15CB  0800               	movf	0,w
  4934  15CC  00A8               	movwf	??__div_to_l_+2
  4935  15CD  0A84               	incf	4,f
  4936  15CE  0800               	movf	0,w
  4937  15CF  00A9               	movwf	??__div_to_l_+3
  4938  15D0  1003               	clrc
  4939  15D1  0D28               	rlf	??__div_to_l_+2,w
  4940  15D2  0D29               	rlf	??__div_to_l_+3,w
  4941  15D3  00AA               	movwf	??__div_to_l_+4
  4942  15D4  082A               	movf	??__div_to_l_+4,w
  4943  15D5  00B2               	movwf	__div_to_l_@cntr
  4944  15D6  0832               	movf	__div_to_l_@cntr,w
  4945  15D7  1D03               	btfss	3,2
  4946  15D8  2DDA               	goto	u5351
  4947  15D9  2DDB               	goto	u5350
  4948  15DA                     u5351:
  4949  15DA  2DDC               	goto	l3497
  4950  15DB                     u5350:
  4951  15DB  2DBA               	goto	l3487
  4952  15DC                     l3497:
  4953  15DC  3020               	movlw	low (__div_to_l_@f1| 0)
  4954  15DD  0084               	movwf	4
  4955  15DE  3000               	movlw	0
  4956  15DF  0480               	iorwf	0,f
  4957  15E0  0A84               	incf	4,f
  4958  15E1  3000               	movlw	0
  4959  15E2  0480               	iorwf	0,f
  4960  15E3  0A84               	incf	4,f
  4961  15E4  3080               	movlw	128
  4962  15E5  0480               	iorwf	0,f
  4963  15E6  0A84               	incf	4,f
  4964  15E7  3000               	movlw	0
  4965  15E8  0480               	iorwf	0,f
  4966  15E9  3020               	movlw	low (__div_to_l_@f1| 0)
  4967  15EA  0084               	movwf	4
  4968  15EB  30FF               	movlw	255
  4969  15EC  0580               	andwf	0,f
  4970  15ED  0A84               	incf	4,f
  4971  15EE  30FF               	movlw	255
  4972  15EF  0580               	andwf	0,f
  4973  15F0  0A84               	incf	4,f
  4974  15F1  30FF               	movlw	255
  4975  15F2  0580               	andwf	0,f
  4976  15F3  0A84               	incf	4,f
  4977  15F4  3000               	movlw	0
  4978  15F5  0580               	andwf	0,f
  4979  15F6  3023               	movlw	low (__div_to_l_@f2| 0)
  4980  15F7  0084               	movwf	4
  4981  15F8  3000               	movlw	0
  4982  15F9  0480               	iorwf	0,f
  4983  15FA  0A84               	incf	4,f
  4984  15FB  3000               	movlw	0
  4985  15FC  0480               	iorwf	0,f
  4986  15FD  0A84               	incf	4,f
  4987  15FE  3080               	movlw	128
  4988  15FF  0480               	iorwf	0,f
  4989  1600  0A84               	incf	4,f
  4990  1601  3000               	movlw	0
  4991  1602  0480               	iorwf	0,f
  4992  1603  3023               	movlw	low (__div_to_l_@f2| 0)
  4993  1604  0084               	movwf	4
  4994  1605  30FF               	movlw	255
  4995  1606  0580               	andwf	0,f
  4996  1607  0A84               	incf	4,f
  4997  1608  30FF               	movlw	255
  4998  1609  0580               	andwf	0,f
  4999  160A  0A84               	incf	4,f
  5000  160B  30FF               	movlw	255
  5001  160C  0580               	andwf	0,f
  5002  160D  0A84               	incf	4,f
  5003  160E  3000               	movlw	0
  5004  160F  0580               	andwf	0,f
  5005  1610                     l3499:
  5006  1610  3000               	movlw	0
  5007  1611  00B1               	movwf	__div_to_l_@quot+3
  5008  1612  3000               	movlw	0
  5009  1613  00B0               	movwf	__div_to_l_@quot+2
  5010  1614  3000               	movlw	0
  5011  1615  00AF               	movwf	__div_to_l_@quot+1
  5012  1616  3000               	movlw	0
  5013  1617  00AE               	movwf	__div_to_l_@quot
  5014  1618                     l3501:
  5015  1618  307F               	movlw	127
  5016  1619  02B3               	subwf	__div_to_l_@exp1,f
  5017  161A                     l3503:
  5018  161A  30A0               	movlw	160
  5019  161B  0732               	addwf	__div_to_l_@cntr,w
  5020  161C  00A6               	movwf	??__div_to_l_
  5021  161D  0826               	movf	??__div_to_l_,w
  5022  161E  02B3               	subwf	__div_to_l_@exp1,f
  5023  161F                     l3505:
  5024  161F  3020               	movlw	32
  5025  1620  00A6               	movwf	??__div_to_l_
  5026  1621  0826               	movf	??__div_to_l_,w
  5027  1622  00B2               	movwf	__div_to_l_@cntr
  5028  1623                     l3507:
  5029  1623  3001               	movlw	1
  5030  1624  00A6               	movwf	??__div_to_l_
  5031  1625                     u5365:
  5032  1625  1003               	clrc
  5033  1626  0DAE               	rlf	__div_to_l_@quot,f
  5034  1627  0DAF               	rlf	__div_to_l_@quot+1,f
  5035  1628  0DB0               	rlf	__div_to_l_@quot+2,f
  5036  1629  0DB1               	rlf	__div_to_l_@quot+3,f
  5037  162A  0BA6               	decfsz	??__div_to_l_,f
  5038  162B  2E25               	goto	u5365
  5039  162C                     l3509:
  5040  162C  3023               	movlw	low (__div_to_l_@f2| 0)
  5041  162D  0084               	movwf	4
  5042  162E  0800               	movf	0,w
  5043  162F  00A6               	movwf	??__div_to_l_
  5044  1630  0A84               	incf	4,f
  5045  1631  0800               	movf	0,w
  5046  1632  00A7               	movwf	??__div_to_l_+1
  5047  1633  0A84               	incf	4,f
  5048  1634  0800               	movf	0,w
  5049  1635  00A8               	movwf	??__div_to_l_+2
  5050  1636  0A84               	incf	4,f
  5051  1637  0800               	movf	0,w
  5052  1638  00A9               	movwf	??__div_to_l_+3
  5053  1639  3020               	movlw	low (__div_to_l_@f1| 0)
  5054  163A  0084               	movwf	4
  5055  163B  0800               	movf	0,w
  5056  163C  00AA               	movwf	??__div_to_l_+4
  5057  163D  0A84               	incf	4,f
  5058  163E  0800               	movf	0,w
  5059  163F  00AB               	movwf	??__div_to_l_+5
  5060  1640  0A84               	incf	4,f
  5061  1641  0800               	movf	0,w
  5062  1642  00AC               	movwf	??__div_to_l_+6
  5063  1643  0A84               	incf	4,f
  5064  1644  0800               	movf	0,w
  5065  1645  00AD               	movwf	??__div_to_l_+7
  5066  1646  0829               	movf	??__div_to_l_+3,w
  5067  1647  022D               	subwf	??__div_to_l_+7,w
  5068  1648  1D03               	skipz
  5069  1649  2E54               	goto	u5375
  5070  164A  0828               	movf	??__div_to_l_+2,w
  5071  164B  022C               	subwf	??__div_to_l_+6,w
  5072  164C  1D03               	skipz
  5073  164D  2E54               	goto	u5375
  5074  164E  0827               	movf	??__div_to_l_+1,w
  5075  164F  022B               	subwf	??__div_to_l_+5,w
  5076  1650  1D03               	skipz
  5077  1651  2E54               	goto	u5375
  5078  1652  0826               	movf	??__div_to_l_,w
  5079  1653  022A               	subwf	??__div_to_l_+4,w
  5080  1654                     u5375:
  5081  1654  1C03               	skipc
  5082  1655  2E57               	goto	u5371
  5083  1656  2E58               	goto	u5370
  5084  1657                     u5371:
  5085  1657  2E7B               	goto	l604
  5086  1658                     u5370:
  5087  1658                     l3511:
  5088  1658  3023               	movlw	low (__div_to_l_@f2| 0)
  5089  1659  0084               	movwf	4
  5090  165A  0800               	movf	0,w
  5091  165B  00A6               	movwf	??__div_to_l_
  5092  165C  0A84               	incf	4,f
  5093  165D  0800               	movf	0,w
  5094  165E  00A7               	movwf	??__div_to_l_+1
  5095  165F  0A84               	incf	4,f
  5096  1660  0800               	movf	0,w
  5097  1661  00A8               	movwf	??__div_to_l_+2
  5098  1662  0A84               	incf	4,f
  5099  1663  0800               	movf	0,w
  5100  1664  00A9               	movwf	??__div_to_l_+3
  5101  1665  3020               	movlw	low (__div_to_l_@f1| 0)
  5102  1666  0084               	movwf	4
  5103  1667  0826               	movf	??__div_to_l_,w
  5104  1668  0280               	subwf	0,f
  5105  1669  0A84               	incf	4,f
  5106  166A  0827               	movf	??__div_to_l_+1,w
  5107  166B  1C03               	skipc
  5108  166C  0F27               	incfsz	??__div_to_l_+1,w
  5109  166D  0280               	subwf	0,f
  5110  166E  0A84               	incf	4,f
  5111  166F  0828               	movf	??__div_to_l_+2,w
  5112  1670  1C03               	skipc
  5113  1671  0F28               	incfsz	??__div_to_l_+2,w
  5114  1672  0280               	subwf	0,f
  5115  1673  0A84               	incf	4,f
  5116  1674  0829               	movf	??__div_to_l_+3,w
  5117  1675  1C03               	skipc
  5118  1676  0A29               	incf	??__div_to_l_+3,w
  5119  1677  0280               	subwf	0,f
  5120  1678  3003               	movlw	3
  5121  1679  0284               	subwf	4,f
  5122  167A                     l3513:
  5123  167A  142E               	bsf	__div_to_l_@quot,0
  5124  167B                     l604:
  5125  167B  3020               	movlw	low (__div_to_l_@f1| 0)
  5126  167C  0084               	movwf	4
  5127  167D  1003               	clrc
  5128  167E  0D80               	rlf	0,f
  5129  167F  0A84               	incf	4,f
  5130  1680  0D80               	rlf	0,f
  5131  1681  0A84               	incf	4,f
  5132  1682  0D80               	rlf	0,f
  5133  1683  0A84               	incf	4,f
  5134  1684  0D80               	rlf	0,f
  5135  1685  0384               	decf	4,f
  5136  1686  0384               	decf	4,f
  5137  1687  0384               	decf	4,f
  5138  1688                     l3515:
  5139  1688  3001               	movlw	1
  5140  1689  02B2               	subwf	__div_to_l_@cntr,f
  5141  168A  1D03               	btfss	3,2
  5142  168B  2E8D               	goto	u5381
  5143  168C  2E8E               	goto	u5380
  5144  168D                     u5381:
  5145  168D  2E23               	goto	l3507
  5146  168E                     u5380:
  5147  168E                     l605:
  5148  168E  1FB3               	btfss	__div_to_l_@exp1,7
  5149  168F  2E91               	goto	u5391
  5150  1690  2E92               	goto	u5390
  5151  1691                     u5391:
  5152  1691  2EAC               	goto	l3525
  5153  1692                     u5390:
  5154  1692                     l3517:
  5155  1692  0833               	movf	__div_to_l_@exp1,w
  5156  1693  3A80               	xorlw	128
  5157  1694  3E9F               	addlw	159
  5158  1695  1803               	skipnc
  5159  1696  2E98               	goto	u5401
  5160  1697  2E99               	goto	u5400
  5161  1698                     u5401:
  5162  1698  2E9A               	goto	l3523
  5163  1699                     u5400:
  5164  1699  2DBA               	goto	l3487
  5165  169A                     l3523:
  5166  169A  3001               	movlw	1
  5167  169B                     u5415:
  5168  169B  1003               	clrc
  5169  169C  0CB1               	rrf	__div_to_l_@quot+3,f
  5170  169D  0CB0               	rrf	__div_to_l_@quot+2,f
  5171  169E  0CAF               	rrf	__div_to_l_@quot+1,f
  5172  169F  0CAE               	rrf	__div_to_l_@quot,f
  5173  16A0  3EFF               	addlw	-1
  5174  16A1  1D03               	skipz
  5175  16A2  2E9B               	goto	u5415
  5176  16A3  3001               	movlw	1
  5177  16A4  00A6               	movwf	??__div_to_l_
  5178  16A5  0826               	movf	??__div_to_l_,w
  5179  16A6  07B3               	addwf	__div_to_l_@exp1,f
  5180  16A7  1D03               	btfss	3,2
  5181  16A8  2EAA               	goto	u5421
  5182  16A9  2EAB               	goto	u5420
  5183  16AA                     u5421:
  5184  16AA  2E9A               	goto	l3523
  5185  16AB                     u5420:
  5186  16AB  2EC3               	goto	l3533
  5187  16AC                     l3525:
  5188  16AC  3020               	movlw	32
  5189  16AD  0233               	subwf	__div_to_l_@exp1,w
  5190  16AE  1C03               	skipc
  5191  16AF  2EB1               	goto	u5431
  5192  16B0  2EB2               	goto	u5430
  5193  16B1                     u5431:
  5194  16B1  2EBE               	goto	l612
  5195  16B2                     u5430:
  5196  16B2  2DBA               	goto	l3487
  5197  16B3                     l3531:
  5198  16B3  3001               	movlw	1
  5199  16B4  00A6               	movwf	??__div_to_l_
  5200  16B5                     u5445:
  5201  16B5  1003               	clrc
  5202  16B6  0DAE               	rlf	__div_to_l_@quot,f
  5203  16B7  0DAF               	rlf	__div_to_l_@quot+1,f
  5204  16B8  0DB0               	rlf	__div_to_l_@quot+2,f
  5205  16B9  0DB1               	rlf	__div_to_l_@quot+3,f
  5206  16BA  0BA6               	decfsz	??__div_to_l_,f
  5207  16BB  2EB5               	goto	u5445
  5208  16BC  3001               	movlw	1
  5209  16BD  02B3               	subwf	__div_to_l_@exp1,f
  5210  16BE                     l612:
  5211  16BE  0833               	movf	__div_to_l_@exp1,w
  5212  16BF  1D03               	btfss	3,2
  5213  16C0  2EC2               	goto	u5451
  5214  16C1  2EC3               	goto	u5450
  5215  16C2                     u5451:
  5216  16C2  2EB3               	goto	l3531
  5217  16C3                     u5450:
  5218  16C3                     l3533:
  5219  16C3  0831               	movf	__div_to_l_@quot+3,w
  5220  16C4  00A3               	movwf	?__div_to_l_+3
  5221  16C5  0830               	movf	__div_to_l_@quot+2,w
  5222  16C6  00A2               	movwf	?__div_to_l_+2
  5223  16C7  082F               	movf	__div_to_l_@quot+1,w
  5224  16C8  00A1               	movwf	?__div_to_l_+1
  5225  16C9  082E               	movf	__div_to_l_@quot,w
  5226  16CA  00A0               	movwf	?__div_to_l_
  5227  16CB                     l601:
  5228  16CB  0008               	return
  5229  16CC                     __end_of__div_to_l_:
  5230                           
  5231                           	psect	text13
  5232  1F9B                     __ptext13:	
  5233 ;; *************** function ___wmul *****************
  5234 ;; Defined at:
  5235 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  multiplier      2    4[COMMON] unsigned int 
  5238 ;;  multiplicand    2    6[COMMON] unsigned int 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  product         2    0[BANK0 ] unsigned int 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  2    4[COMMON] unsigned int 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5250 ;;      Params:         4       0       0       0       0
  5251 ;;      Locals:         0       2       0       0       0
  5252 ;;      Temps:          0       0       0       0       0
  5253 ;;      Totals:         4       2       0       0       0
  5254 ;;Total ram usage:        6 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    1
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_sprintf
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           
  5265                           ;psect for function ___wmul
  5266  1F9B                     ___wmul:
  5267  1F9B                     l3537:	
  5268                           ;incstack = 0
  5269                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5270                           
  5271  1F9B  1283               	bcf	3,5	;RP0=0, select bank0
  5272  1F9C  1303               	bcf	3,6	;RP1=0, select bank0
  5273  1F9D  01A0               	clrf	___wmul@product
  5274  1F9E  01A1               	clrf	___wmul@product+1
  5275  1F9F                     l3539:
  5276  1F9F  1C74               	btfss	___wmul@multiplier,0
  5277  1FA0  2FA2               	goto	u5461
  5278  1FA1  2FA3               	goto	u5460
  5279  1FA2                     u5461:
  5280  1FA2  2FAB               	goto	l395
  5281  1FA3                     u5460:
  5282  1FA3                     l3541:
  5283  1FA3  0876               	movf	___wmul@multiplicand,w
  5284  1FA4  1283               	bcf	3,5	;RP0=0, select bank0
  5285  1FA5  1303               	bcf	3,6	;RP1=0, select bank0
  5286  1FA6  07A0               	addwf	___wmul@product,f
  5287  1FA7  1803               	skipnc
  5288  1FA8  0AA1               	incf	___wmul@product+1,f
  5289  1FA9  0877               	movf	___wmul@multiplicand+1,w
  5290  1FAA  07A1               	addwf	___wmul@product+1,f
  5291  1FAB                     l395:
  5292  1FAB  3001               	movlw	1
  5293  1FAC                     u5475:
  5294  1FAC  1003               	clrc
  5295  1FAD  0DF6               	rlf	___wmul@multiplicand,f
  5296  1FAE  0DF7               	rlf	___wmul@multiplicand+1,f
  5297  1FAF  3EFF               	addlw	-1
  5298  1FB0  1D03               	skipz
  5299  1FB1  2FAC               	goto	u5475
  5300  1FB2                     l3543:
  5301  1FB2  3001               	movlw	1
  5302  1FB3                     u5485:
  5303  1FB3  1003               	clrc
  5304  1FB4  0CF5               	rrf	___wmul@multiplier+1,f
  5305  1FB5  0CF4               	rrf	___wmul@multiplier,f
  5306  1FB6  3EFF               	addlw	-1
  5307  1FB7  1D03               	skipz
  5308  1FB8  2FB3               	goto	u5485
  5309  1FB9                     l3545:
  5310  1FB9  0874               	movf	___wmul@multiplier,w
  5311  1FBA  0475               	iorwf	___wmul@multiplier+1,w
  5312  1FBB  1D03               	btfss	3,2
  5313  1FBC  2FBE               	goto	u5491
  5314  1FBD  2FBF               	goto	u5490
  5315  1FBE                     u5491:
  5316  1FBE  2F9F               	goto	l3539
  5317  1FBF                     u5490:
  5318  1FBF                     l3547:
  5319  1FBF  1283               	bcf	3,5	;RP0=0, select bank0
  5320  1FC0  1303               	bcf	3,6	;RP1=0, select bank0
  5321  1FC1  0821               	movf	___wmul@product+1,w
  5322  1FC2  00F5               	movwf	?___wmul+1
  5323  1FC3  0820               	movf	___wmul@product,w
  5324  1FC4  00F4               	movwf	?___wmul
  5325  1FC5                     l397:
  5326  1FC5  0008               	return
  5327  1FC6                     __end_of___wmul:
  5328                           
  5329                           	psect	text14
  5330  1006                     __ptext14:	
  5331 ;; *************** function ___lltoft *****************
  5332 ;; Defined at:
  5333 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  c               4    3[BANK0 ] unsigned long 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  exp             1    8[BANK0 ] unsigned char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  3    3[BANK0 ] float 
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0, pclath, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5347 ;;      Params:         0       4       0       0       0
  5348 ;;      Locals:         0       1       0       0       0
  5349 ;;      Temps:          0       1       0       0       0
  5350 ;;      Totals:         0       6       0       0       0
  5351 ;;Total ram usage:        6 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    2
  5354 ;; This function calls:
  5355 ;;		___ftpack
  5356 ;; This function is called by:
  5357 ;;		_sprintf
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           
  5362                           ;psect for function ___lltoft
  5363  1006                     ___lltoft:
  5364  1006                     l3623:	
  5365                           ;incstack = 0
  5366                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5367                           
  5368  1006  308E               	movlw	142
  5369  1007  1283               	bcf	3,5	;RP0=0, select bank0
  5370  1008  1303               	bcf	3,6	;RP1=0, select bank0
  5371  1009  00A7               	movwf	??___lltoft
  5372  100A  0827               	movf	??___lltoft,w
  5373  100B  00A8               	movwf	___lltoft@exp
  5374  100C  281A               	goto	l3627
  5375  100D                     l3625:
  5376  100D  3001               	movlw	1
  5377  100E                     u5675:
  5378  100E  1003               	clrc
  5379  100F  0CA6               	rrf	___lltoft@c+3,f
  5380  1010  0CA5               	rrf	___lltoft@c+2,f
  5381  1011  0CA4               	rrf	___lltoft@c+1,f
  5382  1012  0CA3               	rrf	___lltoft@c,f
  5383  1013  3EFF               	addlw	-1
  5384  1014  1D03               	skipz
  5385  1015  280E               	goto	u5675
  5386  1016  3001               	movlw	1
  5387  1017  00A7               	movwf	??___lltoft
  5388  1018  0827               	movf	??___lltoft,w
  5389  1019  07A8               	addwf	___lltoft@exp,f
  5390  101A                     l3627:
  5391  101A  30FF               	movlw	255
  5392  101B  0526               	andwf	___lltoft@c+3,w
  5393  101C  1D03               	btfss	3,2
  5394  101D  281F               	goto	u5681
  5395  101E  2820               	goto	u5680
  5396  101F                     u5681:
  5397  101F  280D               	goto	l3625
  5398  1020                     u5680:
  5399  1020                     l3629:
  5400  1020  0823               	movf	___lltoft@c,w
  5401  1021  00F4               	movwf	___ftpack@arg
  5402  1022  0824               	movf	___lltoft@c+1,w
  5403  1023  00F5               	movwf	___ftpack@arg+1
  5404  1024  0825               	movf	___lltoft@c+2,w
  5405  1025  00F6               	movwf	___ftpack@arg+2
  5406  1026  0828               	movf	___lltoft@exp,w
  5407  1027  00A7               	movwf	??___lltoft
  5408  1028  0827               	movf	??___lltoft,w
  5409  1029  00F7               	movwf	___ftpack@exp
  5410  102A  01F8               	clrf	___ftpack@sign
  5411  102B  160A  118A  22EF  160A  118A  	fcall	___ftpack
  5412  1030  0874               	movf	?___ftpack,w
  5413  1031  1283               	bcf	3,5	;RP0=0, select bank0
  5414  1032  1303               	bcf	3,6	;RP1=0, select bank0
  5415  1033  00A3               	movwf	?___lltoft
  5416  1034  0875               	movf	?___ftpack+1,w
  5417  1035  00A4               	movwf	?___lltoft+1
  5418  1036  0876               	movf	?___ftpack+2,w
  5419  1037  00A5               	movwf	?___lltoft+2
  5420  1038                     l774:
  5421  1038  0008               	return
  5422  1039                     __end_of___lltoft:
  5423                           
  5424                           	psect	text15
  5425  1155                     __ptext15:	
  5426 ;; *************** function ___llmod *****************
  5427 ;; Defined at:
  5428 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;  divisor         4   13[BANK0 ] unsigned long 
  5431 ;;  dividend        4   17[BANK0 ] unsigned long 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  counter         1    6[COMMON] unsigned char 
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  4   13[BANK0 ] unsigned long 
  5436 ;; Registers used:
  5437 ;;		wreg, status,2, status,0
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5443 ;;      Params:         0       8       0       0       0
  5444 ;;      Locals:         1       0       0       0       0
  5445 ;;      Temps:          1       0       0       0       0
  5446 ;;      Totals:         2       8       0       0       0
  5447 ;;Total ram usage:       10 bytes
  5448 ;; Hardware stack levels used:    1
  5449 ;; Hardware stack levels required when called:    1
  5450 ;; This function calls:
  5451 ;;		Nothing
  5452 ;; This function is called by:
  5453 ;;		_sprintf
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           
  5458                           ;psect for function ___llmod
  5459  1155                     ___llmod:
  5460  1155                     l3603:	
  5461                           ;incstack = 0
  5462                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5463                           
  5464  1155  1283               	bcf	3,5	;RP0=0, select bank0
  5465  1156  1303               	bcf	3,6	;RP1=0, select bank0
  5466  1157  0830               	movf	___llmod@divisor+3,w
  5467  1158  042F               	iorwf	___llmod@divisor+2,w
  5468  1159  042E               	iorwf	___llmod@divisor+1,w
  5469  115A  042D               	iorwf	___llmod@divisor,w
  5470  115B  1903               	skipnz
  5471  115C  295E               	goto	u5611
  5472  115D  295F               	goto	u5610
  5473  115E                     u5611:
  5474  115E  29A2               	goto	l3619
  5475  115F                     u5610:
  5476  115F                     l3605:
  5477  115F  01F6               	clrf	___llmod@counter
  5478  1160  0AF6               	incf	___llmod@counter,f
  5479  1161  296F               	goto	l3609
  5480  1162                     l3607:
  5481  1162  3001               	movlw	1
  5482  1163  00F5               	movwf	??___llmod
  5483  1164                     u5625:
  5484  1164  1003               	clrc
  5485  1165  0DAD               	rlf	___llmod@divisor,f
  5486  1166  0DAE               	rlf	___llmod@divisor+1,f
  5487  1167  0DAF               	rlf	___llmod@divisor+2,f
  5488  1168  0DB0               	rlf	___llmod@divisor+3,f
  5489  1169  0BF5               	decfsz	??___llmod,f
  5490  116A  2964               	goto	u5625
  5491  116B  3001               	movlw	1
  5492  116C  00F5               	movwf	??___llmod
  5493  116D  0875               	movf	??___llmod,w
  5494  116E  07F6               	addwf	___llmod@counter,f
  5495  116F                     l3609:
  5496  116F  1FB0               	btfss	___llmod@divisor+3,7
  5497  1170  2972               	goto	u5631
  5498  1171  2973               	goto	u5630
  5499  1172                     u5631:
  5500  1172  2962               	goto	l3607
  5501  1173                     u5630:
  5502  1173                     l3611:
  5503  1173  0830               	movf	___llmod@divisor+3,w
  5504  1174  0234               	subwf	___llmod@dividend+3,w
  5505  1175  1D03               	skipz
  5506  1176  2981               	goto	u5645
  5507  1177  082F               	movf	___llmod@divisor+2,w
  5508  1178  0233               	subwf	___llmod@dividend+2,w
  5509  1179  1D03               	skipz
  5510  117A  2981               	goto	u5645
  5511  117B  082E               	movf	___llmod@divisor+1,w
  5512  117C  0232               	subwf	___llmod@dividend+1,w
  5513  117D  1D03               	skipz
  5514  117E  2981               	goto	u5645
  5515  117F  082D               	movf	___llmod@divisor,w
  5516  1180  0231               	subwf	___llmod@dividend,w
  5517  1181                     u5645:
  5518  1181  1C03               	skipc
  5519  1182  2984               	goto	u5641
  5520  1183  2985               	goto	u5640
  5521  1184                     u5641:
  5522  1184  2993               	goto	l3615
  5523  1185                     u5640:
  5524  1185                     l3613:
  5525  1185  082D               	movf	___llmod@divisor,w
  5526  1186  02B1               	subwf	___llmod@dividend,f
  5527  1187  082E               	movf	___llmod@divisor+1,w
  5528  1188  1C03               	skipc
  5529  1189  0F2E               	incfsz	___llmod@divisor+1,w
  5530  118A  02B2               	subwf	___llmod@dividend+1,f
  5531  118B  082F               	movf	___llmod@divisor+2,w
  5532  118C  1C03               	skipc
  5533  118D  0F2F               	incfsz	___llmod@divisor+2,w
  5534  118E  02B3               	subwf	___llmod@dividend+2,f
  5535  118F  0830               	movf	___llmod@divisor+3,w
  5536  1190  1C03               	skipc
  5537  1191  0F30               	incfsz	___llmod@divisor+3,w
  5538  1192  02B4               	subwf	___llmod@dividend+3,f
  5539  1193                     l3615:
  5540  1193  3001               	movlw	1
  5541  1194                     u5655:
  5542  1194  1003               	clrc
  5543  1195  0CB0               	rrf	___llmod@divisor+3,f
  5544  1196  0CAF               	rrf	___llmod@divisor+2,f
  5545  1197  0CAE               	rrf	___llmod@divisor+1,f
  5546  1198  0CAD               	rrf	___llmod@divisor,f
  5547  1199  3EFF               	addlw	-1
  5548  119A  1D03               	skipz
  5549  119B  2994               	goto	u5655
  5550  119C                     l3617:
  5551  119C  3001               	movlw	1
  5552  119D  02F6               	subwf	___llmod@counter,f
  5553  119E  1D03               	btfss	3,2
  5554  119F  29A1               	goto	u5661
  5555  11A0  29A2               	goto	u5660
  5556  11A1                     u5661:
  5557  11A1  2973               	goto	l3611
  5558  11A2                     u5660:
  5559  11A2                     l3619:
  5560  11A2  0834               	movf	___llmod@dividend+3,w
  5561  11A3  00B0               	movwf	?___llmod+3
  5562  11A4  0833               	movf	___llmod@dividend+2,w
  5563  11A5  00AF               	movwf	?___llmod+2
  5564  11A6  0832               	movf	___llmod@dividend+1,w
  5565  11A7  00AE               	movwf	?___llmod+1
  5566  11A8  0831               	movf	___llmod@dividend,w
  5567  11A9  00AD               	movwf	?___llmod
  5568  11AA                     l766:
  5569  11AA  0008               	return
  5570  11AB                     __end_of___llmod:
  5571                           
  5572                           	psect	text16
  5573  0798                     __ptext16:	
  5574 ;; *************** function ___lldiv *****************
  5575 ;; Defined at:
  5576 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  divisor         4    0[BANK0 ] unsigned long 
  5579 ;;  dividend        4    4[BANK0 ] unsigned long 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  quotient        4    8[BANK0 ] unsigned long 
  5582 ;;  counter         1   12[BANK0 ] unsigned char 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  4    0[BANK0 ] unsigned long 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2, status,0
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5592 ;;      Params:         0       8       0       0       0
  5593 ;;      Locals:         0       5       0       0       0
  5594 ;;      Temps:          1       0       0       0       0
  5595 ;;      Totals:         1      13       0       0       0
  5596 ;;Total ram usage:       14 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    1
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_sprintf
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           
  5607                           ;psect for function ___lldiv
  5608  0798                     ___lldiv:
  5609  0798                     l3551:	
  5610                           ;incstack = 0
  5611                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5612                           
  5613  0798  3000               	movlw	0
  5614  0799  1283               	bcf	3,5	;RP0=0, select bank0
  5615  079A  1303               	bcf	3,6	;RP1=0, select bank0
  5616  079B  00AB               	movwf	___lldiv@quotient+3
  5617  079C  3000               	movlw	0
  5618  079D  00AA               	movwf	___lldiv@quotient+2
  5619  079E  3000               	movlw	0
  5620  079F  00A9               	movwf	___lldiv@quotient+1
  5621  07A0  3000               	movlw	0
  5622  07A1  00A8               	movwf	___lldiv@quotient
  5623  07A2  0823               	movf	___lldiv@divisor+3,w
  5624  07A3  0422               	iorwf	___lldiv@divisor+2,w
  5625  07A4  0421               	iorwf	___lldiv@divisor+1,w
  5626  07A5  0420               	iorwf	___lldiv@divisor,w
  5627  07A6  1903               	skipnz
  5628  07A7  2FA9               	goto	u5501
  5629  07A8  2FAA               	goto	u5500
  5630  07A9                     u5501:
  5631  07A9  2FF7               	goto	l3571
  5632  07AA                     u5500:
  5633  07AA                     l3553:
  5634  07AA  01AC               	clrf	___lldiv@counter
  5635  07AB  0AAC               	incf	___lldiv@counter,f
  5636  07AC  2FBA               	goto	l3557
  5637  07AD                     l3555:
  5638  07AD  3001               	movlw	1
  5639  07AE  00F4               	movwf	??___lldiv
  5640  07AF                     u5515:
  5641  07AF  1003               	clrc
  5642  07B0  0DA0               	rlf	___lldiv@divisor,f
  5643  07B1  0DA1               	rlf	___lldiv@divisor+1,f
  5644  07B2  0DA2               	rlf	___lldiv@divisor+2,f
  5645  07B3  0DA3               	rlf	___lldiv@divisor+3,f
  5646  07B4  0BF4               	decfsz	??___lldiv,f
  5647  07B5  2FAF               	goto	u5515
  5648  07B6  3001               	movlw	1
  5649  07B7  00F4               	movwf	??___lldiv
  5650  07B8  0874               	movf	??___lldiv,w
  5651  07B9  07AC               	addwf	___lldiv@counter,f
  5652  07BA                     l3557:
  5653  07BA  1FA3               	btfss	___lldiv@divisor+3,7
  5654  07BB  2FBD               	goto	u5521
  5655  07BC  2FBE               	goto	u5520
  5656  07BD                     u5521:
  5657  07BD  2FAD               	goto	l3555
  5658  07BE                     u5520:
  5659  07BE                     l3559:
  5660  07BE  3001               	movlw	1
  5661  07BF  00F4               	movwf	??___lldiv
  5662  07C0                     u5535:
  5663  07C0  1003               	clrc
  5664  07C1  0DA8               	rlf	___lldiv@quotient,f
  5665  07C2  0DA9               	rlf	___lldiv@quotient+1,f
  5666  07C3  0DAA               	rlf	___lldiv@quotient+2,f
  5667  07C4  0DAB               	rlf	___lldiv@quotient+3,f
  5668  07C5  0BF4               	decfsz	??___lldiv,f
  5669  07C6  2FC0               	goto	u5535
  5670  07C7                     l3561:
  5671  07C7  0823               	movf	___lldiv@divisor+3,w
  5672  07C8  0227               	subwf	___lldiv@dividend+3,w
  5673  07C9  1D03               	skipz
  5674  07CA  2FD5               	goto	u5545
  5675  07CB  0822               	movf	___lldiv@divisor+2,w
  5676  07CC  0226               	subwf	___lldiv@dividend+2,w
  5677  07CD  1D03               	skipz
  5678  07CE  2FD5               	goto	u5545
  5679  07CF  0821               	movf	___lldiv@divisor+1,w
  5680  07D0  0225               	subwf	___lldiv@dividend+1,w
  5681  07D1  1D03               	skipz
  5682  07D2  2FD5               	goto	u5545
  5683  07D3  0820               	movf	___lldiv@divisor,w
  5684  07D4  0224               	subwf	___lldiv@dividend,w
  5685  07D5                     u5545:
  5686  07D5  1C03               	skipc
  5687  07D6  2FD8               	goto	u5541
  5688  07D7  2FD9               	goto	u5540
  5689  07D8                     u5541:
  5690  07D8  2FE8               	goto	l3567
  5691  07D9                     u5540:
  5692  07D9                     l3563:
  5693  07D9  0820               	movf	___lldiv@divisor,w
  5694  07DA  02A4               	subwf	___lldiv@dividend,f
  5695  07DB  0821               	movf	___lldiv@divisor+1,w
  5696  07DC  1C03               	skipc
  5697  07DD  0F21               	incfsz	___lldiv@divisor+1,w
  5698  07DE  02A5               	subwf	___lldiv@dividend+1,f
  5699  07DF  0822               	movf	___lldiv@divisor+2,w
  5700  07E0  1C03               	skipc
  5701  07E1  0F22               	incfsz	___lldiv@divisor+2,w
  5702  07E2  02A6               	subwf	___lldiv@dividend+2,f
  5703  07E3  0823               	movf	___lldiv@divisor+3,w
  5704  07E4  1C03               	skipc
  5705  07E5  0F23               	incfsz	___lldiv@divisor+3,w
  5706  07E6  02A7               	subwf	___lldiv@dividend+3,f
  5707  07E7                     l3565:
  5708  07E7  1428               	bsf	___lldiv@quotient,0
  5709  07E8                     l3567:
  5710  07E8  3001               	movlw	1
  5711  07E9                     u5555:
  5712  07E9  1003               	clrc
  5713  07EA  0CA3               	rrf	___lldiv@divisor+3,f
  5714  07EB  0CA2               	rrf	___lldiv@divisor+2,f
  5715  07EC  0CA1               	rrf	___lldiv@divisor+1,f
  5716  07ED  0CA0               	rrf	___lldiv@divisor,f
  5717  07EE  3EFF               	addlw	-1
  5718  07EF  1D03               	skipz
  5719  07F0  2FE9               	goto	u5555
  5720  07F1                     l3569:
  5721  07F1  3001               	movlw	1
  5722  07F2  02AC               	subwf	___lldiv@counter,f
  5723  07F3  1D03               	btfss	3,2
  5724  07F4  2FF6               	goto	u5561
  5725  07F5  2FF7               	goto	u5560
  5726  07F6                     u5561:
  5727  07F6  2FBE               	goto	l3559
  5728  07F7                     u5560:
  5729  07F7                     l3571:
  5730  07F7  082B               	movf	___lldiv@quotient+3,w
  5731  07F8  00A3               	movwf	?___lldiv+3
  5732  07F9  082A               	movf	___lldiv@quotient+2,w
  5733  07FA  00A2               	movwf	?___lldiv+2
  5734  07FB  0829               	movf	___lldiv@quotient+1,w
  5735  07FC  00A1               	movwf	?___lldiv+1
  5736  07FD  0828               	movf	___lldiv@quotient,w
  5737  07FE  00A0               	movwf	?___lldiv
  5738  07FF                     l431:
  5739  07FF  0008               	return
  5740  0800                     __end_of___lldiv:
  5741                           
  5742                           	psect	text17
  5743  1371                     __ptext17:	
  5744 ;; *************** function ___fttol *****************
  5745 ;; Defined at:
  5746 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  f1              3   40[BANK0 ] float 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  lval            4   49[BANK0 ] unsigned long 
  5751 ;;  exp1            1   53[BANK0 ] unsigned char 
  5752 ;;  sign1           1   48[BANK0 ] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  4   40[BANK0 ] long 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5762 ;;      Params:         0       4       0       0       0
  5763 ;;      Locals:         0       6       0       0       0
  5764 ;;      Temps:          0       4       0       0       0
  5765 ;;      Totals:         0      14       0       0       0
  5766 ;;Total ram usage:       14 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    1
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_sprintf
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function ___fttol
  5778  1371                     ___fttol:
  5779  1371                     l2615:	
  5780                           ;incstack = 0
  5781                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5782                           
  5783  1371  1283               	bcf	3,5	;RP0=0, select bank0
  5784  1372  1303               	bcf	3,6	;RP1=0, select bank0
  5785  1373  0848               	movf	___fttol@f1,w
  5786  1374  00CC               	movwf	??___fttol
  5787  1375  0849               	movf	___fttol@f1+1,w
  5788  1376  00CD               	movwf	??___fttol+1
  5789  1377  084A               	movf	___fttol@f1+2,w
  5790  1378  00CE               	movwf	??___fttol+2
  5791  1379  1003               	clrc
  5792  137A  0D4D               	rlf	??___fttol+1,w
  5793  137B  0D4E               	rlf	??___fttol+2,w
  5794  137C  00CF               	movwf	??___fttol+3
  5795  137D  084F               	movf	??___fttol+3,w
  5796  137E  00D5               	movwf	___fttol@exp1
  5797  137F  0855               	movf	___fttol@exp1,w
  5798  1380  1D03               	btfss	3,2
  5799  1381  2B83               	goto	u3601
  5800  1382  2B84               	goto	u3600
  5801  1383                     u3601:
  5802  1383  2B8D               	goto	l2621
  5803  1384                     u3600:
  5804  1384                     l2617:
  5805  1384  3000               	movlw	0
  5806  1385  00CB               	movwf	?___fttol+3
  5807  1386  3000               	movlw	0
  5808  1387  00CA               	movwf	?___fttol+2
  5809  1388  3000               	movlw	0
  5810  1389  00C9               	movwf	?___fttol+1
  5811  138A  3000               	movlw	0
  5812  138B  00C8               	movwf	?___fttol
  5813  138C  2BFC               	goto	l725
  5814  138D                     l2621:
  5815  138D  0848               	movf	___fttol@f1,w
  5816  138E  00CC               	movwf	??___fttol
  5817  138F  0849               	movf	___fttol@f1+1,w
  5818  1390  00CD               	movwf	??___fttol+1
  5819  1391  084A               	movf	___fttol@f1+2,w
  5820  1392  00CE               	movwf	??___fttol+2
  5821  1393  3017               	movlw	23
  5822  1394                     u3615:
  5823  1394  1003               	clrc
  5824  1395  0CCE               	rrf	??___fttol+2,f
  5825  1396  0CCD               	rrf	??___fttol+1,f
  5826  1397  0CCC               	rrf	??___fttol,f
  5827  1398                     u3610:
  5828  1398  3EFF               	addlw	-1
  5829  1399  1D03               	skipz
  5830  139A  2B94               	goto	u3615
  5831  139B  084C               	movf	??___fttol,w
  5832  139C  00CF               	movwf	??___fttol+3
  5833  139D  084F               	movf	??___fttol+3,w
  5834  139E  00D0               	movwf	___fttol@sign1
  5835  139F                     l2623:
  5836  139F  17C9               	bsf	___fttol@f1+1,7
  5837  13A0                     l2625:
  5838  13A0  30FF               	movlw	255
  5839  13A1  05C8               	andwf	___fttol@f1,f
  5840  13A2  30FF               	movlw	255
  5841  13A3  05C9               	andwf	___fttol@f1+1,f
  5842  13A4  3000               	movlw	0
  5843  13A5  05CA               	andwf	___fttol@f1+2,f
  5844  13A6                     l2627:
  5845  13A6  0848               	movf	___fttol@f1,w
  5846  13A7  00D1               	movwf	___fttol@lval
  5847  13A8  0849               	movf	___fttol@f1+1,w
  5848  13A9  00D2               	movwf	___fttol@lval+1
  5849  13AA  084A               	movf	___fttol@f1+2,w
  5850  13AB  00D3               	movwf	___fttol@lval+2
  5851  13AC  01D4               	clrf	___fttol@lval+3
  5852  13AD                     l2629:
  5853  13AD  308E               	movlw	142
  5854  13AE  02D5               	subwf	___fttol@exp1,f
  5855  13AF                     l2631:
  5856  13AF  1FD5               	btfss	___fttol@exp1,7
  5857  13B0  2BB2               	goto	u3621
  5858  13B1  2BB3               	goto	u3620
  5859  13B2                     u3621:
  5860  13B2  2BCD               	goto	l2641
  5861  13B3                     u3620:
  5862  13B3                     l2633:
  5863  13B3  0855               	movf	___fttol@exp1,w
  5864  13B4  3A80               	xorlw	128
  5865  13B5  3E8F               	addlw	143
  5866  13B6  1803               	skipnc
  5867  13B7  2BB9               	goto	u3631
  5868  13B8  2BBA               	goto	u3630
  5869  13B9                     u3631:
  5870  13B9  2BBB               	goto	l2639
  5871  13BA                     u3630:
  5872  13BA  2B84               	goto	l2617
  5873  13BB                     l2639:
  5874  13BB  3001               	movlw	1
  5875  13BC                     u3645:
  5876  13BC  1003               	clrc
  5877  13BD  0CD4               	rrf	___fttol@lval+3,f
  5878  13BE  0CD3               	rrf	___fttol@lval+2,f
  5879  13BF  0CD2               	rrf	___fttol@lval+1,f
  5880  13C0  0CD1               	rrf	___fttol@lval,f
  5881  13C1  3EFF               	addlw	-1
  5882  13C2  1D03               	skipz
  5883  13C3  2BBC               	goto	u3645
  5884  13C4  3001               	movlw	1
  5885  13C5  00CC               	movwf	??___fttol
  5886  13C6  084C               	movf	??___fttol,w
  5887  13C7  07D5               	addwf	___fttol@exp1,f
  5888  13C8  1D03               	btfss	3,2
  5889  13C9  2BCB               	goto	u3651
  5890  13CA  2BCC               	goto	u3650
  5891  13CB                     u3651:
  5892  13CB  2BBB               	goto	l2639
  5893  13CC                     u3650:
  5894  13CC  2BE4               	goto	l2649
  5895  13CD                     l2641:
  5896  13CD  3018               	movlw	24
  5897  13CE  0255               	subwf	___fttol@exp1,w
  5898  13CF  1C03               	skipc
  5899  13D0  2BD2               	goto	u3661
  5900  13D1  2BD3               	goto	u3660
  5901  13D2                     u3661:
  5902  13D2  2BDF               	goto	l732
  5903  13D3                     u3660:
  5904  13D3  2B84               	goto	l2617
  5905  13D4                     l2647:
  5906  13D4  3001               	movlw	1
  5907  13D5  00CC               	movwf	??___fttol
  5908  13D6                     u3675:
  5909  13D6  1003               	clrc
  5910  13D7  0DD1               	rlf	___fttol@lval,f
  5911  13D8  0DD2               	rlf	___fttol@lval+1,f
  5912  13D9  0DD3               	rlf	___fttol@lval+2,f
  5913  13DA  0DD4               	rlf	___fttol@lval+3,f
  5914  13DB  0BCC               	decfsz	??___fttol,f
  5915  13DC  2BD6               	goto	u3675
  5916  13DD  3001               	movlw	1
  5917  13DE  02D5               	subwf	___fttol@exp1,f
  5918  13DF                     l732:
  5919  13DF  0855               	movf	___fttol@exp1,w
  5920  13E0  1D03               	btfss	3,2
  5921  13E1  2BE3               	goto	u3681
  5922  13E2  2BE4               	goto	u3680
  5923  13E3                     u3681:
  5924  13E3  2BD4               	goto	l2647
  5925  13E4                     u3680:
  5926  13E4                     l2649:
  5927  13E4  0850               	movf	___fttol@sign1,w
  5928  13E5  1903               	btfsc	3,2
  5929  13E6  2BE8               	goto	u3691
  5930  13E7  2BE9               	goto	u3690
  5931  13E8                     u3691:
  5932  13E8  2BF4               	goto	l2653
  5933  13E9                     u3690:
  5934  13E9                     l2651:
  5935  13E9  09D1               	comf	___fttol@lval,f
  5936  13EA  09D2               	comf	___fttol@lval+1,f
  5937  13EB  09D3               	comf	___fttol@lval+2,f
  5938  13EC  09D4               	comf	___fttol@lval+3,f
  5939  13ED  0AD1               	incf	___fttol@lval,f
  5940  13EE  1903               	skipnz
  5941  13EF  0AD2               	incf	___fttol@lval+1,f
  5942  13F0  1903               	skipnz
  5943  13F1  0AD3               	incf	___fttol@lval+2,f
  5944  13F2  1903               	skipnz
  5945  13F3  0AD4               	incf	___fttol@lval+3,f
  5946  13F4                     l2653:
  5947  13F4  0854               	movf	___fttol@lval+3,w
  5948  13F5  00CB               	movwf	?___fttol+3
  5949  13F6  0853               	movf	___fttol@lval+2,w
  5950  13F7  00CA               	movwf	?___fttol+2
  5951  13F8  0852               	movf	___fttol@lval+1,w
  5952  13F9  00C9               	movwf	?___fttol+1
  5953  13FA  0851               	movf	___fttol@lval,w
  5954  13FB  00C8               	movwf	?___fttol
  5955  13FC                     l725:
  5956  13FC  0008               	return
  5957  13FD                     __end_of___fttol:
  5958                           
  5959                           	psect	text18
  5960  1ED4                     __ptext18:	
  5961 ;; *************** function ___ftsub *****************
  5962 ;; Defined at:
  5963 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  f2              3   60[BANK0 ] float 
  5966 ;;  f1              3   63[BANK0 ] float 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  3   60[BANK0 ] float 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0, pclath, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5978 ;;      Params:         0       6       0       0       0
  5979 ;;      Locals:         0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0
  5981 ;;      Totals:         0       6       0       0       0
  5982 ;;Total ram usage:        6 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    3
  5985 ;; This function calls:
  5986 ;;		___ftadd
  5987 ;; This function is called by:
  5988 ;;		_sprintf
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           
  5993                           ;psect for function ___ftsub
  5994  1ED4                     ___ftsub:
  5995  1ED4                     l3595:	
  5996                           ;incstack = 0
  5997                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5998                           
  5999  1ED4  1283               	bcf	3,5	;RP0=0, select bank0
  6000  1ED5  1303               	bcf	3,6	;RP1=0, select bank0
  6001  1ED6  085E               	movf	___ftsub@f2+2,w
  6002  1ED7  045D               	iorwf	___ftsub@f2+1,w
  6003  1ED8  045C               	iorwf	___ftsub@f2,w
  6004  1ED9  1903               	skipnz
  6005  1EDA  2EDC               	goto	u5601
  6006  1EDB  2EDD               	goto	u5600
  6007  1EDC                     u5601:
  6008  1EDC  2EDF               	goto	l3599
  6009  1EDD                     u5600:
  6010  1EDD                     l3597:
  6011  1EDD  3080               	movlw	128
  6012  1EDE  06DE               	xorwf	___ftsub@f2+2,f
  6013  1EDF                     l3599:
  6014  1EDF  085F               	movf	___ftsub@f1,w
  6015  1EE0  00CF               	movwf	___ftadd@f1
  6016  1EE1  0860               	movf	___ftsub@f1+1,w
  6017  1EE2  00D0               	movwf	___ftadd@f1+1
  6018  1EE3  0861               	movf	___ftsub@f1+2,w
  6019  1EE4  00D1               	movwf	___ftadd@f1+2
  6020  1EE5  085C               	movf	___ftsub@f2,w
  6021  1EE6  00D2               	movwf	___ftadd@f2
  6022  1EE7  085D               	movf	___ftsub@f2+1,w
  6023  1EE8  00D3               	movwf	___ftadd@f2+1
  6024  1EE9  085E               	movf	___ftsub@f2+2,w
  6025  1EEA  00D4               	movwf	___ftadd@f2+2
  6026  1EEB  120A  118A  2662  160A  158A  	fcall	___ftadd
  6027  1EF0  1283               	bcf	3,5	;RP0=0, select bank0
  6028  1EF1  1303               	bcf	3,6	;RP1=0, select bank0
  6029  1EF2  084F               	movf	?___ftadd,w
  6030  1EF3  00DC               	movwf	?___ftsub
  6031  1EF4  0850               	movf	?___ftadd+1,w
  6032  1EF5  00DD               	movwf	?___ftsub+1
  6033  1EF6  0851               	movf	?___ftadd+2,w
  6034  1EF7  00DE               	movwf	?___ftsub+2
  6035  1EF8                     l721:
  6036  1EF8  0008               	return
  6037  1EF9                     __end_of___ftsub:
  6038                           
  6039                           	psect	text19
  6040  0662                     __ptext19:	
  6041 ;; *************** function ___ftadd *****************
  6042 ;; Defined at:
  6043 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  f1              3   47[BANK0 ] float 
  6046 ;;  f2              3   50[BANK0 ] float 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  exp1            1   59[BANK0 ] unsigned char 
  6049 ;;  exp2            1   58[BANK0 ] unsigned char 
  6050 ;;  sign            1   57[BANK0 ] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  3   47[BANK0 ] float 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2, status,0, pclath, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6060 ;;      Params:         0       6       0       0       0
  6061 ;;      Locals:         0       3       0       0       0
  6062 ;;      Temps:          0       4       0       0       0
  6063 ;;      Totals:         0      13       0       0       0
  6064 ;;Total ram usage:       13 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    2
  6067 ;; This function calls:
  6068 ;;		___ftpack
  6069 ;; This function is called by:
  6070 ;;		_sprintf
  6071 ;;		___ftsub
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           
  6076                           ;psect for function ___ftadd
  6077  0662                     ___ftadd:
  6078  0662                     l3229:	
  6079                           ;incstack = 0
  6080                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6081                           
  6082  0662  1283               	bcf	3,5	;RP0=0, select bank0
  6083  0663  1303               	bcf	3,6	;RP1=0, select bank0
  6084  0664  084F               	movf	___ftadd@f1,w
  6085  0665  00D5               	movwf	??___ftadd
  6086  0666  0850               	movf	___ftadd@f1+1,w
  6087  0667  00D6               	movwf	??___ftadd+1
  6088  0668  0851               	movf	___ftadd@f1+2,w
  6089  0669  00D7               	movwf	??___ftadd+2
  6090  066A  1003               	clrc
  6091  066B  0D56               	rlf	??___ftadd+1,w
  6092  066C  0D57               	rlf	??___ftadd+2,w
  6093  066D  00D8               	movwf	??___ftadd+3
  6094  066E  0858               	movf	??___ftadd+3,w
  6095  066F  00DB               	movwf	___ftadd@exp1
  6096  0670  0852               	movf	___ftadd@f2,w
  6097  0671  00D5               	movwf	??___ftadd
  6098  0672  0853               	movf	___ftadd@f2+1,w
  6099  0673  00D6               	movwf	??___ftadd+1
  6100  0674  0854               	movf	___ftadd@f2+2,w
  6101  0675  00D7               	movwf	??___ftadd+2
  6102  0676  1003               	clrc
  6103  0677  0D56               	rlf	??___ftadd+1,w
  6104  0678  0D57               	rlf	??___ftadd+2,w
  6105  0679  00D8               	movwf	??___ftadd+3
  6106  067A  0858               	movf	??___ftadd+3,w
  6107  067B  00DA               	movwf	___ftadd@exp2
  6108  067C  085B               	movf	___ftadd@exp1,w
  6109  067D  1903               	btfsc	3,2
  6110  067E  2E80               	goto	u4701
  6111  067F  2E81               	goto	u4700
  6112  0680                     u4701:
  6113  0680  2E91               	goto	l3235
  6114  0681                     u4700:
  6115  0681                     l3231:
  6116  0681  085A               	movf	___ftadd@exp2,w
  6117  0682  025B               	subwf	___ftadd@exp1,w
  6118  0683  1803               	skipnc
  6119  0684  2E86               	goto	u4711
  6120  0685  2E87               	goto	u4710
  6121  0686                     u4711:
  6122  0686  2E98               	goto	l3239
  6123  0687                     u4710:
  6124  0687                     l3233:
  6125  0687  085A               	movf	___ftadd@exp2,w
  6126  0688  00D5               	movwf	??___ftadd
  6127  0689  085B               	movf	___ftadd@exp1,w
  6128  068A  02D5               	subwf	??___ftadd,f
  6129  068B  3019               	movlw	25
  6130  068C  0255               	subwf	??___ftadd,w
  6131  068D  1C03               	skipc
  6132  068E  2E90               	goto	u4721
  6133  068F  2E91               	goto	u4720
  6134  0690                     u4721:
  6135  0690  2E98               	goto	l3239
  6136  0691                     u4720:
  6137  0691                     l3235:
  6138  0691  0852               	movf	___ftadd@f2,w
  6139  0692  00CF               	movwf	?___ftadd
  6140  0693  0853               	movf	___ftadd@f2+1,w
  6141  0694  00D0               	movwf	?___ftadd+1
  6142  0695  0854               	movf	___ftadd@f2+2,w
  6143  0696  00D1               	movwf	?___ftadd+2
  6144  0697  2F97               	goto	l641
  6145  0698                     l3239:
  6146  0698  085A               	movf	___ftadd@exp2,w
  6147  0699  1903               	btfsc	3,2
  6148  069A  2E9C               	goto	u4731
  6149  069B  2E9D               	goto	u4730
  6150  069C                     u4731:
  6151  069C  2EAD               	goto	l644
  6152  069D                     u4730:
  6153  069D                     l3241:
  6154  069D  085B               	movf	___ftadd@exp1,w
  6155  069E  025A               	subwf	___ftadd@exp2,w
  6156  069F  1803               	skipnc
  6157  06A0  2EA2               	goto	u4741
  6158  06A1  2EA3               	goto	u4740
  6159  06A2                     u4741:
  6160  06A2  2EAE               	goto	l3245
  6161  06A3                     u4740:
  6162  06A3                     l3243:
  6163  06A3  085B               	movf	___ftadd@exp1,w
  6164  06A4  00D5               	movwf	??___ftadd
  6165  06A5  085A               	movf	___ftadd@exp2,w
  6166  06A6  02D5               	subwf	??___ftadd,f
  6167  06A7  3019               	movlw	25
  6168  06A8  0255               	subwf	??___ftadd,w
  6169  06A9  1C03               	skipc
  6170  06AA  2EAC               	goto	u4751
  6171  06AB  2EAD               	goto	u4750
  6172  06AC                     u4751:
  6173  06AC  2EAE               	goto	l3245
  6174  06AD                     u4750:
  6175  06AD                     l644:
  6176  06AD  2F97               	goto	l641
  6177  06AE                     l3245:
  6178  06AE  3006               	movlw	6
  6179  06AF  00D5               	movwf	??___ftadd
  6180  06B0  0855               	movf	??___ftadd,w
  6181  06B1  00D9               	movwf	___ftadd@sign
  6182  06B2                     l3247:
  6183  06B2  1FD1               	btfss	___ftadd@f1+2,7
  6184  06B3  2EB5               	goto	u4761
  6185  06B4  2EB6               	goto	u4760
  6186  06B5                     u4761:
  6187  06B5  2EB7               	goto	l645
  6188  06B6                     u4760:
  6189  06B6                     l3249:
  6190  06B6  17D9               	bsf	___ftadd@sign,7
  6191  06B7                     l645:
  6192  06B7  1FD4               	btfss	___ftadd@f2+2,7
  6193  06B8  2EBA               	goto	u4771
  6194  06B9  2EBB               	goto	u4770
  6195  06BA                     u4771:
  6196  06BA  2EBC               	goto	l646
  6197  06BB                     u4770:
  6198  06BB                     l3251:
  6199  06BB  1759               	bsf	___ftadd@sign,6
  6200  06BC                     l646:
  6201  06BC  17D0               	bsf	___ftadd@f1+1,7
  6202  06BD                     l3253:
  6203  06BD  30FF               	movlw	255
  6204  06BE  05CF               	andwf	___ftadd@f1,f
  6205  06BF  30FF               	movlw	255
  6206  06C0  05D0               	andwf	___ftadd@f1+1,f
  6207  06C1  3000               	movlw	0
  6208  06C2  05D1               	andwf	___ftadd@f1+2,f
  6209  06C3                     l3255:
  6210  06C3  17D3               	bsf	___ftadd@f2+1,7
  6211  06C4  30FF               	movlw	255
  6212  06C5  05D2               	andwf	___ftadd@f2,f
  6213  06C6  30FF               	movlw	255
  6214  06C7  05D3               	andwf	___ftadd@f2+1,f
  6215  06C8  3000               	movlw	0
  6216  06C9  05D4               	andwf	___ftadd@f2+2,f
  6217  06CA  085A               	movf	___ftadd@exp2,w
  6218  06CB  025B               	subwf	___ftadd@exp1,w
  6219  06CC  1803               	skipnc
  6220  06CD  2ECF               	goto	u4781
  6221  06CE  2ED0               	goto	u4780
  6222  06CF                     u4781:
  6223  06CF  2EFC               	goto	l3267
  6224  06D0                     u4780:
  6225  06D0                     l3257:
  6226  06D0  3001               	movlw	1
  6227  06D1                     u4795:
  6228  06D1  1003               	clrc
  6229  06D2  0DD2               	rlf	___ftadd@f2,f
  6230  06D3  0DD3               	rlf	___ftadd@f2+1,f
  6231  06D4  0DD4               	rlf	___ftadd@f2+2,f
  6232  06D5  3EFF               	addlw	-1
  6233  06D6  1D03               	skipz
  6234  06D7  2ED1               	goto	u4795
  6235  06D8  3001               	movlw	1
  6236  06D9  02DA               	subwf	___ftadd@exp2,f
  6237  06DA                     l3259:
  6238  06DA  085A               	movf	___ftadd@exp2,w
  6239  06DB  065B               	xorwf	___ftadd@exp1,w
  6240  06DC  1903               	skipnz
  6241  06DD  2EDF               	goto	u4801
  6242  06DE  2EE0               	goto	u4800
  6243  06DF                     u4801:
  6244  06DF  2EF5               	goto	l3265
  6245  06E0                     u4800:
  6246  06E0                     l3261:
  6247  06E0  3001               	movlw	1
  6248  06E1  02D9               	subwf	___ftadd@sign,f
  6249  06E2  0859               	movf	___ftadd@sign,w
  6250  06E3  3907               	andlw	7
  6251  06E4  1D03               	btfss	3,2
  6252  06E5  2EE7               	goto	u4811
  6253  06E6  2EE8               	goto	u4810
  6254  06E7                     u4811:
  6255  06E7  2ED0               	goto	l3257
  6256  06E8                     u4810:
  6257  06E8  2EF5               	goto	l3265
  6258  06E9                     l3263:
  6259  06E9  3001               	movlw	1
  6260  06EA                     u4825:
  6261  06EA  1003               	clrc
  6262  06EB  0CD1               	rrf	___ftadd@f1+2,f
  6263  06EC  0CD0               	rrf	___ftadd@f1+1,f
  6264  06ED  0CCF               	rrf	___ftadd@f1,f
  6265  06EE  3EFF               	addlw	-1
  6266  06EF  1D03               	skipz
  6267  06F0  2EEA               	goto	u4825
  6268  06F1  3001               	movlw	1
  6269  06F2  00D5               	movwf	??___ftadd
  6270  06F3  0855               	movf	??___ftadd,w
  6271  06F4  07DB               	addwf	___ftadd@exp1,f
  6272  06F5                     l3265:
  6273  06F5  085B               	movf	___ftadd@exp1,w
  6274  06F6  065A               	xorwf	___ftadd@exp2,w
  6275  06F7  1D03               	skipz
  6276  06F8  2EFA               	goto	u4831
  6277  06F9  2EFB               	goto	u4830
  6278  06FA                     u4831:
  6279  06FA  2EE9               	goto	l3263
  6280  06FB                     u4830:
  6281  06FB  2F2D               	goto	l655
  6282  06FC                     l3267:
  6283  06FC  085B               	movf	___ftadd@exp1,w
  6284  06FD  025A               	subwf	___ftadd@exp2,w
  6285  06FE  1803               	skipnc
  6286  06FF  2F01               	goto	u4841
  6287  0700  2F02               	goto	u4840
  6288  0701                     u4841:
  6289  0701  2F2D               	goto	l655
  6290  0702                     u4840:
  6291  0702                     l3269:
  6292  0702  3001               	movlw	1
  6293  0703                     u4855:
  6294  0703  1003               	clrc
  6295  0704  0DCF               	rlf	___ftadd@f1,f
  6296  0705  0DD0               	rlf	___ftadd@f1+1,f
  6297  0706  0DD1               	rlf	___ftadd@f1+2,f
  6298  0707  3EFF               	addlw	-1
  6299  0708  1D03               	skipz
  6300  0709  2F03               	goto	u4855
  6301  070A  3001               	movlw	1
  6302  070B  02DB               	subwf	___ftadd@exp1,f
  6303  070C                     l3271:
  6304  070C  085A               	movf	___ftadd@exp2,w
  6305  070D  065B               	xorwf	___ftadd@exp1,w
  6306  070E  1903               	skipnz
  6307  070F  2F11               	goto	u4861
  6308  0710  2F12               	goto	u4860
  6309  0711                     u4861:
  6310  0711  2F27               	goto	l3277
  6311  0712                     u4860:
  6312  0712                     l3273:
  6313  0712  3001               	movlw	1
  6314  0713  02D9               	subwf	___ftadd@sign,f
  6315  0714  0859               	movf	___ftadd@sign,w
  6316  0715  3907               	andlw	7
  6317  0716  1D03               	btfss	3,2
  6318  0717  2F19               	goto	u4871
  6319  0718  2F1A               	goto	u4870
  6320  0719                     u4871:
  6321  0719  2F02               	goto	l3269
  6322  071A                     u4870:
  6323  071A  2F27               	goto	l3277
  6324  071B                     l3275:
  6325  071B  3001               	movlw	1
  6326  071C                     u4885:
  6327  071C  1003               	clrc
  6328  071D  0CD4               	rrf	___ftadd@f2+2,f
  6329  071E  0CD3               	rrf	___ftadd@f2+1,f
  6330  071F  0CD2               	rrf	___ftadd@f2,f
  6331  0720  3EFF               	addlw	-1
  6332  0721  1D03               	skipz
  6333  0722  2F1C               	goto	u4885
  6334  0723  3001               	movlw	1
  6335  0724  00D5               	movwf	??___ftadd
  6336  0725  0855               	movf	??___ftadd,w
  6337  0726  07DA               	addwf	___ftadd@exp2,f
  6338  0727                     l3277:
  6339  0727  085B               	movf	___ftadd@exp1,w
  6340  0728  065A               	xorwf	___ftadd@exp2,w
  6341  0729  1D03               	skipz
  6342  072A  2F2C               	goto	u4891
  6343  072B  2F2D               	goto	u4890
  6344  072C                     u4891:
  6345  072C  2F1B               	goto	l3275
  6346  072D                     u4890:
  6347  072D                     l655:
  6348  072D  1FD9               	btfss	___ftadd@sign,7
  6349  072E  2F30               	goto	u4901
  6350  072F  2F31               	goto	u4900
  6351  0730                     u4901:
  6352  0730  2F41               	goto	l3281
  6353  0731                     u4900:
  6354  0731                     l3279:
  6355  0731  30FF               	movlw	255
  6356  0732  06CF               	xorwf	___ftadd@f1,f
  6357  0733  30FF               	movlw	255
  6358  0734  06D0               	xorwf	___ftadd@f1+1,f
  6359  0735  30FF               	movlw	255
  6360  0736  06D1               	xorwf	___ftadd@f1+2,f
  6361  0737  3001               	movlw	1
  6362  0738  07CF               	addwf	___ftadd@f1,f
  6363  0739  3000               	movlw	0
  6364  073A  1803               	skipnc
  6365  073B  3001               	movlw	1
  6366  073C  07D0               	addwf	___ftadd@f1+1,f
  6367  073D  3000               	movlw	0
  6368  073E  1803               	skipnc
  6369  073F  3001               	movlw	1
  6370  0740  07D1               	addwf	___ftadd@f1+2,f
  6371  0741                     l3281:
  6372  0741  1F59               	btfss	___ftadd@sign,6
  6373  0742  2F44               	goto	u4911
  6374  0743  2F45               	goto	u4910
  6375  0744                     u4911:
  6376  0744  2F55               	goto	l3285
  6377  0745                     u4910:
  6378  0745                     l3283:
  6379  0745  30FF               	movlw	255
  6380  0746  06D2               	xorwf	___ftadd@f2,f
  6381  0747  30FF               	movlw	255
  6382  0748  06D3               	xorwf	___ftadd@f2+1,f
  6383  0749  30FF               	movlw	255
  6384  074A  06D4               	xorwf	___ftadd@f2+2,f
  6385  074B  3001               	movlw	1
  6386  074C  07D2               	addwf	___ftadd@f2,f
  6387  074D  3000               	movlw	0
  6388  074E  1803               	skipnc
  6389  074F  3001               	movlw	1
  6390  0750  07D3               	addwf	___ftadd@f2+1,f
  6391  0751  3000               	movlw	0
  6392  0752  1803               	skipnc
  6393  0753  3001               	movlw	1
  6394  0754  07D4               	addwf	___ftadd@f2+2,f
  6395  0755                     l3285:
  6396  0755  01D9               	clrf	___ftadd@sign
  6397  0756                     l3287:
  6398  0756  084F               	movf	___ftadd@f1,w
  6399  0757  07D2               	addwf	___ftadd@f2,f
  6400  0758  0850               	movf	___ftadd@f1+1,w
  6401  0759  1103               	clrz
  6402  075A  1803               	skipnc
  6403  075B  0A50               	incf	___ftadd@f1+1,w
  6404  075C  1903               	skipnz
  6405  075D  2F5F               	goto	u4921
  6406  075E  07D3               	addwf	___ftadd@f2+1,f
  6407  075F                     u4921:
  6408  075F  0851               	movf	___ftadd@f1+2,w
  6409  0760  1103               	clrz
  6410  0761  1803               	skipnc
  6411  0762  0A51               	incf	___ftadd@f1+2,w
  6412  0763  1903               	skipnz
  6413  0764  2F66               	goto	u4922
  6414  0765  07D4               	addwf	___ftadd@f2+2,f
  6415  0766                     u4922:
  6416  0766                     l3289:
  6417  0766  1FD4               	btfss	___ftadd@f2+2,7
  6418  0767  2F69               	goto	u4931
  6419  0768  2F6A               	goto	u4930
  6420  0769                     u4931:
  6421  0769  2F7C               	goto	l3295
  6422  076A                     u4930:
  6423  076A                     l3291:
  6424  076A  30FF               	movlw	255
  6425  076B  06D2               	xorwf	___ftadd@f2,f
  6426  076C  30FF               	movlw	255
  6427  076D  06D3               	xorwf	___ftadd@f2+1,f
  6428  076E  30FF               	movlw	255
  6429  076F  06D4               	xorwf	___ftadd@f2+2,f
  6430  0770  3001               	movlw	1
  6431  0771  07D2               	addwf	___ftadd@f2,f
  6432  0772  3000               	movlw	0
  6433  0773  1803               	skipnc
  6434  0774  3001               	movlw	1
  6435  0775  07D3               	addwf	___ftadd@f2+1,f
  6436  0776  3000               	movlw	0
  6437  0777  1803               	skipnc
  6438  0778  3001               	movlw	1
  6439  0779  07D4               	addwf	___ftadd@f2+2,f
  6440  077A                     l3293:
  6441  077A  01D9               	clrf	___ftadd@sign
  6442  077B  0AD9               	incf	___ftadd@sign,f
  6443  077C                     l3295:
  6444  077C  0852               	movf	___ftadd@f2,w
  6445  077D  00F4               	movwf	___ftpack@arg
  6446  077E  0853               	movf	___ftadd@f2+1,w
  6447  077F  00F5               	movwf	___ftpack@arg+1
  6448  0780  0854               	movf	___ftadd@f2+2,w
  6449  0781  00F6               	movwf	___ftpack@arg+2
  6450  0782  085B               	movf	___ftadd@exp1,w
  6451  0783  00D5               	movwf	??___ftadd
  6452  0784  0855               	movf	??___ftadd,w
  6453  0785  00F7               	movwf	___ftpack@exp
  6454  0786  0859               	movf	___ftadd@sign,w
  6455  0787  00D6               	movwf	??___ftadd+1
  6456  0788  0856               	movf	??___ftadd+1,w
  6457  0789  00F8               	movwf	___ftpack@sign
  6458  078A  160A  118A  22EF  120A  118A  	fcall	___ftpack
  6459  078F  0874               	movf	?___ftpack,w
  6460  0790  1283               	bcf	3,5	;RP0=0, select bank0
  6461  0791  1303               	bcf	3,6	;RP1=0, select bank0
  6462  0792  00CF               	movwf	?___ftadd
  6463  0793  0875               	movf	?___ftpack+1,w
  6464  0794  00D0               	movwf	?___ftadd+1
  6465  0795  0876               	movf	?___ftpack+2,w
  6466  0796  00D1               	movwf	?___ftadd+2
  6467  0797                     l641:
  6468  0797  0008               	return
  6469  0798                     __end_of___ftadd:
  6470                           
  6471                           	psect	text20
  6472  1E28                     __ptext20:	
  6473 ;; *************** function ___ftneg *****************
  6474 ;; Defined at:
  6475 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  f1              3    4[COMMON] float 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;		None
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  3    4[COMMON] float 
  6482 ;; Registers used:
  6483 ;;		wreg
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6489 ;;      Params:         3       0       0       0       0
  6490 ;;      Locals:         0       0       0       0       0
  6491 ;;      Temps:          0       0       0       0       0
  6492 ;;      Totals:         3       0       0       0       0
  6493 ;;Total ram usage:        3 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    1
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_sprintf
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           
  6504                           ;psect for function ___ftneg
  6505  1E28                     ___ftneg:
  6506  1E28                     l2599:	
  6507                           ;incstack = 0
  6508                           ; Regs used in ___ftneg: [wreg]
  6509                           
  6510  1E28  0876               	movf	___ftneg@f1+2,w
  6511  1E29  0475               	iorwf	___ftneg@f1+1,w
  6512  1E2A  0474               	iorwf	___ftneg@f1,w
  6513  1E2B  1903               	skipnz
  6514  1E2C  2E2E               	goto	u3581
  6515  1E2D  2E2F               	goto	u3580
  6516  1E2E                     u3581:
  6517  1E2E  2E31               	goto	l2603
  6518  1E2F                     u3580:
  6519  1E2F                     l2601:
  6520  1E2F  3080               	movlw	128
  6521  1E30  06F6               	xorwf	___ftneg@f1+2,f
  6522  1E31                     l2603:
  6523  1E31                     l715:
  6524  1E31  0008               	return
  6525  1E32                     __end_of___ftneg:
  6526                           
  6527                           	psect	text21
  6528  1FC6                     __ptext21:	
  6529 ;; *************** function ___ftge *****************
  6530 ;; Defined at:
  6531 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  ff1             3    0[BANK0 ] float 
  6534 ;;  ff2             3    3[BANK0 ] float 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;		None
  6537 ;; Return value:  Size  Location     Type
  6538 ;;		None               void
  6539 ;; Registers used:
  6540 ;;		wreg, status,2, status,0
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6546 ;;      Params:         0       6       0       0       0
  6547 ;;      Locals:         0       0       0       0       0
  6548 ;;      Temps:          0       0       0       0       0
  6549 ;;      Totals:         0       6       0       0       0
  6550 ;;Total ram usage:        6 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    1
  6553 ;; This function calls:
  6554 ;;		Nothing
  6555 ;; This function is called by:
  6556 ;;		_sprintf
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           
  6561                           ;psect for function ___ftge
  6562  1FC6                     ___ftge:
  6563  1FC6                     l3575:	
  6564                           ;incstack = 0
  6565                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6566                           
  6567  1FC6  1283               	bcf	3,5	;RP0=0, select bank0
  6568  1FC7  1303               	bcf	3,6	;RP1=0, select bank0
  6569  1FC8  1FA2               	btfss	___ftge@ff1+2,7
  6570  1FC9  2FCB               	goto	u5571
  6571  1FCA  2FCC               	goto	u5570
  6572  1FCB                     u5571:
  6573  1FCB  2FD9               	goto	l3579
  6574  1FCC                     u5570:
  6575  1FCC                     l3577:
  6576  1FCC  0820               	movf	___ftge@ff1,w
  6577  1FCD  3C00               	sublw	0
  6578  1FCE  00A0               	movwf	___ftge@ff1
  6579  1FCF  0821               	movf	___ftge@ff1+1,w
  6580  1FD0  1C03               	skipc
  6581  1FD1  0F21               	incfsz	___ftge@ff1+1,w
  6582  1FD2  3C00               	sublw	0
  6583  1FD3  00A1               	movwf	___ftge@ff1+1
  6584  1FD4  0822               	movf	___ftge@ff1+2,w
  6585  1FD5  1C03               	skipc
  6586  1FD6  0F22               	incfsz	___ftge@ff1+2,w
  6587  1FD7  3C80               	sublw	128
  6588  1FD8  00A2               	movwf	___ftge@ff1+2
  6589  1FD9                     l3579:
  6590  1FD9  1FA5               	btfss	___ftge@ff2+2,7
  6591  1FDA  2FDC               	goto	u5581
  6592  1FDB  2FDD               	goto	u5580
  6593  1FDC                     u5581:
  6594  1FDC  2FEA               	goto	l3583
  6595  1FDD                     u5580:
  6596  1FDD                     l3581:
  6597  1FDD  0823               	movf	___ftge@ff2,w
  6598  1FDE  3C00               	sublw	0
  6599  1FDF  00A3               	movwf	___ftge@ff2
  6600  1FE0  0824               	movf	___ftge@ff2+1,w
  6601  1FE1  1C03               	skipc
  6602  1FE2  0F24               	incfsz	___ftge@ff2+1,w
  6603  1FE3  3C00               	sublw	0
  6604  1FE4  00A4               	movwf	___ftge@ff2+1
  6605  1FE5  0825               	movf	___ftge@ff2+2,w
  6606  1FE6  1C03               	skipc
  6607  1FE7  0F25               	incfsz	___ftge@ff2+2,w
  6608  1FE8  3C80               	sublw	128
  6609  1FE9  00A5               	movwf	___ftge@ff2+2
  6610  1FEA                     l3583:
  6611  1FEA  3080               	movlw	128
  6612  1FEB  06A2               	xorwf	___ftge@ff1+2,f
  6613  1FEC                     l3585:
  6614  1FEC  3080               	movlw	128
  6615  1FED  06A5               	xorwf	___ftge@ff2+2,f
  6616  1FEE                     l3587:
  6617  1FEE  0825               	movf	___ftge@ff2+2,w
  6618  1FEF  0222               	subwf	___ftge@ff1+2,w
  6619  1FF0  1D03               	skipz
  6620  1FF1  2FF8               	goto	u5595
  6621  1FF2  0824               	movf	___ftge@ff2+1,w
  6622  1FF3  0221               	subwf	___ftge@ff1+1,w
  6623  1FF4  1D03               	skipz
  6624  1FF5  2FF8               	goto	u5595
  6625  1FF6  0823               	movf	___ftge@ff2,w
  6626  1FF7  0220               	subwf	___ftge@ff1,w
  6627  1FF8                     u5595:
  6628  1FF8  1803               	skipnc
  6629  1FF9  2FFB               	goto	u5591
  6630  1FFA  2FFC               	goto	u5590
  6631  1FFB                     u5591:
  6632  1FFB  2FFE               	goto	l3591
  6633  1FFC                     u5590:
  6634  1FFC                     l3589:
  6635  1FFC  1003               	clrc
  6636  1FFD  2FFF               	goto	l698
  6637  1FFE                     l3591:
  6638  1FFE  1403               	setc
  6639  1FFF                     l698:
  6640  1FFF  0008               	return
  6641  2000                     __end_of___ftge:
  6642                           
  6643                           	psect	text22
  6644  1F47                     __ptext22:	
  6645 ;; *************** function ___awtoft *****************
  6646 ;; Defined at:
  6647 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  c               2    3[BANK0 ] int 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  sign            1    8[BANK0 ] unsigned char 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  3    3[BANK0 ] float 
  6654 ;; Registers used:
  6655 ;;		wreg, status,2, status,0, pclath, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6661 ;;      Params:         0       3       0       0       0
  6662 ;;      Locals:         0       1       0       0       0
  6663 ;;      Temps:          0       2       0       0       0
  6664 ;;      Totals:         0       6       0       0       0
  6665 ;;Total ram usage:        6 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    2
  6668 ;; This function calls:
  6669 ;;		___ftpack
  6670 ;; This function is called by:
  6671 ;;		_main
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           
  6676                           ;psect for function ___awtoft
  6677  1F47                     ___awtoft:
  6678  1F47                     l3949:	
  6679                           ;incstack = 0
  6680                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6681                           
  6682  1F47  1283               	bcf	3,5	;RP0=0, select bank0
  6683  1F48  1303               	bcf	3,6	;RP1=0, select bank0
  6684  1F49  01A8               	clrf	___awtoft@sign
  6685  1F4A                     l3951:
  6686  1F4A  1FA4               	btfss	___awtoft@c+1,7
  6687  1F4B  2F4D               	goto	u6251
  6688  1F4C  2F4E               	goto	u6250
  6689  1F4D                     u6251:
  6690  1F4D  2F55               	goto	l3957
  6691  1F4E                     u6250:
  6692  1F4E                     l3953:
  6693  1F4E  09A3               	comf	___awtoft@c,f
  6694  1F4F  09A4               	comf	___awtoft@c+1,f
  6695  1F50  0AA3               	incf	___awtoft@c,f
  6696  1F51  1903               	skipnz
  6697  1F52  0AA4               	incf	___awtoft@c+1,f
  6698  1F53                     l3955:
  6699  1F53  01A8               	clrf	___awtoft@sign
  6700  1F54  0AA8               	incf	___awtoft@sign,f
  6701  1F55                     l3957:
  6702  1F55  0823               	movf	___awtoft@c,w
  6703  1F56  00F4               	movwf	___ftpack@arg
  6704  1F57  0824               	movf	___awtoft@c+1,w
  6705  1F58  00F5               	movwf	___ftpack@arg+1
  6706  1F59  01F6               	clrf	___ftpack@arg+2
  6707  1F5A  308E               	movlw	142
  6708  1F5B  00A6               	movwf	??___awtoft
  6709  1F5C  0826               	movf	??___awtoft,w
  6710  1F5D  00F7               	movwf	___ftpack@exp
  6711  1F5E  0828               	movf	___awtoft@sign,w
  6712  1F5F  00A7               	movwf	??___awtoft+1
  6713  1F60  0827               	movf	??___awtoft+1,w
  6714  1F61  00F8               	movwf	___ftpack@sign
  6715  1F62  160A  118A  22EF  160A  158A  	fcall	___ftpack
  6716  1F67  0874               	movf	?___ftpack,w
  6717  1F68  1283               	bcf	3,5	;RP0=0, select bank0
  6718  1F69  1303               	bcf	3,6	;RP1=0, select bank0
  6719  1F6A  00A3               	movwf	?___awtoft
  6720  1F6B  0875               	movf	?___ftpack+1,w
  6721  1F6C  00A4               	movwf	?___awtoft+1
  6722  1F6D  0876               	movf	?___ftpack+2,w
  6723  1F6E  00A5               	movwf	?___awtoft+2
  6724  1F6F                     l597:
  6725  1F6F  0008               	return
  6726  1F70                     __end_of___awtoft:
  6727                           
  6728                           	psect	text23
  6729  12EF                     __ptext23:	
  6730 ;; *************** function ___ftpack *****************
  6731 ;; Defined at:
  6732 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  arg             3    4[COMMON] unsigned um
  6735 ;;  exp             1    7[COMMON] unsigned char 
  6736 ;;  sign            1    8[COMMON] unsigned char 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  3    4[COMMON] float 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6748 ;;      Params:         5       0       0       0       0
  6749 ;;      Locals:         0       0       0       0       0
  6750 ;;      Temps:          0       3       0       0       0
  6751 ;;      Totals:         5       3       0       0       0
  6752 ;;Total ram usage:        8 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    1
  6755 ;; This function calls:
  6756 ;;		Nothing
  6757 ;; This function is called by:
  6758 ;;		___awtoft
  6759 ;;		___ftadd
  6760 ;;		___ftmul
  6761 ;;		___lltoft
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           
  6766                           ;psect for function ___ftpack
  6767  12EF                     ___ftpack:
  6768  12EF                     l3153:	
  6769                           ;incstack = 0
  6770                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6771                           
  6772  12EF  0877               	movf	___ftpack@exp,w
  6773  12F0  1903               	btfsc	3,2
  6774  12F1  2AF3               	goto	u4481
  6775  12F2  2AF4               	goto	u4480
  6776  12F3                     u4481:
  6777  12F3  2AFB               	goto	l3157
  6778  12F4                     u4480:
  6779  12F4                     l3155:
  6780  12F4  0876               	movf	___ftpack@arg+2,w
  6781  12F5  0475               	iorwf	___ftpack@arg+1,w
  6782  12F6  0474               	iorwf	___ftpack@arg,w
  6783  12F7  1D03               	skipz
  6784  12F8  2AFA               	goto	u4491
  6785  12F9  2AFB               	goto	u4490
  6786  12FA                     u4491:
  6787  12FA  2B10               	goto	l3163
  6788  12FB                     u4490:
  6789  12FB                     l3157:
  6790  12FB  3000               	movlw	0
  6791  12FC  00F4               	movwf	?___ftpack
  6792  12FD  3000               	movlw	0
  6793  12FE  00F5               	movwf	?___ftpack+1
  6794  12FF  3000               	movlw	0
  6795  1300  00F6               	movwf	?___ftpack+2
  6796  1301  2B70               	goto	l620
  6797  1302                     l3161:
  6798  1302  3001               	movlw	1
  6799  1303  1283               	bcf	3,5	;RP0=0, select bank0
  6800  1304  1303               	bcf	3,6	;RP1=0, select bank0
  6801  1305  00A0               	movwf	??___ftpack
  6802  1306  0820               	movf	??___ftpack,w
  6803  1307  07F7               	addwf	___ftpack@exp,f
  6804  1308  3001               	movlw	1
  6805  1309                     u4505:
  6806  1309  1003               	clrc
  6807  130A  0CF6               	rrf	___ftpack@arg+2,f
  6808  130B  0CF5               	rrf	___ftpack@arg+1,f
  6809  130C  0CF4               	rrf	___ftpack@arg,f
  6810  130D  3EFF               	addlw	-1
  6811  130E  1D03               	skipz
  6812  130F  2B09               	goto	u4505
  6813  1310                     l3163:
  6814  1310  30FE               	movlw	254
  6815  1311  0576               	andwf	___ftpack@arg+2,w
  6816  1312  1D03               	btfss	3,2
  6817  1313  2B15               	goto	u4511
  6818  1314  2B16               	goto	u4510
  6819  1315                     u4511:
  6820  1315  2B02               	goto	l3161
  6821  1316                     u4510:
  6822  1316  2B2F               	goto	l624
  6823  1317                     l3165:
  6824  1317  3001               	movlw	1
  6825  1318  1283               	bcf	3,5	;RP0=0, select bank0
  6826  1319  1303               	bcf	3,6	;RP1=0, select bank0
  6827  131A  00A0               	movwf	??___ftpack
  6828  131B  0820               	movf	??___ftpack,w
  6829  131C  07F7               	addwf	___ftpack@exp,f
  6830  131D                     l3167:
  6831  131D  3001               	movlw	1
  6832  131E  07F4               	addwf	___ftpack@arg,f
  6833  131F  3000               	movlw	0
  6834  1320  1803               	skipnc
  6835  1321  3001               	movlw	1
  6836  1322  07F5               	addwf	___ftpack@arg+1,f
  6837  1323  3000               	movlw	0
  6838  1324  1803               	skipnc
  6839  1325  3001               	movlw	1
  6840  1326  07F6               	addwf	___ftpack@arg+2,f
  6841  1327                     l3169:
  6842  1327  3001               	movlw	1
  6843  1328                     u4525:
  6844  1328  1003               	clrc
  6845  1329  0CF6               	rrf	___ftpack@arg+2,f
  6846  132A  0CF5               	rrf	___ftpack@arg+1,f
  6847  132B  0CF4               	rrf	___ftpack@arg,f
  6848  132C  3EFF               	addlw	-1
  6849  132D  1D03               	skipz
  6850  132E  2B28               	goto	u4525
  6851  132F                     l624:
  6852  132F  30FF               	movlw	255
  6853  1330  0576               	andwf	___ftpack@arg+2,w
  6854  1331  1D03               	btfss	3,2
  6855  1332  2B34               	goto	u4531
  6856  1333  2B35               	goto	u4530
  6857  1334                     u4531:
  6858  1334  2B17               	goto	l3165
  6859  1335                     u4530:
  6860  1335  2B40               	goto	l3173
  6861  1336                     l3171:
  6862  1336  3001               	movlw	1
  6863  1337  02F7               	subwf	___ftpack@exp,f
  6864  1338  3001               	movlw	1
  6865  1339                     u4545:
  6866  1339  1003               	clrc
  6867  133A  0DF4               	rlf	___ftpack@arg,f
  6868  133B  0DF5               	rlf	___ftpack@arg+1,f
  6869  133C  0DF6               	rlf	___ftpack@arg+2,f
  6870  133D  3EFF               	addlw	-1
  6871  133E  1D03               	skipz
  6872  133F  2B39               	goto	u4545
  6873  1340                     l3173:
  6874  1340  1BF5               	btfsc	___ftpack@arg+1,7
  6875  1341  2B43               	goto	u4551
  6876  1342  2B44               	goto	u4550
  6877  1343                     u4551:
  6878  1343  2B4A               	goto	l631
  6879  1344                     u4550:
  6880  1344                     l3175:
  6881  1344  3002               	movlw	2
  6882  1345  0277               	subwf	___ftpack@exp,w
  6883  1346  1803               	skipnc
  6884  1347  2B49               	goto	u4561
  6885  1348  2B4A               	goto	u4560
  6886  1349                     u4561:
  6887  1349  2B36               	goto	l3171
  6888  134A                     u4560:
  6889  134A                     l631:
  6890  134A  1877               	btfsc	___ftpack@exp,0
  6891  134B  2B4D               	goto	u4571
  6892  134C  2B4E               	goto	u4570
  6893  134D                     u4571:
  6894  134D  2B54               	goto	l632
  6895  134E                     u4570:
  6896  134E                     l3177:
  6897  134E  30FF               	movlw	255
  6898  134F  05F4               	andwf	___ftpack@arg,f
  6899  1350  307F               	movlw	127
  6900  1351  05F5               	andwf	___ftpack@arg+1,f
  6901  1352  30FF               	movlw	255
  6902  1353  05F6               	andwf	___ftpack@arg+2,f
  6903  1354                     l632:
  6904  1354  1003               	clrc
  6905  1355  0CF7               	rrf	___ftpack@exp,f
  6906  1356                     l3179:
  6907  1356  0877               	movf	___ftpack@exp,w
  6908  1357  1283               	bcf	3,5	;RP0=0, select bank0
  6909  1358  1303               	bcf	3,6	;RP1=0, select bank0
  6910  1359  00A0               	movwf	??___ftpack
  6911  135A  01A1               	clrf	??___ftpack+1
  6912  135B  01A2               	clrf	??___ftpack+2
  6913  135C  3010               	movlw	16
  6914  135D                     u4585:
  6915  135D  1003               	clrc
  6916  135E  0DA0               	rlf	??___ftpack,f
  6917  135F  0DA1               	rlf	??___ftpack+1,f
  6918  1360  0DA2               	rlf	??___ftpack+2,f
  6919  1361                     u4580:
  6920  1361  3EFF               	addlw	-1
  6921  1362  1D03               	skipz
  6922  1363  2B5D               	goto	u4585
  6923  1364  0820               	movf	??___ftpack,w
  6924  1365  04F4               	iorwf	___ftpack@arg,f
  6925  1366  0821               	movf	??___ftpack+1,w
  6926  1367  04F5               	iorwf	___ftpack@arg+1,f
  6927  1368  0822               	movf	??___ftpack+2,w
  6928  1369  04F6               	iorwf	___ftpack@arg+2,f
  6929  136A                     l3181:
  6930  136A  0878               	movf	___ftpack@sign,w
  6931  136B  1903               	btfsc	3,2
  6932  136C  2B6E               	goto	u4591
  6933  136D  2B6F               	goto	u4590
  6934  136E                     u4591:
  6935  136E  2B70               	goto	l633
  6936  136F                     u4590:
  6937  136F                     l3183:
  6938  136F  17F6               	bsf	___ftpack@arg+2,7
  6939  1370                     l633:
  6940  1370                     l620:
  6941  1370  0008               	return
  6942  1371                     __end_of___ftpack:
  6943                           
  6944                           	psect	text24
  6945  1F70                     __ptext24:	
  6946 ;; *************** function _USART_WriteStr *****************
  6947 ;; Defined at:
  6948 ;;		line 38 in file "USART.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  a               2    5[COMMON] PTR unsigned char 
  6951 ;;		 -> Lcdvar(20), STR_1(19), 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  i               1    8[COMMON] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6963 ;;      Params:         2       0       0       0       0
  6964 ;;      Locals:         1       0       0       0       0
  6965 ;;      Temps:          1       0       0       0       0
  6966 ;;      Totals:         4       0       0       0       0
  6967 ;;Total ram usage:        4 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; Hardware stack levels required when called:    2
  6970 ;; This function calls:
  6971 ;;		_USART_Write
  6972 ;; This function is called by:
  6973 ;;		_main
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           
  6978                           ;psect for function _USART_WriteStr
  6979  1F70                     _USART_WriteStr:
  6980  1F70                     l2717:	
  6981                           ;incstack = 0
  6982                           ; Regs used in _USART_WriteStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6983                           
  6984                           
  6985                           ;USART.c: 39:     uint8_t i;;USART.c: 40:     for(i=0;a[i]!='\0';i++){
  6986  1F70  01F8               	clrf	USART_WriteStr@i
  6987  1F71  2F87               	goto	l2723
  6988  1F72                     l2719:
  6989                           
  6990                           ;USART.c: 41:         USART_Write(a[i]);
  6991  1F72  0878               	movf	USART_WriteStr@i,w
  6992  1F73  0775               	addwf	USART_WriteStr@a,w
  6993  1F74  0084               	movwf	4
  6994  1F75  0876               	movf	USART_WriteStr@a+1,w
  6995  1F76  1803               	skipnc
  6996  1F77  0A76               	incf	USART_WriteStr@a+1,w
  6997  1F78  00FF               	movwf	btemp+1
  6998  1F79  120A  158A  2000  160A  158A  	fcall	stringtab
  6999  1F7E  160A  158A  2632  160A  158A  	fcall	_USART_Write
  7000  1F83                     l2721:
  7001                           
  7002                           ;USART.c: 42:     }
  7003  1F83  3001               	movlw	1
  7004  1F84  00F7               	movwf	??_USART_WriteStr
  7005  1F85  0877               	movf	??_USART_WriteStr,w
  7006  1F86  07F8               	addwf	USART_WriteStr@i,f
  7007  1F87                     l2723:
  7008  1F87  0878               	movf	USART_WriteStr@i,w
  7009  1F88  0775               	addwf	USART_WriteStr@a,w
  7010  1F89  0084               	movwf	4
  7011  1F8A  0876               	movf	USART_WriteStr@a+1,w
  7012  1F8B  1803               	skipnc
  7013  1F8C  0A76               	incf	USART_WriteStr@a+1,w
  7014  1F8D  1283               	bcf	3,5	;RP0=0, select bank0
  7015  1F8E  1303               	bcf	3,6	;RP1=0, select bank0
  7016  1F8F  00FF               	movwf	btemp+1
  7017  1F90  120A  158A  2000  160A  158A  	fcall	stringtab
  7018  1F95  3A00               	xorlw	0
  7019  1F96  1D03               	skipz
  7020  1F97  2F99               	goto	u3781
  7021  1F98  2F9A               	goto	u3780
  7022  1F99                     u3781:
  7023  1F99  2F72               	goto	l2719
  7024  1F9A                     u3780:
  7025  1F9A                     l184:
  7026  1F9A  0008               	return
  7027  1F9B                     __end_of_USART_WriteStr:
  7028                           
  7029                           	psect	text25
  7030  1E32                     __ptext25:	
  7031 ;; *************** function _USART_Write *****************
  7032 ;; Defined at:
  7033 ;;		line 33 in file "USART.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  a               1    wreg     unsigned char 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  a               1    4[COMMON] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		wreg
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7047 ;;      Params:         0       0       0       0       0
  7048 ;;      Locals:         1       0       0       0       0
  7049 ;;      Temps:          0       0       0       0       0
  7050 ;;      Totals:         1       0       0       0       0
  7051 ;;Total ram usage:        1 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    1
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_main
  7058 ;;		_USART_WriteStr
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           
  7063                           ;psect for function _USART_Write
  7064  1E32                     _USART_Write:
  7065                           
  7066                           ;incstack = 0
  7067                           ; Regs used in _USART_Write: [wreg]
  7068                           ;USART_Write@a stored from wreg
  7069  1E32  00F4               	movwf	USART_Write@a
  7070  1E33                     l2335:
  7071  1E33                     l175:	
  7072                           ;USART.c: 34:     while(!TRMT);
  7073                           
  7074  1E33  1683               	bsf	3,5	;RP0=1, select bank1
  7075  1E34  1303               	bcf	3,6	;RP1=0, select bank1
  7076  1E35  1C98               	btfss	24,1	;volatile
  7077  1E36  2E38               	goto	u3091
  7078  1E37  2E39               	goto	u3090
  7079  1E38                     u3091:
  7080  1E38  2E33               	goto	l175
  7081  1E39                     u3090:
  7082  1E39                     l2337:
  7083                           
  7084                           ;USART.c: 35:     TXREG=a;
  7085  1E39  0874               	movf	USART_Write@a,w
  7086  1E3A  1283               	bcf	3,5	;RP0=0, select bank0
  7087  1E3B  1303               	bcf	3,6	;RP1=0, select bank0
  7088  1E3C  0099               	movwf	25	;volatile
  7089  1E3D                     l178:
  7090  1E3D  0008               	return
  7091  1E3E                     __end_of_USART_Write:
  7092                           
  7093                           	psect	text26
  7094  1F1F                     __ptext26:	
  7095 ;; *************** function _Setup *****************
  7096 ;; Defined at:
  7097 ;;		line 67 in file "LAB03.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;		None
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		wreg, status,2, status,0, pclath, cstack
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7111 ;;      Params:         0       0       0       0       0
  7112 ;;      Locals:         0       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0
  7114 ;;      Totals:         0       0       0       0       0
  7115 ;;Total ram usage:        0 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    2
  7118 ;; This function calls:
  7119 ;;		_ADC_CONFIG
  7120 ;; This function is called by:
  7121 ;;		_main
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           
  7126                           ;psect for function _Setup
  7127  1F1F                     _Setup:
  7128  1F1F                     l2687:	
  7129                           ;incstack = 0
  7130                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  7131                           
  7132                           
  7133                           ;LAB03.c: 69:     ANSEL = 0b00000011;
  7134  1F1F  3003               	movlw	3
  7135  1F20  1683               	bsf	3,5	;RP0=1, select bank3
  7136  1F21  1703               	bsf	3,6	;RP1=1, select bank3
  7137  1F22  0088               	movwf	8	;volatile
  7138  1F23                     l2689:
  7139                           
  7140                           ;LAB03.c: 70:     ANSELH = 0;
  7141  1F23  0189               	clrf	9	;volatile
  7142  1F24                     l2691:
  7143                           
  7144                           ;LAB03.c: 72:     TRISA = 0b00000011;
  7145  1F24  3003               	movlw	3
  7146  1F25  1683               	bsf	3,5	;RP0=1, select bank1
  7147  1F26  1303               	bcf	3,6	;RP1=0, select bank1
  7148  1F27  0085               	movwf	5	;volatile
  7149                           
  7150                           ;LAB03.c: 73:     PORTA = 0;
  7151  1F28  1283               	bcf	3,5	;RP0=0, select bank0
  7152  1F29  1303               	bcf	3,6	;RP1=0, select bank0
  7153  1F2A  0185               	clrf	5	;volatile
  7154                           
  7155                           ;LAB03.c: 76:     TRISC = 0b0000000;
  7156  1F2B  1683               	bsf	3,5	;RP0=1, select bank1
  7157  1F2C  1303               	bcf	3,6	;RP1=0, select bank1
  7158  1F2D  0187               	clrf	7	;volatile
  7159                           
  7160                           ;LAB03.c: 77:     PORTC = 0;
  7161  1F2E  1283               	bcf	3,5	;RP0=0, select bank0
  7162  1F2F  1303               	bcf	3,6	;RP1=0, select bank0
  7163  1F30  0187               	clrf	7	;volatile
  7164                           
  7165                           ;LAB03.c: 79:     TRISD = 0;
  7166  1F31  1683               	bsf	3,5	;RP0=1, select bank1
  7167  1F32  1303               	bcf	3,6	;RP1=0, select bank1
  7168  1F33  0188               	clrf	8	;volatile
  7169                           
  7170                           ;LAB03.c: 80:     PORTD = 0;
  7171  1F34  1283               	bcf	3,5	;RP0=0, select bank0
  7172  1F35  1303               	bcf	3,6	;RP1=0, select bank0
  7173  1F36  0188               	clrf	8	;volatile
  7174                           
  7175                           ;LAB03.c: 82:     TRISE = 0;
  7176  1F37  1683               	bsf	3,5	;RP0=1, select bank1
  7177  1F38  1303               	bcf	3,6	;RP1=0, select bank1
  7178  1F39  0189               	clrf	9	;volatile
  7179                           
  7180                           ;LAB03.c: 83:     PORTE = 0;
  7181  1F3A  1283               	bcf	3,5	;RP0=0, select bank0
  7182  1F3B  1303               	bcf	3,6	;RP1=0, select bank0
  7183  1F3C  0189               	clrf	9	;volatile
  7184  1F3D                     l2693:
  7185                           
  7186                           ;LAB03.c: 85:     ADC_CONFIG();
  7187  1F3D  160A  158A  266B  160A  158A  	fcall	_ADC_CONFIG
  7188  1F42                     l2695:
  7189                           
  7190                           ;LAB03.c: 86:     ADCON0bits.CHS=0;
  7191  1F42  30C3               	movlw	-61
  7192  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  7193  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  7194  1F45  059F               	andwf	31,f	;volatile
  7195  1F46                     l71:
  7196  1F46  0008               	return
  7197  1F47                     __end_of_Setup:
  7198                           
  7199                           	psect	text27
  7200  1E6B                     __ptext27:	
  7201 ;; *************** function _ADC_CONFIG *****************
  7202 ;; Defined at:
  7203 ;;		line 10 in file "LIB_ADC.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;		None
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;		None
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		wreg, status,2, status,0
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7217 ;;      Params:         0       0       0       0       0
  7218 ;;      Locals:         0       0       0       0       0
  7219 ;;      Temps:          0       0       0       0       0
  7220 ;;      Totals:         0       0       0       0       0
  7221 ;;Total ram usage:        0 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:    1
  7224 ;; This function calls:
  7225 ;;		Nothing
  7226 ;; This function is called by:
  7227 ;;		_Setup
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           
  7232                           ;psect for function _ADC_CONFIG
  7233  1E6B                     _ADC_CONFIG:
  7234  1E6B                     l2325:	
  7235                           ;incstack = 0
  7236                           ; Regs used in _ADC_CONFIG: [wreg+status,2+status,0]
  7237                           
  7238                           
  7239                           ;LIB_ADC.c: 11:     INTCONbits.GIE = 1;
  7240  1E6B  178B               	bsf	11,7	;volatile
  7241                           
  7242                           ;LIB_ADC.c: 12:     INTCONbits.PEIE = 1;
  7243  1E6C  170B               	bsf	11,6	;volatile
  7244                           
  7245                           ;LIB_ADC.c: 13:     PIR1bits.ADIF = 0;
  7246  1E6D  1283               	bcf	3,5	;RP0=0, select bank0
  7247  1E6E  1303               	bcf	3,6	;RP1=0, select bank0
  7248  1E6F  130C               	bcf	12,6	;volatile
  7249                           
  7250                           ;LIB_ADC.c: 14:     PIE1bits.ADIE = 1;
  7251  1E70  1683               	bsf	3,5	;RP0=1, select bank1
  7252  1E71  1303               	bcf	3,6	;RP1=0, select bank1
  7253  1E72  170C               	bsf	12,6	;volatile
  7254  1E73                     l2327:
  7255                           
  7256                           ;LIB_ADC.c: 15:     ADCON0bits.ADCS = 0b10;
  7257  1E73  1283               	bcf	3,5	;RP0=0, select bank0
  7258  1E74  1303               	bcf	3,6	;RP1=0, select bank0
  7259  1E75  081F               	movf	31,w	;volatile
  7260  1E76  393F               	andlw	-193
  7261  1E77  3880               	iorlw	128
  7262  1E78  009F               	movwf	31	;volatile
  7263  1E79                     l2329:
  7264                           
  7265                           ;LIB_ADC.c: 16:     ADCON0bits.GO = 0;
  7266  1E79  109F               	bcf	31,1	;volatile
  7267  1E7A                     l2331:
  7268                           
  7269                           ;LIB_ADC.c: 17:     ADCON0bits.ADON = 1;
  7270  1E7A  141F               	bsf	31,0	;volatile
  7271  1E7B                     l2333:
  7272                           
  7273                           ;LIB_ADC.c: 18:     ADCON1 = 0b0000000;
  7274  1E7B  1683               	bsf	3,5	;RP0=1, select bank1
  7275  1E7C  1303               	bcf	3,6	;RP1=0, select bank1
  7276  1E7D  019F               	clrf	31	;volatile
  7277  1E7E                     l102:
  7278  1E7E  0008               	return
  7279  1E7F                     __end_of_ADC_CONFIG:
  7280                           
  7281                           	psect	text28
  7282  1001                     __ptext28:	
  7283 ;; *************** function _Set_BaudRate *****************
  7284 ;; Defined at:
  7285 ;;		line 13 in file "USART.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;		None
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;		None
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      void 
  7292 ;; Registers used:
  7293 ;;		wreg
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7299 ;;      Params:         0       0       0       0       0
  7300 ;;      Locals:         0       0       0       0       0
  7301 ;;      Temps:          0       0       0       0       0
  7302 ;;      Totals:         0       0       0       0       0
  7303 ;;Total ram usage:        0 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    1
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_main
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           
  7314                           ;psect for function _Set_BaudRate
  7315  1001                     _Set_BaudRate:
  7316  1001                     l2711:	
  7317                           ;incstack = 0
  7318                           ; Regs used in _Set_BaudRate: [wreg]
  7319                           
  7320                           
  7321                           ;USART.c: 14:     SPBRG = 12;
  7322  1001  300C               	movlw	12
  7323  1002  1683               	bsf	3,5	;RP0=1, select bank1
  7324  1003  1303               	bcf	3,6	;RP1=0, select bank1
  7325  1004  0099               	movwf	25	;volatile
  7326  1005                     l166:
  7327  1005  0008               	return
  7328  1006                     __end_of_Set_BaudRate:
  7329                           
  7330                           	psect	text29
  7331  1075                     __ptext29:	
  7332 ;; *************** function _LCD_Write_String *****************
  7333 ;; Defined at:
  7334 ;;		line 67 in file "LCD.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  a               2    7[COMMON] PTR unsigned char 
  7337 ;;		 -> STR_3(19), Lcdvar(20), 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  i               2    3[BANK0 ] int 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      void 
  7342 ;; Registers used:
  7343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7349 ;;      Params:         2       0       0       0       0
  7350 ;;      Locals:         0       2       0       0       0
  7351 ;;      Temps:          0       3       0       0       0
  7352 ;;      Totals:         2       5       0       0       0
  7353 ;;Total ram usage:        7 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    3
  7356 ;; This function calls:
  7357 ;;		_LCD_Write_Char
  7358 ;; This function is called by:
  7359 ;;		_main
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function _LCD_Write_String
  7365  1075                     _LCD_Write_String:
  7366  1075                     l3029:	
  7367                           ;incstack = 0
  7368                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7369                           
  7370                           
  7371                           ;LCD.c: 68:  int i;;LCD.c: 69:  for(i=0;a[i]!='\0';i++)
  7372  1075  1283               	bcf	3,5	;RP0=0, select bank0
  7373  1076  1303               	bcf	3,6	;RP1=0, select bank0
  7374  1077  01A3               	clrf	LCD_Write_String@i
  7375  1078  01A4               	clrf	LCD_Write_String@i+1
  7376  1079  289E               	goto	l3035
  7377  107A                     l3031:
  7378                           
  7379                           ;LCD.c: 70:     LCD_Write_Char(a[i]);
  7380  107A  0823               	movf	LCD_Write_String@i,w
  7381  107B  0777               	addwf	LCD_Write_String@a,w
  7382  107C  00A1               	movwf	??_LCD_Write_String+1
  7383  107D  0878               	movf	LCD_Write_String@a+1,w
  7384  107E  00A0               	movwf	??_LCD_Write_String
  7385  107F  1803               	skipnc
  7386  1080  0AA0               	incf	??_LCD_Write_String,f
  7387  1081  1FA3               	btfss	LCD_Write_String@i,7
  7388  1082  2884               	goto	u4350
  7389  1083  03A0               	decf	??_LCD_Write_String,f
  7390  1084                     u4350:
  7391  1084  1283               	bcf	3,5	;RP0=0, select bank0
  7392  1085  1303               	bcf	3,6	;RP1=0, select bank0
  7393  1086  0820               	movf	??_LCD_Write_String,w
  7394  1087  00A2               	movwf	??_LCD_Write_String+2
  7395  1088  0822               	movf	??_LCD_Write_String+2,w
  7396  1089  00FF               	movwf	btemp+1
  7397  108A  0821               	movf	??_LCD_Write_String+1,w
  7398  108B  0084               	movwf	4
  7399  108C  120A  158A  2000  160A  118A  	fcall	stringtab
  7400  1091  160A  158A  2696  160A  118A  	fcall	_LCD_Write_Char
  7401  1096                     l3033:
  7402  1096  3001               	movlw	1
  7403  1097  1283               	bcf	3,5	;RP0=0, select bank0
  7404  1098  1303               	bcf	3,6	;RP1=0, select bank0
  7405  1099  07A3               	addwf	LCD_Write_String@i,f
  7406  109A  1803               	skipnc
  7407  109B  0AA4               	incf	LCD_Write_String@i+1,f
  7408  109C  3000               	movlw	0
  7409  109D  07A4               	addwf	LCD_Write_String@i+1,f
  7410  109E                     l3035:
  7411  109E  0823               	movf	LCD_Write_String@i,w
  7412  109F  0777               	addwf	LCD_Write_String@a,w
  7413  10A0  00A1               	movwf	??_LCD_Write_String+1
  7414  10A1  0878               	movf	LCD_Write_String@a+1,w
  7415  10A2  00A0               	movwf	??_LCD_Write_String
  7416  10A3  1803               	skipnc
  7417  10A4  0AA0               	incf	??_LCD_Write_String,f
  7418  10A5  1FA3               	btfss	LCD_Write_String@i,7
  7419  10A6  28A8               	goto	u4360
  7420  10A7  03A0               	decf	??_LCD_Write_String,f
  7421  10A8                     u4360:
  7422  10A8  1283               	bcf	3,5	;RP0=0, select bank0
  7423  10A9  1303               	bcf	3,6	;RP1=0, select bank0
  7424  10AA  0820               	movf	??_LCD_Write_String,w
  7425  10AB  00A2               	movwf	??_LCD_Write_String+2
  7426  10AC  0822               	movf	??_LCD_Write_String+2,w
  7427  10AD  00FF               	movwf	btemp+1
  7428  10AE  0821               	movf	??_LCD_Write_String+1,w
  7429  10AF  0084               	movwf	4
  7430  10B0  120A  158A  2000  160A  118A  	fcall	stringtab
  7431  10B5  3A00               	xorlw	0
  7432  10B6  1D03               	skipz
  7433  10B7  28B9               	goto	u4371
  7434  10B8  28BA               	goto	u4370
  7435  10B9                     u4371:
  7436  10B9  287A               	goto	l3031
  7437  10BA                     u4370:
  7438  10BA                     l141:
  7439  10BA  0008               	return
  7440  10BB                     __end_of_LCD_Write_String:
  7441                           
  7442                           	psect	text30
  7443  1E96                     __ptext30:	
  7444 ;; *************** function _LCD_Write_Char *****************
  7445 ;; Defined at:
  7446 ;;		line 30 in file "LCD.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  a               1    wreg     unsigned char 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  a               1    6[COMMON] unsigned char 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      void 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0, pclath, cstack
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7460 ;;      Params:         0       0       0       0       0
  7461 ;;      Locals:         1       0       0       0       0
  7462 ;;      Temps:          1       0       0       0       0
  7463 ;;      Totals:         2       0       0       0       0
  7464 ;;Total ram usage:        2 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; Hardware stack levels required when called:    2
  7467 ;; This function calls:
  7468 ;;		_LCD_Port
  7469 ;; This function is called by:
  7470 ;;		_LCD_Write_String
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           
  7475                           ;psect for function _LCD_Write_Char
  7476  1E96                     _LCD_Write_Char:
  7477                           
  7478                           ;incstack = 0
  7479                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  7480                           ;LCD_Write_Char@a stored from wreg
  7481  1E96  00F6               	movwf	LCD_Write_Char@a
  7482  1E97                     l2351:
  7483                           
  7484                           ;LCD.c: 31:     RE0 = 1;
  7485  1E97  1283               	bcf	3,5	;RP0=0, select bank0
  7486  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  7487  1E99  1409               	bsf	9,0	;volatile
  7488  1E9A                     l2353:
  7489                           
  7490                           ;LCD.c: 32:     LCD_Port(a);
  7491  1E9A  0876               	movf	LCD_Write_Char@a,w
  7492  1E9B  120A  158A  20BE  160A  158A  	fcall	_LCD_Port
  7493  1EA0                     l2355:
  7494                           
  7495                           ;LCD.c: 33:     RE1 = 1;
  7496  1EA0  1283               	bcf	3,5	;RP0=0, select bank0
  7497  1EA1  1303               	bcf	3,6	;RP1=0, select bank0
  7498  1EA2  1489               	bsf	9,1	;volatile
  7499  1EA3                     l2357:
  7500                           
  7501                           ;LCD.c: 34:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  7502  1EA3  301A               	movlw	26
  7503  1EA4  00F5               	movwf	??_LCD_Write_Char
  7504  1EA5                     u6287:
  7505  1EA5  0BF5               	decfsz	??_LCD_Write_Char,f
  7506  1EA6  2EA5               	goto	u6287
  7507  1EA7  0000               	nop
  7508  1EA8                     l2359:
  7509                           
  7510                           ;LCD.c: 35:     RE1 = 0;
  7511  1EA8  1283               	bcf	3,5	;RP0=0, select bank0
  7512  1EA9  1303               	bcf	3,6	;RP1=0, select bank0
  7513  1EAA  1089               	bcf	9,1	;volatile
  7514  1EAB                     l2361:
  7515                           
  7516                           ;LCD.c: 36:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7517  1EAB  3006               	movlw	6
  7518  1EAC  00F5               	movwf	??_LCD_Write_Char
  7519  1EAD                     u6297:
  7520  1EAD  0BF5               	decfsz	??_LCD_Write_Char,f
  7521  1EAE  2EAD               	goto	u6297
  7522  1EAF  0000               	nop
  7523  1EB0                     l123:
  7524  1EB0  0008               	return
  7525  1EB1                     __end_of_LCD_Write_Char:
  7526                           
  7527                           	psect	text31
  7528  1EF9                     __ptext31:	
  7529 ;; *************** function _LCD_Set_Cursor *****************
  7530 ;; Defined at:
  7531 ;;		line 53 in file "LCD.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;  x               1    wreg     unsigned char 
  7534 ;;  y               1    8[COMMON] unsigned char 
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;  x               1    1[BANK0 ] unsigned char 
  7537 ;;  a               1    2[BANK0 ] unsigned char 
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      void 
  7540 ;; Registers used:
  7541 ;;		wreg, status,2, status,0, pclath, cstack
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7547 ;;      Params:         1       0       0       0       0
  7548 ;;      Locals:         0       2       0       0       0
  7549 ;;      Temps:          0       1       0       0       0
  7550 ;;      Totals:         1       3       0       0       0
  7551 ;;Total ram usage:        4 bytes
  7552 ;; Hardware stack levels used:    1
  7553 ;; Hardware stack levels required when called:    3
  7554 ;; This function calls:
  7555 ;;		_LCD_Cmd
  7556 ;; This function is called by:
  7557 ;;		_main
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           
  7562                           ;psect for function _LCD_Set_Cursor
  7563  1EF9                     _LCD_Set_Cursor:
  7564                           
  7565                           ;incstack = 0
  7566                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7567                           ;LCD_Set_Cursor@x stored from wreg
  7568  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
  7569  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
  7570  1EFB  00A1               	movwf	LCD_Set_Cursor@x
  7571  1EFC                     l3937:
  7572                           
  7573                           ;LCD.c: 54:  uint8_t a;;LCD.c: 55:  if(x == 1)
  7574  1EFC  0321               	decf	LCD_Set_Cursor@x,w
  7575  1EFD  1D03               	btfss	3,2
  7576  1EFE  2F00               	goto	u6231
  7577  1EFF  2F01               	goto	u6230
  7578  1F00                     u6231:
  7579  1F00  2F0D               	goto	l3943
  7580  1F01                     u6230:
  7581  1F01                     l3939:
  7582                           
  7583                           ;LCD.c: 56:  {;LCD.c: 57:         a = 0x80 + y;
  7584  1F01  0878               	movf	LCD_Set_Cursor@y,w
  7585  1F02  3E80               	addlw	128
  7586  1F03  00A0               	movwf	??_LCD_Set_Cursor
  7587  1F04  0820               	movf	??_LCD_Set_Cursor,w
  7588  1F05  00A2               	movwf	LCD_Set_Cursor@a
  7589  1F06                     l3941:
  7590                           
  7591                           ;LCD.c: 58:   LCD_Cmd(a);
  7592  1F06  0822               	movf	LCD_Set_Cursor@a,w
  7593  1F07  160A  158A  26B1  160A  158A  	fcall	_LCD_Cmd
  7594                           
  7595                           ;LCD.c: 59:  }
  7596  1F0C  2F1E               	goto	l135
  7597  1F0D                     l3943:
  7598  1F0D  3002               	movlw	2
  7599  1F0E  0621               	xorwf	LCD_Set_Cursor@x,w
  7600  1F0F  1D03               	btfss	3,2
  7601  1F10  2F12               	goto	u6241
  7602  1F11  2F13               	goto	u6240
  7603  1F12                     u6241:
  7604  1F12  2F1E               	goto	l135
  7605  1F13                     u6240:
  7606  1F13                     l3945:
  7607                           
  7608                           ;LCD.c: 61:  {;LCD.c: 62:   a = 0xC0 + y;
  7609  1F13  0878               	movf	LCD_Set_Cursor@y,w
  7610  1F14  3EC0               	addlw	192
  7611  1F15  00A0               	movwf	??_LCD_Set_Cursor
  7612  1F16  0820               	movf	??_LCD_Set_Cursor,w
  7613  1F17  00A2               	movwf	LCD_Set_Cursor@a
  7614  1F18                     l3947:
  7615                           
  7616                           ;LCD.c: 63:   LCD_Cmd(a);
  7617  1F18  0822               	movf	LCD_Set_Cursor@a,w
  7618  1F19  160A  158A  26B1  160A  158A  	fcall	_LCD_Cmd
  7619  1F1E                     l135:
  7620  1F1E  0008               	return
  7621  1F1F                     __end_of_LCD_Set_Cursor:
  7622                           
  7623                           	psect	text32
  7624  1101                     __ptext32:	
  7625 ;; *************** function _LCD_Init *****************
  7626 ;; Defined at:
  7627 ;;		line 10 in file "LCD.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;		None
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2, status,0, pclath, cstack
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7641 ;;      Params:         0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0
  7643 ;;      Temps:          0       2       0       0       0
  7644 ;;      Totals:         0       2       0       0       0
  7645 ;;Total ram usage:        2 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:    3
  7648 ;; This function calls:
  7649 ;;		_LCD_Cmd
  7650 ;;		_LCD_Port
  7651 ;; This function is called by:
  7652 ;;		_main
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           
  7657                           ;psect for function _LCD_Init
  7658  1101                     _LCD_Init:
  7659  1101                     l3633:	
  7660                           ;incstack = 0
  7661                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  7662                           
  7663                           
  7664                           ;LCD.c: 11:     RE0=0;
  7665  1101  1283               	bcf	3,5	;RP0=0, select bank0
  7666  1102  1303               	bcf	3,6	;RP1=0, select bank0
  7667  1103  1009               	bcf	9,0	;volatile
  7668                           
  7669                           ;LCD.c: 12:     RE1=0;
  7670  1104  1089               	bcf	9,1	;volatile
  7671  1105                     l3635:
  7672                           
  7673                           ;LCD.c: 13:     LCD_Port(0x00);
  7674  1105  3000               	movlw	0
  7675  1106  120A  158A  20BE  160A  118A  	fcall	_LCD_Port
  7676  110B                     l3637:
  7677                           
  7678                           ;LCD.c: 14:     _delay((unsigned long)((20)*(8000000/4000.0)));
  7679  110B  3034               	movlw	52
  7680  110C  1283               	bcf	3,5	;RP0=0, select bank0
  7681  110D  1303               	bcf	3,6	;RP1=0, select bank0
  7682  110E  00A1               	movwf	??_LCD_Init+1
  7683  110F  30F1               	movlw	241
  7684  1110  00A0               	movwf	??_LCD_Init
  7685  1111                     u6307:
  7686  1111  0BA0               	decfsz	??_LCD_Init,f
  7687  1112  2911               	goto	u6307
  7688  1113  0BA1               	decfsz	??_LCD_Init+1,f
  7689  1114  2911               	goto	u6307
  7690  1115                     l3639:
  7691                           
  7692                           ;LCD.c: 15:     LCD_Cmd(0x30);
  7693  1115  3030               	movlw	48
  7694  1116  160A  158A  26B1  160A  118A  	fcall	_LCD_Cmd
  7695                           
  7696                           ;LCD.c: 16:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7697  111B  300D               	movlw	13
  7698  111C  1283               	bcf	3,5	;RP0=0, select bank0
  7699  111D  1303               	bcf	3,6	;RP1=0, select bank0
  7700  111E  00A1               	movwf	??_LCD_Init+1
  7701  111F  30FB               	movlw	251
  7702  1120  00A0               	movwf	??_LCD_Init
  7703  1121                     u6317:
  7704  1121  0BA0               	decfsz	??_LCD_Init,f
  7705  1122  2921               	goto	u6317
  7706  1123  0BA1               	decfsz	??_LCD_Init+1,f
  7707  1124  2921               	goto	u6317
  7708  1125                     l3641:
  7709                           
  7710                           ;LCD.c: 17:     LCD_Cmd(0x30);
  7711  1125  3030               	movlw	48
  7712  1126  160A  158A  26B1  160A  118A  	fcall	_LCD_Cmd
  7713  112B                     l3643:
  7714                           
  7715                           ;LCD.c: 18:     _delay((unsigned long)((11)*(8000000/4000.0)));
  7716  112B  301D               	movlw	29
  7717  112C  1283               	bcf	3,5	;RP0=0, select bank0
  7718  112D  1303               	bcf	3,6	;RP1=0, select bank0
  7719  112E  00A1               	movwf	??_LCD_Init+1
  7720  112F  3090               	movlw	144
  7721  1130  00A0               	movwf	??_LCD_Init
  7722  1131                     u6327:
  7723  1131  0BA0               	decfsz	??_LCD_Init,f
  7724  1132  2931               	goto	u6327
  7725  1133  0BA1               	decfsz	??_LCD_Init+1,f
  7726  1134  2931               	goto	u6327
  7727  1135  0000               	nop
  7728                           
  7729                           ;LCD.c: 19:     LCD_Cmd(0x30);
  7730  1136  3030               	movlw	48
  7731  1137  160A  158A  26B1  160A  118A  	fcall	_LCD_Cmd
  7732                           
  7733                           ;LCD.c: 20:     LCD_Cmd(0x38);
  7734  113C  3038               	movlw	56
  7735  113D  160A  158A  26B1  160A  118A  	fcall	_LCD_Cmd
  7736                           
  7737                           ;LCD.c: 21:     LCD_Cmd(0x0C);
  7738  1142  300C               	movlw	12
  7739  1143  160A  158A  26B1  160A  118A  	fcall	_LCD_Cmd
  7740                           
  7741                           ;LCD.c: 22:     LCD_Cmd(0x01);
  7742  1148  3001               	movlw	1
  7743  1149  160A  158A  26B1  160A  118A  	fcall	_LCD_Cmd
  7744                           
  7745                           ;LCD.c: 23:     LCD_Cmd(0x06);
  7746  114E  3006               	movlw	6
  7747  114F  160A  158A  26B1  160A  118A  	fcall	_LCD_Cmd
  7748  1154                     l117:
  7749  1154  0008               	return
  7750  1155                     __end_of_LCD_Init:
  7751                           
  7752                           	psect	text33
  7753  1E3E                     __ptext33:	
  7754 ;; *************** function _LCD_Clear *****************
  7755 ;; Defined at:
  7756 ;;		line 48 in file "LCD.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;		None
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;		None
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  1    wreg      void 
  7763 ;; Registers used:
  7764 ;;		wreg, status,2, status,0, pclath, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7770 ;;      Params:         0       0       0       0       0
  7771 ;;      Locals:         0       0       0       0       0
  7772 ;;      Temps:          0       0       0       0       0
  7773 ;;      Totals:         0       0       0       0       0
  7774 ;;Total ram usage:        0 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; Hardware stack levels required when called:    3
  7777 ;; This function calls:
  7778 ;;		_LCD_Cmd
  7779 ;; This function is called by:
  7780 ;;		_main
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           
  7785                           ;psect for function _LCD_Clear
  7786  1E3E                     _LCD_Clear:
  7787  1E3E                     l2709:	
  7788                           ;incstack = 0
  7789                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  7790                           
  7791                           
  7792                           ;LCD.c: 49:     LCD_Cmd(0);
  7793  1E3E  3000               	movlw	0
  7794  1E3F  160A  158A  26B1  160A  158A  	fcall	_LCD_Cmd
  7795                           
  7796                           ;LCD.c: 50:     LCD_Cmd(1);
  7797  1E44  3001               	movlw	1
  7798  1E45  160A  158A  26B1  160A  158A  	fcall	_LCD_Cmd
  7799  1E4A                     l129:
  7800  1E4A  0008               	return
  7801  1E4B                     __end_of_LCD_Clear:
  7802                           
  7803                           	psect	text34
  7804  1EB1                     __ptext34:	
  7805 ;; *************** function _LCD_Cmd *****************
  7806 ;; Defined at:
  7807 ;;		line 39 in file "LCD.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  a               1    wreg     unsigned char 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  a               1    7[COMMON] unsigned char 
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		wreg, status,2, status,0, pclath, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7821 ;;      Params:         0       0       0       0       0
  7822 ;;      Locals:         1       0       0       0       0
  7823 ;;      Temps:          2       0       0       0       0
  7824 ;;      Totals:         3       0       0       0       0
  7825 ;;Total ram usage:        3 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    2
  7828 ;; This function calls:
  7829 ;;		_LCD_Port
  7830 ;; This function is called by:
  7831 ;;		_LCD_Init
  7832 ;;		_LCD_Clear
  7833 ;;		_LCD_Set_Cursor
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           
  7838                           ;psect for function _LCD_Cmd
  7839  1EB1                     _LCD_Cmd:
  7840                           
  7841                           ;incstack = 0
  7842                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7843                           ;LCD_Cmd@a stored from wreg
  7844  1EB1  00F7               	movwf	LCD_Cmd@a
  7845  1EB2                     l2339:
  7846                           
  7847                           ;LCD.c: 40:     RE0=0;
  7848  1EB2  1283               	bcf	3,5	;RP0=0, select bank0
  7849  1EB3  1303               	bcf	3,6	;RP1=0, select bank0
  7850  1EB4  1009               	bcf	9,0	;volatile
  7851  1EB5                     l2341:
  7852                           
  7853                           ;LCD.c: 41:     LCD_Port(a);
  7854  1EB5  0877               	movf	LCD_Cmd@a,w
  7855  1EB6  120A  158A  20BE  160A  158A  	fcall	_LCD_Port
  7856  1EBB                     l2343:
  7857                           
  7858                           ;LCD.c: 42:     RE1=1;
  7859  1EBB  1283               	bcf	3,5	;RP0=0, select bank0
  7860  1EBC  1303               	bcf	3,6	;RP1=0, select bank0
  7861  1EBD  1489               	bsf	9,1	;volatile
  7862  1EBE                     l2345:
  7863                           
  7864                           ;LCD.c: 43:     _delay((unsigned long)((4)*(8000000/4000.0)));
  7865  1EBE  300B               	movlw	11
  7866  1EBF  00F6               	movwf	??_LCD_Cmd+1
  7867  1EC0  3062               	movlw	98
  7868  1EC1  00F5               	movwf	??_LCD_Cmd
  7869  1EC2                     u6337:
  7870  1EC2  0BF5               	decfsz	??_LCD_Cmd,f
  7871  1EC3  2EC2               	goto	u6337
  7872  1EC4  0BF6               	decfsz	??_LCD_Cmd+1,f
  7873  1EC5  2EC2               	goto	u6337
  7874  1EC6  0000               	nop
  7875  1EC7                     l2347:
  7876                           
  7877                           ;LCD.c: 44:     RE1=0;
  7878  1EC7  1283               	bcf	3,5	;RP0=0, select bank0
  7879  1EC8  1303               	bcf	3,6	;RP1=0, select bank0
  7880  1EC9  1089               	bcf	9,1	;volatile
  7881  1ECA                     l2349:
  7882                           
  7883                           ;LCD.c: 45:     _delay((unsigned long)((2)*(8000000/4000.0)));
  7884  1ECA  3006               	movlw	6
  7885  1ECB  00F6               	movwf	??_LCD_Cmd+1
  7886  1ECC  3030               	movlw	48
  7887  1ECD  00F5               	movwf	??_LCD_Cmd
  7888  1ECE                     u6347:
  7889  1ECE  0BF5               	decfsz	??_LCD_Cmd,f
  7890  1ECF  2ECE               	goto	u6347
  7891  1ED0  0BF6               	decfsz	??_LCD_Cmd+1,f
  7892  1ED1  2ECE               	goto	u6347
  7893  1ED2  0000               	nop
  7894  1ED3                     l126:
  7895  1ED3  0008               	return
  7896  1ED4                     __end_of_LCD_Cmd:
  7897                           
  7898                           	psect	text35
  7899  08BE                     __ptext35:	
  7900 ;; *************** function _LCD_Port *****************
  7901 ;; Defined at:
  7902 ;;		line 26 in file "LCD.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;  a               1    wreg     unsigned char 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;  a               1    4[COMMON] unsigned char 
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  1    wreg      void 
  7909 ;; Registers used:
  7910 ;;		wreg
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7916 ;;      Params:         0       0       0       0       0
  7917 ;;      Locals:         1       0       0       0       0
  7918 ;;      Temps:          0       0       0       0       0
  7919 ;;      Totals:         1       0       0       0       0
  7920 ;;Total ram usage:        1 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; Hardware stack levels required when called:    1
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		_LCD_Init
  7927 ;;		_LCD_Write_Char
  7928 ;;		_LCD_Cmd
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           
  7933                           ;psect for function _LCD_Port
  7934  08BE                     _LCD_Port:
  7935                           
  7936                           ;incstack = 0
  7937                           ; Regs used in _LCD_Port: [wreg]
  7938                           ;LCD_Port@a stored from wreg
  7939  08BE  00F4               	movwf	LCD_Port@a
  7940  08BF                     l2059:
  7941                           
  7942                           ;LCD.c: 27:     PORTD = a;
  7943  08BF  0874               	movf	LCD_Port@a,w
  7944  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  7945  08C1  1303               	bcf	3,6	;RP1=0, select bank0
  7946  08C2  0088               	movwf	8	;volatile
  7947  08C3                     l120:
  7948  08C3  0008               	return
  7949  08C4                     __end_of_LCD_Port:
  7950                           
  7951                           	psect	text36
  7952  1E4B                     __ptext36:	
  7953 ;; *************** function _Init_Trans *****************
  7954 ;; Defined at:
  7955 ;;		line 17 in file "USART.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;		None
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;		None
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      void 
  7962 ;; Registers used:
  7963 ;;		None
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7969 ;;      Params:         0       0       0       0       0
  7970 ;;      Locals:         0       0       0       0       0
  7971 ;;      Temps:          0       0       0       0       0
  7972 ;;      Totals:         0       0       0       0       0
  7973 ;;Total ram usage:        0 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:    1
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_main
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           
  7984                           ;psect for function _Init_Trans
  7985  1E4B                     _Init_Trans:
  7986  1E4B                     l2713:	
  7987                           ;incstack = 0
  7988                           ; Regs used in _Init_Trans: []
  7989                           
  7990                           
  7991                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
  7992  1E4B  1683               	bsf	3,5	;RP0=1, select bank1
  7993  1E4C  1303               	bcf	3,6	;RP1=0, select bank1
  7994  1E4D  1698               	bsf	24,5	;volatile
  7995                           
  7996                           ;USART.c: 19:     PIR1bits.TXIF = 0;
  7997  1E4E  1283               	bcf	3,5	;RP0=0, select bank0
  7998  1E4F  1303               	bcf	3,6	;RP1=0, select bank0
  7999  1E50  120C               	bcf	12,4	;volatile
  8000                           
  8001                           ;USART.c: 20:     PIE1bits.TXIE = 0;
  8002  1E51  1683               	bsf	3,5	;RP0=1, select bank1
  8003  1E52  1303               	bcf	3,6	;RP1=0, select bank1
  8004  1E53  120C               	bcf	12,4	;volatile
  8005                           
  8006                           ;USART.c: 21:     INTCONbits.GIE = 1;
  8007  1E54  178B               	bsf	11,7	;volatile
  8008                           
  8009                           ;USART.c: 22:     INTCONbits.PEIE = 1;
  8010  1E55  170B               	bsf	11,6	;volatile
  8011                           
  8012                           ;USART.c: 23:     TRISCbits.TRISC6 = 0;
  8013  1E56  1307               	bcf	7,6	;volatile
  8014                           
  8015                           ;USART.c: 24:     TRISCbits.TRISC7 = 1;
  8016  1E57  1787               	bsf	7,7	;volatile
  8017  1E58                     l169:
  8018  1E58  0008               	return
  8019  1E59                     __end_of_Init_Trans:
  8020                           
  8021                           	psect	text37
  8022  1E18                     __ptext37:	
  8023 ;; *************** function _Init_Receive *****************
  8024 ;; Defined at:
  8025 ;;		line 27 in file "USART.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;		None
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;		None
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      void 
  8032 ;; Registers used:
  8033 ;;		None
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8039 ;;      Params:         0       0       0       0       0
  8040 ;;      Locals:         0       0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0
  8042 ;;      Totals:         0       0       0       0       0
  8043 ;;Total ram usage:        0 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:    1
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_main
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           
  8054                           ;psect for function _Init_Receive
  8055  1E18                     _Init_Receive:
  8056  1E18                     l2715:	
  8057                           ;incstack = 0
  8058                           ; Regs used in _Init_Receive: []
  8059                           
  8060                           
  8061                           ;USART.c: 28:     TXSTAbits.SYNC = 0;
  8062  1E18  1683               	bsf	3,5	;RP0=1, select bank1
  8063  1E19  1303               	bcf	3,6	;RP1=0, select bank1
  8064  1E1A  1218               	bcf	24,4	;volatile
  8065                           
  8066                           ;USART.c: 29:     RCSTAbits.SPEN = 1;
  8067  1E1B  1283               	bcf	3,5	;RP0=0, select bank0
  8068  1E1C  1303               	bcf	3,6	;RP1=0, select bank0
  8069  1E1D  1798               	bsf	24,7	;volatile
  8070                           
  8071                           ;USART.c: 30:     RCSTAbits.CREN = 1;
  8072  1E1E  1618               	bsf	24,4	;volatile
  8073  1E1F                     l172:
  8074  1E1F  0008               	return
  8075  1E20                     __end_of_Init_Receive:
  8076                           
  8077                           	psect	text38
  8078  126F                     __ptext38:	
  8079 ;; *************** function _ISR *****************
  8080 ;; Defined at:
  8081 ;;		line 93 in file "LAB03.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8095 ;;      Params:         0       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0
  8097 ;;      Temps:          4       0       0       0       0
  8098 ;;      Totals:         4       0       0       0       0
  8099 ;;Total ram usage:        4 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		Interrupt level 1
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           
  8109                           ;psect for function _ISR
  8110  126F                     _ISR:
  8111  126F                     i1l3049:
  8112                           
  8113                           ;LAB03.c: 95:     if(RCIF==1){
  8114  126F  1283               	bcf	3,5	;RP0=0, select bank0
  8115  1270  1303               	bcf	3,6	;RP1=0, select bank0
  8116  1271  1E8C               	btfss	12,5	;volatile
  8117  1272  2A74               	goto	u439_21
  8118  1273  2A75               	goto	u439_20
  8119  1274                     u439_21:
  8120  1274  2A8F               	goto	i1l76
  8121  1275                     u439_20:
  8122  1275                     i1l3051:
  8123                           
  8124                           ;LAB03.c: 97:         receive = RCREG;
  8125  1275  081A               	movf	26,w	;volatile
  8126  1276  00F0               	movwf	??_ISR
  8127  1277  0870               	movf	??_ISR,w
  8128  1278  00F9               	movwf	_receive
  8129  1279                     i1l3053:
  8130                           
  8131                           ;LAB03.c: 98:         if(receive == '+'){
  8132  1279  302B               	movlw	43
  8133  127A  0679               	xorwf	_receive,w
  8134  127B  1D03               	btfss	3,2
  8135  127C  2A7E               	goto	u440_21
  8136  127D  2A7F               	goto	u440_20
  8137  127E                     u440_21:
  8138  127E  2A85               	goto	i1l77
  8139  127F                     u440_20:
  8140  127F                     i1l3055:
  8141                           
  8142                           ;LAB03.c: 99:             contador++;
  8143  127F  3001               	movlw	1
  8144  1280  00F0               	movwf	??_ISR
  8145  1281  0870               	movf	??_ISR,w
  8146  1282  1683               	bsf	3,5	;RP0=1, select bank1
  8147  1283  1303               	bcf	3,6	;RP1=0, select bank1
  8148  1284  07C5               	addwf	_contador^(0+128),f
  8149  1285                     i1l77:	
  8150                           ;LAB03.c: 100:         }
  8151                           
  8152                           
  8153                           ;LAB03.c: 101:         if(receive == '-'){
  8154  1285  302D               	movlw	45
  8155  1286  0679               	xorwf	_receive,w
  8156  1287  1D03               	btfss	3,2
  8157  1288  2A8A               	goto	u441_21
  8158  1289  2A8B               	goto	u441_20
  8159  128A                     u441_21:
  8160  128A  2A8F               	goto	i1l76
  8161  128B                     u441_20:
  8162  128B                     i1l3057:
  8163                           
  8164                           ;LAB03.c: 102:             contador--;
  8165  128B  3001               	movlw	1
  8166  128C  1683               	bsf	3,5	;RP0=1, select bank1
  8167  128D  1303               	bcf	3,6	;RP1=0, select bank1
  8168  128E  02C5               	subwf	_contador^(0+128),f
  8169  128F                     i1l76:	
  8170                           ;LAB03.c: 104:     }
  8171                           
  8172                           
  8173                           ;LAB03.c: 106:     if (ADCON0bits.GO == 0 & ADCON0bits.CHS == 0){
  8174  128F  1283               	bcf	3,5	;RP0=0, select bank0
  8175  1290  1C9F               	btfss	31,1	;volatile
  8176  1291  2A93               	goto	u442_21
  8177  1292  2A95               	goto	u442_20
  8178  1293                     u442_21:
  8179  1293  3001               	movlw	1
  8180  1294  2A96               	goto	u442_22
  8181  1295                     u442_20:
  8182  1295  3000               	movlw	0
  8183  1296                     u442_22:
  8184  1296  00F0               	movwf	??_ISR
  8185  1297  0C1F               	rrf	31,w	;volatile
  8186  1298  00F1               	movwf	??_ISR+1
  8187  1299  0C71               	rrf	??_ISR+1,w
  8188  129A  390F               	andlw	15
  8189  129B  3A00               	xorlw	0
  8190  129C  1903               	skipnz
  8191  129D  2A9F               	goto	u443_21
  8192  129E  2AA1               	goto	u443_20
  8193  129F                     u443_21:
  8194  129F  3001               	movlw	1
  8195  12A0  2AA2               	goto	u443_22
  8196  12A1                     u443_20:
  8197  12A1  3000               	movlw	0
  8198  12A2                     u443_22:
  8199  12A2  0570               	andwf	??_ISR,w
  8200  12A3  3800               	iorlw	0
  8201  12A4  1903               	skipnz
  8202  12A5  2AA7               	goto	u444_21
  8203  12A6  2AA8               	goto	u444_20
  8204  12A7                     u444_21:
  8205  12A7  2ABD               	goto	i1l79
  8206  12A8                     u444_20:
  8207  12A8                     i1l3059:
  8208                           
  8209                           ;LAB03.c: 107:         adcvar = ADRESH;
  8210  12A8  081E               	movf	30,w	;volatile
  8211  12A9  00F0               	movwf	??_ISR
  8212  12AA  0870               	movf	??_ISR,w
  8213  12AB  1683               	bsf	3,5	;RP0=1, select bank1
  8214  12AC  1303               	bcf	3,6	;RP1=0, select bank1
  8215  12AD  00C7               	movwf	_adcvar^(0+128)
  8216  12AE                     i1l3061:
  8217                           
  8218                           ;LAB03.c: 108:         ADCON0bits.CHS = 1;
  8219  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  8220  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  8221  12B0  081F               	movf	31,w	;volatile
  8222  12B1  39C3               	andlw	-61
  8223  12B2  3804               	iorlw	4
  8224  12B3  009F               	movwf	31	;volatile
  8225  12B4                     i1l3063:
  8226                           
  8227                           ;LAB03.c: 109:         _delay((unsigned long)((25)*(8000000/4000000.0)));
  8228  12B4  3010               	movlw	16
  8229  12B5  00F0               	movwf	??_ISR
  8230  12B6                     u635_27:
  8231  12B6  0BF0               	decfsz	??_ISR,f
  8232  12B7  2AB6               	goto	u635_27
  8233  12B8  0000               	nop
  8234  12B9                     i1l3065:
  8235                           
  8236                           ;LAB03.c: 110:         ADCON0bits.GO_DONE = 1;
  8237  12B9  1283               	bcf	3,5	;RP0=0, select bank0
  8238  12BA  1303               	bcf	3,6	;RP1=0, select bank0
  8239  12BB  149F               	bsf	31,1	;volatile
  8240  12BC                     i1l3067:
  8241                           
  8242                           ;LAB03.c: 111:         PIR1bits.ADIF = 0;
  8243  12BC  130C               	bcf	12,6	;volatile
  8244  12BD                     i1l79:	
  8245                           ;LAB03.c: 112:     }
  8246                           
  8247                           
  8248                           ;LAB03.c: 114:     if (ADCON0bits.GO == 0 & ADCON0bits.CHS == 1){
  8249  12BD  1C9F               	btfss	31,1	;volatile
  8250  12BE  2AC0               	goto	u445_21
  8251  12BF  2AC2               	goto	u445_20
  8252  12C0                     u445_21:
  8253  12C0  3001               	movlw	1
  8254  12C1  2AC3               	goto	u445_22
  8255  12C2                     u445_20:
  8256  12C2  3000               	movlw	0
  8257  12C3                     u445_22:
  8258  12C3  00F0               	movwf	??_ISR
  8259  12C4  0C1F               	rrf	31,w	;volatile
  8260  12C5  00F1               	movwf	??_ISR+1
  8261  12C6  0C71               	rrf	??_ISR+1,w
  8262  12C7  390F               	andlw	15
  8263  12C8  3A01               	xorlw	1
  8264  12C9  1903               	skipnz
  8265  12CA  2ACC               	goto	u446_21
  8266  12CB  2ACE               	goto	u446_20
  8267  12CC                     u446_21:
  8268  12CC  3001               	movlw	1
  8269  12CD  2ACF               	goto	u446_22
  8270  12CE                     u446_20:
  8271  12CE  3000               	movlw	0
  8272  12CF                     u446_22:
  8273  12CF  0570               	andwf	??_ISR,w
  8274  12D0  3800               	iorlw	0
  8275  12D1  1903               	skipnz
  8276  12D2  2AD4               	goto	u447_21
  8277  12D3  2AD5               	goto	u447_20
  8278  12D4                     u447_21:
  8279  12D4  2AE8               	goto	i1l81
  8280  12D5                     u447_20:
  8281  12D5                     i1l3069:
  8282                           
  8283                           ;LAB03.c: 115:         adcvar1 = ADRESH;
  8284  12D5  081E               	movf	30,w	;volatile
  8285  12D6  00F0               	movwf	??_ISR
  8286  12D7  0870               	movf	??_ISR,w
  8287  12D8  1683               	bsf	3,5	;RP0=1, select bank1
  8288  12D9  1303               	bcf	3,6	;RP1=0, select bank1
  8289  12DA  00C6               	movwf	_adcvar1^(0+128)
  8290  12DB                     i1l3071:
  8291                           
  8292                           ;LAB03.c: 116:         ADCON0bits.CHS = 0;
  8293  12DB  30C3               	movlw	-61
  8294  12DC  1283               	bcf	3,5	;RP0=0, select bank0
  8295  12DD  1303               	bcf	3,6	;RP1=0, select bank0
  8296  12DE  059F               	andwf	31,f	;volatile
  8297  12DF                     i1l3073:
  8298                           
  8299                           ;LAB03.c: 117:         _delay((unsigned long)((25)*(8000000/4000000.0)));
  8300  12DF  3010               	movlw	16
  8301  12E0  00F0               	movwf	??_ISR
  8302  12E1                     u636_27:
  8303  12E1  0BF0               	decfsz	??_ISR,f
  8304  12E2  2AE1               	goto	u636_27
  8305  12E3  0000               	nop
  8306  12E4                     i1l3075:
  8307                           
  8308                           ;LAB03.c: 118:         ADCON0bits.GO_DONE = 1;
  8309  12E4  1283               	bcf	3,5	;RP0=0, select bank0
  8310  12E5  1303               	bcf	3,6	;RP1=0, select bank0
  8311  12E6  149F               	bsf	31,1	;volatile
  8312  12E7                     i1l3077:
  8313                           
  8314                           ;LAB03.c: 119:         PIR1bits.ADIF = 0;
  8315  12E7  130C               	bcf	12,6	;volatile
  8316  12E8                     i1l81:
  8317  12E8  0873               	movf	??_ISR+3,w
  8318  12E9  008A               	movwf	10
  8319  12EA  0E72               	swapf	??_ISR+2,w
  8320  12EB  0083               	movwf	3
  8321  12EC  0EFE               	swapf	btemp,f
  8322  12ED  0E7E               	swapf	btemp,w
  8323  12EE  0009               	retfie
  8324  12EF                     __end_of_ISR:
  8325  007E                     btemp	set	126	;btemp
  8326  007E                     wtemp0	set	126
  8327                           
  8328                           	psect	intentry
  8329  0004                     __pintentry:	
  8330                           ;incstack = 0
  8331                           ; Regs used in _ISR: [wreg+status,2+status,0]
  8332                           
  8333  0004                     interrupt_function:
  8334  007E                     saved_w	set	btemp
  8335  0004  00FE               	movwf	btemp
  8336  0005  0E03               	swapf	3,w
  8337  0006  00F2               	movwf	??_ISR+2
  8338  0007  080A               	movf	10,w
  8339  0008  00F3               	movwf	??_ISR+3
  8340  0009  160A  118A  2A6F   	ljmp	_ISR
  8341                           
  8342                           	psect	config
  8343                           
  8344                           ;Config register CONFIG1 @ 0x2007
  8345                           ;	Oscillator Selection bits
  8346                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  8347                           ;	Watchdog Timer Enable bit
  8348                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8349                           ;	Power-up Timer Enable bit
  8350                           ;	PWRTE = OFF, PWRT disabled
  8351                           ;	RE3/MCLR pin function select bit
  8352                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8353                           ;	Code Protection bit
  8354                           ;	CP = OFF, Program memory code protection is disabled
  8355                           ;	Data Code Protection bit
  8356                           ;	CPD = OFF, Data memory code protection is disabled
  8357                           ;	Brown Out Reset Selection bits
  8358                           ;	BOREN = OFF, BOR disabled
  8359                           ;	Internal External Switchover bit
  8360                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8361                           ;	Fail-Safe Clock Monitor Enabled bit
  8362                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8363                           ;	Low Voltage Programming Enable bit
  8364                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8365                           ;	In-Circuit Debugger Mode bit
  8366                           ;	DEBUG = 0x1, unprogrammed default
  8367  2007                     	org	8199
  8368  2007  20D1               	dw	8401
  8369                           
  8370                           ;Config register CONFIG2 @ 0x2008
  8371                           ;	Brown-out Reset Selection bit
  8372                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8373                           ;	Flash Program Memory Self Write Enable bits
  8374                           ;	WRT = OFF, Write protection off
  8375  2008                     	org	8200
  8376  2008  3FFF               	dw	16383
  8377                           
  8378                           	psect	text1_split_1
  8379  001D                     u5830:
  8380  001D                     l3741:
  8381  001D  1683               	bsf	3,5	;RP0=1, select bank1
  8382  001E  1303               	bcf	3,6	;RP1=0, select bank1
  8383  001F  083A               	movf	(sprintf@fval+2)^(0+128),w
  8384  0020  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  8385  0021  0438               	iorwf	sprintf@fval^(0+128),w
  8386  0022  1903               	skipnz
  8387  0023  2825               	goto	u5841
  8388  0024  2826               	goto	u5840
  8389  0025                     u5841:
  8390  0025  28E4               	goto	l3761
  8391  0026                     u5840:
  8392  0026                     l3743:
  8393  0026  0838               	movf	sprintf@fval^(0+128),w
  8394  0027  1283               	bcf	3,5	;RP0=0, select bank0
  8395  0028  1303               	bcf	3,6	;RP1=0, select bank0
  8396  0029  00C8               	movwf	___fttol@f1
  8397  002A  1683               	bsf	3,5	;RP0=1, select bank1
  8398  002B  1303               	bcf	3,6	;RP1=0, select bank1
  8399  002C  0839               	movf	(sprintf@fval+1)^(0+128),w
  8400  002D  1283               	bcf	3,5	;RP0=0, select bank0
  8401  002E  1303               	bcf	3,6	;RP1=0, select bank0
  8402  002F  00C9               	movwf	___fttol@f1+1
  8403  0030  1683               	bsf	3,5	;RP0=1, select bank1
  8404  0031  1303               	bcf	3,6	;RP1=0, select bank1
  8405  0032  083A               	movf	(sprintf@fval+2)^(0+128),w
  8406  0033  1283               	bcf	3,5	;RP0=0, select bank0
  8407  0034  1303               	bcf	3,6	;RP1=0, select bank0
  8408  0035  00CA               	movwf	___fttol@f1+2
  8409  0036  160A  118A  2371  120A  118A  	fcall	___fttol
  8410  003B  1283               	bcf	3,5	;RP0=0, select bank0
  8411  003C  1303               	bcf	3,6	;RP1=0, select bank0
  8412  003D  084B               	movf	?___fttol+3,w
  8413  003E  044A               	iorwf	?___fttol+2,w
  8414  003F  0449               	iorwf	?___fttol+1,w
  8415  0040  0448               	iorwf	?___fttol,w
  8416  0041  1D03               	skipz
  8417  0042  2844               	goto	u5851
  8418  0043  2845               	goto	u5850
  8419  0044                     u5851:
  8420  0044  28E4               	goto	l3761
  8421  0045                     u5850:
  8422  0045                     l3745:
  8423  0045  1683               	bsf	3,5	;RP0=1, select bank1
  8424  0046  1303               	bcf	3,6	;RP1=0, select bank1
  8425  0047  0837               	movf	(sprintf@eexp+1)^(0+128),w
  8426  0048  3A80               	xorlw	128
  8427  0049  00FF               	movwf	btemp+1
  8428  004A  3080               	movlw	128
  8429  004B  027F               	subwf	btemp+1,w
  8430  004C  1D03               	skipz
  8431  004D  2850               	goto	u5865
  8432  004E  3002               	movlw	2
  8433  004F  0236               	subwf	sprintf@eexp^(0+128),w
  8434  0050                     u5865:
  8435  0050  1C03               	skipc
  8436  0051  2853               	goto	u5861
  8437  0052  2854               	goto	u5860
  8438  0053                     u5861:
  8439  0053  28E4               	goto	l3761
  8440  0054                     u5860:
  8441  0054                     l3747:
  8442                           
  8443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8444  0054  1683               	bsf	3,5	;RP0=1, select bank1
  8445  0055  1303               	bcf	3,6	;RP1=0, select bank1
  8446  0056  082E               	movf	sprintf@tmpval^(0+128),w
  8447  0057  1283               	bcf	3,5	;RP0=0, select bank0
  8448  0058  1303               	bcf	3,6	;RP1=0, select bank0
  8449  0059  00A0               	movwf	___ftge@ff1
  8450  005A  1683               	bsf	3,5	;RP0=1, select bank1
  8451  005B  1303               	bcf	3,6	;RP1=0, select bank1
  8452  005C  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  8453  005D  1283               	bcf	3,5	;RP0=0, select bank0
  8454  005E  1303               	bcf	3,6	;RP1=0, select bank0
  8455  005F  00A1               	movwf	___ftge@ff1+1
  8456  0060  1683               	bsf	3,5	;RP0=1, select bank1
  8457  0061  1303               	bcf	3,6	;RP1=0, select bank1
  8458  0062  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  8459  0063  1283               	bcf	3,5	;RP0=0, select bank0
  8460  0064  1303               	bcf	3,6	;RP1=0, select bank0
  8461  0065  00A2               	movwf	___ftge@ff1+2
  8462  0066  3070               	movlw	112
  8463  0067  00A3               	movwf	___ftge@ff2
  8464  0068  3089               	movlw	137
  8465  0069  00A4               	movwf	___ftge@ff2+1
  8466  006A  3040               	movlw	64
  8467  006B  00A5               	movwf	___ftge@ff2+2
  8468  006C  160A  158A  27C6  120A  118A  	fcall	___ftge
  8469  0071  1803               	btfsc	3,0
  8470  0072  2874               	goto	u5871
  8471  0073  2875               	goto	u5870
  8472  0074                     u5871:
  8473  0074  287E               	goto	l3751
  8474  0075                     u5870:
  8475  0075                     l3749:
  8476                           
  8477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8478  0075  30F7               	movlw	247
  8479  0076  1683               	bsf	3,5	;RP0=1, select bank1
  8480  0077  1303               	bcf	3,6	;RP1=0, select bank1
  8481  0078  07B6               	addwf	sprintf@eexp^(0+128),f
  8482  0079  1803               	skipnc
  8483  007A  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  8484  007B  30FF               	movlw	255
  8485  007C  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  8486                           
  8487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8488  007D  2886               	goto	l3753
  8489  007E                     l3751:
  8490                           
  8491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8492  007E  30F8               	movlw	248
  8493  007F  1683               	bsf	3,5	;RP0=1, select bank1
  8494  0080  1303               	bcf	3,6	;RP1=0, select bank1
  8495  0081  07B6               	addwf	sprintf@eexp^(0+128),f
  8496  0082  1803               	skipnc
  8497  0083  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  8498  0084  30FF               	movlw	255
  8499  0085  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  8500  0086                     l3753:
  8501                           
  8502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  8503  0086  0836               	movf	sprintf@eexp^(0+128),w
  8504  0087  120A  158A  226D  120A  118A  	fcall	_scale
  8505  008C  1283               	bcf	3,5	;RP0=0, select bank0
  8506  008D  1303               	bcf	3,6	;RP1=0, select bank0
  8507  008E  083F               	movf	?_scale,w
  8508  008F  1683               	bsf	3,5	;RP0=1, select bank1
  8509  0090  1303               	bcf	3,6	;RP1=0, select bank1
  8510  0091  00AE               	movwf	sprintf@tmpval^(0+128)
  8511  0092  1283               	bcf	3,5	;RP0=0, select bank0
  8512  0093  1303               	bcf	3,6	;RP1=0, select bank0
  8513  0094  0840               	movf	?_scale+1,w
  8514  0095  1683               	bsf	3,5	;RP0=1, select bank1
  8515  0096  1303               	bcf	3,6	;RP1=0, select bank1
  8516  0097  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  8517  0098  1283               	bcf	3,5	;RP0=0, select bank0
  8518  0099  1303               	bcf	3,6	;RP1=0, select bank0
  8519  009A  0841               	movf	?_scale+2,w
  8520  009B  1683               	bsf	3,5	;RP0=1, select bank1
  8521  009C  1303               	bcf	3,6	;RP1=0, select bank1
  8522  009D  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  8523  009E                     l3757:	
  8524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8525                           
  8526  009E  0838               	movf	sprintf@fval^(0+128),w
  8527  009F  1283               	bcf	3,5	;RP0=0, select bank0
  8528  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  8529  00A1  00A0               	movwf	__tdiv_to_l_@f1
  8530  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  8531  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  8532  00A4  0839               	movf	(sprintf@fval+1)^(0+128),w
  8533  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  8534  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  8535  00A7  00A1               	movwf	__tdiv_to_l_@f1+1
  8536  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  8537  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  8538  00AA  083A               	movf	(sprintf@fval+2)^(0+128),w
  8539  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  8540  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  8541  00AD  00A2               	movwf	__tdiv_to_l_@f1+2
  8542  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  8543  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  8544  00B0  082E               	movf	sprintf@tmpval^(0+128),w
  8545  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  8546  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  8547  00B3  00A3               	movwf	__tdiv_to_l_@f2
  8548  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  8549  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  8550  00B6  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  8551  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  8552  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  8553  00B9  00A4               	movwf	__tdiv_to_l_@f2+1
  8554  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  8555  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  8556  00BC  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  8557  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  8558  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  8559  00BF  00A5               	movwf	__tdiv_to_l_@f2+2
  8560  00C0  160A  118A  23FD  120A  118A  	fcall	__tdiv_to_l_
  8561  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  8562  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  8563  00C7  0823               	movf	?__tdiv_to_l_+3,w
  8564  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  8565  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  8566  00CA  00B5               	movwf	(sprintf@val+3)^(0+128)
  8567  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  8568  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  8569  00CD  0822               	movf	?__tdiv_to_l_+2,w
  8570  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  8571  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  8572  00D0  00B4               	movwf	(sprintf@val+2)^(0+128)
  8573  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  8574  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  8575  00D3  0821               	movf	?__tdiv_to_l_+1,w
  8576  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  8577  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  8578  00D6  00B3               	movwf	(sprintf@val+1)^(0+128)
  8579  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  8580  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  8581  00D9  0820               	movf	?__tdiv_to_l_,w
  8582  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  8583  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  8584  00DC  00B2               	movwf	sprintf@val^(0+128)
  8585  00DD                     l3759:
  8586                           
  8587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  8588  00DD  3000               	movlw	0
  8589  00DE  00B8               	movwf	sprintf@fval^(0+128)
  8590  00DF  3000               	movlw	0
  8591  00E0  00B9               	movwf	(sprintf@fval+1)^(0+128)
  8592  00E1  3000               	movlw	0
  8593  00E2  00BA               	movwf	(sprintf@fval+2)^(0+128)
  8594                           
  8595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  8596  00E3  2961               	goto	l3765
  8597  00E4                     l3761:
  8598                           
  8599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  8600  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  8601  00E5  1303               	bcf	3,6	;RP1=0, select bank1
  8602  00E6  0838               	movf	sprintf@fval^(0+128),w
  8603  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  8604  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  8605  00E9  00C8               	movwf	___fttol@f1
  8606  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  8607  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  8608  00EC  0839               	movf	(sprintf@fval+1)^(0+128),w
  8609  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  8610  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  8611  00EF  00C9               	movwf	___fttol@f1+1
  8612  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  8613  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  8614  00F2  083A               	movf	(sprintf@fval+2)^(0+128),w
  8615  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  8616  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  8617  00F5  00CA               	movwf	___fttol@f1+2
  8618  00F6  160A  118A  2371  120A  118A  	fcall	___fttol
  8619  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  8620  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  8621  00FD  084B               	movf	?___fttol+3,w
  8622  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  8623  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  8624  0100  00B5               	movwf	(sprintf@val+3)^(0+128)
  8625  0101  1283               	bcf	3,5	;RP0=0, select bank0
  8626  0102  1303               	bcf	3,6	;RP1=0, select bank0
  8627  0103  084A               	movf	?___fttol+2,w
  8628  0104  1683               	bsf	3,5	;RP0=1, select bank1
  8629  0105  1303               	bcf	3,6	;RP1=0, select bank1
  8630  0106  00B4               	movwf	(sprintf@val+2)^(0+128)
  8631  0107  1283               	bcf	3,5	;RP0=0, select bank0
  8632  0108  1303               	bcf	3,6	;RP1=0, select bank0
  8633  0109  0849               	movf	?___fttol+1,w
  8634  010A  1683               	bsf	3,5	;RP0=1, select bank1
  8635  010B  1303               	bcf	3,6	;RP1=0, select bank1
  8636  010C  00B3               	movwf	(sprintf@val+1)^(0+128)
  8637  010D  1283               	bcf	3,5	;RP0=0, select bank0
  8638  010E  1303               	bcf	3,6	;RP1=0, select bank0
  8639  010F  0848               	movf	?___fttol,w
  8640  0110  1683               	bsf	3,5	;RP0=1, select bank1
  8641  0111  1303               	bcf	3,6	;RP1=0, select bank1
  8642  0112  00B2               	movwf	sprintf@val^(0+128)
  8643                           
  8644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  8645  0113  0835               	movf	(sprintf@val+3)^(0+128),w
  8646  0114  1283               	bcf	3,5	;RP0=0, select bank0
  8647  0115  1303               	bcf	3,6	;RP1=0, select bank0
  8648  0116  00A6               	movwf	___lltoft@c+3
  8649  0117  1683               	bsf	3,5	;RP0=1, select bank1
  8650  0118  1303               	bcf	3,6	;RP1=0, select bank1
  8651  0119  0834               	movf	(sprintf@val+2)^(0+128),w
  8652  011A  1283               	bcf	3,5	;RP0=0, select bank0
  8653  011B  1303               	bcf	3,6	;RP1=0, select bank0
  8654  011C  00A5               	movwf	___lltoft@c+2
  8655  011D  1683               	bsf	3,5	;RP0=1, select bank1
  8656  011E  1303               	bcf	3,6	;RP1=0, select bank1
  8657  011F  0833               	movf	(sprintf@val+1)^(0+128),w
  8658  0120  1283               	bcf	3,5	;RP0=0, select bank0
  8659  0121  1303               	bcf	3,6	;RP1=0, select bank0
  8660  0122  00A4               	movwf	___lltoft@c+1
  8661  0123  1683               	bsf	3,5	;RP0=1, select bank1
  8662  0124  1303               	bcf	3,6	;RP1=0, select bank1
  8663  0125  0832               	movf	sprintf@val^(0+128),w
  8664  0126  1283               	bcf	3,5	;RP0=0, select bank0
  8665  0127  1303               	bcf	3,6	;RP1=0, select bank0
  8666  0128  00A3               	movwf	___lltoft@c
  8667  0129  160A  118A  2006  120A  118A  	fcall	___lltoft
  8668  012E  1283               	bcf	3,5	;RP0=0, select bank0
  8669  012F  1303               	bcf	3,6	;RP1=0, select bank0
  8670  0130  0823               	movf	?___lltoft,w
  8671  0131  00DC               	movwf	___ftsub@f2
  8672  0132  0824               	movf	?___lltoft+1,w
  8673  0133  00DD               	movwf	___ftsub@f2+1
  8674  0134  0825               	movf	?___lltoft+2,w
  8675  0135  00DE               	movwf	___ftsub@f2+2
  8676  0136  1683               	bsf	3,5	;RP0=1, select bank1
  8677  0137  1303               	bcf	3,6	;RP1=0, select bank1
  8678  0138  0838               	movf	sprintf@fval^(0+128),w
  8679  0139  1283               	bcf	3,5	;RP0=0, select bank0
  8680  013A  1303               	bcf	3,6	;RP1=0, select bank0
  8681  013B  00DF               	movwf	___ftsub@f1
  8682  013C  1683               	bsf	3,5	;RP0=1, select bank1
  8683  013D  1303               	bcf	3,6	;RP1=0, select bank1
  8684  013E  0839               	movf	(sprintf@fval+1)^(0+128),w
  8685  013F  1283               	bcf	3,5	;RP0=0, select bank0
  8686  0140  1303               	bcf	3,6	;RP1=0, select bank0
  8687  0141  00E0               	movwf	___ftsub@f1+1
  8688  0142  1683               	bsf	3,5	;RP0=1, select bank1
  8689  0143  1303               	bcf	3,6	;RP1=0, select bank1
  8690  0144  083A               	movf	(sprintf@fval+2)^(0+128),w
  8691  0145  1283               	bcf	3,5	;RP0=0, select bank0
  8692  0146  1303               	bcf	3,6	;RP1=0, select bank0
  8693  0147  00E1               	movwf	___ftsub@f1+2
  8694  0148  160A  158A  26D4  120A  118A  	fcall	___ftsub
  8695  014D  1283               	bcf	3,5	;RP0=0, select bank0
  8696  014E  1303               	bcf	3,6	;RP1=0, select bank0
  8697  014F  085C               	movf	?___ftsub,w
  8698  0150  1683               	bsf	3,5	;RP0=1, select bank1
  8699  0151  1303               	bcf	3,6	;RP1=0, select bank1
  8700  0152  00B8               	movwf	sprintf@fval^(0+128)
  8701  0153  1283               	bcf	3,5	;RP0=0, select bank0
  8702  0154  1303               	bcf	3,6	;RP1=0, select bank0
  8703  0155  085D               	movf	?___ftsub+1,w
  8704  0156  1683               	bsf	3,5	;RP0=1, select bank1
  8705  0157  1303               	bcf	3,6	;RP1=0, select bank1
  8706  0158  00B9               	movwf	(sprintf@fval+1)^(0+128)
  8707  0159  1283               	bcf	3,5	;RP0=0, select bank0
  8708  015A  1303               	bcf	3,6	;RP1=0, select bank0
  8709  015B  085E               	movf	?___ftsub+2,w
  8710  015C  1683               	bsf	3,5	;RP0=1, select bank1
  8711  015D  1303               	bcf	3,6	;RP1=0, select bank1
  8712  015E  00BA               	movwf	(sprintf@fval+2)^(0+128)
  8713  015F                     l3763:
  8714                           
  8715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  8716  015F  01B6               	clrf	sprintf@eexp^(0+128)
  8717  0160  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  8718  0161                     l3765:
  8719                           
  8720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8721  0161  01BE               	clrf	sprintf@c^(0+128)
  8722  0162  0ABE               	incf	sprintf@c^(0+128),f
  8723  0163                     l3771:
  8724                           
  8725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  8726  0163  083E               	movf	sprintf@c^(0+128),w
  8727  0164  00A0               	movwf	??_sprintf^(0+128)
  8728  0165  3001               	movlw	1
  8729  0166                     u5885:
  8730  0166  1003               	clrc
  8731  0167  0DA0               	rlf	??_sprintf^(0+128),f
  8732  0168  3EFF               	addlw	-1
  8733  0169  1D03               	skipz
  8734  016A  2966               	goto	u5885
  8735  016B  1003               	clrc
  8736  016C  0D20               	rlf	??_sprintf^(0+128),w
  8737  016D  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8738  016E  0084               	movwf	4
  8739  016F  120A  158A  200A  120A  118A  	fcall	stringdir
  8740  0174  00A1               	movwf	(??_sprintf+1)^(0+128)
  8741  0175  120A  158A  200A  120A  118A  	fcall	stringdir
  8742  017A  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  8743  017B  120A  158A  200A  120A  118A  	fcall	stringdir
  8744  0180  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  8745  0181  120A  158A  200A  120A  118A  	fcall	stringdir
  8746  0186  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  8747  0187  0824               	movf	(??_sprintf+4)^(0+128),w
  8748  0188  0235               	subwf	(sprintf@val+3)^(0+128),w
  8749  0189  1D03               	skipz
  8750  018A  2995               	goto	u5895
  8751  018B  0823               	movf	(??_sprintf+3)^(0+128),w
  8752  018C  0234               	subwf	(sprintf@val+2)^(0+128),w
  8753  018D  1D03               	skipz
  8754  018E  2995               	goto	u5895
  8755  018F  0822               	movf	(??_sprintf+2)^(0+128),w
  8756  0190  0233               	subwf	(sprintf@val+1)^(0+128),w
  8757  0191  1D03               	skipz
  8758  0192  2995               	goto	u5895
  8759  0193  0821               	movf	(??_sprintf+1)^(0+128),w
  8760  0194  0232               	subwf	sprintf@val^(0+128),w
  8761  0195                     u5895:
  8762  0195  1803               	skipnc
  8763  0196  2998               	goto	u5891
  8764  0197  2999               	goto	u5890
  8765  0198                     u5891:
  8766  0198  299A               	goto	l3775
  8767  0199                     u5890:
  8768  0199  29A4               	goto	l3777
  8769  019A                     l3775:
  8770  019A  3001               	movlw	1
  8771  019B  00A0               	movwf	??_sprintf^(0+128)
  8772  019C  0820               	movf	??_sprintf^(0+128),w
  8773  019D  07BE               	addwf	sprintf@c^(0+128),f
  8774  019E  300A               	movlw	10
  8775  019F  063E               	xorwf	sprintf@c^(0+128),w
  8776  01A0  1D03               	btfss	3,2
  8777  01A1  29A3               	goto	u5901
  8778  01A2  29A4               	goto	u5900
  8779  01A3                     u5901:
  8780  01A3  2963               	goto	l3771
  8781  01A4                     u5900:
  8782  01A4                     l3777:
  8783                           
  8784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  8785  01A4  083E               	movf	sprintf@c^(0+128),w
  8786  01A5  073C               	addwf	sprintf@prec^(0+128),w
  8787  01A6  00A0               	movwf	??_sprintf^(0+128)
  8788  01A7  083D               	movf	(sprintf@prec+1)^(0+128),w
  8789  01A8  1803               	skipnc
  8790  01A9  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  8791  01AA  00A1               	movwf	(??_sprintf^(0+128)+1)
  8792  01AB  0836               	movf	sprintf@eexp^(0+128),w
  8793  01AC  0720               	addwf	??_sprintf^(0+128),w
  8794  01AD  00A2               	movwf	(??_sprintf+2)^(0+128)
  8795  01AE  0837               	movf	(sprintf@eexp+1)^(0+128),w
  8796  01AF  1803               	skipnc
  8797  01B0  0A37               	incf	(sprintf@eexp+1)^(0+128),w
  8798  01B1  0721               	addwf	(??_sprintf+1)^(0+128),w
  8799  01B2  00A3               	movwf	(??_sprintf+3)^(0+128)
  8800  01B3  0822               	movf	(??_sprintf+2)^(0+128),w
  8801  01B4  02AC               	subwf	sprintf@width^(0+128),f
  8802  01B5  0823               	movf	(??_sprintf+3)^(0+128),w
  8803  01B6  1C03               	skipc
  8804  01B7  03AD               	decf	(sprintf@width+1)^(0+128),f
  8805  01B8  02AD               	subwf	(sprintf@width+1)^(0+128),f
  8806                           
  8807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  8808  01B9  083C               	movf	sprintf@prec^(0+128),w
  8809  01BA  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  8810  01BB  1903               	btfsc	3,2
  8811  01BC  29BE               	goto	u5911
  8812  01BD  29BF               	goto	u5910
  8813  01BE                     u5911:
  8814  01BE  29C5               	goto	l3781
  8815  01BF                     u5910:
  8816  01BF                     l3779:
  8817                           
  8818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  8819  01BF  30FF               	movlw	255
  8820  01C0  07AC               	addwf	sprintf@width^(0+128),f
  8821  01C1  1803               	skipnc
  8822  01C2  0AAD               	incf	(sprintf@width+1)^(0+128),f
  8823  01C3  30FF               	movlw	255
  8824  01C4  07AD               	addwf	(sprintf@width+1)^(0+128),f
  8825  01C5                     l3781:
  8826                           
  8827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  8828  01C5  3003               	movlw	3
  8829  01C6  052A               	andwf	sprintf@flag^(0+128),w
  8830  01C7  00A0               	movwf	??_sprintf^(0+128)
  8831  01C8  3000               	movlw	0
  8832  01C9  052B               	andwf	(sprintf@flag+1)^(0+128),w
  8833  01CA  00A1               	movwf	(??_sprintf+1)^(0+128)
  8834  01CB  0820               	movf	??_sprintf^(0+128),w
  8835  01CC  0421               	iorwf	(??_sprintf^(0+128)+1),w
  8836  01CD  1903               	btfsc	3,2
  8837  01CE  29D0               	goto	u5921
  8838  01CF  29D1               	goto	u5920
  8839  01D0                     u5921:
  8840  01D0  29E6               	goto	l3791
  8841  01D1                     u5920:
  8842  01D1                     l3783:
  8843                           
  8844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  8845  01D1  30FF               	movlw	255
  8846  01D2  07AC               	addwf	sprintf@width^(0+128),f
  8847  01D3  1803               	skipnc
  8848  01D4  0AAD               	incf	(sprintf@width+1)^(0+128),f
  8849  01D5  30FF               	movlw	255
  8850  01D6  07AD               	addwf	(sprintf@width+1)^(0+128),f
  8851  01D7  29E6               	goto	l3791
  8852  01D8                     l3785:
  8853                           
  8854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  8855  01D8  3020               	movlw	32
  8856  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  8857  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  8858  01DB  00A0               	movwf	??_sprintf^(0+128)
  8859  01DC  083B               	movf	sprintf@sp^(0+128),w
  8860  01DD  0084               	movwf	4
  8861  01DE  0820               	movf	??_sprintf^(0+128),w
  8862  01DF  1383               	bcf	3,7	;select IRP bank0
  8863  01E0  0080               	movwf	0
  8864  01E1                     l3787:
  8865  01E1  3001               	movlw	1
  8866  01E2  00A0               	movwf	??_sprintf^(0+128)
  8867  01E3  0820               	movf	??_sprintf^(0+128),w
  8868  01E4  07BB               	addwf	sprintf@sp^(0+128),f
  8869  01E5  29D1               	goto	l3783
  8870  01E6                     l3791:
  8871                           
  8872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  8873  01E6  082D               	movf	(sprintf@width+1)^(0+128),w
  8874  01E7  3A80               	xorlw	128
  8875  01E8  00FF               	movwf	btemp+1
  8876  01E9  3080               	movlw	128
  8877  01EA  027F               	subwf	btemp+1,w
  8878  01EB  1D03               	skipz
  8879  01EC  29EF               	goto	u5935
  8880  01ED  3001               	movlw	1
  8881  01EE  022C               	subwf	sprintf@width^(0+128),w
  8882  01EF                     u5935:
  8883  01EF  1803               	skipnc
  8884  01F0  29F2               	goto	u5931
  8885  01F1  29F3               	goto	u5930
  8886  01F2                     u5931:
  8887  01F2  29D8               	goto	l3785
  8888  01F3                     u5930:
  8889  01F3                     l3793:
  8890                           
  8891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  8892  01F3  3003               	movlw	3
  8893  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  8894  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  8895  01F6  052A               	andwf	sprintf@flag^(0+128),w
  8896  01F7  00A0               	movwf	??_sprintf^(0+128)
  8897  01F8  3000               	movlw	0
  8898  01F9  052B               	andwf	(sprintf@flag+1)^(0+128),w
  8899  01FA  00A1               	movwf	(??_sprintf+1)^(0+128)
  8900  01FB  0820               	movf	??_sprintf^(0+128),w
  8901  01FC  0421               	iorwf	(??_sprintf^(0+128)+1),w
  8902  01FD  1903               	btfsc	3,2
  8903  01FE  2A00               	goto	u5941
  8904  01FF  2A01               	goto	u5940
  8905  0200                     u5941:
  8906  0200  2AB3               	goto	l354
  8907  0201                     u5940:
  8908  0201                     l3795:
  8909                           
  8910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  8911  0201  302D               	movlw	45
  8912  0202  00A0               	movwf	??_sprintf^(0+128)
  8913  0203  083B               	movf	sprintf@sp^(0+128),w
  8914  0204  0084               	movwf	4
  8915  0205  0820               	movf	??_sprintf^(0+128),w
  8916  0206  1383               	bcf	3,7	;select IRP bank0
  8917  0207  0080               	movwf	0
  8918  0208                     l3797:
  8919  0208  3001               	movlw	1
  8920  0209  00A0               	movwf	??_sprintf^(0+128)
  8921  020A  0820               	movf	??_sprintf^(0+128),w
  8922  020B  07BB               	addwf	sprintf@sp^(0+128),f
  8923  020C  2AB3               	goto	l354
  8924  020D                     l3799:
  8925                           
  8926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  8927  020D  083E               	movf	sprintf@c^(0+128),w
  8928  020E  00A0               	movwf	??_sprintf^(0+128)
  8929  020F  3001               	movlw	1
  8930  0210                     u5955:
  8931  0210  1003               	clrc
  8932  0211  0DA0               	rlf	??_sprintf^(0+128),f
  8933  0212  3EFF               	addlw	-1
  8934  0213  1D03               	skipz
  8935  0214  2A10               	goto	u5955
  8936  0215  1003               	clrc
  8937  0216  0D20               	rlf	??_sprintf^(0+128),w
  8938  0217  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8939  0218  0084               	movwf	4
  8940  0219  120A  158A  200A  120A  118A  	fcall	stringdir
  8941  021E  1283               	bcf	3,5	;RP0=0, select bank0
  8942  021F  1303               	bcf	3,6	;RP1=0, select bank0
  8943  0220  00A0               	movwf	___lldiv@divisor
  8944  0221  120A  158A  200A  120A  118A  	fcall	stringdir
  8945  0226  00A1               	movwf	___lldiv@divisor+1
  8946  0227  120A  158A  200A  120A  118A  	fcall	stringdir
  8947  022C  00A2               	movwf	___lldiv@divisor+2
  8948  022D  120A  158A  200A  120A  118A  	fcall	stringdir
  8949  0232  00A3               	movwf	___lldiv@divisor+3
  8950  0233  1683               	bsf	3,5	;RP0=1, select bank1
  8951  0234  1303               	bcf	3,6	;RP1=0, select bank1
  8952  0235  0835               	movf	(sprintf@val+3)^(0+128),w
  8953  0236  1283               	bcf	3,5	;RP0=0, select bank0
  8954  0237  1303               	bcf	3,6	;RP1=0, select bank0
  8955  0238  00A7               	movwf	___lldiv@dividend+3
  8956  0239  1683               	bsf	3,5	;RP0=1, select bank1
  8957  023A  1303               	bcf	3,6	;RP1=0, select bank1
  8958  023B  0834               	movf	(sprintf@val+2)^(0+128),w
  8959  023C  1283               	bcf	3,5	;RP0=0, select bank0
  8960  023D  1303               	bcf	3,6	;RP1=0, select bank0
  8961  023E  00A6               	movwf	___lldiv@dividend+2
  8962  023F  1683               	bsf	3,5	;RP0=1, select bank1
  8963  0240  1303               	bcf	3,6	;RP1=0, select bank1
  8964  0241  0833               	movf	(sprintf@val+1)^(0+128),w
  8965  0242  1283               	bcf	3,5	;RP0=0, select bank0
  8966  0243  1303               	bcf	3,6	;RP1=0, select bank0
  8967  0244  00A5               	movwf	___lldiv@dividend+1
  8968  0245  1683               	bsf	3,5	;RP0=1, select bank1
  8969  0246  1303               	bcf	3,6	;RP1=0, select bank1
  8970  0247  0832               	movf	sprintf@val^(0+128),w
  8971  0248  1283               	bcf	3,5	;RP0=0, select bank0
  8972  0249  1303               	bcf	3,6	;RP1=0, select bank0
  8973  024A  00A4               	movwf	___lldiv@dividend
  8974  024B  120A  118A  2798  120A  118A  	fcall	___lldiv
  8975  0250  1283               	bcf	3,5	;RP0=0, select bank0
  8976  0251  1303               	bcf	3,6	;RP1=0, select bank0
  8977  0252  0823               	movf	?___lldiv+3,w
  8978  0253  1683               	bsf	3,5	;RP0=1, select bank1
  8979  0254  1303               	bcf	3,6	;RP1=0, select bank1
  8980  0255  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  8981  0256  1283               	bcf	3,5	;RP0=0, select bank0
  8982  0257  1303               	bcf	3,6	;RP1=0, select bank0
  8983  0258  0822               	movf	?___lldiv+2,w
  8984  0259  1683               	bsf	3,5	;RP0=1, select bank1
  8985  025A  1303               	bcf	3,6	;RP1=0, select bank1
  8986  025B  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  8987  025C  1283               	bcf	3,5	;RP0=0, select bank0
  8988  025D  1303               	bcf	3,6	;RP1=0, select bank0
  8989  025E  0821               	movf	?___lldiv+1,w
  8990  025F  1683               	bsf	3,5	;RP0=1, select bank1
  8991  0260  1303               	bcf	3,6	;RP1=0, select bank1
  8992  0261  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  8993  0262  1283               	bcf	3,5	;RP0=0, select bank0
  8994  0263  1303               	bcf	3,6	;RP1=0, select bank0
  8995  0264  0820               	movf	?___lldiv,w
  8996  0265  1683               	bsf	3,5	;RP0=1, select bank1
  8997  0266  1303               	bcf	3,6	;RP1=0, select bank1
  8998  0267  00AE               	movwf	sprintf@tmpval^(0+128)
  8999  0268                     l3801:
  9000                           
  9001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9002  0268  3000               	movlw	0
  9003  0269  1283               	bcf	3,5	;RP0=0, select bank0
  9004  026A  1303               	bcf	3,6	;RP1=0, select bank0
  9005  026B  00B0               	movwf	___llmod@divisor+3
  9006  026C  3000               	movlw	0
  9007  026D  00AF               	movwf	___llmod@divisor+2
  9008  026E  3000               	movlw	0
  9009  026F  00AE               	movwf	___llmod@divisor+1
  9010  0270  300A               	movlw	10
  9011  0271  00AD               	movwf	___llmod@divisor
  9012  0272  1683               	bsf	3,5	;RP0=1, select bank1
  9013  0273  1303               	bcf	3,6	;RP1=0, select bank1
  9014  0274  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  9015  0275  1283               	bcf	3,5	;RP0=0, select bank0
  9016  0276  1303               	bcf	3,6	;RP1=0, select bank0
  9017  0277  00B4               	movwf	___llmod@dividend+3
  9018  0278  1683               	bsf	3,5	;RP0=1, select bank1
  9019  0279  1303               	bcf	3,6	;RP1=0, select bank1
  9020  027A  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9021  027B  1283               	bcf	3,5	;RP0=0, select bank0
  9022  027C  1303               	bcf	3,6	;RP1=0, select bank0
  9023  027D  00B3               	movwf	___llmod@dividend+2
  9024  027E  1683               	bsf	3,5	;RP0=1, select bank1
  9025  027F  1303               	bcf	3,6	;RP1=0, select bank1
  9026  0280  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9027  0281  1283               	bcf	3,5	;RP0=0, select bank0
  9028  0282  1303               	bcf	3,6	;RP1=0, select bank0
  9029  0283  00B2               	movwf	___llmod@dividend+1
  9030  0284  1683               	bsf	3,5	;RP0=1, select bank1
  9031  0285  1303               	bcf	3,6	;RP1=0, select bank1
  9032  0286  082E               	movf	sprintf@tmpval^(0+128),w
  9033  0287  1283               	bcf	3,5	;RP0=0, select bank0
  9034  0288  1303               	bcf	3,6	;RP1=0, select bank0
  9035  0289  00B1               	movwf	___llmod@dividend
  9036  028A  160A  118A  2155  120A  118A  	fcall	___llmod
  9037  028F  1283               	bcf	3,5	;RP0=0, select bank0
  9038  0290  1303               	bcf	3,6	;RP1=0, select bank0
  9039  0291  0830               	movf	?___llmod+3,w
  9040  0292  1683               	bsf	3,5	;RP0=1, select bank1
  9041  0293  1303               	bcf	3,6	;RP1=0, select bank1
  9042  0294  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9043  0295  1283               	bcf	3,5	;RP0=0, select bank0
  9044  0296  1303               	bcf	3,6	;RP1=0, select bank0
  9045  0297  082F               	movf	?___llmod+2,w
  9046  0298  1683               	bsf	3,5	;RP0=1, select bank1
  9047  0299  1303               	bcf	3,6	;RP1=0, select bank1
  9048  029A  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9049  029B  1283               	bcf	3,5	;RP0=0, select bank0
  9050  029C  1303               	bcf	3,6	;RP1=0, select bank0
  9051  029D  082E               	movf	?___llmod+1,w
  9052  029E  1683               	bsf	3,5	;RP0=1, select bank1
  9053  029F  1303               	bcf	3,6	;RP1=0, select bank1
  9054  02A0  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9055  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  9056  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  9057  02A3  082D               	movf	?___llmod,w
  9058  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  9059  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  9060  02A6  00AE               	movwf	sprintf@tmpval^(0+128)
  9061  02A7                     l3803:
  9062                           
  9063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9064  02A7  082E               	movf	sprintf@tmpval^(0+128),w
  9065  02A8  3E30               	addlw	48
  9066  02A9  00A0               	movwf	??_sprintf^(0+128)
  9067  02AA  083B               	movf	sprintf@sp^(0+128),w
  9068  02AB  0084               	movwf	4
  9069  02AC  0820               	movf	??_sprintf^(0+128),w
  9070  02AD  1383               	bcf	3,7	;select IRP bank0
  9071  02AE  0080               	movwf	0
  9072  02AF  3001               	movlw	1
  9073  02B0  00A0               	movwf	??_sprintf^(0+128)
  9074  02B1  0820               	movf	??_sprintf^(0+128),w
  9075  02B2  07BB               	addwf	sprintf@sp^(0+128),f
  9076  02B3                     l354:	
  9077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9078                           
  9079                           
  9080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9081  02B3  3001               	movlw	1
  9082  02B4  02BE               	subwf	sprintf@c^(0+128),f
  9083  02B5  0A3E               	incf	sprintf@c^(0+128),w
  9084  02B6  1D03               	btfss	3,2
  9085  02B7  2AB9               	goto	u5961
  9086  02B8  2ABA               	goto	u5960
  9087  02B9                     u5961:
  9088  02B9  2A0D               	goto	l3799
  9089  02BA                     u5960:
  9090  02BA  2ACE               	goto	l3811
  9091  02BB                     l3805:
  9092                           
  9093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9094  02BB  3030               	movlw	48
  9095  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  9096  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  9097  02BE  00A0               	movwf	??_sprintf^(0+128)
  9098  02BF  083B               	movf	sprintf@sp^(0+128),w
  9099  02C0  0084               	movwf	4
  9100  02C1  0820               	movf	??_sprintf^(0+128),w
  9101  02C2  1383               	bcf	3,7	;select IRP bank0
  9102  02C3  0080               	movwf	0
  9103  02C4                     l3807:
  9104  02C4  3001               	movlw	1
  9105  02C5  00A0               	movwf	??_sprintf^(0+128)
  9106  02C6  0820               	movf	??_sprintf^(0+128),w
  9107  02C7  07BB               	addwf	sprintf@sp^(0+128),f
  9108  02C8                     l3809:
  9109                           
  9110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9111  02C8  30FF               	movlw	255
  9112  02C9  07B6               	addwf	sprintf@eexp^(0+128),f
  9113  02CA  1803               	skipnc
  9114  02CB  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9115  02CC  30FF               	movlw	255
  9116  02CD  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9117  02CE                     l3811:
  9118                           
  9119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9120  02CE  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9121  02CF  3A80               	xorlw	128
  9122  02D0  00FF               	movwf	btemp+1
  9123  02D1  3080               	movlw	128
  9124  02D2  027F               	subwf	btemp+1,w
  9125  02D3  1D03               	skipz
  9126  02D4  2AD7               	goto	u5975
  9127  02D5  3001               	movlw	1
  9128  02D6  0236               	subwf	sprintf@eexp^(0+128),w
  9129  02D7                     u5975:
  9130  02D7  1803               	skipnc
  9131  02D8  2ADA               	goto	u5971
  9132  02D9  2ADB               	goto	u5970
  9133  02DA                     u5971:
  9134  02DA  2ABB               	goto	l3805
  9135  02DB                     u5970:
  9136  02DB                     l3813:
  9137                           
  9138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9139  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  9140  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  9141  02DD  083D               	movf	(sprintf@prec+1)^(0+128),w
  9142  02DE  3A80               	xorlw	128
  9143  02DF  00FF               	movwf	btemp+1
  9144  02E0  3080               	movlw	128
  9145  02E1  027F               	subwf	btemp+1,w
  9146  02E2  1D03               	skipz
  9147  02E3  2AE6               	goto	u5985
  9148  02E4  3009               	movlw	9
  9149  02E5  023C               	subwf	sprintf@prec^(0+128),w
  9150  02E6                     u5985:
  9151  02E6  1C03               	skipc
  9152  02E7  2AE9               	goto	u5981
  9153  02E8  2AEA               	goto	u5980
  9154  02E9                     u5981:
  9155  02E9  2AF1               	goto	l3817
  9156  02EA                     u5980:
  9157  02EA                     l3815:
  9158                           
  9159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9160  02EA  3008               	movlw	8
  9161  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  9162  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  9163  02ED  00A0               	movwf	??_sprintf^(0+128)
  9164  02EE  0820               	movf	??_sprintf^(0+128),w
  9165  02EF  00BE               	movwf	sprintf@c^(0+128)
  9166  02F0  2AF7               	goto	l361
  9167  02F1                     l3817:
  9168                           
  9169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9170  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  9171  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  9172  02F3  083C               	movf	sprintf@prec^(0+128),w
  9173  02F4  00A0               	movwf	??_sprintf^(0+128)
  9174  02F5  0820               	movf	??_sprintf^(0+128),w
  9175  02F6  00BE               	movwf	sprintf@c^(0+128)
  9176  02F7                     l361:
  9177                           
  9178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9179  02F7  083E               	movf	sprintf@c^(0+128),w
  9180  02F8  00A0               	movwf	??_sprintf^(0+128)
  9181  02F9  01A1               	clrf	(??_sprintf^(0+128)+1)
  9182  02FA  0820               	movf	??_sprintf^(0+128),w
  9183  02FB  02BC               	subwf	sprintf@prec^(0+128),f
  9184  02FC  0821               	movf	(??_sprintf+1)^(0+128),w
  9185  02FD  1C03               	skipc
  9186  02FE  03BD               	decf	(sprintf@prec+1)^(0+128),f
  9187  02FF  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  9188  0300                     l3819:
  9189                           
  9190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9191  0300  083E               	movf	sprintf@c^(0+128),w
  9192  0301  1903               	btfsc	3,2
  9193  0302  2B04               	goto	u5991
  9194  0303  2B05               	goto	u5990
  9195  0304                     u5991:
  9196  0304  2B10               	goto	l3825
  9197  0305                     u5990:
  9198  0305                     l3821:
  9199                           
  9200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9201  0305  302E               	movlw	46
  9202  0306  00A0               	movwf	??_sprintf^(0+128)
  9203  0307  083B               	movf	sprintf@sp^(0+128),w
  9204  0308  0084               	movwf	4
  9205  0309  0820               	movf	??_sprintf^(0+128),w
  9206  030A  1383               	bcf	3,7	;select IRP bank0
  9207  030B  0080               	movwf	0
  9208  030C                     l3823:
  9209  030C  3001               	movlw	1
  9210  030D  00A0               	movwf	??_sprintf^(0+128)
  9211  030E  0820               	movf	??_sprintf^(0+128),w
  9212  030F  07BB               	addwf	sprintf@sp^(0+128),f
  9213  0310                     l3825:
  9214                           
  9215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9216  0310  083E               	movf	sprintf@c^(0+128),w
  9217  0311  120A  158A  226D  120A  118A  	fcall	_scale
  9218  0316  1283               	bcf	3,5	;RP0=0, select bank0
  9219  0317  1303               	bcf	3,6	;RP1=0, select bank0
  9220  0318  083F               	movf	?_scale,w
  9221  0319  1683               	bsf	3,5	;RP0=1, select bank1
  9222  031A  1303               	bcf	3,6	;RP1=0, select bank1
  9223  031B  00A6               	movwf	_sprintf$1127^(0+128)
  9224  031C  1283               	bcf	3,5	;RP0=0, select bank0
  9225  031D  1303               	bcf	3,6	;RP1=0, select bank0
  9226  031E  0840               	movf	?_scale+1,w
  9227  031F  1683               	bsf	3,5	;RP0=1, select bank1
  9228  0320  1303               	bcf	3,6	;RP1=0, select bank1
  9229  0321  00A7               	movwf	(_sprintf$1127+1)^(0+128)
  9230  0322  1283               	bcf	3,5	;RP0=0, select bank0
  9231  0323  1303               	bcf	3,6	;RP1=0, select bank0
  9232  0324  0841               	movf	?_scale+2,w
  9233  0325  1683               	bsf	3,5	;RP0=1, select bank1
  9234  0326  1303               	bcf	3,6	;RP1=0, select bank1
  9235  0327  00A8               	movwf	(_sprintf$1127+2)^(0+128)
  9236  0328                     l3827:
  9237                           
  9238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9239  0328  0826               	movf	_sprintf$1127^(0+128),w
  9240  0329  1283               	bcf	3,5	;RP0=0, select bank0
  9241  032A  1303               	bcf	3,6	;RP1=0, select bank0
  9242  032B  00B2               	movwf	___ftmul@f2
  9243  032C  1683               	bsf	3,5	;RP0=1, select bank1
  9244  032D  1303               	bcf	3,6	;RP1=0, select bank1
  9245  032E  0827               	movf	(_sprintf$1127+1)^(0+128),w
  9246  032F  1283               	bcf	3,5	;RP0=0, select bank0
  9247  0330  1303               	bcf	3,6	;RP1=0, select bank0
  9248  0331  00B3               	movwf	___ftmul@f2+1
  9249  0332  1683               	bsf	3,5	;RP0=1, select bank1
  9250  0333  1303               	bcf	3,6	;RP1=0, select bank1
  9251  0334  0828               	movf	(_sprintf$1127+2)^(0+128),w
  9252  0335  1283               	bcf	3,5	;RP0=0, select bank0
  9253  0336  1303               	bcf	3,6	;RP1=0, select bank0
  9254  0337  00B4               	movwf	___ftmul@f2+2
  9255  0338  1683               	bsf	3,5	;RP0=1, select bank1
  9256  0339  1303               	bcf	3,6	;RP1=0, select bank1
  9257  033A  0838               	movf	sprintf@fval^(0+128),w
  9258  033B  1283               	bcf	3,5	;RP0=0, select bank0
  9259  033C  1303               	bcf	3,6	;RP1=0, select bank0
  9260  033D  00AF               	movwf	___ftmul@f1
  9261  033E  1683               	bsf	3,5	;RP0=1, select bank1
  9262  033F  1303               	bcf	3,6	;RP1=0, select bank1
  9263  0340  0839               	movf	(sprintf@fval+1)^(0+128),w
  9264  0341  1283               	bcf	3,5	;RP0=0, select bank0
  9265  0342  1303               	bcf	3,6	;RP1=0, select bank0
  9266  0343  00B0               	movwf	___ftmul@f1+1
  9267  0344  1683               	bsf	3,5	;RP0=1, select bank1
  9268  0345  1303               	bcf	3,6	;RP1=0, select bank1
  9269  0346  083A               	movf	(sprintf@fval+2)^(0+128),w
  9270  0347  1283               	bcf	3,5	;RP0=0, select bank0
  9271  0348  1303               	bcf	3,6	;RP1=0, select bank0
  9272  0349  00B1               	movwf	___ftmul@f1+2
  9273  034A  160A  118A  24BA  120A  118A  	fcall	___ftmul
  9274  034F  1283               	bcf	3,5	;RP0=0, select bank0
  9275  0350  1303               	bcf	3,6	;RP1=0, select bank0
  9276  0351  082F               	movf	?___ftmul,w
  9277  0352  00C8               	movwf	___fttol@f1
  9278  0353  0830               	movf	?___ftmul+1,w
  9279  0354  00C9               	movwf	___fttol@f1+1
  9280  0355  0831               	movf	?___ftmul+2,w
  9281  0356  00CA               	movwf	___fttol@f1+2
  9282  0357  160A  118A  2371  120A  118A  	fcall	___fttol
  9283  035C  1283               	bcf	3,5	;RP0=0, select bank0
  9284  035D  1303               	bcf	3,6	;RP1=0, select bank0
  9285  035E  084B               	movf	?___fttol+3,w
  9286  035F  1683               	bsf	3,5	;RP0=1, select bank1
  9287  0360  1303               	bcf	3,6	;RP1=0, select bank1
  9288  0361  00B5               	movwf	(sprintf@val+3)^(0+128)
  9289  0362  1283               	bcf	3,5	;RP0=0, select bank0
  9290  0363  1303               	bcf	3,6	;RP1=0, select bank0
  9291  0364  084A               	movf	?___fttol+2,w
  9292  0365  1683               	bsf	3,5	;RP0=1, select bank1
  9293  0366  1303               	bcf	3,6	;RP1=0, select bank1
  9294  0367  00B4               	movwf	(sprintf@val+2)^(0+128)
  9295  0368  1283               	bcf	3,5	;RP0=0, select bank0
  9296  0369  1303               	bcf	3,6	;RP1=0, select bank0
  9297  036A  0849               	movf	?___fttol+1,w
  9298  036B  1683               	bsf	3,5	;RP0=1, select bank1
  9299  036C  1303               	bcf	3,6	;RP1=0, select bank1
  9300  036D  00B3               	movwf	(sprintf@val+1)^(0+128)
  9301  036E  1283               	bcf	3,5	;RP0=0, select bank0
  9302  036F  1303               	bcf	3,6	;RP1=0, select bank0
  9303  0370  0848               	movf	?___fttol,w
  9304  0371  1683               	bsf	3,5	;RP0=1, select bank1
  9305  0372  1303               	bcf	3,6	;RP1=0, select bank1
  9306  0373  00B2               	movwf	sprintf@val^(0+128)
  9307                           
  9308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9309  0374  2C76               	goto	l3837
  9310  0375                     l3829:
  9311                           
  9312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9313  0375  083E               	movf	sprintf@c^(0+128),w
  9314  0376  00A0               	movwf	??_sprintf^(0+128)
  9315  0377  3001               	movlw	1
  9316  0378                     u6005:
  9317  0378  1003               	clrc
  9318  0379  0DA0               	rlf	??_sprintf^(0+128),f
  9319  037A  3EFF               	addlw	-1
  9320  037B  1D03               	skipz
  9321  037C  2B78               	goto	u6005
  9322  037D  1003               	clrc
  9323  037E  0D20               	rlf	??_sprintf^(0+128),w
  9324  037F  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9325  0380  0084               	movwf	4
  9326  0381  120A  158A  200A  120A  118A  	fcall	stringdir
  9327  0386  1283               	bcf	3,5	;RP0=0, select bank0
  9328  0387  1303               	bcf	3,6	;RP1=0, select bank0
  9329  0388  00A0               	movwf	___lldiv@divisor
  9330  0389  120A  158A  200A  120A  118A  	fcall	stringdir
  9331  038E  00A1               	movwf	___lldiv@divisor+1
  9332  038F  120A  158A  200A  120A  118A  	fcall	stringdir
  9333  0394  00A2               	movwf	___lldiv@divisor+2
  9334  0395  120A  158A  200A  120A  118A  	fcall	stringdir
  9335  039A  00A3               	movwf	___lldiv@divisor+3
  9336  039B  1683               	bsf	3,5	;RP0=1, select bank1
  9337  039C  1303               	bcf	3,6	;RP1=0, select bank1
  9338  039D  0835               	movf	(sprintf@val+3)^(0+128),w
  9339  039E  1283               	bcf	3,5	;RP0=0, select bank0
  9340  039F  1303               	bcf	3,6	;RP1=0, select bank0
  9341  03A0  00A7               	movwf	___lldiv@dividend+3
  9342  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  9343  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  9344  03A3  0834               	movf	(sprintf@val+2)^(0+128),w
  9345  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  9346  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  9347  03A6  00A6               	movwf	___lldiv@dividend+2
  9348  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  9349  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  9350  03A9  0833               	movf	(sprintf@val+1)^(0+128),w
  9351  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  9352  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  9353  03AC  00A5               	movwf	___lldiv@dividend+1
  9354  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  9355  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  9356  03AF  0832               	movf	sprintf@val^(0+128),w
  9357  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  9358  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  9359  03B2  00A4               	movwf	___lldiv@dividend
  9360  03B3  120A  118A  2798  120A  118A  	fcall	___lldiv
  9361  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  9362  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  9363  03BA  0823               	movf	?___lldiv+3,w
  9364  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  9365  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  9366  03BD  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9367  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  9368  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  9369  03C0  0822               	movf	?___lldiv+2,w
  9370  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  9371  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  9372  03C3  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9373  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  9374  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  9375  03C6  0821               	movf	?___lldiv+1,w
  9376  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  9377  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  9378  03C9  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9379  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  9380  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  9381  03CC  0820               	movf	?___lldiv,w
  9382  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  9383  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  9384  03CF  00AE               	movwf	sprintf@tmpval^(0+128)
  9385  03D0                     l3831:
  9386                           
  9387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9388  03D0  3000               	movlw	0
  9389  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  9390  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  9391  03D3  00B0               	movwf	___llmod@divisor+3
  9392  03D4  3000               	movlw	0
  9393  03D5  00AF               	movwf	___llmod@divisor+2
  9394  03D6  3000               	movlw	0
  9395  03D7  00AE               	movwf	___llmod@divisor+1
  9396  03D8  300A               	movlw	10
  9397  03D9  00AD               	movwf	___llmod@divisor
  9398  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  9399  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  9400  03DC  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  9401  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  9402  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  9403  03DF  00B4               	movwf	___llmod@dividend+3
  9404  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  9405  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  9406  03E2  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9407  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  9408  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  9409  03E5  00B3               	movwf	___llmod@dividend+2
  9410  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  9411  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  9412  03E8  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9413  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  9414  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  9415  03EB  00B2               	movwf	___llmod@dividend+1
  9416  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  9417  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  9418  03EE  082E               	movf	sprintf@tmpval^(0+128),w
  9419  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  9420  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  9421  03F1  00B1               	movwf	___llmod@dividend
  9422  03F2  160A  118A  2155  120A  118A  	fcall	___llmod
  9423  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  9424  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  9425  03F9  0830               	movf	?___llmod+3,w
  9426  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  9427  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  9428  03FC  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9429  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  9430  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  9431  03FF  082F               	movf	?___llmod+2,w
  9432  0400  1683               	bsf	3,5	;RP0=1, select bank1
  9433  0401  1303               	bcf	3,6	;RP1=0, select bank1
  9434  0402  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9435  0403  1283               	bcf	3,5	;RP0=0, select bank0
  9436  0404  1303               	bcf	3,6	;RP1=0, select bank0
  9437  0405  082E               	movf	?___llmod+1,w
  9438  0406  1683               	bsf	3,5	;RP0=1, select bank1
  9439  0407  1303               	bcf	3,6	;RP1=0, select bank1
  9440  0408  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9441  0409  1283               	bcf	3,5	;RP0=0, select bank0
  9442  040A  1303               	bcf	3,6	;RP1=0, select bank0
  9443  040B  082D               	movf	?___llmod,w
  9444  040C  1683               	bsf	3,5	;RP0=1, select bank1
  9445  040D  1303               	bcf	3,6	;RP1=0, select bank1
  9446  040E  00AE               	movwf	sprintf@tmpval^(0+128)
  9447  040F                     l3833:
  9448                           
  9449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  9450  040F  082E               	movf	sprintf@tmpval^(0+128),w
  9451  0410  3E30               	addlw	48
  9452  0411  00A0               	movwf	??_sprintf^(0+128)
  9453  0412  083B               	movf	sprintf@sp^(0+128),w
  9454  0413  0084               	movwf	4
  9455  0414  0820               	movf	??_sprintf^(0+128),w
  9456  0415  1383               	bcf	3,7	;select IRP bank0
  9457  0416  0080               	movwf	0
  9458  0417  3001               	movlw	1
  9459  0418  00A0               	movwf	??_sprintf^(0+128)
  9460  0419  0820               	movf	??_sprintf^(0+128),w
  9461  041A  07BB               	addwf	sprintf@sp^(0+128),f
  9462  041B                     l3835:
  9463                           
  9464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  9465  041B  083E               	movf	sprintf@c^(0+128),w
  9466  041C  00A0               	movwf	??_sprintf^(0+128)
  9467  041D  3001               	movlw	1
  9468  041E                     u6015:
  9469  041E  1003               	clrc
  9470  041F  0DA0               	rlf	??_sprintf^(0+128),f
  9471  0420  3EFF               	addlw	-1
  9472  0421  1D03               	skipz
  9473  0422  2C1E               	goto	u6015
  9474  0423  1003               	clrc
  9475  0424  0D20               	rlf	??_sprintf^(0+128),w
  9476  0425  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9477  0426  0084               	movwf	4
  9478  0427  120A  158A  200A  120A  118A  	fcall	stringdir
  9479  042C  1283               	bcf	3,5	;RP0=0, select bank0
  9480  042D  1303               	bcf	3,6	;RP1=0, select bank0
  9481  042E  00AD               	movwf	___llmod@divisor
  9482  042F  120A  158A  200A  120A  118A  	fcall	stringdir
  9483  0434  00AE               	movwf	___llmod@divisor+1
  9484  0435  120A  158A  200A  120A  118A  	fcall	stringdir
  9485  043A  00AF               	movwf	___llmod@divisor+2
  9486  043B  120A  158A  200A  120A  118A  	fcall	stringdir
  9487  0440  00B0               	movwf	___llmod@divisor+3
  9488  0441  1683               	bsf	3,5	;RP0=1, select bank1
  9489  0442  1303               	bcf	3,6	;RP1=0, select bank1
  9490  0443  0835               	movf	(sprintf@val+3)^(0+128),w
  9491  0444  1283               	bcf	3,5	;RP0=0, select bank0
  9492  0445  1303               	bcf	3,6	;RP1=0, select bank0
  9493  0446  00B4               	movwf	___llmod@dividend+3
  9494  0447  1683               	bsf	3,5	;RP0=1, select bank1
  9495  0448  1303               	bcf	3,6	;RP1=0, select bank1
  9496  0449  0834               	movf	(sprintf@val+2)^(0+128),w
  9497  044A  1283               	bcf	3,5	;RP0=0, select bank0
  9498  044B  1303               	bcf	3,6	;RP1=0, select bank0
  9499  044C  00B3               	movwf	___llmod@dividend+2
  9500  044D  1683               	bsf	3,5	;RP0=1, select bank1
  9501  044E  1303               	bcf	3,6	;RP1=0, select bank1
  9502  044F  0833               	movf	(sprintf@val+1)^(0+128),w
  9503  0450  1283               	bcf	3,5	;RP0=0, select bank0
  9504  0451  1303               	bcf	3,6	;RP1=0, select bank0
  9505  0452  00B2               	movwf	___llmod@dividend+1
  9506  0453  1683               	bsf	3,5	;RP0=1, select bank1
  9507  0454  1303               	bcf	3,6	;RP1=0, select bank1
  9508  0455  0832               	movf	sprintf@val^(0+128),w
  9509  0456  1283               	bcf	3,5	;RP0=0, select bank0
  9510  0457  1303               	bcf	3,6	;RP1=0, select bank0
  9511  0458  00B1               	movwf	___llmod@dividend
  9512  0459  160A  118A  2155  120A  118A  	fcall	___llmod
  9513  045E  1283               	bcf	3,5	;RP0=0, select bank0
  9514  045F  1303               	bcf	3,6	;RP1=0, select bank0
  9515  0460  0830               	movf	?___llmod+3,w
  9516  0461  1683               	bsf	3,5	;RP0=1, select bank1
  9517  0462  1303               	bcf	3,6	;RP1=0, select bank1
  9518  0463  00B5               	movwf	(sprintf@val+3)^(0+128)
  9519  0464  1283               	bcf	3,5	;RP0=0, select bank0
  9520  0465  1303               	bcf	3,6	;RP1=0, select bank0
  9521  0466  082F               	movf	?___llmod+2,w
  9522  0467  1683               	bsf	3,5	;RP0=1, select bank1
  9523  0468  1303               	bcf	3,6	;RP1=0, select bank1
  9524  0469  00B4               	movwf	(sprintf@val+2)^(0+128)
  9525  046A  1283               	bcf	3,5	;RP0=0, select bank0
  9526  046B  1303               	bcf	3,6	;RP1=0, select bank0
  9527  046C  082E               	movf	?___llmod+1,w
  9528  046D  1683               	bsf	3,5	;RP0=1, select bank1
  9529  046E  1303               	bcf	3,6	;RP1=0, select bank1
  9530  046F  00B3               	movwf	(sprintf@val+1)^(0+128)
  9531  0470  1283               	bcf	3,5	;RP0=0, select bank0
  9532  0471  1303               	bcf	3,6	;RP1=0, select bank0
  9533  0472  082D               	movf	?___llmod,w
  9534  0473  1683               	bsf	3,5	;RP0=1, select bank1
  9535  0474  1303               	bcf	3,6	;RP1=0, select bank1
  9536  0475  00B2               	movwf	sprintf@val^(0+128)
  9537  0476                     l3837:
  9538                           
  9539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9540  0476  3001               	movlw	1
  9541  0477  02BE               	subwf	sprintf@c^(0+128),f
  9542  0478  0A3E               	incf	sprintf@c^(0+128),w
  9543  0479  1D03               	btfss	3,2
  9544  047A  2C7C               	goto	u6021
  9545  047B  2C7D               	goto	u6020
  9546  047C                     u6021:
  9547  047C  2B75               	goto	l3829
  9548  047D                     u6020:
  9549  047D  2C8F               	goto	l3845
  9550  047E                     l3839:
  9551                           
  9552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  9553  047E  3030               	movlw	48
  9554  047F  00A0               	movwf	??_sprintf^(0+128)
  9555  0480  083B               	movf	sprintf@sp^(0+128),w
  9556  0481  0084               	movwf	4
  9557  0482  0820               	movf	??_sprintf^(0+128),w
  9558  0483  1383               	bcf	3,7	;select IRP bank0
  9559  0484  0080               	movwf	0
  9560  0485                     l3841:
  9561  0485  3001               	movlw	1
  9562  0486  00A0               	movwf	??_sprintf^(0+128)
  9563  0487  0820               	movf	??_sprintf^(0+128),w
  9564  0488  07BB               	addwf	sprintf@sp^(0+128),f
  9565  0489                     l3843:
  9566                           
  9567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9568  0489  30FF               	movlw	255
  9569  048A  07BC               	addwf	sprintf@prec^(0+128),f
  9570  048B  1803               	skipnc
  9571  048C  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  9572  048D  30FF               	movlw	255
  9573  048E  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  9574  048F                     l3845:
  9575                           
  9576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  9577  048F  083C               	movf	sprintf@prec^(0+128),w
  9578  0490  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  9579  0491  1D03               	btfss	3,2
  9580  0492  2C94               	goto	u6031
  9581  0493  2C95               	goto	u6030
  9582  0494                     u6031:
  9583  0494  2C7E               	goto	l3839
  9584  0495                     u6030:
  9585  0495  2E45               	goto	l3925
  9586  0496                     l3847:
  9587                           
  9588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9589  0496  0829               	movf	sprintf@ap^(0+128),w
  9590  0497  0084               	movwf	4
  9591  0498  1383               	bcf	3,7	;select IRP bank0
  9592  0499  0800               	movf	0,w
  9593  049A  00A0               	movwf	??_sprintf^(0+128)
  9594  049B  0A84               	incf	4,f
  9595  049C  0800               	movf	0,w
  9596  049D  00A1               	movwf	(??_sprintf^(0+128)+1)
  9597  049E  0820               	movf	??_sprintf^(0+128),w
  9598  049F  00B2               	movwf	sprintf@val^(0+128)
  9599  04A0  0821               	movf	(??_sprintf+1)^(0+128),w
  9600  04A1  00B3               	movwf	(sprintf@val+1)^(0+128)
  9601  04A2  3000               	movlw	0
  9602  04A3  1BB3               	btfsc	(sprintf@val+1)^(0+128),7
  9603  04A4  30FF               	movlw	255
  9604  04A5  00B4               	movwf	(sprintf@val+2)^(0+128)
  9605  04A6  00B5               	movwf	(sprintf@val+3)^(0+128)
  9606  04A7                     l3849:
  9607  04A7  3002               	movlw	2
  9608  04A8  00A0               	movwf	??_sprintf^(0+128)
  9609  04A9  0820               	movf	??_sprintf^(0+128),w
  9610  04AA  07A9               	addwf	sprintf@ap^(0+128),f
  9611  04AB                     l3851:
  9612                           
  9613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  9614  04AB  1FB5               	btfss	(sprintf@val+3)^(0+128),7
  9615  04AC  2CAE               	goto	u6041
  9616  04AD  2CAF               	goto	u6040
  9617  04AE                     u6041:
  9618  04AE  2CBE               	goto	l3857
  9619  04AF                     u6040:
  9620  04AF                     l3853:
  9621                           
  9622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  9623  04AF  3003               	movlw	3
  9624  04B0  04AA               	iorwf	sprintf@flag^(0+128),f
  9625  04B1  3000               	movlw	0
  9626  04B2  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  9627  04B3                     l3855:
  9628                           
  9629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  9630  04B3  09B2               	comf	sprintf@val^(0+128),f
  9631  04B4  09B3               	comf	(sprintf@val+1)^(0+128),f
  9632  04B5  09B4               	comf	(sprintf@val+2)^(0+128),f
  9633  04B6  09B5               	comf	(sprintf@val+3)^(0+128),f
  9634  04B7  0AB2               	incf	sprintf@val^(0+128),f
  9635  04B8  1903               	skipnz
  9636  04B9  0AB3               	incf	(sprintf@val+1)^(0+128),f
  9637  04BA  1903               	skipnz
  9638  04BB  0AB4               	incf	(sprintf@val+2)^(0+128),f
  9639  04BC  1903               	skipnz
  9640  04BD  0AB5               	incf	(sprintf@val+3)^(0+128),f
  9641  04BE                     l3857:
  9642                           
  9643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  9644  04BE  083C               	movf	sprintf@prec^(0+128),w
  9645  04BF  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  9646  04C0  1D03               	btfss	3,2
  9647  04C1  2CC3               	goto	u6051
  9648  04C2  2CC4               	goto	u6050
  9649  04C3                     u6051:
  9650  04C3  2CD2               	goto	l3863
  9651  04C4                     u6050:
  9652  04C4                     l3859:
  9653  04C4  0835               	movf	(sprintf@val+3)^(0+128),w
  9654  04C5  0434               	iorwf	(sprintf@val+2)^(0+128),w
  9655  04C6  0433               	iorwf	(sprintf@val+1)^(0+128),w
  9656  04C7  0432               	iorwf	sprintf@val^(0+128),w
  9657  04C8  1D03               	skipz
  9658  04C9  2CCB               	goto	u6061
  9659  04CA  2CCC               	goto	u6060
  9660  04CB                     u6061:
  9661  04CB  2CD2               	goto	l3863
  9662  04CC                     u6060:
  9663  04CC                     l3861:
  9664                           
  9665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9666  04CC  3001               	movlw	1
  9667  04CD  07BC               	addwf	sprintf@prec^(0+128),f
  9668  04CE  1803               	skipnc
  9669  04CF  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  9670  04D0  3000               	movlw	0
  9671  04D1  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  9672  04D2                     l3863:
  9673                           
  9674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9675  04D2  01BE               	clrf	sprintf@c^(0+128)
  9676  04D3  0ABE               	incf	sprintf@c^(0+128),f
  9677  04D4                     l3869:
  9678                           
  9679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  9680  04D4  083E               	movf	sprintf@c^(0+128),w
  9681  04D5  00A0               	movwf	??_sprintf^(0+128)
  9682  04D6  3001               	movlw	1
  9683  04D7                     u6075:
  9684  04D7  1003               	clrc
  9685  04D8  0DA0               	rlf	??_sprintf^(0+128),f
  9686  04D9  3EFF               	addlw	-1
  9687  04DA  1D03               	skipz
  9688  04DB  2CD7               	goto	u6075
  9689  04DC  1003               	clrc
  9690  04DD  0D20               	rlf	??_sprintf^(0+128),w
  9691  04DE  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9692  04DF  0084               	movwf	4
  9693  04E0  120A  158A  200A  120A  118A  	fcall	stringdir
  9694  04E5  00A1               	movwf	(??_sprintf+1)^(0+128)
  9695  04E6  120A  158A  200A  120A  118A  	fcall	stringdir
  9696  04EB  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  9697  04EC  120A  158A  200A  120A  118A  	fcall	stringdir
  9698  04F1  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  9699  04F2  120A  158A  200A  120A  118A  	fcall	stringdir
  9700  04F7  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  9701  04F8  0824               	movf	(??_sprintf+4)^(0+128),w
  9702  04F9  0235               	subwf	(sprintf@val+3)^(0+128),w
  9703  04FA  1D03               	skipz
  9704  04FB  2D06               	goto	u6085
  9705  04FC  0823               	movf	(??_sprintf+3)^(0+128),w
  9706  04FD  0234               	subwf	(sprintf@val+2)^(0+128),w
  9707  04FE  1D03               	skipz
  9708  04FF  2D06               	goto	u6085
  9709  0500  0822               	movf	(??_sprintf+2)^(0+128),w
  9710  0501  0233               	subwf	(sprintf@val+1)^(0+128),w
  9711  0502  1D03               	skipz
  9712  0503  2D06               	goto	u6085
  9713  0504  0821               	movf	(??_sprintf+1)^(0+128),w
  9714  0505  0232               	subwf	sprintf@val^(0+128),w
  9715  0506                     u6085:
  9716  0506  1803               	skipnc
  9717  0507  2D09               	goto	u6081
  9718  0508  2D0A               	goto	u6080
  9719  0509                     u6081:
  9720  0509  2D0B               	goto	l3873
  9721  050A                     u6080:
  9722  050A  2D15               	goto	l3875
  9723  050B                     l3873:
  9724  050B  3001               	movlw	1
  9725  050C  00A0               	movwf	??_sprintf^(0+128)
  9726  050D  0820               	movf	??_sprintf^(0+128),w
  9727  050E  07BE               	addwf	sprintf@c^(0+128),f
  9728  050F  300A               	movlw	10
  9729  0510  063E               	xorwf	sprintf@c^(0+128),w
  9730  0511  1D03               	btfss	3,2
  9731  0512  2D14               	goto	u6091
  9732  0513  2D15               	goto	u6090
  9733  0514                     u6091:
  9734  0514  2CD4               	goto	l3869
  9735  0515                     u6090:
  9736  0515                     l3875:
  9737                           
  9738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  9739  0515  083D               	movf	(sprintf@prec+1)^(0+128),w
  9740  0516  3A80               	xorlw	128
  9741  0517  3C80               	sublw	128
  9742  0518  1D03               	skipz
  9743  0519  2D1C               	goto	u6105
  9744  051A  083C               	movf	sprintf@prec^(0+128),w
  9745  051B  023E               	subwf	sprintf@c^(0+128),w
  9746  051C                     u6105:
  9747  051C  1803               	skipnc
  9748  051D  2D1F               	goto	u6101
  9749  051E  2D20               	goto	u6100
  9750  051F                     u6101:
  9751  051F  2D27               	goto	l3879
  9752  0520                     u6100:
  9753  0520                     l3877:
  9754                           
  9755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  9756  0520  1683               	bsf	3,5	;RP0=1, select bank1
  9757  0521  1303               	bcf	3,6	;RP1=0, select bank1
  9758  0522  083C               	movf	sprintf@prec^(0+128),w
  9759  0523  00A0               	movwf	??_sprintf^(0+128)
  9760  0524  0820               	movf	??_sprintf^(0+128),w
  9761  0525  00BE               	movwf	sprintf@c^(0+128)
  9762  0526  2D3F               	goto	l3883
  9763  0527                     l3879:
  9764  0527  1683               	bsf	3,5	;RP0=1, select bank1
  9765  0528  1303               	bcf	3,6	;RP1=0, select bank1
  9766  0529  083D               	movf	(sprintf@prec+1)^(0+128),w
  9767  052A  3A80               	xorlw	128
  9768  052B  00A0               	movwf	??_sprintf^(0+128)
  9769  052C  3080               	movlw	128
  9770  052D  0220               	subwf	??_sprintf^(0+128),w
  9771  052E  1D03               	skipz
  9772  052F  2D32               	goto	u6115
  9773  0530  083E               	movf	sprintf@c^(0+128),w
  9774  0531  023C               	subwf	sprintf@prec^(0+128),w
  9775  0532                     u6115:
  9776  0532  1803               	skipnc
  9777  0533  2D35               	goto	u6111
  9778  0534  2D36               	goto	u6110
  9779  0535                     u6111:
  9780  0535  2D3F               	goto	l3883
  9781  0536                     u6110:
  9782  0536                     l3881:
  9783                           
  9784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  9785  0536  1683               	bsf	3,5	;RP0=1, select bank1
  9786  0537  1303               	bcf	3,6	;RP1=0, select bank1
  9787  0538  083E               	movf	sprintf@c^(0+128),w
  9788  0539  00A0               	movwf	??_sprintf^(0+128)
  9789  053A  01A1               	clrf	(??_sprintf^(0+128)+1)
  9790  053B  0820               	movf	??_sprintf^(0+128),w
  9791  053C  00BC               	movwf	sprintf@prec^(0+128)
  9792  053D  0821               	movf	(??_sprintf+1)^(0+128),w
  9793  053E  00BD               	movwf	(sprintf@prec+1)^(0+128)
  9794  053F                     l3883:
  9795                           
  9796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  9797  053F  1683               	bsf	3,5	;RP0=1, select bank1
  9798  0540  1303               	bcf	3,6	;RP1=0, select bank1
  9799  0541  082C               	movf	sprintf@width^(0+128),w
  9800  0542  042D               	iorwf	(sprintf@width+1)^(0+128),w
  9801  0543  1903               	btfsc	3,2
  9802  0544  2D46               	goto	u6121
  9803  0545  2D47               	goto	u6120
  9804  0546                     u6121:
  9805  0546  2D59               	goto	l3889
  9806  0547                     u6120:
  9807  0547                     l3885:
  9808  0547  3003               	movlw	3
  9809  0548  052A               	andwf	sprintf@flag^(0+128),w
  9810  0549  00A0               	movwf	??_sprintf^(0+128)
  9811  054A  3000               	movlw	0
  9812  054B  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9813  054C  00A1               	movwf	(??_sprintf+1)^(0+128)
  9814  054D  0820               	movf	??_sprintf^(0+128),w
  9815  054E  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9816  054F  1903               	btfsc	3,2
  9817  0550  2D52               	goto	u6131
  9818  0551  2D53               	goto	u6130
  9819  0552                     u6131:
  9820  0552  2D59               	goto	l3889
  9821  0553                     u6130:
  9822  0553                     l3887:
  9823                           
  9824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  9825  0553  30FF               	movlw	255
  9826  0554  07AC               	addwf	sprintf@width^(0+128),f
  9827  0555  1803               	skipnc
  9828  0556  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9829  0557  30FF               	movlw	255
  9830  0558  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9831  0559                     l3889:
  9832                           
  9833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  9834  0559  1F2B               	btfss	(sprintf@flag+1)^(0+128),6
  9835  055A  2D5C               	goto	u6141
  9836  055B  2D5D               	goto	u6140
  9837  055C                     u6141:
  9838  055C  2D78               	goto	l3897
  9839  055D                     u6140:
  9840  055D                     l3891:
  9841                           
  9842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  9843  055D  083D               	movf	(sprintf@prec+1)^(0+128),w
  9844  055E  3A80               	xorlw	128
  9845  055F  00A0               	movwf	??_sprintf^(0+128)
  9846  0560  082D               	movf	(sprintf@width+1)^(0+128),w
  9847  0561  3A80               	xorlw	128
  9848  0562  0220               	subwf	??_sprintf^(0+128),w
  9849  0563  1D03               	skipz
  9850  0564  2D67               	goto	u6155
  9851  0565  082C               	movf	sprintf@width^(0+128),w
  9852  0566  023C               	subwf	sprintf@prec^(0+128),w
  9853  0567                     u6155:
  9854  0567  1803               	skipnc
  9855  0568  2D6A               	goto	u6151
  9856  0569  2D6B               	goto	u6150
  9857  056A                     u6151:
  9858  056A  2D74               	goto	l3895
  9859  056B                     u6150:
  9860  056B                     l3893:
  9861                           
  9862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  9863  056B  1683               	bsf	3,5	;RP0=1, select bank1
  9864  056C  1303               	bcf	3,6	;RP1=0, select bank1
  9865  056D  083C               	movf	sprintf@prec^(0+128),w
  9866  056E  02AC               	subwf	sprintf@width^(0+128),f
  9867  056F  083D               	movf	(sprintf@prec+1)^(0+128),w
  9868  0570  1C03               	skipc
  9869  0571  03AD               	decf	(sprintf@width+1)^(0+128),f
  9870  0572  02AD               	subwf	(sprintf@width+1)^(0+128),f
  9871  0573  2D78               	goto	l3897
  9872  0574                     l3895:
  9873                           
  9874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  9875  0574  1683               	bsf	3,5	;RP0=1, select bank1
  9876  0575  1303               	bcf	3,6	;RP1=0, select bank1
  9877  0576  01AC               	clrf	sprintf@width^(0+128)
  9878  0577  01AD               	clrf	(sprintf@width+1)^(0+128)
  9879  0578                     l3897:
  9880                           
  9881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  9882  0578  082D               	movf	(sprintf@width+1)^(0+128),w
  9883  0579  3A80               	xorlw	128
  9884  057A  3C80               	sublw	128
  9885  057B  1D03               	skipz
  9886  057C  2D7F               	goto	u6165
  9887  057D  082C               	movf	sprintf@width^(0+128),w
  9888  057E  023E               	subwf	sprintf@c^(0+128),w
  9889  057F                     u6165:
  9890  057F  1803               	skipnc
  9891  0580  2D82               	goto	u6161
  9892  0581  2D83               	goto	u6160
  9893  0582                     u6161:
  9894  0582  2D8F               	goto	l3901
  9895  0583                     u6160:
  9896  0583                     l3899:
  9897                           
  9898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  9899  0583  1683               	bsf	3,5	;RP0=1, select bank1
  9900  0584  1303               	bcf	3,6	;RP1=0, select bank1
  9901  0585  083E               	movf	sprintf@c^(0+128),w
  9902  0586  00A0               	movwf	??_sprintf^(0+128)
  9903  0587  01A1               	clrf	(??_sprintf^(0+128)+1)
  9904  0588  0820               	movf	??_sprintf^(0+128),w
  9905  0589  02AC               	subwf	sprintf@width^(0+128),f
  9906  058A  0821               	movf	(??_sprintf+1)^(0+128),w
  9907  058B  1C03               	skipc
  9908  058C  03AD               	decf	(sprintf@width+1)^(0+128),f
  9909  058D  02AD               	subwf	(sprintf@width+1)^(0+128),f
  9910  058E  2D93               	goto	l3903
  9911  058F                     l3901:
  9912                           
  9913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  9914  058F  1683               	bsf	3,5	;RP0=1, select bank1
  9915  0590  1303               	bcf	3,6	;RP1=0, select bank1
  9916  0591  01AC               	clrf	sprintf@width^(0+128)
  9917  0592  01AD               	clrf	(sprintf@width+1)^(0+128)
  9918  0593                     l3903:
  9919                           
  9920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  9921  0593  082C               	movf	sprintf@width^(0+128),w
  9922  0594  042D               	iorwf	(sprintf@width+1)^(0+128),w
  9923  0595  1903               	btfsc	3,2
  9924  0596  2D98               	goto	u6171
  9925  0597  2D99               	goto	u6170
  9926  0598                     u6171:
  9927  0598  2DB0               	goto	l3911
  9928  0599                     u6170:
  9929  0599                     l3905:
  9930                           
  9931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  9932  0599  3020               	movlw	32
  9933  059A  00A0               	movwf	??_sprintf^(0+128)
  9934  059B  083B               	movf	sprintf@sp^(0+128),w
  9935  059C  0084               	movwf	4
  9936  059D  0820               	movf	??_sprintf^(0+128),w
  9937  059E  1383               	bcf	3,7	;select IRP bank0
  9938  059F  0080               	movwf	0
  9939  05A0                     l3907:
  9940  05A0  3001               	movlw	1
  9941  05A1  00A0               	movwf	??_sprintf^(0+128)
  9942  05A2  0820               	movf	??_sprintf^(0+128),w
  9943  05A3  07BB               	addwf	sprintf@sp^(0+128),f
  9944  05A4                     l3909:
  9945  05A4  30FF               	movlw	255
  9946  05A5  07AC               	addwf	sprintf@width^(0+128),f
  9947  05A6  1803               	skipnc
  9948  05A7  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9949  05A8  30FF               	movlw	255
  9950  05A9  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9951  05AA  082C               	movf	sprintf@width^(0+128),w
  9952  05AB  042D               	iorwf	(sprintf@width+1)^(0+128),w
  9953  05AC  1D03               	btfss	3,2
  9954  05AD  2DAF               	goto	u6181
  9955  05AE  2DB0               	goto	u6180
  9956  05AF                     u6181:
  9957  05AF  2D99               	goto	l3905
  9958  05B0                     u6180:
  9959  05B0                     l3911:
  9960                           
  9961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  9962  05B0  3003               	movlw	3
  9963  05B1  052A               	andwf	sprintf@flag^(0+128),w
  9964  05B2  00A0               	movwf	??_sprintf^(0+128)
  9965  05B3  3000               	movlw	0
  9966  05B4  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9967  05B5  00A1               	movwf	(??_sprintf+1)^(0+128)
  9968  05B6  0820               	movf	??_sprintf^(0+128),w
  9969  05B7  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9970  05B8  1903               	btfsc	3,2
  9971  05B9  2DBB               	goto	u6191
  9972  05BA  2DBC               	goto	u6190
  9973  05BB                     u6191:
  9974  05BB  2E37               	goto	l3923
  9975  05BC                     u6190:
  9976  05BC                     l3913:
  9977                           
  9978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  9979  05BC  302D               	movlw	45
  9980  05BD  00A0               	movwf	??_sprintf^(0+128)
  9981  05BE  083B               	movf	sprintf@sp^(0+128),w
  9982  05BF  0084               	movwf	4
  9983  05C0  0820               	movf	??_sprintf^(0+128),w
  9984  05C1  1383               	bcf	3,7	;select IRP bank0
  9985  05C2  0080               	movwf	0
  9986  05C3                     l3915:
  9987  05C3  3001               	movlw	1
  9988  05C4  00A0               	movwf	??_sprintf^(0+128)
  9989  05C5  0820               	movf	??_sprintf^(0+128),w
  9990  05C6  07BB               	addwf	sprintf@sp^(0+128),f
  9991  05C7  2E37               	goto	l3923
  9992  05C8                     l3917:
  9993                           
  9994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  9995  05C8  3000               	movlw	0
  9996  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  9997  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  9998  05CB  00B0               	movwf	___llmod@divisor+3
  9999  05CC  3000               	movlw	0
 10000  05CD  00AF               	movwf	___llmod@divisor+2
 10001  05CE  3000               	movlw	0
 10002  05CF  00AE               	movwf	___llmod@divisor+1
 10003  05D0  300A               	movlw	10
 10004  05D1  00AD               	movwf	___llmod@divisor
 10005  05D2  1683               	bsf	3,5	;RP0=1, select bank1
 10006  05D3  1303               	bcf	3,6	;RP1=0, select bank1
 10007  05D4  083C               	movf	sprintf@prec^(0+128),w
 10008  05D5  00A0               	movwf	??_sprintf^(0+128)
 10009  05D6  3001               	movlw	1
 10010  05D7                     u6205:
 10011  05D7  1003               	clrc
 10012  05D8  0DA0               	rlf	??_sprintf^(0+128),f
 10013  05D9  3EFF               	addlw	-1
 10014  05DA  1D03               	skipz
 10015  05DB  2DD7               	goto	u6205
 10016  05DC  1003               	clrc
 10017  05DD  0D20               	rlf	??_sprintf^(0+128),w
 10018  05DE  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10019  05DF  0084               	movwf	4
 10020  05E0  120A  158A  200A  120A  118A  	fcall	stringdir
 10021  05E5  1283               	bcf	3,5	;RP0=0, select bank0
 10022  05E6  1303               	bcf	3,6	;RP1=0, select bank0
 10023  05E7  00A0               	movwf	___lldiv@divisor
 10024  05E8  120A  158A  200A  120A  118A  	fcall	stringdir
 10025  05ED  00A1               	movwf	___lldiv@divisor+1
 10026  05EE  120A  158A  200A  120A  118A  	fcall	stringdir
 10027  05F3  00A2               	movwf	___lldiv@divisor+2
 10028  05F4  120A  158A  200A  120A  118A  	fcall	stringdir
 10029  05F9  00A3               	movwf	___lldiv@divisor+3
 10030  05FA  1683               	bsf	3,5	;RP0=1, select bank1
 10031  05FB  1303               	bcf	3,6	;RP1=0, select bank1
 10032  05FC  0835               	movf	(sprintf@val+3)^(0+128),w
 10033  05FD  1283               	bcf	3,5	;RP0=0, select bank0
 10034  05FE  1303               	bcf	3,6	;RP1=0, select bank0
 10035  05FF  00A7               	movwf	___lldiv@dividend+3
 10036  0600  1683               	bsf	3,5	;RP0=1, select bank1
 10037  0601  1303               	bcf	3,6	;RP1=0, select bank1
 10038  0602  0834               	movf	(sprintf@val+2)^(0+128),w
 10039  0603  1283               	bcf	3,5	;RP0=0, select bank0
 10040  0604  1303               	bcf	3,6	;RP1=0, select bank0
 10041  0605  00A6               	movwf	___lldiv@dividend+2
 10042  0606  1683               	bsf	3,5	;RP0=1, select bank1
 10043  0607  1303               	bcf	3,6	;RP1=0, select bank1
 10044  0608  0833               	movf	(sprintf@val+1)^(0+128),w
 10045  0609  1283               	bcf	3,5	;RP0=0, select bank0
 10046  060A  1303               	bcf	3,6	;RP1=0, select bank0
 10047  060B  00A5               	movwf	___lldiv@dividend+1
 10048  060C  1683               	bsf	3,5	;RP0=1, select bank1
 10049  060D  1303               	bcf	3,6	;RP1=0, select bank1
 10050  060E  0832               	movf	sprintf@val^(0+128),w
 10051  060F  1283               	bcf	3,5	;RP0=0, select bank0
 10052  0610  1303               	bcf	3,6	;RP1=0, select bank0
 10053  0611  00A4               	movwf	___lldiv@dividend
 10054  0612  120A  118A  2798  120A  118A  	fcall	___lldiv
 10055  0617  1283               	bcf	3,5	;RP0=0, select bank0
 10056  0618  1303               	bcf	3,6	;RP1=0, select bank0
 10057  0619  0823               	movf	?___lldiv+3,w
 10058  061A  00B4               	movwf	___llmod@dividend+3
 10059  061B  0822               	movf	?___lldiv+2,w
 10060  061C  00B3               	movwf	___llmod@dividend+2
 10061  061D  0821               	movf	?___lldiv+1,w
 10062  061E  00B2               	movwf	___llmod@dividend+1
 10063  061F  0820               	movf	?___lldiv,w
 10064  0620  00B1               	movwf	___llmod@dividend
 10065  0621  160A  118A  2155  120A  118A  	fcall	___llmod
 10066  0626  1283               	bcf	3,5	;RP0=0, select bank0
 10067  0627  1303               	bcf	3,6	;RP1=0, select bank0
 10068  0628  082D               	movf	?___llmod,w
 10069  0629  3E30               	addlw	48
 10070  062A  1683               	bsf	3,5	;RP0=1, select bank1
 10071  062B  1303               	bcf	3,6	;RP1=0, select bank1
 10072  062C  00A1               	movwf	(??_sprintf+1)^(0+128)
 10073  062D  0821               	movf	(??_sprintf+1)^(0+128),w
 10074  062E  00BE               	movwf	sprintf@c^(0+128)
 10075  062F                     l3919:
 10076                           
 10077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 10078  062F  083E               	movf	sprintf@c^(0+128),w
 10079  0630  00A0               	movwf	??_sprintf^(0+128)
 10080  0631  083B               	movf	sprintf@sp^(0+128),w
 10081  0632  0084               	movwf	4
 10082  0633  0820               	movf	??_sprintf^(0+128),w
 10083  0634  1383               	bcf	3,7	;select IRP bank0
 10084  0635  0080               	movwf	0
 10085  0636  2DC3               	goto	l3915
 10086  0637                     l3923:
 10087                           
 10088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 10089  0637  30FF               	movlw	255
 10090  0638  07BC               	addwf	sprintf@prec^(0+128),f
 10091  0639  1803               	skipnc
 10092  063A  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10093  063B  30FF               	movlw	255
 10094  063C  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10095  063D  0A3C               	incf	sprintf@prec^(0+128),w
 10096  063E  1D03               	skipz
 10097  063F  2E44               	goto	u6211
 10098  0640  0A3D               	incf	(sprintf@prec+1)^(0+128),w
 10099  0641  1D03               	btfss	3,2
 10100  0642  2E44               	goto	u6211
 10101  0643  2E45               	goto	u6210
 10102  0644                     u6211:
 10103  0644  2DC8               	goto	l3917
 10104  0645                     u6210:
 10105  0645                     l3925:
 10106                           
 10107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10108  0645  3001               	movlw	1
 10109  0646  1283               	bcf	3,5	;RP0=0, select bank0
 10110  0647  1303               	bcf	3,6	;RP1=0, select bank0
 10111  0648  07E2               	addwf	sprintf@f,f
 10112  0649  30FF               	movlw	-1
 10113  064A  0762               	addwf	sprintf@f,w
 10114  064B  0084               	movwf	4
 10115  064C  120A  158A  200A  120A  118A  	fcall	stringdir
 10116  0651  1683               	bsf	3,5	;RP0=1, select bank1
 10117  0652  1303               	bcf	3,6	;RP1=0, select bank1
 10118  0653  00A0               	movwf	??_sprintf^(0+128)
 10119  0654  0820               	movf	??_sprintf^(0+128),w
 10120  0655  00BE               	movwf	sprintf@c^(0+128)
 10121  0656  083E               	movf	sprintf@c^(0+128),w
 10122  0657  1D03               	btfss	3,2
 10123  0658  2E5A               	goto	u6221
 10124  0659  2E5D               	goto	u6220
 10125  065A                     u6221:
 10126  065A  120A  158A  2D32   	goto	l3647
 10127  065D                     u6220:
 10128  065D                     l3927:
 10129                           
 10130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10131  065D  083B               	movf	sprintf@sp^(0+128),w
 10132  065E  0084               	movwf	4
 10133  065F  1383               	bcf	3,7	;select IRP bank0
 10134  0660  0180               	clrf	0
 10135  0661                     l391:
 10136  0661  0008               	return
 10137  0662                     __end_of_sprintf:

Data Sizes:
    Strings     55
    Constant    118
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     78      78
    BANK1            80     31      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> Lcdvar(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    USART_WriteStr@a	PTR unsigned char  size(2) Largest target is 20
		 -> Lcdvar(BANK1[20]), STR_1(CODE[19]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[19]), Lcdvar(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_LCD_Set_Cursor
    _main->_LCD_Write_String
    _main->_USART_WriteStr
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___ftmul->___awmod
    ___ftmul->___ftpack
    ___ftmul->___lwmod
    ___bmul->___awmod
    ___bmul->___lwmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    _USART_WriteStr->_USART_Write
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lwdiv->___lwmod
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___awtoft->___ftpack

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   50089
                                             75 BANK0      3     3      0
                       _Init_Receive
                         _Init_Trans
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                       _Set_BaudRate
                              _Setup
                        _USART_Write
                     _USART_WriteStr
                           ___awtoft
                            ___ftmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    36      9   41626
                                             66 BANK0      9     0      9
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    8382
                                             31 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              4 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1355
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    6918
                                             31 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     622
                                              4 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4906
                                             15 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             11 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     584
                                              4 COMMON     4     4      0
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     803
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1606
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2505
                                              3 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     752
                                              5 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             40 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4049
                                             60 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3823
                                             47 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              4 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     718
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2601
                                              3 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2338
                                              4 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_WriteStr                                       4     2      2     218
                                              5 COMMON     4     2      2
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
                         _ADC_CONFIG
 ---------------------------------------------------------------------------------
 (2) _ADC_CONFIG                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Set_BaudRate                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     240
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      44
                                              5 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     366
                                              8 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      66
                                              0 BANK0      2     2      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      44
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      44
                                              5 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Trans                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Receive
   _Init_Trans
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Init
     _LCD_Cmd
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _Set_BaudRate
   _Setup
     _ADC_CONFIG
   _USART_Write
   _USART_WriteStr
     _USART_Write
   ___awtoft
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftpack (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1F      3C       7       75.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      94      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 21:34:10 2021

      __size_of_ADC_CONFIG 0014                          pc 0002             ___bmul@product 002D  
                       l71 1F46               ___awdiv@sign 0028                         fsr 0004  
      ___wmul@multiplicand 0076               ___ftadd@exp1 005B               ___ftadd@exp2 005A  
             ___ftadd@sign 0059                        l102 1E7E                        l120 08C3  
                      l123 1EB0                        l117 1154                        l141 10BA  
                      l126 1ED3                        l135 1F1E                        l129 1E4A  
                      l321 0E06                        l172 1E1F                        l421 1E95  
                      l166 1005                        l175 1E33                        l431 07FF  
                      l184 1F9A                        l169 1E58                        l601 16CB  
                      l361 02F7                        l178 1E3D                        l354 02B3  
                      l620 1370                        l612 16BE                        l604 167B  
                      l292 0A6C                        l605 168E                        l631 134A  
                      l391 0661                        l632 1354                        l624 132F  
                      l704 159E                        l633 1370                        l641 0797  
                      l721 1EF8                        l715 1E31                        l395 1FAB  
                      l299 0D27                        l644 06AD                        l732 13DF  
                      l645 06B7                        l725 13FC                        l397 1FC5  
                      l646 06BC                        l655 072D                        l591 1205  
                      l680 14B9                        l681 142B                        l578 126E  
                      l691 14AC                        l684 147C                        l597 1F6F  
                      l837 1100                        l766 11AA                        l774 1038  
                      l847 1074                        l857 1E6A                        l698 1FFF  
                      _RE0 0048                        _RE1 0049                        _ISR 126F  
                      fsr0 0004                        indf 0000               ___awmod@sign 0021  
   __end_of_USART_WriteStr 1F9B            __end_of_LCD_Cmd 1ED4                       ?_ISR 0070  
           _LCD_Set_Cursor 1EF9                       l2121 11AE                       l2131 11C2  
                     l2123 11B2                       l2061 1E82                       l2141 11DA  
                     l2133 11C8                       l2125 11B7                       l3031 107A  
                     l2071 1E94                       l2063 1E83                       l2151 11FC  
                     l2143 11E4                       l2135 11CB                       l2127 11B9  
                     l2119 11AB                       l3033 1096                       l2065 1E87  
                     l3201 1223                       l2153 1201                       l2145 11EA  
                     l2137 11D2                       l2129 11BD                       l2059 08BF  
                     l3035 109E                       l2331 1E7A                       l2067 1E8B  
                     l3211 123B                       l3203 1229                       l2147 11F1  
                     l2139 11D6                       l2341 1EB5                       l3029 1075  
                     l2333 1E7B                       l2325 1E6B                       l2069 1E8D  
                     l3301 14CD                       l3213 124C                       l3205 122C  
                     l3221 1260                       l2149 11F7                       l2343 1EBB  
                     l2351 1E97                       l2327 1E73                       l2335 1E33  
                     l3231 0681                       l3311 14EC                       l2431 1E67  
                     l3223 1265                       l3215 1252                       l3207 1233  
                     l4031 0E1E                       l2345 1EBE                       l2361 1EAB  
                     l2353 1E9A                       l2329 1E79                       l2337 1E39  
                     l3161 1302                       l3153 12EF                       l2601 1E2F  
                     l3241 069D                       l3233 0687                       l3321 1527  
                     l3313 1519                       l3305 14D4                       l2281 10C5  
                     l2433 1E69                       l2425 1E5A                       l3225 126A  
                     l3217 1253                       l3209 1237                       l2347 1EC7  
                     l2339 1EB2                       l2355 1EA0                       l3171 1336  
                     l3163 1310                       l3155 12F4                       l2603 1E31  
                     l3251 06BB                       l3243 06A3                       l3235 0691  
                     l3331 154F                       l3323 152B                       l3315 151A  
                     l3307 14E5                       l2291 10E8                       l2283 10C8  
                     l2427 1E5B                       l3219 125A                       l3411 0BAE  
                     l2349 1ECA                       l2357 1EA3                       l3181 136A  
                     l3173 1340                       l3165 1317                       l3157 12FB  
                     l3261 06E0                       l3253 06BD                       l3245 06AE  
                     l3229 0662                       l2621 138D                       l3501 1618  
                     l3341 1575                       l3333 1555                       l3325 152F  
                     l3317 151B                       l2293 10EE                       l2285 10CF  
                     l2277 10BB                       l2429 1E61                       l3405 0B3B  
                     l2359 1EA8                       l2711 1001                       l3183 136F  
                     l3175 1344                       l3167 131D                       l3271 070C  
                     l3263 06E9                       l3255 06C3                       l3247 06B2  
                     l3239 0698                       l2631 13AF                       l2623 139F  
                     l2615 1371                       l3511 1658                       l3503 161A  
                     l3343 157D                       l3335 1559                       l3327 153F  
                     l3319 1521                       l2295 10EF                       l2287 10D3  
                     l2279 10BF                       l3351 103F                       l3191 1212  
                     l3423 0C94                       l3407 0B42                       l3415 0BCF  
                     l2713 1E4B                       l2721 1F83                       l3177 134E  
                     l3169 1327                       l3281 0741                       l3273 0712  
                     l3265 06F5                       l3257 06D0                       l3249 06B6  
                     l2633 13B3                       l2641 13CD                       l2625 13A0  
                     l2617 1384                       l3513 167A                       l3505 161F  
                     l3433 13FD                       l3345 1583                       l3337 155D  
                     l3329 1547                       l2297 10F6                       l2289 10D7  
                     l3361 105D                       l3353 1044                       l3193 1214  
                     l3185 1206                       l3425 0C9B                       l3417 0BD6  
                     l2715 1E18                       l2723 1F87                       l3179 1356  
                     l3291 076A                       l3283 0745                       l3275 071B  
                     l3259 06DA                       l3267 06FC                       l2651 13E9  
                     l2627 13A6                       l3611 1173                       l3603 1155  
                     l3531 16B3                       l3523 169A                       l3515 1688  
                     l3507 1623                       l3451 1443                       l3435 1410  
                     l3339 156D                       l2299 10FC                       l3363 1063  
                     l3355 104B                       l3371 08C7                       l3195 1218  
                     l3187 1209                       l2709 1E3E                       l2717 1F70  
                     l3293 077A                       l3285 0755                       l3277 0727  
                     l3269 0702                       l2653 13F4                       l2629 13AD  
                     l3613 1185                       l3605 115F                       l3541 1FA3  
                     l3533 16C3                       l3517 1692                       l3525 16AC  
                     l3509 162C                       l3461 146E                       l3453 144C  
                     l3445 142C                       l3365 106A                       l3357 104F  
                     l3349 1039                       l3373 08CD                       l3381 09AA  
                     l3197 121D                       l3189 120D                       l3429 0D07  
                     l3701 0E51                       l2719 1F72                       l3295 077C  
                     l3287 0756                       l3279 0731                       l2647 13D4  
                     l2639 13BB                       l3551 0798                       l3615 1193  
                     l3607 1162                       l3623 1006                       l3543 1FB2  
                     l3471 1488                       l3463 1476                       l3455 1455  
                     l3447 1432                       l3439 1419                       l3359 1053  
                     l3367 1070                       l3383 09B0                       l3375 0990  
                     l3199 1221                       l3711 0E94                       l3703 0E70  
                     l3641 1125                       l3633 1101                       l3289 0766  
                     l2649 13E4                       l3561 07C7                       l3553 07AA  
                     l3617 119C                       l3609 116F                       l3625 100D  
                     l3545 1FB9                       l3537 1F9B                       l3481 14B1  
                     l3465 1480                       l3473 149A                       l3457 1463  
                     l3449 1441                       l3385 0A1F                       l3393 0A70  
                     l3801 0268                       l3721 0EF9                       l3713 0EB9  
                     l3705 0E85                       l3643 112B                       l3635 1105  
                     l2691 1F24                       l3563 07D9                       l3555 07AD  
                     l3571 07F7                       l3619 11A2                       l3627 101A  
                     l3547 1FBF                       l3539 1F9F                       l3491 15C3  
                     l3459 146D                       l3299 14BA                       l3395 0A74  
                     l3811 02CE                       l3803 02A7                       l3731 0F79  
                     l3723 0EFF                       l3715 0EBF                       l3707 0E89  
                     l3651 0D3F                       l3637 110B                       l2693 1F3D  
                     l3581 1FDD                       l3565 07E7                       l3557 07BA  
                     l3629 1020                       l3485 159F                       l3389 0A39  
                     l3397 0A76                       l3901 058F                       l3821 0305  
                     l3813 02DB                       l3805 02BB                       l3741 001D  
                     l3733 0F9A                       l3725 0F18                       l3717 0ED2  
                     l3709 0E8D                       l3661 0D73                       l3653 0D44  
                     l3645 0D2B                       l3639 1115                       l2695 1F42  
                     l2687 1F1F                       l3591 1FFE                       l3583 1FEA  
                     l3575 1FC6                       l2599 1E28                       l3567 07E8  
                     l3559 07BE                       l3487 15BA                       l3479 14A1  
                     l3399 0A7D                       l3911 05B0                       l3903 0593  
                     l3831 03D0                       l3823 030C                       l3815 02EA  
                     l3807 02C4                       l3751 007E                       l3743 0026  
                     l3727 0F51                       l3719 0EF5                       l3735 0FA2  
                     l3671 0DB1                       l3663 0D8A                       l3655 0D48  
                     l3647 0D32                       l2689 1F23                       l3585 1FEC  
                     l3577 1FCC                       l3569 07F1                       l3497 15DC  
                     l3913 05BC                       l3905 0599                       l3841 0485  
                     l3833 040F                       l3825 0310                       l3817 02F1  
                     l3809 02C8                       l3753 0086                       l3745 0045  
                     l3761 00E4                       l3737 0FB1                       l3729 0F70  
                     l3681 0DEE                       l3673 0DB7                       l3665 0D90  
                     l3657 0D5A                       l3649 0D38                       l3587 1FEE  
                     l3579 1FD9                       l3595 1ED4                       l3499 1610  
                     l3915 05C3                       l3923 0637                       l3907 05A0  
                     l3851 04AB                       l3843 0489                       l3835 041B  
                     l3827 0328                       l3819 0300                       l3771 0163  
                     l3763 015F                       l3747 0054                       l3739 0FEA  
                     l3691 0E2C                       l3675 0DBC                       l3683 0E00  
                     l3659 0D5E                       l3667 0DA0                       l3941 1F06  
                     l3589 1FFC                       l3597 1EDD                       l3917 05C8  
                     l3909 05A4                       l3861 04CC                       l3853 04AF  
                     l3845 048F                       l3829 0375                       l3837 0476  
                     l3781 01C5                       l3765 0161                       l3757 009E  
                     l3749 0075                       l3693 0E3A                       l3685 0E04  
                     l3677 0DD1                       l3669 0DAE                       l3925 0645  
                     l3943 1F0D                       l3951 1F4A                       l3599 1EDF  
                     l3919 062F                       l3863 04D2                       l3855 04B3  
                     l3839 047E                       l3783 01D1                       l3791 01E6  
                     l3775 019A                       l3759 00DD                       l3695 0E3E  
                     l3847 0496                       l3927 065D                       l3679 0DE8  
                     l3945 1F13                       l3937 1EFC                       l3953 1F4E  
                     l3881 0536                       l3873 050B                       l3857 04BE  
                     l3849 04A7                       l3793 01F3                       l3785 01D8  
                     l3777 01A4                       l3697 0E42                       l3689 0E08  
                     l3961 16CC                       l3947 1F18                       l3939 1F01  
                     l3955 1F53                       l3891 055D                       l3883 053F  
                     l3875 0515                       l3859 04C4                       l3795 0201  
                     l3787 01E1                       l3779 01BF                       l3699 0E4D  
                     l3971 16F4                       l3963 16E0                       l3957 1F55  
                     l3949 1F47                       l3893 056B                       l3885 0547  
                     l3877 0520                       l3869 04D4                       l3797 0208  
                     l3981 1777                       l3973 172B                       l3965 16E5  
                     l3895 0574                       l3887 0553                       l3879 0527  
                     l3799 020D                       l3991 17CC                       l3983 17B2  
                     l3975 1762                       l3967 16EA                       l3897 0578  
                     l3889 0559                       l3993 17D4                       l3985 17BB  
                     l3977 176B                       l3969 16F1                       l3899 0583  
                     l3995 17DD                       l3987 17C1                       l3979 1771  
                     l3997 17E5                       l3989 17C7                       l3999 17EE  
                     STR_1 0886                       STR_2 08AC                       STR_3 0899  
                     u3000 10E8                       u3001 10E7                       u3020 10FC  
                     u3021 10FB                       u3005 10E4                       u3015 10F0  
                     u2500 11BD                       u2501 11BC                       u2510 11C8  
                     u2511 11C7                       u3090 1E39                       u2370 1E87  
                     u3170 1E61                       u2530 11DA                       u3091 1E38  
                     u2371 1E86                       u3171 1E60                       u2531 11D9  
                     u2380 1E94                       u5020 1555                       u5100 1053  
                     u3180 1E67                       u2540 11E4                       u2381 1E93  
                     u5021 1554                       u5005 1540                       u5101 1052  
                     u3181 1E66                       u2541 11E3                       u2525 11CC  
                     u5030 155D                       u5110 105D                       u5031 155C  
                     u5015 1548                       u5111 105C                       u3600 1384  
                     u2560 11F7                       u5200 0C9B                       u3601 1383  
                     u5041 1566                       u2561 11F6                       u2545 11E0  
                     u5201 0C9A                       u3610 1398                       u5210 1410  
                     u5042 156D                       u5130 1070                       u2570 11FC  
                     u2490 11B2                       u5211 140F                       u5131 106F  
                     u5115 1059                       u2571 11FB                       u2555 11EB  
                     u2491 11B1                       u3620 13B3                       u5300 1499  
                     u5220 142A                       u5140 08CD                       u6100 0520  
                     u6020 047D                       u3621 13B2                       u5301 1498  
                     u5221 1429                       u5125 1064                       u5141 08CC  
                     u6101 051F                       u6021 047C                       u6005 0378  
                     u4350 1084                       u4510 1316                       u3630 13BA  
                     u5310 14A0                       u5070 1583                       u5150 09B0  
                     u6110 0536                       u6030 0495                       u4511 1315  
                     u3631 13B9                       u3615 1394                       u5311 149F  
                     u5071 1582                       u5055 156E                       u5151 09AF  
                     u6111 0535                       u6031 0494                       u6015 041E  
                     u4360 10A8                       u5400 1699                       u5240 1463  
                     u5080 103F                       u4600 120D                       u5160 0A74  
                     u6120 0547                       u6040 04AF                       u4505 1309  
                     u5401 1698                       u5241 1462                       u5065 1576  
                     u5081 103E                       u4601 120C                       u5161 0A73  
                     u6121 0546                       u6105 051C                       u6041 04AE  
                     u4370 10BA                       u4530 1335                       u3650 13CC  
                     u5330 14B1                       u4610 1218                       u5170 0A7D  
                     u6210 0645                       u6130 0553                       u6050 04C4  
                     u4371 10B9                       u4531 1334                       u3651 13CB  
                     u5331 14B0                       u5235 144E                       u4611 1217  
                     u5171 0A7C                       u6211 0644                       u6131 0552  
                     u6115 0532                       u6051 04C3                       u3580 1E2F  
                     u4700 0681                       u3660 13D3                       u5500 07AA  
                     u5420 16AB                       u5340 15BA                       u5260 147C  
                     u4620 1229                       u5180 0B42                       u6220 065D  
                     u6140 055D                       u6060 04CC                       u4525 1328  
                     u3581 1E2E                       u4701 0680                       u3661 13D2  
                     u3645 13BC                       u5501 07A9                       u5421 16AA  
                     u5341 15B9                       u5325 14A3                       u5261 147B  
                     u5245 145F                       u4621 1228                       u5181 0B41  
                     u6221 065A                       u6205 05D7                       u6141 055C  
                     u6061 04CB                       u6230 1F01                       u4550 1344  
                     u4710 0687                       u5430 16B2                       u5350 15DB  
                     u5270 1480                       u5190 0BD6                       u6150 056B  
                     u6231 1F00                       u4551 1343                       u4711 0686  
                     u5431 16B1                       u5415 169B                       u5351 15DA  
                     u5271 147F                       u5255 146F                       u5095 1045  
                     u5191 0BD5                       u6151 056A                       u6240 1F13  
                     u4560 134A                       u4480 12F4                       u4800 06E0  
                     u4720 0691                       u5600 1EDD                       u3680 13E4  
                     u5520 07BE                       u5280 1487                       u2960 10C5  
                     u4640 123B                       u6160 0583                       u6080 050A  
                     u6241 1F12                       u4561 1349                       u4545 1339  
                     u4481 12F3                       u4801 06DF                       u4721 0690  
                     u5601 1EDC                       u3681 13E3                       u5521 07BD  
                     u5281 1486                       u2961 10C4                       u4641 123A  
                     u6161 0582                       u6081 0509                       u4570 134E  
                     u4490 12FB                       u6250 1F4E                       u4810 06E8  
                     u4730 069D                       u3690 13E9                       u5610 115F  
                     u5450 16C3                       u5370 1658                       u6170 0599  
                     u6090 0515                       u6307 1111                       u4571 134D  
                     u4491 12FA                       u6251 1F4D                       u4811 06E7  
                     u4731 069C                       u3691 13E8                       u3675 13D6  
                     u5515 07AF                       u5611 115E                       u5451 16C2  
                     u5371 1657                       u4635 122D                       u6171 0598  
                     u6155 0567                       u6091 0514                       u6075 04D7  
                     u3780 1F9A                       u4580 1361                       u4900 0731  
                     u4740 06A3                       u5540 07D9                       u5460 1FA3  
                     u5380 168E                       u2980 10D7                       u4660 124C  
                     u6180 05B0                       u5700 0D5A                       _RCIF 0065  
                     u6317 1121                       u3781 1F99                       u4901 0730  
                     u4741 06A2                       u5541 07D8                       u5461 1FA2  
                     u5445 16B5                       u5381 168D                       u5365 1625  
                     u2981 10D6                       u4661 124B                       u6181 05AF  
                     u6165 057F                       u6085 0506                       u5701 0D59  
                     u4590 136F                       u4910 0745                       u4830 06FB  
                     u4750 06AD                       u5630 1173                       u5390 1692  
                     u6190 05BC                       u5710 0DA0                       u6327 1131  
                     u4591 136E                       u4911 0744                       u4831 06FA  
                     u4751 06AC                       u5535 07C0                       u5631 1172  
                     u5391 1691                       u5375 1654                       u5295 1489  
                     u2975 10C9                       u4655 123C                       u6191 05BB  
                     u5711 0D9F                       u4840 0702                       u4760 06B6  
                     u5560 07F7                       u5640 1185                       u4680 1260  
                     u5800 0F70                       u5720 0DAE                       i1l81 12E8  
                     u6337 1EC2                       u4585 135D                       u4921 075F  
                     u4841 0701                       u4825 06EA                       u4761 06B5  
                     u5561 07F6                       u5545 07D5                       u5641 1184  
                     u5625 1164                       u4681 125F                       u4665 1248  
                     u5801 0F6F                       u5721 0DAD                       u5570 1FCC  
                     u4930 076A                       u4922 0766                       u4770 06BB  
                     u5490 1FBF                       u4690 1265                       u5810 0F9A  
                     u5730 0DFF                       u6347 1ECE                       u5571 1FCB  
                     u4931 0769                       u4771 06BA                       u5555 07E9  
                     u5491 1FBE                       u5475 1FAC                       u2995 10D8  
                     u4691 1264                       u4675 1254                       u5811 0F99  
                     u5731 0DFE                       u6267 16EE                       i1l76 128F  
                     u5580 1FDD                       u4860 0712                       u4780 06D0  
                     u5660 11A2                       u4940 14CD                       u5900 01A4  
                     u5820 0FB1                       u5740 0E3A                       i1l77 1285  
                     u5581 1FDC                       u4861 0711                       u4781 06CF  
                     u5661 11A1                       u5645 1181                       u5485 1FB3  
                     u4941 14CC                       u5901 01A3                       u5821 0FB0  
                     u5741 0E37                       u6277 17F6                       u5590 1FFC  
                     u4870 071A                       u4950 14E5                       u5910 01BF  
                     u5830 001D                       u5750 0E3E                       i1l79 12BD  
                     u6287 1EA5                       u5591 1FFB                       u4871 0719  
                     u4855 0703                       u5655 1194                       u4951 14E4  
                     u5911 01BE                       u5831 0FFA                       u5751 0E3D  
                     u5680 1020                       u4960 14FC                       u5920 01D1  
                     u5840 0026                       u5760 0E70                       u6297 1EAD  
                     u5681 101F                       u5921 01D0                       u5841 0025  
                     u5825 0FAD                       u5761 0E6F                       u4890 072D  
                     u4970 150E                       u5930 01F3                       u5850 0045  
                     u5770 0E94                       u5690 0D38                       u5595 1FF8  
                     u4891 072C                       u4795 06D1                       u5675 100E  
                     u5931 01F2                       u5851 0044                       u5835 0FF5  
                     u5771 0E93                       u5691 0D37                       u4980 152F  
                     u5940 0201                       u5860 0054                       u5780 0EA8  
                     u4885 071C                       u4981 152E                       u4965 14F8  
                     u5941 0200                       u5861 0053                       u5870 0075  
                     u5790 0EF9                       u4991 1538                       u4975 150A  
                     u5935 01EF                       u5871 0074                       u5791 0EF8  
                     u4992 153F                       u5960 02BA                       u5961 02B9  
                     u5865 0050                       u5785 0EA3                       u5970 02DB  
                     u5890 0199                       u5971 02DA                       u5955 0210  
                     u5891 0198                       u5980 02EA                       u5981 02E9  
                     u5885 0166                       u5990 0305                       u5991 0304  
                     u5975 02D7                       u5895 0195                       u5985 02E6  
                     _TRMT 04C1                       _Vol1 00C2                       _Vol2 00BF  
        ?_LCD_Write_String 0077                       _main 16CC               ___ftpack@arg 0074  
       __size_of_LCD_Clear 000D               ___ftpack@exp 0077                       btemp 007E  
                     start 000C         ??_LCD_Write_String 0020               _sprintf$1127 00A6  
        ___bmul@multiplier 002E               ___ftmul@cntr 003D               ___ftmul@sign 003E  
            ?_Init_Receive 0070                      ??_ISR 0070               ___fttol@exp1 0055  
             ___fttol@lval 0051           __end_of_LCD_Init 1155           __end_of_LCD_Port 08C4  
                    ?_main 0070            __end_of___awdiv 126F            __end_of___ftadd 0798  
          __end_of___awmod 1206            __end_of___ftneg 1E32                      _ANSEL 0188  
          __end_of___lldiv 0800            __end_of___ftmul 159F            ___awdiv@divisor 0022  
          __end_of___llmod 11AB            __end_of___ftsub 1EF9            __end_of___fttol 13FD  
          __end_of___lwdiv 1101            __end_of___lwmod 1075            ___awdiv@counter 0027  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    _TRISA 0085                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019               ___lltoft@exp 0028  
   __end_of_LCD_Set_Cursor 1F1F                      _Setup 1F1F              ___awtoft@sign 0028  
          __end_of_dpowers 0886            ?_USART_WriteStr 0075                      _scale 0A6D  
          __end_of_isdigit 1E6B              ___ftpack@sign 0078                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0662  
             USART_Write@a 0074             _LCD_Write_Char 1E96            __initialization 000F  
           ??_Init_Receive 0074                 _Init_Trans 1E4B               __end_of_main 1800  
                   ??_main 006B              ___fttol@sign1 0050          __end_of_LCD_Clear 1E4B  
                ??_LCD_Cmd 0075       __size_of__tdiv_to_l_ 00BD               ??_ADC_CONFIG 0074  
          ?_LCD_Set_Cursor 0078                     ?_Setup 0070                     _ADCON1 009F  
         ___llmod@dividend 0031                     ?_scale 003F                     _ADRESH 001E  
         ___awdiv@dividend 0024           __end_of___awtoft 1F70           __end_of___ftpack 1371  
                   _ANSELH 0189           __end_of___lltoft 1039                     i1l3051 1275  
                   i1l3061 12AE                     i1l3053 1279                     i1l3071 12DB  
                   i1l3063 12B4                     i1l3055 127F                     i1l3073 12DF  
                   i1l3065 12B9                     i1l3057 128B                     i1l3049 126F  
                   i1l3075 12E4                     i1l3067 12BC                     i1l3059 12A8  
                   i1l3077 12E7                     i1l3069 12D5                     u440_20 127F  
                   u440_21 127E                     u441_20 128B                     u441_21 128A  
                   u442_20 1295                     u442_21 1293                     u442_22 1296  
                   u443_20 12A1                     u443_21 129F                     u443_22 12A2  
                   u444_20 12A8                     u444_21 12A7                     u445_20 12C2  
                   u445_21 12C0                     u445_22 12C3                     u446_20 12CE  
                   u446_21 12CC                     u446_22 12CF                     u447_20 12D5  
                   u439_20 1275                     u447_21 12D4                     u439_21 1274  
                   u635_27 12B6                     u636_27 12E1     __end_of_LCD_Write_Char 1EB1  
                   _Lcdvar 00C8           __end_of__powers_ 0837                     ___bmul 1E7F  
                   ___ftge 1FC6                     _adcvar 00C7         __end_of_ADC_CONFIG 1E7F  
                   ___wmul 1F9B                  ??___awdiv 0026                  ??___ftadd 0055  
                ??___awmod 0078                  ??___ftneg 0077                  ??___lldiv 0074  
                ??___ftmul 0035                  ??___llmod 0075                  ??___ftsub 0079  
                ??___fttol 004C                  ??___lwdiv 0025                  ??___lwmod 0078  
                   _fround 08C4           ___awdiv@quotient 0029            ___awmod@divisor 0074  
          ___awmod@counter 0020              ?_Set_BaudRate 0070      ___ftmul@f3_as_product 003A  
                ??_isdigit 0074                     saved_w 007E                  ??_sprintf 00A0  
          LCD_Set_Cursor@a 0022            LCD_Set_Cursor@x 0021            LCD_Set_Cursor@y 0078  
  __end_of__initialization 0019                  ?_LCD_Init 0070                  ?_LCD_Port 0070  
               ___ftadd@f1 004F                 ___ftadd@f2 0052                 ___ftge@ff1 0020  
               ___ftge@ff2 0023            ?_LCD_Write_Char 0070                 ___ftneg@f1 0074  
               ___awtoft@c 0023               ?_USART_Write 0070        ___bmul@multiplicand 002B  
               ___ftmul@f1 002F                 ___ftmul@f2 0032                 ___ftsub@f1 005F  
               ___ftsub@f2 005C                 ___fttol@f1 0048             __pcstackCOMMON 0070  
              ?_Init_Trans 0070              __end_of_Setup 1F47                  LCD_Port@a 0074  
               ___lltoft@c 0023              __end_of_scale 0D28             ??_Set_BaudRate 0074  
               __div_to_l_ 159F                    ??_Setup 0074       __end_of_Init_Receive 1E20  
          __div_to_l_@exp1 0033            __div_to_l_@cntr 0032                    ??_scale 0042  
          __div_to_l_@quot 002E               sprintf@width 00AC                 __pbssBANK1 00BF  
               ??_LCD_Init 0020                 ??_LCD_Port 0074              __div_to_l_@f1 0020  
            __div_to_l_@f2 0023                 __pmaintext 16CC                    ?___bmul 002B  
                  ?___ftge 0020                    ?___wmul 0074                 __pintentry 0004  
                  ?_fround 003F  __size_of_LCD_Write_String 0046                  ?___awtoft 0023  
                ?___ftpack 0074                  ?___lltoft 0023           ??_USART_WriteStr 0077  
                  _LCD_Cmd 1EB1        __size_of_Init_Trans 000E                 __stringtab 0800  
        __end_of__npowers_ 085E                 _scale$1126 0044            __size_of___bmul 0017  
          __size_of___ftge 003A                    ___awdiv 1206                    ___ftadd 0662  
                  ___awmod 11AB                    ___ftneg 1E28                    ___lldiv 0798  
          __size_of___wmul 002B                    ___ftmul 14BA                    ___llmod 1155  
                  ___ftsub 1ED4                    ___fttol 1371                    ___lwdiv 10BB  
                  ___lwmod 1039                    _adcvar1 00C6                 ??___awtoft 0026  
               ??___ftpack 0020            __size_of_fround 01A9                 ??___lltoft 0027  
         ??_LCD_Set_Cursor 0020                    __ptext1 0D28                    __ptext2 0A6D  
                  __ptext3 11AB                    __ptext4 1206                    __ptext5 1E59  
                  __ptext6 08C4                    __ptext7 1039                    __ptext8 10BB  
                  __ptext9 14BA               __size_of_ISR 0080                ?__div_to_l_ 0020  
                  _dpowers 085E                    _isdigit 1E59                    _receive 0079  
         ___awmod@dividend 0076                  _LCD_Clear 1E3E                    _sprintf 0D28  
                  clrloop0 1E21       end_of_initialization 0019       __end_of_Set_BaudRate 1006  
          ___lldiv@divisor 0020            ___lldiv@counter 002C                  _RCSTAbits 0018  
                  psplit$0 B0033       __size_of_USART_Write 000C             __tdiv_to_l_@f1 0020  
           __tdiv_to_l_@f2 0023              ??__tdiv_to_l_ 0074      __size_of_Init_Receive 0008  
                _TRISCbits 0087                 ?_LCD_Clear 0070          LCD_Write_String@a 0077  
        LCD_Write_String@i 0023           ??_LCD_Write_Char 0075                  _TXSTAbits 0098  
        __size_of_LCD_Init 0054        __size_of__div_to_l_ 012D          __size_of_LCD_Port 0006  
              ___ftmul@exp 0039               ??_Init_Trans 0074               _Init_Receive 1E18  
           __end_of___bmul 1E96             __end_of___ftge 2000             __end_of___wmul 1FC6  
         _LCD_Write_String 1075          pnum$text1_split_1 0033             __end_of_fround 0A6D  
      start_initialization 000F                __end_of_ISR 12EF        __end_of__tdiv_to_l_ 14BA  
       __end_of_Init_Trans 1E59            ___llmod@divisor 002D            ___llmod@counter 0076  
                 ??___bmul 002C                   ??___ftge 0074                   ??___wmul 0078  
          LCD_Write_Char@a 0076                   ??_fround 0042              sprintf@tmpval 00AE  
               fround@prec 004E                   ?_LCD_Cmd 0070          __size_of___awtoft 0029  
        __size_of___ftpack 0082          __size_of___lltoft 0033                __pbssCOMMON 0079  
                 LCD_Cmd@a 0077                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0                ??_LCD_Clear 0078      __size_of_Set_BaudRate 0005  
              sprintf@flag 00AA                sprintf@eexp 00B6                sprintf@fval 00B8  
              sprintf@prec 00BC           ___lwdiv@dividend 0023                   ?___awdiv 0022  
                 ?___ftadd 004F                   ?___awmod 0074                   ?___ftneg 0074  
                 ?___lldiv 0020                   ?___ftmul 002F                   ?___llmod 002D  
                 ?___ftsub 005C                  __npowers_ 0837                   ?___fttol 0048  
                 ?___lwdiv 0021                   ?___lwmod 0074                  __pstrings 0800  
              __tdiv_to_l_ 13FD               ??__div_to_l_ 0026               _Set_BaudRate 1001  
                 ?_isdigit 0070             __size_of_Setup 0028           ___lwdiv@quotient 0026  
                 ?_sprintf 0062             __size_of_scale 02BB          interrupt_function 0004  
                 _LCD_Init 1101             ___wmul@product 0020                   _LCD_Port 08BE  
                clear_ram0 1E20                   _PIE1bits 008C                   _PIR1bits 000C  
       __end_of__div_to_l_ 16CC                 _ADCON0bits 001F                __stringbase 080F  
        ___wmul@multiplier 0074           __size_of_LCD_Cmd 0023                 _ADC_CONFIG 1E6B  
 __end_of_LCD_Write_String 10BB    __size_of_USART_WriteStr 002B              ??_USART_Write 0074  
         __size_of___awdiv 0069           __size_of___ftadd 0136           __size_of___awmod 005B  
         __size_of___ftneg 000A           __size_of___lldiv 0068           __size_of___ftmul 00E5  
         __size_of___llmod 0056           __size_of___ftsub 0025           __size_of___fttol 008C  
         __size_of___lwdiv 0046           __size_of___lwmod 003C                   ___awtoft 1F47  
                 ___ftpack 12EF                _fround$1124 004B                _fround$1125 0048  
       __end_of__stringtab 0810                   ___lltoft 1006                _isdigit$933 0074  
               sprintf@val 00B2           __size_of_isdigit 0012            ___lwdiv@divisor 0021  
          ___lwdiv@counter 0028                   __ptext10 1E7F                   __ptext11 13FD  
                 __ptext20 1E28                   __ptext12 159F                   __ptext21 1FC6  
                 __ptext13 1F9B                   __ptext30 1E96                   __ptext22 1F47  
                 __ptext14 1006                   __ptext31 1EF9                   __ptext23 12EF  
                 __ptext15 1155                   __ptext32 1101                   __ptext24 1F70  
                 __ptext16 0798                   __ptext33 1E3E                   __ptext25 1E32  
                 __ptext17 1371                   __ptext34 1EB1                   __ptext26 1F1F  
                 __ptext18 1ED4                   __ptext35 08BE                   __ptext27 1E6B  
                 __ptext19 0662                   __ptext36 1E4B                   __ptext28 1001  
                 __ptext37 1E18                   __ptext29 1075                   __ptext38 126F  
                 __powers_ 0810    __size_of_LCD_Set_Cursor 0026                   _contador 00C5  
         __size_of_sprintf F93A              __size_of_main 0134                  pnum$text1 000B  
      __end_of_USART_Write 1E3E                 _INTCONbits 000B                ?_ADC_CONFIG 0070  
                 isdigit@c 0075                   scale@scl 0047                   intlevel1 0000  
                sprintf@ap 00A9           __tdiv_to_l_@exp1 002B           __tdiv_to_l_@cntr 002A  
                sprintf@sp 00BB           __tdiv_to_l_@quot 0026           ___lwmod@dividend 0076  
         ___lldiv@dividend 0024                  stringcode 080A    __size_of_LCD_Write_Char 001B  
             ?__tdiv_to_l_ 0020                   sprintf@c 00BE                   sprintf@f 0062  
         ___lldiv@quotient 0028            ___lwmod@divisor 0074            ___lwmod@counter 0020  
                 stringdir 080A                   stringtab 0800             _USART_WriteStr 1F70  
          USART_WriteStr@a 0075            USART_WriteStr@i 0078                _USART_Write 1E32  
