

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 11:39:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479                           
   480                           	psect	strings
   481  1000                     __pstrings:
   482  1000                     stringtab:
   483  1000                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486  1000  1BFF               	btfsc	btemp+1,7
   487  1001  280A               	ljmp	stringcode
   488  1002  1383               	bcf	3,7
   489  1003  187F               	btfsc	btemp+1,0
   490  1004  1783               	bsf	3,7
   491  1005  0800               	movf	0,w
   492  1006  0A84               	incf	4,f
   493  1007  1903               	skipnz
   494  1008  0AFF               	incf	btemp+1,f
   495  1009  0008               	return
   496  100A                     stringcode:
   497  100A                     stringdir:
   498  100A  3010               	movlw	high stringdir
   499  100B  008A               	movwf	10
   500  100C  0804               	movf	4,w
   501  100D  0A84               	incf	4,f
   502  100E  0782               	addwf	2,f
   503  100F                     __stringbase:
   504  100F  3400               	retlw	0
   505  1010                     __end_of__stringtab:
   506  1010                     __powers_:
   507  1010  3400               	retlw	0
   508  1011  3480               	retlw	128
   509  1012  343F               	retlw	63
   510  1013  3400               	retlw	0
   511  1014  3420               	retlw	32
   512  1015  3441               	retlw	65
   513  1016  3400               	retlw	0
   514  1017  34C8               	retlw	200
   515  1018  3442               	retlw	66
   516  1019  3400               	retlw	0
   517  101A  347A               	retlw	122
   518  101B  3444               	retlw	68
   519  101C  3440               	retlw	64
   520  101D  341C               	retlw	28
   521  101E  3446               	retlw	70
   522  101F  3450               	retlw	80
   523  1020  34C3               	retlw	195
   524  1021  3447               	retlw	71
   525  1022  3424               	retlw	36
   526  1023  3474               	retlw	116
   527  1024  3449               	retlw	73
   528  1025  3497               	retlw	151
   529  1026  3418               	retlw	24
   530  1027  344B               	retlw	75
   531  1028  34BC               	retlw	188
   532  1029  34BE               	retlw	190
   533  102A  344C               	retlw	76
   534  102B  346B               	retlw	107
   535  102C  346E               	retlw	110
   536  102D  344E               	retlw	78
   537  102E  3403               	retlw	3
   538  102F  3415               	retlw	21
   539  1030  3450               	retlw	80
   540  1031  3479               	retlw	121
   541  1032  34AD               	retlw	173
   542  1033  3460               	retlw	96
   543  1034  34F3               	retlw	243
   544  1035  3449               	retlw	73
   545  1036  3471               	retlw	113
   546  1037                     __end_of__powers_:
   547  1037                     __npowers_:
   548  1037  3400               	retlw	0
   549  1038  3480               	retlw	128
   550  1039  343F               	retlw	63
   551  103A  34CD               	retlw	205
   552  103B  34CC               	retlw	204
   553  103C  343D               	retlw	61
   554  103D  34D7               	retlw	215
   555  103E  3423               	retlw	35
   556  103F  343C               	retlw	60
   557  1040  3412               	retlw	18
   558  1041  3483               	retlw	131
   559  1042  343A               	retlw	58
   560  1043  34B7               	retlw	183
   561  1044  34D1               	retlw	209
   562  1045  3438               	retlw	56
   563  1046  34C6               	retlw	198
   564  1047  3427               	retlw	39
   565  1048  3437               	retlw	55
   566  1049  3438               	retlw	56
   567  104A  3486               	retlw	134
   568  104B  3435               	retlw	53
   569  104C  34C0               	retlw	192
   570  104D  34D6               	retlw	214
   571  104E  3433               	retlw	51
   572  104F  34CC               	retlw	204
   573  1050  342B               	retlw	43
   574  1051  3432               	retlw	50
   575  1052  3470               	retlw	112
   576  1053  3489               	retlw	137
   577  1054  3430               	retlw	48
   578  1055  34E7               	retlw	231
   579  1056  34DB               	retlw	219
   580  1057  342E               	retlw	46
   581  1058  34E5               	retlw	229
   582  1059  343C               	retlw	60
   583  105A  341E               	retlw	30
   584  105B  3442               	retlw	66
   585  105C  34A2               	retlw	162
   586  105D  340D               	retlw	13
   587  105E                     __end_of__npowers_:
   588  105E                     _dpowers:
   589  105E  3401               	retlw	1
   590  105F  3400               	retlw	0
   591  1060  3400               	retlw	0
   592  1061  3400               	retlw	0
   593  1062  340A               	retlw	10
   594  1063  3400               	retlw	0
   595  1064  3400               	retlw	0
   596  1065  3400               	retlw	0
   597  1066  3464               	retlw	100
   598  1067  3400               	retlw	0
   599  1068  3400               	retlw	0
   600  1069  3400               	retlw	0
   601  106A  34E8               	retlw	232
   602  106B  3403               	retlw	3
   603  106C  3400               	retlw	0
   604  106D  3400               	retlw	0
   605  106E  3410               	retlw	16
   606  106F  3427               	retlw	39
   607  1070  3400               	retlw	0
   608  1071  3400               	retlw	0
   609  1072  34A0               	retlw	160
   610  1073  3486               	retlw	134
   611  1074  3401               	retlw	1
   612  1075  3400               	retlw	0
   613  1076  3440               	retlw	64
   614  1077  3442               	retlw	66
   615  1078  340F               	retlw	15
   616  1079  3400               	retlw	0
   617  107A  3480               	retlw	128
   618  107B  3496               	retlw	150
   619  107C  3498               	retlw	152
   620  107D  3400               	retlw	0
   621  107E  3400               	retlw	0
   622  107F  34E1               	retlw	225
   623  1080  34F5               	retlw	245
   624  1081  3405               	retlw	5
   625  1082  3400               	retlw	0
   626  1083  34CA               	retlw	202
   627  1084  349A               	retlw	154
   628  1085  343B               	retlw	59
   629  1086                     __end_of_dpowers:
   630  0019                     _TXREG	set	25
   631  0018                     _RCSTAbits	set	24
   632  000B                     _INTCONbits	set	11
   633  001A                     _RCREG	set	26
   634  000C                     _PIR1bits	set	12
   635  001E                     _ADRESH	set	30
   636  001F                     _ADCON0bits	set	31
   637  0009                     _PORTE	set	9
   638  0008                     _PORTD	set	8
   639  0007                     _PORTC	set	7
   640  0005                     _PORTA	set	5
   641  0049                     _RE1	set	73
   642  0048                     _RE0	set	72
   643  0065                     _RCIF	set	101
   644  0087                     _TRISCbits	set	135
   645  0098                     _TXSTAbits	set	152
   646  0099                     _SPBRG	set	153
   647  009F                     _ADCON1	set	159
   648  008C                     _PIE1bits	set	140
   649  0089                     _TRISE	set	137
   650  0088                     _TRISD	set	136
   651  0087                     _TRISC	set	135
   652  0085                     _TRISA	set	133
   653  04C1                     _TRMT	set	1217
   654  0189                     _ANSELH	set	393
   655  0188                     _ANSEL	set	392
   656  1086                     STR_1:
   657  1086  3456               	retlw	86	;'V'
   658  1087  3431               	retlw	49	;'1'
   659  1088  3420               	retlw	32	;' '
   660  1089  3420               	retlw	32	;' '
   661  108A  3420               	retlw	32	;' '
   662  108B  3420               	retlw	32	;' '
   663  108C  3420               	retlw	32	;' '
   664  108D  3456               	retlw	86	;'V'
   665  108E  3432               	retlw	50	;'2'
   666  108F  3420               	retlw	32	;' '
   667  1090  3420               	retlw	32	;' '
   668  1091  3420               	retlw	32	;' '
   669  1092  3443               	retlw	67	;'C'
   670  1093  344F               	retlw	79	;'O'
   671  1094  344E               	retlw	78	;'N'
   672  1095  3454               	retlw	84	;'T'
   673  1096  3420               	retlw	32	;' '
   674  1097  340A               	retlw	10
   675  1098  3400               	retlw	0
   676  1099                     STR_2:
   677  1099  3425               	retlw	37	;'%'
   678  109A  3431               	retlw	49	;'1'
   679  109B  342E               	retlw	46	;'.'
   680  109C  3431               	retlw	49	;'1'
   681  109D  3466               	retlw	102	;'f'
   682  109E  3420               	retlw	32	;' '
   683  109F  3420               	retlw	32	;' '
   684  10A0  3425               	retlw	37	;'%'
   685  10A1  3431               	retlw	49	;'1'
   686  10A2  342E               	retlw	46	;'.'
   687  10A3  3431               	retlw	49	;'1'
   688  10A4  3466               	retlw	102	;'f'
   689  10A5  3420               	retlw	32	;' '
   690  10A6  3425               	retlw	37	;'%'
   691  10A7  3433               	retlw	51	;'3'
   692  10A8  3464               	retlw	100	;'d'
   693  10A9  3400               	retlw	0
   694  10AA                     STR_3:
   695  10AA  3456               	retlw	86	;'V'
   696  10AB  3431               	retlw	49	;'1'
   697  10AC  3420               	retlw	32	;' '
   698  10AD  3420               	retlw	32	;' '
   699  10AE  3420               	retlw	32	;' '
   700  10AF  3456               	retlw	86	;'V'
   701  10B0  3432               	retlw	50	;'2'
   702  10B1  3420               	retlw	32	;' '
   703  10B2  3420               	retlw	32	;' '
   704  10B3  3420               	retlw	32	;' '
   705  10B4  3420               	retlw	32	;' '
   706  10B5  3443               	retlw	67	;'C'
   707  10B6  344F               	retlw	79	;'O'
   708  10B7  344E               	retlw	78	;'N'
   709  10B8  3454               	retlw	84	;'T'
   710  10B9  3400               	retlw	0
   711                           
   712                           	psect	cinit
   713  000F                     start_initialization:	
   714                           ; #config settings
   715                           
   716  000F                     __initialization:
   717                           
   718                           ; Clear objects allocated to BANK1
   719  000F  1383               	bcf	3,7	;select IRP bank0
   720  0010  30A0               	movlw	low __pbssBANK1
   721  0011  0084               	movwf	4
   722  0012  30BE               	movlw	low (__pbssBANK1+30)
   723  0013  160A  158A  2569  120A  118A  	fcall	clear_ram0
   724  0018                     end_of_initialization:	
   725                           ;End of C runtime variable initialization code
   726                           
   727  0018                     __end_of__initialization:
   728  0018  0183               	clrf	3
   729  0019  160A  118A  2EA0   	ljmp	_main	;jump to C main() function
   730                           
   731                           	psect	bssBANK1
   732  00A0                     __pbssBANK1:
   733  00A0                     _Vol2:
   734  00A0                     	ds	3
   735  00A3                     _Vol1:
   736  00A3                     	ds	3
   737  00A6                     _contador:
   738  00A6                     	ds	1
   739  00A7                     _receive:
   740  00A7                     	ds	1
   741  00A8                     _adcvar1:
   742  00A8                     	ds	1
   743  00A9                     _adcvar:
   744  00A9                     	ds	1
   745  00AA                     _Lcdvar:
   746  00AA                     	ds	20
   747                           
   748                           	psect	clrtext
   749  1D69                     clear_ram0:	
   750                           ;	Called with FSR containing the base address, and
   751                           ;	W with the last address+1
   752                           
   753  1D69  0064               	clrwdt	;clear the watchdog before getting into this loop
   754  1D6A                     clrloop0:
   755  1D6A  0180               	clrf	0	;clear RAM location pointed to by FSR
   756  1D6B  0A84               	incf	4,f	;increment pointer
   757  1D6C  0604               	xorwf	4,w	;XOR with final address
   758  1D6D  1903               	btfsc	3,2	;have we reached the end yet?
   759  1D6E  3400               	retlw	0	;all done for this memory range, return
   760  1D6F  0604               	xorwf	4,w	;XOR again to restore value
   761  1D70  2D6A               	goto	clrloop0	;do the next byte
   762                           
   763                           	psect	cstackBANK1
   764  00BE                     __pcstackBANK1:
   765  00BE                     _sprintf$1127:
   766                           
   767                           ; 3 bytes @ 0x0
   768  00BE                     	ds	3
   769  00C1                     sprintf@ap:
   770                           
   771                           ; 1 bytes @ 0x3
   772  00C1                     	ds	1
   773  00C2                     sprintf@flag:
   774                           
   775                           ; 2 bytes @ 0x4
   776  00C2                     	ds	2
   777  00C4                     sprintf@width:
   778                           
   779                           ; 2 bytes @ 0x6
   780  00C4                     	ds	2
   781  00C6                     sprintf@tmpval:
   782                           
   783                           ; 4 bytes @ 0x8
   784  00C6                     	ds	4
   785  00CA                     sprintf@val:
   786                           
   787                           ; 4 bytes @ 0xC
   788  00CA                     	ds	4
   789  00CE                     sprintf@eexp:
   790                           
   791                           ; 2 bytes @ 0x10
   792  00CE                     	ds	2
   793  00D0                     sprintf@fval:
   794                           
   795                           ; 3 bytes @ 0x12
   796  00D0                     	ds	3
   797  00D3                     sprintf@sp:
   798                           
   799                           ; 1 bytes @ 0x15
   800  00D3                     	ds	1
   801  00D4                     sprintf@prec:
   802                           
   803                           ; 2 bytes @ 0x16
   804  00D4                     	ds	2
   805  00D6                     sprintf@c:
   806                           
   807                           ; 1 bytes @ 0x18
   808  00D6                     	ds	1
   809  00D7                     ??_main:
   810                           
   811                           ; 1 bytes @ 0x19
   812  00D7                     	ds	3
   813                           
   814                           	psect	cstackCOMMON
   815  0070                     __pcstackCOMMON:
   816  0070                     ?_isdigit:
   817  0070                     ?_ADC_CONFIG:	
   818                           ; 1 bit 
   819                           
   820  0070                     ?_LCD_Init:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_LCD_Clear:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_Set_BaudRate:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_Init_Trans:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_Init_Receive:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?_USART_Write:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_LCD_Port:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_LCD_Cmd:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_Setup:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_ISR:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ??_ISR:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_main:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_LCD_Write_Char:	
   857                           ; 1 bytes @ 0x0
   858                           
   859                           
   860                           ; 1 bytes @ 0x0
   861  0070                     	ds	4
   862  0074                     ?___ftge:
   863  0074                     ??_ADC_CONFIG:	
   864                           ; 1 bit 
   865                           
   866  0074                     ??_Set_BaudRate:	
   867                           ; 1 bytes @ 0x4
   868                           
   869  0074                     ??_Init_Trans:	
   870                           ; 1 bytes @ 0x4
   871                           
   872  0074                     ??_Init_Receive:	
   873                           ; 1 bytes @ 0x4
   874                           
   875  0074                     ??_USART_Write:	
   876                           ; 1 bytes @ 0x4
   877                           
   878  0074                     ??_LCD_Port:	
   879                           ; 1 bytes @ 0x4
   880                           
   881  0074                     ??_isdigit:	
   882                           ; 1 bytes @ 0x4
   883                           
   884  0074                     ??_Setup:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0074                     ??___lldiv:	
   888                           ; 1 bytes @ 0x4
   889                           
   890  0074                     ?___wmul:	
   891                           ; 1 bytes @ 0x4
   892                           
   893  0074                     ?___awmod:	
   894                           ; 2 bytes @ 0x4
   895                           
   896  0074                     ?___lwmod:	
   897                           ; 2 bytes @ 0x4
   898                           
   899  0074                     ?___ftpack:	
   900                           ; 2 bytes @ 0x4
   901                           
   902  0074                     ?___ftneg:	
   903                           ; 3 bytes @ 0x4
   904                           
   905  0074                     ?__tdiv_to_l_:	
   906                           ; 3 bytes @ 0x4
   907                           
   908  0074                     ?__div_to_l_:	
   909                           ; 4 bytes @ 0x4
   910                           
   911  0074                     LCD_Port@a:	
   912                           ; 4 bytes @ 0x4
   913                           
   914  0074                     USART_Write@a:	
   915                           ; 1 bytes @ 0x4
   916                           
   917  0074                     _isdigit$933:	
   918                           ; 1 bytes @ 0x4
   919                           
   920  0074                     ___wmul@multiplier:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0074                     ___awmod@divisor:	
   924                           ; 2 bytes @ 0x4
   925                           
   926  0074                     ___lwmod@divisor:	
   927                           ; 2 bytes @ 0x4
   928                           
   929  0074                     __div_to_l_@f1:	
   930                           ; 2 bytes @ 0x4
   931                           
   932  0074                     ___ftpack@arg:	
   933                           ; 3 bytes @ 0x4
   934                           
   935  0074                     __tdiv_to_l_@f1:	
   936                           ; 3 bytes @ 0x4
   937                           
   938  0074                     ___ftge@ff1:	
   939                           ; 3 bytes @ 0x4
   940                           
   941  0074                     ___ftneg@f1:	
   942                           ; 3 bytes @ 0x4
   943                           
   944                           
   945                           ; 3 bytes @ 0x4
   946  0074                     	ds	1
   947  0075                     ?_USART_WriteStr:
   948  0075                     ??_LCD_Cmd:	
   949                           ; 1 bytes @ 0x5
   950                           
   951  0075                     ??_LCD_Write_Char:	
   952                           ; 1 bytes @ 0x5
   953                           
   954  0075                     isdigit@c:	
   955                           ; 1 bytes @ 0x5
   956                           
   957  0075                     USART_WriteStr@a:	
   958                           ; 1 bytes @ 0x5
   959                           
   960  0075                     ___lldiv@quotient:	
   961                           ; 2 bytes @ 0x5
   962                           
   963                           
   964                           ; 4 bytes @ 0x5
   965  0075                     	ds	1
   966  0076                     LCD_Write_Char@a:
   967  0076                     ___wmul@multiplicand:	
   968                           ; 1 bytes @ 0x6
   969                           
   970  0076                     ___awmod@dividend:	
   971                           ; 2 bytes @ 0x6
   972                           
   973  0076                     ___lwmod@dividend:	
   974                           ; 2 bytes @ 0x6
   975                           
   976                           
   977                           ; 2 bytes @ 0x6
   978  0076                     	ds	1
   979  0077                     ??_USART_WriteStr:
   980  0077                     ?_LCD_Write_String:	
   981                           ; 1 bytes @ 0x7
   982                           
   983  0077                     ??___ftneg:	
   984                           ; 1 bytes @ 0x7
   985                           
   986  0077                     LCD_Cmd@a:	
   987                           ; 1 bytes @ 0x7
   988                           
   989  0077                     ___ftpack@exp:	
   990                           ; 1 bytes @ 0x7
   991                           
   992  0077                     LCD_Write_String@a:	
   993                           ; 1 bytes @ 0x7
   994                           
   995  0077                     __div_to_l_@f2:	
   996                           ; 2 bytes @ 0x7
   997                           
   998  0077                     __tdiv_to_l_@f2:	
   999                           ; 3 bytes @ 0x7
  1000                           
  1001  0077                     ___ftge@ff2:	
  1002                           ; 3 bytes @ 0x7
  1003                           
  1004                           
  1005                           ; 3 bytes @ 0x7
  1006  0077                     	ds	1
  1007  0078                     ??_LCD_Init:
  1008  0078                     ??_LCD_Clear:	
  1009                           ; 1 bytes @ 0x8
  1010                           
  1011  0078                     ?_LCD_Set_Cursor:	
  1012                           ; 1 bytes @ 0x8
  1013                           
  1014  0078                     ??___wmul:	
  1015                           ; 1 bytes @ 0x8
  1016                           
  1017  0078                     ??___awmod:	
  1018                           ; 1 bytes @ 0x8
  1019                           
  1020  0078                     ??___lwmod:	
  1021                           ; 1 bytes @ 0x8
  1022                           
  1023  0078                     LCD_Set_Cursor@y:	
  1024                           ; 1 bytes @ 0x8
  1025                           
  1026  0078                     USART_WriteStr@i:	
  1027                           ; 1 bytes @ 0x8
  1028                           
  1029  0078                     ___ftpack@sign:	
  1030                           ; 1 bytes @ 0x8
  1031                           
  1032  0078                     ___wmul@product:	
  1033                           ; 1 bytes @ 0x8
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x8
  1037  0078                     	ds	1
  1038  0079                     ??_LCD_Set_Cursor:
  1039  0079                     ??___awdiv:	
  1040                           ; 1 bytes @ 0x9
  1041                           
  1042  0079                     ??___lltoft:	
  1043                           ; 1 bytes @ 0x9
  1044                           
  1045  0079                     ___lldiv@counter:	
  1046                           ; 1 bytes @ 0x9
  1047                           
  1048  0079                     ___awtoft@sign:	
  1049                           ; 1 bytes @ 0x9
  1050                           
  1051  0079                     ___lwmod@counter:	
  1052                           ; 1 bytes @ 0x9
  1053                           
  1054                           
  1055                           ; 1 bytes @ 0x9
  1056  0079                     	ds	1
  1057  007A                     ??___ftge:
  1058  007A                     ??___ftsub:	
  1059                           ; 1 bytes @ 0xA
  1060                           
  1061                           
  1062                           	psect	cstackBANK0
  1063  0020                     __pcstackBANK0:	
  1064                           ; 1 bytes @ 0xA
  1065                           
  1066  0020                     ??_LCD_Write_String:
  1067  0020                     ??__tdiv_to_l_:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0020                     ??__div_to_l_:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0020                     ??___ftpack:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0020                     ?___lwdiv:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0020                     ?___lldiv:	
  1080                           ; 2 bytes @ 0x0
  1081                           
  1082  0020                     LCD_Set_Cursor@x:	
  1083                           ; 4 bytes @ 0x0
  1084                           
  1085  0020                     ___awmod@counter:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0020                     ___lwdiv@divisor:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0020                     ___lldiv@divisor:	
  1092                           ; 2 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 4 bytes @ 0x0
  1096  0020                     	ds	1
  1097  0021                     LCD_Set_Cursor@a:
  1098  0021                     ___awmod@sign:	
  1099                           ; 1 bytes @ 0x1
  1100                           
  1101                           
  1102                           ; 1 bytes @ 0x1
  1103  0021                     	ds	1
  1104  0022                     ?___awdiv:
  1105  0022                     ___awdiv@divisor:	
  1106                           ; 2 bytes @ 0x2
  1107                           
  1108  0022                     ___lwdiv@dividend:	
  1109                           ; 2 bytes @ 0x2
  1110                           
  1111                           
  1112                           ; 2 bytes @ 0x2
  1113  0022                     	ds	1
  1114  0023                     ?___awtoft:
  1115  0023                     ?___lltoft:	
  1116                           ; 3 bytes @ 0x3
  1117                           
  1118  0023                     LCD_Write_String@i:	
  1119                           ; 3 bytes @ 0x3
  1120                           
  1121  0023                     ___awtoft@c:	
  1122                           ; 2 bytes @ 0x3
  1123                           
  1124  0023                     ___lltoft@c:	
  1125                           ; 2 bytes @ 0x3
  1126                           
  1127                           
  1128                           ; 4 bytes @ 0x3
  1129  0023                     	ds	1
  1130  0024                     ??___lwdiv:
  1131  0024                     ___awdiv@dividend:	
  1132                           ; 1 bytes @ 0x4
  1133                           
  1134  0024                     ___lldiv@dividend:	
  1135                           ; 2 bytes @ 0x4
  1136                           
  1137  0024                     __tdiv_to_l_@quot:	
  1138                           ; 4 bytes @ 0x4
  1139                           
  1140                           
  1141                           ; 4 bytes @ 0x4
  1142  0024                     	ds	1
  1143  0025                     ___lwdiv@quotient:
  1144                           
  1145                           ; 2 bytes @ 0x5
  1146  0025                     	ds	1
  1147  0026                     ??___awtoft:
  1148  0026                     ___awdiv@counter:	
  1149                           ; 1 bytes @ 0x6
  1150                           
  1151                           
  1152                           ; 1 bytes @ 0x6
  1153  0026                     	ds	1
  1154  0027                     ___awdiv@sign:
  1155  0027                     ___lltoft@exp:	
  1156                           ; 1 bytes @ 0x7
  1157                           
  1158  0027                     ___lwdiv@counter:	
  1159                           ; 1 bytes @ 0x7
  1160                           
  1161                           
  1162                           ; 1 bytes @ 0x7
  1163  0027                     	ds	1
  1164  0028                     ?___llmod:
  1165  0028                     __tdiv_to_l_@cntr:	
  1166                           ; 4 bytes @ 0x8
  1167                           
  1168  0028                     ___awdiv@quotient:	
  1169                           ; 1 bytes @ 0x8
  1170                           
  1171  0028                     __div_to_l_@quot:	
  1172                           ; 2 bytes @ 0x8
  1173                           
  1174  0028                     ___llmod@divisor:	
  1175                           ; 4 bytes @ 0x8
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0x8
  1179  0028                     	ds	1
  1180  0029                     __tdiv_to_l_@exp1:
  1181                           
  1182                           ; 1 bytes @ 0x9
  1183  0029                     	ds	1
  1184  002A                     ?___bmul:
  1185  002A                     ___bmul@multiplicand:	
  1186                           ; 1 bytes @ 0xA
  1187                           
  1188                           
  1189                           ; 1 bytes @ 0xA
  1190  002A                     	ds	1
  1191  002B                     ??___bmul:
  1192                           
  1193                           ; 1 bytes @ 0xB
  1194  002B                     	ds	1
  1195  002C                     ___bmul@product:
  1196  002C                     __div_to_l_@cntr:	
  1197                           ; 1 bytes @ 0xC
  1198                           
  1199  002C                     ___llmod@dividend:	
  1200                           ; 1 bytes @ 0xC
  1201                           
  1202                           
  1203                           ; 4 bytes @ 0xC
  1204  002C                     	ds	1
  1205  002D                     ___bmul@multiplier:
  1206  002D                     __div_to_l_@exp1:	
  1207                           ; 1 bytes @ 0xD
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0xD
  1211  002D                     	ds	1
  1212  002E                     ?___ftmul:
  1213  002E                     ___ftmul@f1:	
  1214                           ; 3 bytes @ 0xE
  1215                           
  1216                           
  1217                           ; 3 bytes @ 0xE
  1218  002E                     	ds	2
  1219  0030                     ??___llmod:
  1220                           
  1221                           ; 1 bytes @ 0x10
  1222  0030                     	ds	1
  1223  0031                     ___llmod@counter:
  1224  0031                     ___ftmul@f2:	
  1225                           ; 1 bytes @ 0x11
  1226                           
  1227                           
  1228                           ; 3 bytes @ 0x11
  1229  0031                     	ds	3
  1230  0034                     ??___ftmul:
  1231                           
  1232                           ; 1 bytes @ 0x14
  1233  0034                     	ds	4
  1234  0038                     ___ftmul@exp:
  1235                           
  1236                           ; 1 bytes @ 0x18
  1237  0038                     	ds	1
  1238  0039                     ___ftmul@f3_as_product:
  1239                           
  1240                           ; 3 bytes @ 0x19
  1241  0039                     	ds	3
  1242  003C                     ___ftmul@cntr:
  1243                           
  1244                           ; 1 bytes @ 0x1C
  1245  003C                     	ds	1
  1246  003D                     ___ftmul@sign:
  1247                           
  1248                           ; 1 bytes @ 0x1D
  1249  003D                     	ds	1
  1250  003E                     ?_fround:
  1251  003E                     ?_scale:	
  1252                           ; 3 bytes @ 0x1E
  1253                           
  1254                           
  1255                           ; 3 bytes @ 0x1E
  1256  003E                     	ds	3
  1257  0041                     ??_fround:
  1258  0041                     ??_scale:	
  1259                           ; 1 bytes @ 0x21
  1260                           
  1261                           
  1262                           ; 1 bytes @ 0x21
  1263  0041                     	ds	2
  1264  0043                     _scale$1126:
  1265                           
  1266                           ; 3 bytes @ 0x23
  1267  0043                     	ds	3
  1268  0046                     scale@scl:
  1269                           
  1270                           ; 1 bytes @ 0x26
  1271  0046                     	ds	1
  1272  0047                     ?___fttol:
  1273  0047                     ___fttol@f1:	
  1274                           ; 4 bytes @ 0x27
  1275                           
  1276  0047                     _fround$1125:	
  1277                           ; 3 bytes @ 0x27
  1278                           
  1279                           
  1280                           ; 3 bytes @ 0x27
  1281  0047                     	ds	3
  1282  004A                     _fround$1124:
  1283                           
  1284                           ; 3 bytes @ 0x2A
  1285  004A                     	ds	1
  1286  004B                     ??___fttol:
  1287                           
  1288                           ; 1 bytes @ 0x2B
  1289  004B                     	ds	2
  1290  004D                     fround@prec:
  1291                           
  1292                           ; 1 bytes @ 0x2D
  1293  004D                     	ds	1
  1294  004E                     ?___ftadd:
  1295  004E                     ___ftadd@f1:	
  1296                           ; 3 bytes @ 0x2E
  1297                           
  1298                           
  1299                           ; 3 bytes @ 0x2E
  1300  004E                     	ds	1
  1301  004F                     ___fttol@sign1:
  1302                           
  1303                           ; 1 bytes @ 0x2F
  1304  004F                     	ds	1
  1305  0050                     ___fttol@lval:
  1306                           
  1307                           ; 4 bytes @ 0x30
  1308  0050                     	ds	1
  1309  0051                     ___ftadd@f2:
  1310                           
  1311                           ; 3 bytes @ 0x31
  1312  0051                     	ds	3
  1313  0054                     ??___ftadd:
  1314  0054                     ___fttol@exp1:	
  1315                           ; 1 bytes @ 0x34
  1316                           
  1317                           
  1318                           ; 1 bytes @ 0x34
  1319  0054                     	ds	4
  1320  0058                     ___ftadd@sign:
  1321                           
  1322                           ; 1 bytes @ 0x38
  1323  0058                     	ds	1
  1324  0059                     ___ftadd@exp2:
  1325                           
  1326                           ; 1 bytes @ 0x39
  1327  0059                     	ds	1
  1328  005A                     ___ftadd@exp1:
  1329                           
  1330                           ; 1 bytes @ 0x3A
  1331  005A                     	ds	1
  1332  005B                     ?___ftsub:
  1333  005B                     ___ftsub@f2:	
  1334                           ; 3 bytes @ 0x3B
  1335                           
  1336                           
  1337                           ; 3 bytes @ 0x3B
  1338  005B                     	ds	3
  1339  005E                     ___ftsub@f1:
  1340                           
  1341                           ; 3 bytes @ 0x3E
  1342  005E                     	ds	3
  1343  0061                     ?_sprintf:
  1344  0061                     sprintf@f:	
  1345                           ; 2 bytes @ 0x41
  1346                           
  1347                           
  1348                           ; 1 bytes @ 0x41
  1349  0061                     	ds	9
  1350  006A                     ??_sprintf:
  1351                           
  1352                           ; 1 bytes @ 0x4A
  1353  006A                     	ds	6
  1354                           
  1355                           	psect	maintext
  1356  16A0                     __pmaintext:	
  1357 ;;
  1358 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1359 ;;
  1360 ;; *************** function _main *****************
  1361 ;; Defined at:
  1362 ;;		line 115 in file "LAB03.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : B00/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1376 ;;      Params:         0       0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0
  1378 ;;      Temps:          0       0       3       0       0
  1379 ;;      Totals:         0       0       3       0       0
  1380 ;;Total ram usage:        3 bytes
  1381 ;; Hardware stack levels required when called:    5
  1382 ;; This function calls:
  1383 ;;		_Init_Receive
  1384 ;;		_Init_Trans
  1385 ;;		_LCD_Clear
  1386 ;;		_LCD_Init
  1387 ;;		_LCD_Set_Cursor
  1388 ;;		_LCD_Write_String
  1389 ;;		_Set_BaudRate
  1390 ;;		_Setup
  1391 ;;		_USART_Write
  1392 ;;		_USART_WriteStr
  1393 ;;		___awtoft
  1394 ;;		___ftmul
  1395 ;;		_sprintf
  1396 ;; This function is called by:
  1397 ;;		Startup code after reset
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _main
  1403  16A0                     _main:
  1404  16A0                     l3073:	
  1405                           ;incstack = 0
  1406                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1407                           
  1408                           
  1409                           ;LAB03.c: 116:     Setup();
  1410  16A0  120A  158A  2000  160A  118A  	fcall	_Setup
  1411                           
  1412                           ;LAB03.c: 117:     LCD_Init();
  1413  16A5  160A  118A  20CD  160A  118A  	fcall	_LCD_Init
  1414                           
  1415                           ;LAB03.c: 118:     LCD_Clear();
  1416  16AA  160A  158A  2587  160A  118A  	fcall	_LCD_Clear
  1417                           
  1418                           ;LAB03.c: 119:     Set_BaudRate();
  1419  16AF  120A  118A  27FB  160A  118A  	fcall	_Set_BaudRate
  1420  16B4                     l3075:
  1421                           
  1422                           ;LAB03.c: 120:     Init_Trans();
  1423  16B4  160A  158A  2594  160A  118A  	fcall	_Init_Trans
  1424  16B9                     l3077:
  1425                           
  1426                           ;LAB03.c: 121:     Init_Receive();
  1427  16B9  160A  158A  2561  160A  118A  	fcall	_Init_Receive
  1428  16BE                     l3079:
  1429                           
  1430                           ;LAB03.c: 123:     _delay((unsigned long)((25)*(8000000/4000000.0)));
  1431  16BE  300F               	movlw	15
  1432  16BF  1683               	bsf	3,5	;RP0=1, select bank1
  1433  16C0  1303               	bcf	3,6	;RP1=0, select bank1
  1434  16C1  00D7               	movwf	??_main^(0+128)
  1435  16C2                     u4487:
  1436  16C2  0BD7               	decfsz	??_main^(0+128),f
  1437  16C3  2EC2               	goto	u4487
  1438  16C4  2EC5               	nop2
  1439  16C5                     l3081:
  1440                           
  1441                           ;LAB03.c: 124:     ADCON0bits.GO_DONE = 1;
  1442  16C5  1283               	bcf	3,5	;RP0=0, select bank0
  1443  16C6  1303               	bcf	3,6	;RP1=0, select bank0
  1444  16C7  149F               	bsf	31,1	;volatile
  1445  16C8                     l3083:
  1446                           
  1447                           ;LAB03.c: 128:         Vol1 = adcvar*(0.0196);
  1448  16C8  3090               	movlw	144
  1449  16C9  1283               	bcf	3,5	;RP0=0, select bank0
  1450  16CA  1303               	bcf	3,6	;RP1=0, select bank0
  1451  16CB  00AE               	movwf	___ftmul@f1
  1452  16CC  30A0               	movlw	160
  1453  16CD  00AF               	movwf	___ftmul@f1+1
  1454  16CE  303C               	movlw	60
  1455  16CF  00B0               	movwf	___ftmul@f1+2
  1456  16D0  1683               	bsf	3,5	;RP0=1, select bank1
  1457  16D1  1303               	bcf	3,6	;RP1=0, select bank1
  1458  16D2  0829               	movf	_adcvar^(0+128),w
  1459  16D3  00D7               	movwf	??_main^(0+128)
  1460  16D4  01D8               	clrf	(??_main^(0+128)+1)
  1461  16D5  0857               	movf	??_main^(0+128),w
  1462  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  1463  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  1464  16D8  00A3               	movwf	___awtoft@c
  1465  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  1466  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  1467  16DB  0858               	movf	(??_main+1)^(0+128),w
  1468  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  1469  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  1470  16DE  00A4               	movwf	___awtoft@c+1
  1471  16DF  160A  158A  267B  160A  118A  	fcall	___awtoft
  1472  16E4  1283               	bcf	3,5	;RP0=0, select bank0
  1473  16E5  1303               	bcf	3,6	;RP1=0, select bank0
  1474  16E6  0823               	movf	?___awtoft,w
  1475  16E7  00B1               	movwf	___ftmul@f2
  1476  16E8  0824               	movf	?___awtoft+1,w
  1477  16E9  00B2               	movwf	___ftmul@f2+1
  1478  16EA  0825               	movf	?___awtoft+2,w
  1479  16EB  00B3               	movwf	___ftmul@f2+2
  1480  16EC  120A  118A  2716  160A  118A  	fcall	___ftmul
  1481  16F1  1283               	bcf	3,5	;RP0=0, select bank0
  1482  16F2  1303               	bcf	3,6	;RP1=0, select bank0
  1483  16F3  082E               	movf	?___ftmul,w
  1484  16F4  1683               	bsf	3,5	;RP0=1, select bank1
  1485  16F5  1303               	bcf	3,6	;RP1=0, select bank1
  1486  16F6  00A3               	movwf	_Vol1^(0+128)
  1487  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  1488  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  1489  16F9  082F               	movf	?___ftmul+1,w
  1490  16FA  1683               	bsf	3,5	;RP0=1, select bank1
  1491  16FB  1303               	bcf	3,6	;RP1=0, select bank1
  1492  16FC  00A4               	movwf	(_Vol1+1)^(0+128)
  1493  16FD  1283               	bcf	3,5	;RP0=0, select bank0
  1494  16FE  1303               	bcf	3,6	;RP1=0, select bank0
  1495  16FF  0830               	movf	?___ftmul+2,w
  1496  1700  1683               	bsf	3,5	;RP0=1, select bank1
  1497  1701  1303               	bcf	3,6	;RP1=0, select bank1
  1498  1702  00A5               	movwf	(_Vol1+2)^(0+128)
  1499  1703                     l3085:
  1500                           
  1501                           ;LAB03.c: 129:         Vol2 = adcvar1*(0.0196);
  1502  1703  3090               	movlw	144
  1503  1704  1283               	bcf	3,5	;RP0=0, select bank0
  1504  1705  1303               	bcf	3,6	;RP1=0, select bank0
  1505  1706  00AE               	movwf	___ftmul@f1
  1506  1707  30A0               	movlw	160
  1507  1708  00AF               	movwf	___ftmul@f1+1
  1508  1709  303C               	movlw	60
  1509  170A  00B0               	movwf	___ftmul@f1+2
  1510  170B  1683               	bsf	3,5	;RP0=1, select bank1
  1511  170C  1303               	bcf	3,6	;RP1=0, select bank1
  1512  170D  0828               	movf	_adcvar1^(0+128),w
  1513  170E  00D7               	movwf	??_main^(0+128)
  1514  170F  01D8               	clrf	(??_main^(0+128)+1)
  1515  1710  0857               	movf	??_main^(0+128),w
  1516  1711  1283               	bcf	3,5	;RP0=0, select bank0
  1517  1712  1303               	bcf	3,6	;RP1=0, select bank0
  1518  1713  00A3               	movwf	___awtoft@c
  1519  1714  1683               	bsf	3,5	;RP0=1, select bank1
  1520  1715  1303               	bcf	3,6	;RP1=0, select bank1
  1521  1716  0858               	movf	(??_main+1)^(0+128),w
  1522  1717  1283               	bcf	3,5	;RP0=0, select bank0
  1523  1718  1303               	bcf	3,6	;RP1=0, select bank0
  1524  1719  00A4               	movwf	___awtoft@c+1
  1525  171A  160A  158A  267B  160A  118A  	fcall	___awtoft
  1526  171F  1283               	bcf	3,5	;RP0=0, select bank0
  1527  1720  1303               	bcf	3,6	;RP1=0, select bank0
  1528  1721  0823               	movf	?___awtoft,w
  1529  1722  00B1               	movwf	___ftmul@f2
  1530  1723  0824               	movf	?___awtoft+1,w
  1531  1724  00B2               	movwf	___ftmul@f2+1
  1532  1725  0825               	movf	?___awtoft+2,w
  1533  1726  00B3               	movwf	___ftmul@f2+2
  1534  1727  120A  118A  2716  160A  118A  	fcall	___ftmul
  1535  172C  1283               	bcf	3,5	;RP0=0, select bank0
  1536  172D  1303               	bcf	3,6	;RP1=0, select bank0
  1537  172E  082E               	movf	?___ftmul,w
  1538  172F  1683               	bsf	3,5	;RP0=1, select bank1
  1539  1730  1303               	bcf	3,6	;RP1=0, select bank1
  1540  1731  00A0               	movwf	_Vol2^(0+128)
  1541  1732  1283               	bcf	3,5	;RP0=0, select bank0
  1542  1733  1303               	bcf	3,6	;RP1=0, select bank0
  1543  1734  082F               	movf	?___ftmul+1,w
  1544  1735  1683               	bsf	3,5	;RP0=1, select bank1
  1545  1736  1303               	bcf	3,6	;RP1=0, select bank1
  1546  1737  00A1               	movwf	(_Vol2+1)^(0+128)
  1547  1738  1283               	bcf	3,5	;RP0=0, select bank0
  1548  1739  1303               	bcf	3,6	;RP1=0, select bank0
  1549  173A  0830               	movf	?___ftmul+2,w
  1550  173B  1683               	bsf	3,5	;RP0=1, select bank1
  1551  173C  1303               	bcf	3,6	;RP1=0, select bank1
  1552  173D  00A2               	movwf	(_Vol2+2)^(0+128)
  1553  173E                     l3087:
  1554                           
  1555                           ;LAB03.c: 131:         USART_WriteStr("V1     V2   CONT \n");
  1556  173E  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1557  173F  00F5               	movwf	USART_WriteStr@a
  1558  1740  3080               	movlw	128
  1559  1741  00F6               	movwf	USART_WriteStr@a+1
  1560  1742  160A  158A  26A4  160A  118A  	fcall	_USART_WriteStr
  1561  1747                     l3089:
  1562                           
  1563                           ;LAB03.c: 132:         USART_Write(13);
  1564  1747  300D               	movlw	13
  1565  1748  160A  158A  257B  160A  118A  	fcall	_USART_Write
  1566  174D                     l3091:
  1567                           
  1568                           ;LAB03.c: 133:         USART_Write(10);
  1569  174D  300A               	movlw	10
  1570  174E  160A  158A  257B  160A  118A  	fcall	_USART_Write
  1571  1753                     l3093:
  1572                           
  1573                           ;LAB03.c: 134:         sprintf(Lcdvar, "%1.1f  %1.1f %3d", Vol1,Vol2,contador);
  1574  1753  308A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1575  1754  1683               	bsf	3,5	;RP0=1, select bank1
  1576  1755  1303               	bcf	3,6	;RP1=0, select bank1
  1577  1756  00D7               	movwf	??_main^(0+128)
  1578  1757  0857               	movf	??_main^(0+128),w
  1579  1758  1283               	bcf	3,5	;RP0=0, select bank0
  1580  1759  1303               	bcf	3,6	;RP1=0, select bank0
  1581  175A  00E1               	movwf	sprintf@f
  1582  175B  1683               	bsf	3,5	;RP0=1, select bank1
  1583  175C  1303               	bcf	3,6	;RP1=0, select bank1
  1584  175D  0823               	movf	_Vol1^(0+128),w
  1585  175E  1283               	bcf	3,5	;RP0=0, select bank0
  1586  175F  1303               	bcf	3,6	;RP1=0, select bank0
  1587  1760  00E2               	movwf	?_sprintf+1
  1588  1761  1683               	bsf	3,5	;RP0=1, select bank1
  1589  1762  1303               	bcf	3,6	;RP1=0, select bank1
  1590  1763  0824               	movf	(_Vol1+1)^(0+128),w
  1591  1764  1283               	bcf	3,5	;RP0=0, select bank0
  1592  1765  1303               	bcf	3,6	;RP1=0, select bank0
  1593  1766  00E3               	movwf	?_sprintf+2
  1594  1767  1683               	bsf	3,5	;RP0=1, select bank1
  1595  1768  1303               	bcf	3,6	;RP1=0, select bank1
  1596  1769  0825               	movf	(_Vol1+2)^(0+128),w
  1597  176A  1283               	bcf	3,5	;RP0=0, select bank0
  1598  176B  1303               	bcf	3,6	;RP1=0, select bank0
  1599  176C  00E4               	movwf	?_sprintf+3
  1600  176D  1683               	bsf	3,5	;RP0=1, select bank1
  1601  176E  1303               	bcf	3,6	;RP1=0, select bank1
  1602  176F  0820               	movf	_Vol2^(0+128),w
  1603  1770  1283               	bcf	3,5	;RP0=0, select bank0
  1604  1771  1303               	bcf	3,6	;RP1=0, select bank0
  1605  1772  00E5               	movwf	?_sprintf+4
  1606  1773  1683               	bsf	3,5	;RP0=1, select bank1
  1607  1774  1303               	bcf	3,6	;RP1=0, select bank1
  1608  1775  0821               	movf	(_Vol2+1)^(0+128),w
  1609  1776  1283               	bcf	3,5	;RP0=0, select bank0
  1610  1777  1303               	bcf	3,6	;RP1=0, select bank0
  1611  1778  00E6               	movwf	?_sprintf+5
  1612  1779  1683               	bsf	3,5	;RP0=1, select bank1
  1613  177A  1303               	bcf	3,6	;RP1=0, select bank1
  1614  177B  0822               	movf	(_Vol2+2)^(0+128),w
  1615  177C  1283               	bcf	3,5	;RP0=0, select bank0
  1616  177D  1303               	bcf	3,6	;RP1=0, select bank0
  1617  177E  00E7               	movwf	?_sprintf+6
  1618  177F  1683               	bsf	3,5	;RP0=1, select bank1
  1619  1780  1303               	bcf	3,6	;RP1=0, select bank1
  1620  1781  0826               	movf	_contador^(0+128),w
  1621  1782  00D8               	movwf	(??_main+1)^(0+128)
  1622  1783  01D9               	clrf	((??_main+1)^(0+128)+1)
  1623  1784  0858               	movf	(??_main+1)^(0+128),w
  1624  1785  1283               	bcf	3,5	;RP0=0, select bank0
  1625  1786  1303               	bcf	3,6	;RP1=0, select bank0
  1626  1787  00E8               	movwf	?_sprintf+7
  1627  1788  1683               	bsf	3,5	;RP0=1, select bank1
  1628  1789  1303               	bcf	3,6	;RP1=0, select bank1
  1629  178A  0859               	movf	(??_main+2)^(0+128),w
  1630  178B  1283               	bcf	3,5	;RP0=0, select bank0
  1631  178C  1303               	bcf	3,6	;RP1=0, select bank0
  1632  178D  00E9               	movwf	?_sprintf+8
  1633  178E  30AA               	movlw	(low (_Lcdvar| 0))& (0+255)
  1634  178F  120A  158A  2518  160A  118A  	fcall	_sprintf
  1635  1794                     l3095:
  1636                           
  1637                           ;LAB03.c: 136:         USART_WriteStr(Lcdvar);
  1638  1794  30AA               	movlw	(low (_Lcdvar| 0))& (0+255)
  1639  1795  00F5               	movwf	USART_WriteStr@a
  1640  1796  3000               	movlw	0
  1641  1797  00F6               	movwf	USART_WriteStr@a+1
  1642  1798  160A  158A  26A4  160A  118A  	fcall	_USART_WriteStr
  1643  179D                     l3097:
  1644                           
  1645                           ;LAB03.c: 138:         USART_Write(13);
  1646  179D  300D               	movlw	13
  1647  179E  160A  158A  257B  160A  118A  	fcall	_USART_Write
  1648  17A3                     l3099:
  1649                           
  1650                           ;LAB03.c: 139:         USART_Write(10);
  1651  17A3  300A               	movlw	10
  1652  17A4  160A  158A  257B  160A  118A  	fcall	_USART_Write
  1653  17A9                     l3101:
  1654                           
  1655                           ;LAB03.c: 141:         LCD_Clear();
  1656  17A9  160A  158A  2587  160A  118A  	fcall	_LCD_Clear
  1657  17AE                     l3103:
  1658                           
  1659                           ;LAB03.c: 142:         LCD_Set_Cursor(1,1);
  1660  17AE  01F8               	clrf	LCD_Set_Cursor@y
  1661  17AF  0AF8               	incf	LCD_Set_Cursor@y,f
  1662  17B0  3001               	movlw	1
  1663  17B1  160A  158A  2655  160A  118A  	fcall	_LCD_Set_Cursor
  1664  17B6                     l3105:
  1665                           
  1666                           ;LAB03.c: 143:         LCD_Write_String("V1   V2    CONT");
  1667  17B6  309B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1668  17B7  00F7               	movwf	LCD_Write_String@a
  1669  17B8  3080               	movlw	128
  1670  17B9  00F8               	movwf	LCD_Write_String@a+1
  1671  17BA  160A  158A  2774  160A  118A  	fcall	_LCD_Write_String
  1672  17BF                     l3107:
  1673                           
  1674                           ;LAB03.c: 144:         LCD_Set_Cursor(2,1);
  1675  17BF  01F8               	clrf	LCD_Set_Cursor@y
  1676  17C0  0AF8               	incf	LCD_Set_Cursor@y,f
  1677  17C1  3002               	movlw	2
  1678  17C2  160A  158A  2655  160A  118A  	fcall	_LCD_Set_Cursor
  1679  17C7                     l3109:
  1680                           
  1681                           ;LAB03.c: 145:         LCD_Write_String(Lcdvar);
  1682  17C7  30AA               	movlw	(low (_Lcdvar| 0))& (0+255)
  1683  17C8  00F7               	movwf	LCD_Write_String@a
  1684  17C9  3000               	movlw	0
  1685  17CA  00F8               	movwf	LCD_Write_String@a+1
  1686  17CB  160A  158A  2774  160A  118A  	fcall	_LCD_Write_String
  1687  17D0                     l3111:
  1688                           
  1689                           ;LAB03.c: 147:         if(RCIF==1){
  1690  17D0  1283               	bcf	3,5	;RP0=0, select bank0
  1691  17D1  1303               	bcf	3,6	;RP1=0, select bank0
  1692  17D2  1E8C               	btfss	12,5	;volatile
  1693  17D3  2FD5               	goto	u4451
  1694  17D4  2FD6               	goto	u4450
  1695  17D5                     u4451:
  1696  17D5  2FEE               	goto	l3121
  1697  17D6                     u4450:
  1698  17D6                     l3113:
  1699                           
  1700                           ;LAB03.c: 149:             receive = RCREG;
  1701  17D6  081A               	movf	26,w	;volatile
  1702  17D7  1683               	bsf	3,5	;RP0=1, select bank1
  1703  17D8  1303               	bcf	3,6	;RP1=0, select bank1
  1704  17D9  00D7               	movwf	??_main^(0+128)
  1705  17DA  0857               	movf	??_main^(0+128),w
  1706  17DB  00A7               	movwf	_receive^(0+128)
  1707  17DC                     l3115:
  1708                           
  1709                           ;LAB03.c: 150:             if(receive == '+'){
  1710  17DC  302B               	movlw	43
  1711  17DD  0627               	xorwf	_receive^(0+128),w
  1712  17DE  1D03               	btfss	3,2
  1713  17DF  2FE1               	goto	u4461
  1714  17E0  2FE2               	goto	u4460
  1715  17E1                     u4461:
  1716  17E1  2FE6               	goto	l85
  1717  17E2                     u4460:
  1718  17E2                     l3117:
  1719                           
  1720                           ;LAB03.c: 151:                 contador++;
  1721  17E2  3001               	movlw	1
  1722  17E3  00D7               	movwf	??_main^(0+128)
  1723  17E4  0857               	movf	??_main^(0+128),w
  1724  17E5  07A6               	addwf	_contador^(0+128),f
  1725  17E6                     l85:	
  1726                           ;LAB03.c: 152:             }
  1727                           
  1728                           
  1729                           ;LAB03.c: 153:             if(receive == '-'){
  1730  17E6  302D               	movlw	45
  1731  17E7  0627               	xorwf	_receive^(0+128),w
  1732  17E8  1D03               	btfss	3,2
  1733  17E9  2FEB               	goto	u4471
  1734  17EA  2FEC               	goto	u4470
  1735  17EB                     u4471:
  1736  17EB  2FEE               	goto	l3121
  1737  17EC                     u4470:
  1738  17EC                     l3119:
  1739                           
  1740                           ;LAB03.c: 154:                 contador--;
  1741  17EC  3001               	movlw	1
  1742  17ED  02A6               	subwf	_contador^(0+128),f
  1743  17EE                     l3121:
  1744                           
  1745                           ;LAB03.c: 159:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1746  17EE  3006               	movlw	6
  1747  17EF  1683               	bsf	3,5	;RP0=1, select bank1
  1748  17F0  1303               	bcf	3,6	;RP1=0, select bank1
  1749  17F1  00D9               	movwf	(??_main^(0+128)+2)
  1750  17F2  3013               	movlw	19
  1751  17F3  00D8               	movwf	(??_main^(0+128)+1)
  1752  17F4  30AD               	movlw	173
  1753  17F5  00D7               	movwf	??_main^(0+128)
  1754  17F6                     u4497:
  1755  17F6  0BD7               	decfsz	??_main^(0+128),f
  1756  17F7  2FF6               	goto	u4497
  1757  17F8  0BD8               	decfsz	(??_main^(0+128)+1),f
  1758  17F9  2FF6               	goto	u4497
  1759  17FA  0BD9               	decfsz	(??_main^(0+128)+2),f
  1760  17FB  2FF6               	goto	u4497
  1761  17FC  2EC8               	goto	l3083
  1762  17FD  120A  118A  280C   	ljmp	start
  1763  1800                     __end_of_main:
  1764                           
  1765                           	psect	text1
  1766  0D18                     __ptext1:	
  1767 ;; *************** function _sprintf *****************
  1768 ;; Defined at:
  1769 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  sp              1    wreg     PTR unsigned char 
  1772 ;;		 -> Lcdvar(20), 
  1773 ;;  f               1   65[BANK0 ] PTR const unsigned char 
  1774 ;;		 -> STR_2(17), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  sp              1   21[BANK1 ] PTR unsigned char 
  1777 ;;		 -> Lcdvar(20), 
  1778 ;;  val             4   12[BANK1 ] unsigned long 
  1779 ;;  tmpval          4    8[BANK1 ] struct .
  1780 ;;  fval            3   18[BANK1 ] struct .
  1781 ;;  prec            2   22[BANK1 ] int 
  1782 ;;  eexp            2   16[BANK1 ] int 
  1783 ;;  width           2    6[BANK1 ] int 
  1784 ;;  flag            2    4[BANK1 ] unsigned short 
  1785 ;;  cp              2    0        PTR const unsigned char 
  1786 ;;  len             2    0        unsigned int 
  1787 ;;  c               1   24[BANK1 ] unsigned char 
  1788 ;;  ap              1    3[BANK1 ] PTR void [1]
  1789 ;;		 -> ?_sprintf(2), 
  1790 ;;  d               1    0        unsigned char 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  2   65[BANK0 ] int 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1800 ;;      Params:         0       9       0       0       0
  1801 ;;      Locals:         0       0      25       0       0
  1802 ;;      Temps:          0       6       0       0       0
  1803 ;;      Totals:         0      15      25       0       0
  1804 ;;Total ram usage:       40 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    4
  1807 ;; This function calls:
  1808 ;;		___awdiv
  1809 ;;		___ftadd
  1810 ;;		___ftge
  1811 ;;		___ftmul
  1812 ;;		___ftneg
  1813 ;;		___ftsub
  1814 ;;		___fttol
  1815 ;;		___lldiv
  1816 ;;		___llmod
  1817 ;;		___lltoft
  1818 ;;		___wmul
  1819 ;;		__div_to_l_
  1820 ;;		__tdiv_to_l_
  1821 ;;		_fround
  1822 ;;		_isdigit
  1823 ;;		_scale
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _sprintf
  1831  0D18                     _sprintf:
  1832                           
  1833                           ;incstack = 0
  1834                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1835                           ;sprintf@sp stored from wreg
  1836  0D18  1683               	bsf	3,5	;RP0=1, select bank1
  1837  0D19  1303               	bcf	3,6	;RP1=0, select bank1
  1838  0D1A  00D3               	movwf	sprintf@sp^(0+128)
  1839  0D1B                     l2727:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1842  0D1B  3062               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1843  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0D1E  00EA               	movwf	??_sprintf
  1846  0D1F  086A               	movf	??_sprintf,w
  1847  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  1848  0D21  1303               	bcf	3,6	;RP1=0, select bank1
  1849  0D22  00C1               	movwf	sprintf@ap^(0+128)
  1850  0D23                     L1:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1853  0D23  120A  118A  2EF8   	goto	l3007
  1854  0D26                     l2729:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1857  0D26  3025               	movlw	37
  1858  0D27  0656               	xorwf	sprintf@c^(0+128),w
  1859  0D28  1903               	btfsc	3,2
  1860  0D29  2D2B               	goto	u3791
  1861  0D2A  2D2C               	goto	u3790
  1862  0D2B                     u3791:
  1863  0D2B  2D40               	goto	l2735
  1864  0D2C                     u3790:
  1865  0D2C                     l2731:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1868  0D2C  0856               	movf	sprintf@c^(0+128),w
  1869  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0D2F  00EA               	movwf	??_sprintf
  1872  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  1873  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  1874  0D32  0853               	movf	sprintf@sp^(0+128),w
  1875  0D33  0084               	movwf	4
  1876  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0D36  086A               	movf	??_sprintf,w
  1879  0D37  1383               	bcf	3,7	;select IRP bank0
  1880  0D38  0080               	movwf	0
  1881  0D39                     l2733:
  1882  0D39  3001               	movlw	1
  1883  0D3A  00EA               	movwf	??_sprintf
  1884  0D3B  086A               	movf	??_sprintf,w
  1885  0D3C  1683               	bsf	3,5	;RP0=1, select bank1
  1886  0D3D  1303               	bcf	3,6	;RP1=0, select bank1
  1887  0D3E  07D3               	addwf	sprintf@sp^(0+128),f
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1890  0D3F  2D23               	goto	L1
  1891  0D40                     l2735:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1894  0D40  01C4               	clrf	sprintf@width^(0+128)
  1895  0D41  01C5               	clrf	(sprintf@width+1)^(0+128)
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1898  0D42  01C2               	clrf	sprintf@flag^(0+128)
  1899  0D43  01C3               	clrf	(sprintf@flag+1)^(0+128)
  1900  0D44                     l2737:
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1903  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  1904  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0D46  0861               	movf	sprintf@f,w
  1906  0D47  0084               	movwf	4
  1907  0D48  160A  118A  200A  120A  158A  	fcall	stringdir
  1908  0D4D  160A  118A  20BB  120A  158A  	fcall	_isdigit
  1909  0D52  1C03               	btfss	3,0
  1910  0D53  2D55               	goto	u3801
  1911  0D54  2D56               	goto	u3800
  1912  0D55                     u3801:
  1913  0D55  2DA0               	goto	l2749
  1914  0D56                     u3800:
  1915  0D56                     l2739:
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1918  0D56  1683               	bsf	3,5	;RP0=1, select bank1
  1919  0D57  1303               	bcf	3,6	;RP1=0, select bank1
  1920  0D58  01C4               	clrf	sprintf@width^(0+128)
  1921  0D59  01C5               	clrf	(sprintf@width+1)^(0+128)
  1922  0D5A                     l2741:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1925  0D5A  300A               	movlw	10
  1926  0D5B  00F4               	movwf	___wmul@multiplier
  1927  0D5C  3000               	movlw	0
  1928  0D5D  00F5               	movwf	___wmul@multiplier+1
  1929  0D5E  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0D5F  1303               	bcf	3,6	;RP1=0, select bank1
  1931  0D60  0845               	movf	(sprintf@width+1)^(0+128),w
  1932  0D61  00F7               	movwf	___wmul@multiplicand+1
  1933  0D62  0844               	movf	sprintf@width^(0+128),w
  1934  0D63  00F6               	movwf	___wmul@multiplicand
  1935  0D64  160A  158A  2630  120A  158A  	fcall	___wmul
  1936  0D69  0875               	movf	?___wmul+1,w
  1937  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0D6B  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0D6C  00C5               	movwf	(sprintf@width+1)^(0+128)
  1940  0D6D  0874               	movf	?___wmul,w
  1941  0D6E  00C4               	movwf	sprintf@width^(0+128)
  1942  0D6F                     l2743:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1945  0D6F  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0D70  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0D71  0861               	movf	sprintf@f,w
  1948  0D72  0084               	movwf	4
  1949  0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  1950  0D78  3ED0               	addlw	208
  1951  0D79  00EA               	movwf	??_sprintf
  1952  0D7A  30FF               	movlw	255
  1953  0D7B  1803               	skipnc
  1954  0D7C  3000               	movlw	0
  1955  0D7D  00EB               	movwf	??_sprintf+1
  1956  0D7E  086A               	movf	??_sprintf,w
  1957  0D7F  1683               	bsf	3,5	;RP0=1, select bank1
  1958  0D80  1303               	bcf	3,6	;RP1=0, select bank1
  1959  0D81  07C4               	addwf	sprintf@width^(0+128),f
  1960  0D82  1803               	skipnc
  1961  0D83  0AC5               	incf	(sprintf@width+1)^(0+128),f
  1962  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0D85  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0D86  086B               	movf	??_sprintf+1,w
  1965  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  1966  0D88  1303               	bcf	3,6	;RP1=0, select bank1
  1967  0D89  07C5               	addwf	(sprintf@width+1)^(0+128),f
  1968  0D8A                     l2745:
  1969  0D8A  3001               	movlw	1
  1970  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  1971  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  1972  0D8D  00EA               	movwf	??_sprintf
  1973  0D8E  086A               	movf	??_sprintf,w
  1974  0D8F  07E1               	addwf	sprintf@f,f
  1975  0D90                     l2747:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1978  0D90  0861               	movf	sprintf@f,w
  1979  0D91  0084               	movwf	4
  1980  0D92  160A  118A  200A  120A  158A  	fcall	stringdir
  1981  0D97  160A  118A  20BB  120A  158A  	fcall	_isdigit
  1982  0D9C  1803               	btfsc	3,0
  1983  0D9D  2D9F               	goto	u3811
  1984  0D9E  2DA0               	goto	u3810
  1985  0D9F                     u3811:
  1986  0D9F  2D5A               	goto	l2741
  1987  0DA0                     u3810:
  1988  0DA0                     l2749:
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1991  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0DA2  0861               	movf	sprintf@f,w
  1994  0DA3  0084               	movwf	4
  1995  0DA4  160A  118A  200A  120A  158A  	fcall	stringdir
  1996  0DA9  3A2E               	xorlw	46
  1997  0DAA  1D03               	skipz
  1998  0DAB  2DAD               	goto	u3821
  1999  0DAC  2DAE               	goto	u3820
  2000  0DAD                     u3821:
  2001  0DAD  2E04               	goto	l2765
  2002  0DAE                     u3820:
  2003  0DAE                     l2751:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2006  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  2007  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  2008  0DB0  1743               	bsf	(sprintf@flag^(0+128)+1),6
  2009  0DB1                     l2753:
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2012  0DB1  3001               	movlw	1
  2013  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  2015  0DB4  00EA               	movwf	??_sprintf
  2016  0DB5  086A               	movf	??_sprintf,w
  2017  0DB6  07E1               	addwf	sprintf@f,f
  2018  0DB7                     l2755:
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2021  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  2022  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  2023  0DB9  01D4               	clrf	sprintf@prec^(0+128)
  2024  0DBA  01D5               	clrf	(sprintf@prec+1)^(0+128)
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2027  0DBB  2DF2               	goto	l2763
  2028  0DBC                     l2757:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2031  0DBC  300A               	movlw	10
  2032  0DBD  00F4               	movwf	___wmul@multiplier
  2033  0DBE  3000               	movlw	0
  2034  0DBF  00F5               	movwf	___wmul@multiplier+1
  2035  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  2037  0DC2  0855               	movf	(sprintf@prec+1)^(0+128),w
  2038  0DC3  00F7               	movwf	___wmul@multiplicand+1
  2039  0DC4  0854               	movf	sprintf@prec^(0+128),w
  2040  0DC5  00F6               	movwf	___wmul@multiplicand
  2041  0DC6  160A  158A  2630  120A  158A  	fcall	___wmul
  2042  0DCB  0875               	movf	?___wmul+1,w
  2043  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0DCE  00D5               	movwf	(sprintf@prec+1)^(0+128)
  2046  0DCF  0874               	movf	?___wmul,w
  2047  0DD0  00D4               	movwf	sprintf@prec^(0+128)
  2048  0DD1                     l2759:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2051  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0DD3  0861               	movf	sprintf@f,w
  2054  0DD4  0084               	movwf	4
  2055  0DD5  160A  118A  200A  120A  158A  	fcall	stringdir
  2056  0DDA  3ED0               	addlw	208
  2057  0DDB  00EA               	movwf	??_sprintf
  2058  0DDC  30FF               	movlw	255
  2059  0DDD  1803               	skipnc
  2060  0DDE  3000               	movlw	0
  2061  0DDF  00EB               	movwf	??_sprintf+1
  2062  0DE0  086A               	movf	??_sprintf,w
  2063  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  2064  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  2065  0DE3  07D4               	addwf	sprintf@prec^(0+128),f
  2066  0DE4  1803               	skipnc
  2067  0DE5  0AD5               	incf	(sprintf@prec+1)^(0+128),f
  2068  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0DE8  086B               	movf	??_sprintf+1,w
  2071  0DE9  1683               	bsf	3,5	;RP0=1, select bank1
  2072  0DEA  1303               	bcf	3,6	;RP1=0, select bank1
  2073  0DEB  07D5               	addwf	(sprintf@prec+1)^(0+128),f
  2074  0DEC                     l2761:
  2075  0DEC  3001               	movlw	1
  2076  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0DEF  00EA               	movwf	??_sprintf
  2079  0DF0  086A               	movf	??_sprintf,w
  2080  0DF1  07E1               	addwf	sprintf@f,f
  2081  0DF2                     l2763:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2084  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0DF3  0861               	movf	sprintf@f,w
  2086  0DF4  0084               	movwf	4
  2087  0DF5  160A  118A  200A  120A  158A  	fcall	stringdir
  2088  0DFA  160A  118A  20BB  120A  158A  	fcall	_isdigit
  2089  0DFF  1803               	btfsc	3,0
  2090  0E00  2E02               	goto	u3831
  2091  0E01  2E03               	goto	u3830
  2092  0E02                     u3831:
  2093  0E02  2DBC               	goto	l2757
  2094  0E03                     u3830:
  2095  0E03  2E0E               	goto	l2771
  2096  0E04                     l2765:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2099  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0E05  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0E06  01D4               	clrf	sprintf@prec^(0+128)
  2102  0E07  01D5               	clrf	(sprintf@prec+1)^(0+128)
  2103  0E08                     l2767:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2106  0E08  1643               	bsf	(sprintf@flag^(0+128)+1),4
  2107  0E09  2E0E               	goto	l2771
  2108  0E0A                     l321:	
  2109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2110                           
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2113  0E0A  1683               	bsf	3,5	;RP0=1, select bank1
  2114  0E0B  1303               	bcf	3,6	;RP1=0, select bank1
  2115  0E0C  1543               	bsf	(sprintf@flag^(0+128)+1),2
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2118  0E0D  2E34               	goto	l2773
  2119  0E0E                     l2771:
  2120  0E0E  3001               	movlw	1
  2121  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0E11  07E1               	addwf	sprintf@f,f
  2124  0E12  30FF               	movlw	-1
  2125  0E13  0761               	addwf	sprintf@f,w
  2126  0E14  0084               	movwf	4
  2127  0E15  160A  118A  200A  120A  158A  	fcall	stringdir
  2128  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  2129  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  2130  0E1C  00D6               	movwf	sprintf@c^(0+128)
  2131  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  2133  0E1F  00EA               	movwf	??_sprintf
  2134  0E20  01EB               	clrf	??_sprintf+1
  2135                           
  2136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2137                           ; Switch size 1, requested type "simple"
  2138                           ; Number of cases is 1, Range of values is 0 to 0
  2139                           ; switch strategies available:
  2140                           ; Name         Instructions Cycles
  2141                           ; simple_byte            4     3 (average)
  2142                           ; direct_byte           11     8 (fixed)
  2143                           ; jumptable            260     6 (fixed)
  2144                           ;	Chosen strategy is simple_byte
  2145  0E21  086B               	movf	??_sprintf+1,w
  2146  0E22  3A00               	xorlw	0	; case 0
  2147  0E23  1903               	skipnz
  2148  0E24  2E26               	goto	l3153
  2149  0E25  2D23               	goto	L1
  2150  0E26                     l3153:
  2151                           
  2152                           ; Switch size 1, requested type "simple"
  2153                           ; Number of cases is 4, Range of values is 0 to 105
  2154                           ; switch strategies available:
  2155                           ; Name         Instructions Cycles
  2156                           ; simple_byte           13     7 (average)
  2157                           ; jumptable            260     6 (fixed)
  2158                           ;	Chosen strategy is simple_byte
  2159  0E26  086A               	movf	??_sprintf,w
  2160  0E27  3A00               	xorlw	0	; case 0
  2161  0E28  1903               	skipnz
  2162  0E29  2FFD               	goto	L3
  2163  0E2A  3A64               	xorlw	100	; case 100
  2164  0E2B  1903               	skipnz
  2165  0E2C  2E34               	goto	l2773
  2166  0E2D  3A02               	xorlw	2	; case 102
  2167  0E2E  1903               	skipnz
  2168  0E2F  2E0A               	goto	l321
  2169  0E30  3A0F               	xorlw	15	; case 105
  2170  0E31  1903               	skipnz
  2171  0E32  2E34               	goto	l2773
  2172  0E33  2D23               	goto	L1
  2173  0E34                     l2773:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2176  0E34  3000               	movlw	0
  2177  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0E36  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0E37  0542               	andwf	sprintf@flag^(0+128),w
  2180  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0E3A  00EA               	movwf	??_sprintf
  2183  0E3B  3007               	movlw	7
  2184  0E3C  1683               	bsf	3,5	;RP0=1, select bank1
  2185  0E3D  1303               	bcf	3,6	;RP1=0, select bank1
  2186  0E3E  0543               	andwf	(sprintf@flag+1)^(0+128),w
  2187  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  2189  0E41  00EB               	movwf	??_sprintf+1
  2190  0E42  086A               	movf	??_sprintf,w
  2191  0E43  046B               	iorwf	??_sprintf+1,w
  2192  0E44  1903               	btfsc	3,2
  2193  0E45  2E47               	goto	u3841
  2194  0E46  2E4A               	goto	u3840
  2195  0E47                     u3841:
  2196  0E47  120A  118A  2CE1   	goto	l2929
  2197  0E4A                     u3840:
  2198  0E4A                     l2775:
  2199                           
  2200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2201  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  2203  0E4C  1E43               	btfss	(sprintf@flag+1)^(0+128),4
  2204  0E4D  2E4F               	goto	u3851
  2205  0E4E  2E50               	goto	u3850
  2206  0E4F                     u3851:
  2207  0E4F  2E54               	goto	l2779
  2208  0E50                     u3850:
  2209  0E50                     l2777:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2212  0E50  3006               	movlw	6
  2213  0E51  00D4               	movwf	sprintf@prec^(0+128)
  2214  0E52  3000               	movlw	0
  2215  0E53  00D5               	movwf	(sprintf@prec^(0+128)+1)
  2216  0E54                     l2779:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2219  0E54  0841               	movf	sprintf@ap^(0+128),w
  2220  0E55  0084               	movwf	4
  2221  0E56  1383               	bcf	3,7	;select IRP bank0
  2222  0E57  0800               	movf	0,w
  2223  0E58  00D0               	movwf	sprintf@fval^(0+128)
  2224  0E59  0A84               	incf	4,f
  2225  0E5A  0800               	movf	0,w
  2226  0E5B  00D1               	movwf	(sprintf@fval+1)^(0+128)
  2227  0E5C  0A84               	incf	4,f
  2228  0E5D  0800               	movf	0,w
  2229  0E5E  00D2               	movwf	(sprintf@fval+2)^(0+128)
  2230  0E5F                     l2781:
  2231  0E5F  3003               	movlw	3
  2232  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0E62  00EA               	movwf	??_sprintf
  2235  0E63  086A               	movf	??_sprintf,w
  2236  0E64  1683               	bsf	3,5	;RP0=1, select bank1
  2237  0E65  1303               	bcf	3,6	;RP1=0, select bank1
  2238  0E66  07C1               	addwf	sprintf@ap^(0+128),f
  2239  0E67                     l2783:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2242  0E67  0850               	movf	sprintf@fval^(0+128),w
  2243  0E68  00F4               	movwf	___ftge@ff1
  2244  0E69  0851               	movf	(sprintf@fval+1)^(0+128),w
  2245  0E6A  00F5               	movwf	___ftge@ff1+1
  2246  0E6B  0852               	movf	(sprintf@fval+2)^(0+128),w
  2247  0E6C  00F6               	movwf	___ftge@ff1+2
  2248  0E6D  3000               	movlw	0
  2249  0E6E  00F7               	movwf	___ftge@ff2
  2250  0E6F  3000               	movlw	0
  2251  0E70  00F8               	movwf	___ftge@ff2+1
  2252  0E71  3000               	movlw	0
  2253  0E72  00F9               	movwf	___ftge@ff2+2
  2254  0E73  160A  158A  2702  120A  158A  	fcall	___ftge
  2255  0E78  1803               	btfsc	3,0
  2256  0E79  2E7B               	goto	u3861
  2257  0E7A  2E7C               	goto	u3860
  2258  0E7B                     u3861:
  2259  0E7B  2E95               	goto	l2789
  2260  0E7C                     u3860:
  2261  0E7C                     l2785:
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2264  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  2265  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  2266  0E7E  0850               	movf	sprintf@fval^(0+128),w
  2267  0E7F  00F4               	movwf	___ftneg@f1
  2268  0E80  0851               	movf	(sprintf@fval+1)^(0+128),w
  2269  0E81  00F5               	movwf	___ftneg@f1+1
  2270  0E82  0852               	movf	(sprintf@fval+2)^(0+128),w
  2271  0E83  00F6               	movwf	___ftneg@f1+2
  2272  0E84  160A  158A  2571  120A  158A  	fcall	___ftneg
  2273  0E89  0874               	movf	?___ftneg,w
  2274  0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  2275  0E8B  1303               	bcf	3,6	;RP1=0, select bank1
  2276  0E8C  00D0               	movwf	sprintf@fval^(0+128)
  2277  0E8D  0875               	movf	?___ftneg+1,w
  2278  0E8E  00D1               	movwf	(sprintf@fval+1)^(0+128)
  2279  0E8F  0876               	movf	?___ftneg+2,w
  2280  0E90  00D2               	movwf	(sprintf@fval+2)^(0+128)
  2281  0E91                     l2787:
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2284  0E91  3003               	movlw	3
  2285  0E92  04C2               	iorwf	sprintf@flag^(0+128),f
  2286  0E93  3000               	movlw	0
  2287  0E94  04C3               	iorwf	(sprintf@flag+1)^(0+128),f
  2288  0E95                     l2789:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2291  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  2292  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  2293  0E97  01CE               	clrf	sprintf@eexp^(0+128)
  2294  0E98  01CF               	clrf	(sprintf@eexp+1)^(0+128)
  2295  0E99                     l2791:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2298  0E99  0852               	movf	(sprintf@fval+2)^(0+128),w
  2299  0E9A  0451               	iorwf	(sprintf@fval+1)^(0+128),w
  2300  0E9B  0450               	iorwf	sprintf@fval^(0+128),w
  2301  0E9C  1903               	skipnz
  2302  0E9D  2E9F               	goto	u3871
  2303  0E9E  2EA0               	goto	u3870
  2304  0E9F                     u3871:
  2305  0E9F  2FA2               	goto	l2817
  2306  0EA0                     u3870:
  2307  0EA0                     l2793:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2310  0EA0  30D0               	movlw	low (sprintf@fval| 0)
  2311  0EA1  0084               	movwf	4
  2312  0EA2  1383               	bcf	3,7	;select IRP bank1
  2313  0EA3  0800               	movf	0,w
  2314  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  2316  0EA6  00EA               	movwf	??_sprintf
  2317  0EA7  0A84               	incf	4,f
  2318  0EA8  0800               	movf	0,w
  2319  0EA9  00EB               	movwf	??_sprintf+1
  2320  0EAA  0A84               	incf	4,f
  2321  0EAB  0800               	movf	0,w
  2322  0EAC  00EC               	movwf	??_sprintf+2
  2323  0EAD  0A84               	incf	4,f
  2324  0EAE  0800               	movf	0,w
  2325  0EAF  00ED               	movwf	??_sprintf+3
  2326  0EB0  300F               	movlw	15
  2327  0EB1                     u3885:
  2328  0EB1  1003               	clrc
  2329  0EB2  0CED               	rrf	??_sprintf+3,f
  2330  0EB3  0CEC               	rrf	??_sprintf+2,f
  2331  0EB4  0CEB               	rrf	??_sprintf+1,f
  2332  0EB5  0CEA               	rrf	??_sprintf,f
  2333  0EB6                     u3880:
  2334  0EB6  3EFF               	addlw	-1
  2335  0EB7  1D03               	skipz
  2336  0EB8  2EB1               	goto	u3885
  2337  0EB9  30FF               	movlw	255
  2338  0EBA  056A               	andwf	??_sprintf,w
  2339  0EBB  00EE               	movwf	??_sprintf+4
  2340  0EBC  3000               	movlw	0
  2341  0EBD  056B               	andwf	??_sprintf+1,w
  2342  0EBE  00EF               	movwf	??_sprintf+5
  2343  0EBF  086E               	movf	??_sprintf+4,w
  2344  0EC0  3E82               	addlw	130
  2345  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  2346  0EC2  1303               	bcf	3,6	;RP1=0, select bank1
  2347  0EC3  00CE               	movwf	sprintf@eexp^(0+128)
  2348  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0EC6  086F               	movf	??_sprintf+5,w
  2351  0EC7  1803               	skipnc
  2352  0EC8  3E01               	addlw	1
  2353  0EC9  3EFF               	addlw	255
  2354  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  2356  0ECC  00CF               	movwf	(sprintf@eexp+1)^(0+128)
  2357  0ECD                     l2795:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2360  0ECD  30FF               	movlw	255
  2361  0ECE  07CE               	addwf	sprintf@eexp^(0+128),f
  2362  0ECF  1803               	skipnc
  2363  0ED0  0ACF               	incf	(sprintf@eexp+1)^(0+128),f
  2364  0ED1  30FF               	movlw	255
  2365  0ED2  07CF               	addwf	(sprintf@eexp+1)^(0+128),f
  2366  0ED3                     l2797:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2369  0ED3  3003               	movlw	3
  2370  0ED4  00F4               	movwf	___wmul@multiplier
  2371  0ED5  3000               	movlw	0
  2372  0ED6  00F5               	movwf	___wmul@multiplier+1
  2373  0ED7  084F               	movf	(sprintf@eexp+1)^(0+128),w
  2374  0ED8  00F7               	movwf	___wmul@multiplicand+1
  2375  0ED9  084E               	movf	sprintf@eexp^(0+128),w
  2376  0EDA  00F6               	movwf	___wmul@multiplicand
  2377  0EDB  160A  158A  2630  120A  158A  	fcall	___wmul
  2378  0EE0  0875               	movf	?___wmul+1,w
  2379  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  2380  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  2381  0EE3  00CF               	movwf	(sprintf@eexp+1)^(0+128)
  2382  0EE4  0874               	movf	?___wmul,w
  2383  0EE5  00CE               	movwf	sprintf@eexp^(0+128)
  2384  0EE6                     l2799:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2387  0EE6  300A               	movlw	10
  2388  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  2390  0EE9  00A2               	movwf	___awdiv@divisor
  2391  0EEA  3000               	movlw	0
  2392  0EEB  00A3               	movwf	___awdiv@divisor+1
  2393  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  2394  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  2395  0EEE  084F               	movf	(sprintf@eexp+1)^(0+128),w
  2396  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0EF1  00A5               	movwf	___awdiv@dividend+1
  2399  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  2400  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  2401  0EF4  084E               	movf	sprintf@eexp^(0+128),w
  2402  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  2403  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  2404  0EF7  00A4               	movwf	___awdiv@dividend
  2405  0EF8  160A  118A  2296  120A  158A  	fcall	___awdiv
  2406  0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0EFF  0823               	movf	?___awdiv+1,w
  2409  0F00  1683               	bsf	3,5	;RP0=1, select bank1
  2410  0F01  1303               	bcf	3,6	;RP1=0, select bank1
  2411  0F02  00CF               	movwf	(sprintf@eexp+1)^(0+128)
  2412  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0F05  0822               	movf	?___awdiv,w
  2415  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  2416  0F07  1303               	bcf	3,6	;RP1=0, select bank1
  2417  0F08  00CE               	movwf	sprintf@eexp^(0+128)
  2418  0F09                     l2801:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2421  0F09  1FCF               	btfss	(sprintf@eexp+1)^(0+128),7
  2422  0F0A  2F0C               	goto	u3891
  2423  0F0B  2F0D               	goto	u3890
  2424  0F0C                     u3891:
  2425  0F0C  2F13               	goto	l2805
  2426  0F0D                     u3890:
  2427  0F0D                     l2803:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2430  0F0D  30FF               	movlw	255
  2431  0F0E  07CE               	addwf	sprintf@eexp^(0+128),f
  2432  0F0F  1803               	skipnc
  2433  0F10  0ACF               	incf	(sprintf@eexp+1)^(0+128),f
  2434  0F11  30FF               	movlw	255
  2435  0F12  07CF               	addwf	(sprintf@eexp+1)^(0+128),f
  2436  0F13                     l2805:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2439  0F13  034E               	decf	sprintf@eexp^(0+128),w
  2440  0F14  3AFF               	xorlw	255
  2441  0F15  120A  158A  225D  120A  158A  	fcall	_scale
  2442  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0F1C  083E               	movf	?_scale,w
  2445  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  2446  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  2447  0F1F  00C6               	movwf	sprintf@tmpval^(0+128)
  2448  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  2449  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  2450  0F22  083F               	movf	?_scale+1,w
  2451  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  2452  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  2453  0F25  00C7               	movwf	(sprintf@tmpval+1)^(0+128)
  2454  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  2455  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  2456  0F28  0840               	movf	?_scale+2,w
  2457  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  2458  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  2459  0F2B  00C8               	movwf	(sprintf@tmpval+2)^(0+128)
  2460  0F2C                     l2807:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2463  0F2C  0850               	movf	sprintf@fval^(0+128),w
  2464  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0F2F  00AE               	movwf	___ftmul@f1
  2467  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2468  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2469  0F32  0851               	movf	(sprintf@fval+1)^(0+128),w
  2470  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0F35  00AF               	movwf	___ftmul@f1+1
  2473  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  2474  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  2475  0F38  0852               	movf	(sprintf@fval+2)^(0+128),w
  2476  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0F3B  00B0               	movwf	___ftmul@f1+2
  2479  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  2480  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  2481  0F3E  0846               	movf	sprintf@tmpval^(0+128),w
  2482  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0F41  00B1               	movwf	___ftmul@f2
  2485  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  2487  0F44  0847               	movf	(sprintf@tmpval+1)^(0+128),w
  2488  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0F47  00B2               	movwf	___ftmul@f2+1
  2491  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  2493  0F4A  0848               	movf	(sprintf@tmpval+2)^(0+128),w
  2494  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0F4D  00B3               	movwf	___ftmul@f2+2
  2497  0F4E  120A  118A  2716  120A  158A  	fcall	___ftmul
  2498  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0F55  082E               	movf	?___ftmul,w
  2501  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  2502  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  2503  0F58  00C6               	movwf	sprintf@tmpval^(0+128)
  2504  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0F5B  082F               	movf	?___ftmul+1,w
  2507  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  2508  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  2509  0F5E  00C7               	movwf	(sprintf@tmpval+1)^(0+128)
  2510  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2512  0F61  0830               	movf	?___ftmul+2,w
  2513  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  2514  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  2515  0F64  00C8               	movwf	(sprintf@tmpval+2)^(0+128)
  2516  0F65                     l2809:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2519  0F65  0846               	movf	sprintf@tmpval^(0+128),w
  2520  0F66  00F4               	movwf	___ftge@ff1
  2521  0F67  0847               	movf	(sprintf@tmpval+1)^(0+128),w
  2522  0F68  00F5               	movwf	___ftge@ff1+1
  2523  0F69  0848               	movf	(sprintf@tmpval+2)^(0+128),w
  2524  0F6A  00F6               	movwf	___ftge@ff1+2
  2525  0F6B  3000               	movlw	0
  2526  0F6C  00F7               	movwf	___ftge@ff2
  2527  0F6D  3080               	movlw	128
  2528  0F6E  00F8               	movwf	___ftge@ff2+1
  2529  0F6F  303F               	movlw	63
  2530  0F70  00F9               	movwf	___ftge@ff2+2
  2531  0F71  160A  158A  2702  120A  158A  	fcall	___ftge
  2532  0F76  1803               	btfsc	3,0
  2533  0F77  2F79               	goto	u3901
  2534  0F78  2F7A               	goto	u3900
  2535  0F79                     u3901:
  2536  0F79  2F83               	goto	l2813
  2537  0F7A                     u3900:
  2538  0F7A                     l2811:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2541  0F7A  30FF               	movlw	255
  2542  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  2543  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  2544  0F7D  07CE               	addwf	sprintf@eexp^(0+128),f
  2545  0F7E  1803               	skipnc
  2546  0F7F  0ACF               	incf	(sprintf@eexp+1)^(0+128),f
  2547  0F80  30FF               	movlw	255
  2548  0F81  07CF               	addwf	(sprintf@eexp+1)^(0+128),f
  2549  0F82  2FA2               	goto	l2817
  2550  0F83                     l2813:
  2551  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  2552  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  2553  0F85  0846               	movf	sprintf@tmpval^(0+128),w
  2554  0F86  00F4               	movwf	___ftge@ff1
  2555  0F87  0847               	movf	(sprintf@tmpval+1)^(0+128),w
  2556  0F88  00F5               	movwf	___ftge@ff1+1
  2557  0F89  0848               	movf	(sprintf@tmpval+2)^(0+128),w
  2558  0F8A  00F6               	movwf	___ftge@ff1+2
  2559  0F8B  3000               	movlw	0
  2560  0F8C  00F7               	movwf	___ftge@ff2
  2561  0F8D  3020               	movlw	32
  2562  0F8E  00F8               	movwf	___ftge@ff2+1
  2563  0F8F  3041               	movlw	65
  2564  0F90  00F9               	movwf	___ftge@ff2+2
  2565  0F91  160A  158A  2702  120A  158A  	fcall	___ftge
  2566  0F96  1C03               	btfss	3,0
  2567  0F97  2F99               	goto	u3911
  2568  0F98  2F9A               	goto	u3910
  2569  0F99                     u3911:
  2570  0F99  2FA2               	goto	l2817
  2571  0F9A                     u3910:
  2572  0F9A                     l2815:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2575  0F9A  3001               	movlw	1
  2576  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  2577  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  2578  0F9D  07CE               	addwf	sprintf@eexp^(0+128),f
  2579  0F9E  1803               	skipnc
  2580  0F9F  0ACF               	incf	(sprintf@eexp+1)^(0+128),f
  2581  0FA0  3000               	movlw	0
  2582  0FA1  07CF               	addwf	(sprintf@eexp+1)^(0+128),f
  2583  0FA2                     l2817:
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2586  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2587  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2588  0FA4  0855               	movf	(sprintf@prec+1)^(0+128),w
  2589  0FA5  3A80               	xorlw	128
  2590  0FA6  00FF               	movwf	btemp+1
  2591  0FA7  3080               	movlw	128
  2592  0FA8  027F               	subwf	btemp+1,w
  2593  0FA9  1D03               	skipz
  2594  0FAA  2FAD               	goto	u3925
  2595  0FAB  300D               	movlw	13
  2596  0FAC  0254               	subwf	sprintf@prec^(0+128),w
  2597  0FAD                     u3925:
  2598  0FAD  1803               	skipnc
  2599  0FAE  2FB0               	goto	u3921
  2600  0FAF  2FB1               	goto	u3920
  2601  0FB0                     u3921:
  2602  0FB0  2FEA               	goto	l2821
  2603  0FB1                     u3920:
  2604  0FB1                     l2819:
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2607  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  2608  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  2609  0FB3  0854               	movf	sprintf@prec^(0+128),w
  2610  0FB4  120A  158A  20B4  120A  158A  	fcall	_fround
  2611  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0FBB  083E               	movf	?_fround,w
  2614  0FBC  00CE               	movwf	___ftadd@f1
  2615  0FBD  083F               	movf	?_fround+1,w
  2616  0FBE  00CF               	movwf	___ftadd@f1+1
  2617  0FBF  0840               	movf	?_fround+2,w
  2618  0FC0  00D0               	movwf	___ftadd@f1+2
  2619  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  2620  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  2621  0FC3  0850               	movf	sprintf@fval^(0+128),w
  2622  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0FC6  00D1               	movwf	___ftadd@f2
  2625  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  2626  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  2627  0FC9  0851               	movf	(sprintf@fval+1)^(0+128),w
  2628  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0FCC  00D2               	movwf	___ftadd@f2+1
  2631  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  2632  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  2633  0FCF  0852               	movf	(sprintf@fval+2)^(0+128),w
  2634  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0FD2  00D3               	movwf	___ftadd@f2+2
  2637  0FD3  160A  118A  256A  120A  158A  	fcall	___ftadd
  2638  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2639  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2640  0FDA  084E               	movf	?___ftadd,w
  2641  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2642  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2643  0FDD  00D0               	movwf	sprintf@fval^(0+128)
  2644  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0FE0  084F               	movf	?___ftadd+1,w
  2647  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  2648  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  2649  0FE3  00D1               	movwf	(sprintf@fval+1)^(0+128)
  2650  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0FE6  0850               	movf	?___ftadd+2,w
  2653  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2654  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2655  0FE9  00D2               	movwf	(sprintf@fval+2)^(0+128)
  2656  0FEA                     l2821:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2659  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2660  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2661  0FEC  084F               	movf	(sprintf@eexp+1)^(0+128),w
  2662  0FED  3A80               	xorlw	128
  2663  0FEE  00FF               	movwf	btemp+1
  2664  0FEF  3080               	movlw	128
  2665  0FF0  027F               	subwf	btemp+1,w
  2666  0FF1  1D03               	skipz
  2667  0FF2  2FF5               	goto	u3935
  2668  0FF3  300A               	movlw	10
  2669  0FF4  024E               	subwf	sprintf@eexp^(0+128),w
  2670  0FF5                     u3935:
  2671  0FF5  1803               	skipnc
  2672  0FF6  2FFA               	goto	u3931
  2673  0FF7  120A  118A  281C   	goto	u3930
  2674  0FFA                     u3931:
  2675  0FFA  120A  118A  2853   	goto	l2829
  2676  0FFD                     L3:
  2677  0FFD                     L2:
  2678  0FFD  120A  118A  2F0F   	ljmp	l3009
  2679                           
  2680                           	psect	text2
  2681  0A5D                     __ptext2:	
  2682 ;; *************** function _scale *****************
  2683 ;; Defined at:
  2684 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  scl             1    wreg     char 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  scl             1   38[BANK0 ] char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  3   30[BANK0 ] char 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       3       0       0       0
  2699 ;;      Locals:         0       4       0       0       0
  2700 ;;      Temps:          0       2       0       0       0
  2701 ;;      Totals:         0       9       0       0       0
  2702 ;;Total ram usage:        9 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    3
  2705 ;; This function calls:
  2706 ;;		___awdiv
  2707 ;;		___awmod
  2708 ;;		___bmul
  2709 ;;		___ftmul
  2710 ;; This function is called by:
  2711 ;;		_sprintf
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _scale
  2717  0A5D                     _scale:
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2721                           ;scale@scl stored from wreg
  2722  0A5D  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0A5E  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0A5F  00C6               	movwf	scale@scl
  2725  0A60                     l2387:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2728  0A60  1FC6               	btfss	scale@scl,7
  2729  0A61  2A63               	goto	u3121
  2730  0A62  2A64               	goto	u3120
  2731  0A63                     u3121:
  2732  0A63  2BBF               	goto	l2409
  2733  0A64                     u3120:
  2734  0A64                     l2389:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2737  0A64  09C6               	comf	scale@scl,f
  2738  0A65  0AC6               	incf	scale@scl,f
  2739  0A66                     l2391:
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2742  0A66  0846               	movf	scale@scl,w
  2743  0A67  3A80               	xorlw	128
  2744  0A68  3E12               	addlw	-238
  2745  0A69  1C03               	skipc
  2746  0A6A  2A6C               	goto	u3131
  2747  0A6B  2A6D               	goto	u3130
  2748  0A6C                     u3131:
  2749  0A6C  2B2B               	goto	l2399
  2750  0A6D                     u3130:
  2751  0A6D                     l2393:
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2754  0A6D  3003               	movlw	3
  2755  0A6E  00C1               	movwf	??_scale
  2756  0A6F  0841               	movf	??_scale,w
  2757  0A70  00AA               	movwf	___bmul@multiplicand
  2758  0A71  0846               	movf	scale@scl,w
  2759  0A72  00F6               	movwf	___awmod@dividend
  2760  0A73  01F7               	clrf	___awmod@dividend+1
  2761  0A74  1BF6               	btfsc	___awmod@dividend,7
  2762  0A75  03F7               	decf	___awmod@dividend+1,f
  2763  0A76  3064               	movlw	100
  2764  0A77  00F4               	movwf	___awmod@divisor
  2765  0A78  3000               	movlw	0
  2766  0A79  00F5               	movwf	___awmod@divisor+1
  2767  0A7A  160A  118A  2172  120A  158A  	fcall	___awmod
  2768  0A7F  0875               	movf	?___awmod+1,w
  2769  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0A81  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0A82  00A5               	movwf	___awdiv@dividend+1
  2772  0A83  0874               	movf	?___awmod,w
  2773  0A84  00A4               	movwf	___awdiv@dividend
  2774  0A85  300A               	movlw	10
  2775  0A86  00A2               	movwf	___awdiv@divisor
  2776  0A87  3000               	movlw	0
  2777  0A88  00A3               	movwf	___awdiv@divisor+1
  2778  0A89  160A  118A  2296  120A  158A  	fcall	___awdiv
  2779  0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  2780  0A8F  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0A90  0822               	movf	?___awdiv,w
  2782  0A91  160A  158A  25B6  120A  158A  	fcall	___bmul
  2783  0A96  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2784  0A97  0084               	movwf	4
  2785  0A98  160A  118A  200A  120A  158A  	fcall	stringdir
  2786  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  2788  0A9F  00AE               	movwf	___ftmul@f1
  2789  0AA0  160A  118A  200A  120A  158A  	fcall	stringdir
  2790  0AA5  00AF               	movwf	___ftmul@f1+1
  2791  0AA6  160A  118A  200A  120A  158A  	fcall	stringdir
  2792  0AAB  00B0               	movwf	___ftmul@f1+2
  2793  0AAC  3003               	movlw	3
  2794  0AAD  00C2               	movwf	??_scale+1
  2795  0AAE  0842               	movf	??_scale+1,w
  2796  0AAF  00AA               	movwf	___bmul@multiplicand
  2797  0AB0  0846               	movf	scale@scl,w
  2798  0AB1  00A4               	movwf	___awdiv@dividend
  2799  0AB2  01A5               	clrf	___awdiv@dividend+1
  2800  0AB3  1BA4               	btfsc	___awdiv@dividend,7
  2801  0AB4  03A5               	decf	___awdiv@dividend+1,f
  2802  0AB5  3064               	movlw	100
  2803  0AB6  00A2               	movwf	___awdiv@divisor
  2804  0AB7  3000               	movlw	0
  2805  0AB8  00A3               	movwf	___awdiv@divisor+1
  2806  0AB9  160A  118A  2296  120A  158A  	fcall	___awdiv
  2807  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0AC0  0822               	movf	?___awdiv,w
  2810  0AC1  160A  158A  25B6  120A  158A  	fcall	___bmul
  2811  0AC6  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2812  0AC7  0084               	movwf	4
  2813  0AC8  160A  118A  200A  120A  158A  	fcall	stringdir
  2814  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0ACF  00B1               	movwf	___ftmul@f2
  2817  0AD0  160A  118A  200A  120A  158A  	fcall	stringdir
  2818  0AD5  00B2               	movwf	___ftmul@f2+1
  2819  0AD6  160A  118A  200A  120A  158A  	fcall	stringdir
  2820  0ADB  00B3               	movwf	___ftmul@f2+2
  2821  0ADC  120A  118A  2716  120A  158A  	fcall	___ftmul
  2822  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0AE2  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0AE3  082E               	movf	?___ftmul,w
  2825  0AE4  00C3               	movwf	_scale$1126
  2826  0AE5  082F               	movf	?___ftmul+1,w
  2827  0AE6  00C4               	movwf	_scale$1126+1
  2828  0AE7  0830               	movf	?___ftmul+2,w
  2829  0AE8  00C5               	movwf	_scale$1126+2
  2830                           
  2831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2832  0AE9  3003               	movlw	3
  2833  0AEA  00C1               	movwf	??_scale
  2834  0AEB  0841               	movf	??_scale,w
  2835  0AEC  00AA               	movwf	___bmul@multiplicand
  2836  0AED  0846               	movf	scale@scl,w
  2837  0AEE  00F6               	movwf	___awmod@dividend
  2838  0AEF  01F7               	clrf	___awmod@dividend+1
  2839  0AF0  1BF6               	btfsc	___awmod@dividend,7
  2840  0AF1  03F7               	decf	___awmod@dividend+1,f
  2841  0AF2  300A               	movlw	10
  2842  0AF3  00F4               	movwf	___awmod@divisor
  2843  0AF4  3000               	movlw	0
  2844  0AF5  00F5               	movwf	___awmod@divisor+1
  2845  0AF6  160A  118A  2172  120A  158A  	fcall	___awmod
  2846  0AFB  0874               	movf	?___awmod,w
  2847  0AFC  160A  158A  25B6  120A  158A  	fcall	___bmul
  2848  0B01  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2849  0B02  0084               	movwf	4
  2850  0B03  160A  118A  200A  120A  158A  	fcall	stringdir
  2851  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  2853  0B0A  00AE               	movwf	___ftmul@f1
  2854  0B0B  160A  118A  200A  120A  158A  	fcall	stringdir
  2855  0B10  00AF               	movwf	___ftmul@f1+1
  2856  0B11  160A  118A  200A  120A  158A  	fcall	stringdir
  2857  0B16  00B0               	movwf	___ftmul@f1+2
  2858  0B17  0843               	movf	_scale$1126,w
  2859  0B18  00B1               	movwf	___ftmul@f2
  2860  0B19  0844               	movf	_scale$1126+1,w
  2861  0B1A  00B2               	movwf	___ftmul@f2+1
  2862  0B1B  0845               	movf	_scale$1126+2,w
  2863  0B1C  00B3               	movwf	___ftmul@f2+2
  2864  0B1D  120A  118A  2716  120A  158A  	fcall	___ftmul
  2865  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  2866  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0B24  082E               	movf	?___ftmul,w
  2868  0B25  00BE               	movwf	?_scale
  2869  0B26  082F               	movf	?___ftmul+1,w
  2870  0B27  00BF               	movwf	?_scale+1
  2871  0B28  0830               	movf	?___ftmul+2,w
  2872  0B29  00C0               	movwf	?_scale+2
  2873  0B2A  2D17               	goto	l299
  2874  0B2B                     l2399:
  2875  0B2B  0846               	movf	scale@scl,w
  2876  0B2C  3A80               	xorlw	128
  2877  0B2D  3E75               	addlw	-139
  2878  0B2E  1C03               	skipc
  2879  0B2F  2B31               	goto	u3141
  2880  0B30  2B32               	goto	u3140
  2881  0B31                     u3141:
  2882  0B31  2B9E               	goto	l2405
  2883  0B32                     u3140:
  2884  0B32                     l2401:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2887  0B32  3003               	movlw	3
  2888  0B33  00C1               	movwf	??_scale
  2889  0B34  0841               	movf	??_scale,w
  2890  0B35  00AA               	movwf	___bmul@multiplicand
  2891  0B36  0846               	movf	scale@scl,w
  2892  0B37  00F6               	movwf	___awmod@dividend
  2893  0B38  01F7               	clrf	___awmod@dividend+1
  2894  0B39  1BF6               	btfsc	___awmod@dividend,7
  2895  0B3A  03F7               	decf	___awmod@dividend+1,f
  2896  0B3B  300A               	movlw	10
  2897  0B3C  00F4               	movwf	___awmod@divisor
  2898  0B3D  3000               	movlw	0
  2899  0B3E  00F5               	movwf	___awmod@divisor+1
  2900  0B3F  160A  118A  2172  120A  158A  	fcall	___awmod
  2901  0B44  0874               	movf	?___awmod,w
  2902  0B45  160A  158A  25B6  120A  158A  	fcall	___bmul
  2903  0B4A  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2904  0B4B  0084               	movwf	4
  2905  0B4C  160A  118A  200A  120A  158A  	fcall	stringdir
  2906  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0B53  00AE               	movwf	___ftmul@f1
  2909  0B54  160A  118A  200A  120A  158A  	fcall	stringdir
  2910  0B59  00AF               	movwf	___ftmul@f1+1
  2911  0B5A  160A  118A  200A  120A  158A  	fcall	stringdir
  2912  0B5F  00B0               	movwf	___ftmul@f1+2
  2913  0B60  3003               	movlw	3
  2914  0B61  00C2               	movwf	??_scale+1
  2915  0B62  0842               	movf	??_scale+1,w
  2916  0B63  00AA               	movwf	___bmul@multiplicand
  2917  0B64  0846               	movf	scale@scl,w
  2918  0B65  00A4               	movwf	___awdiv@dividend
  2919  0B66  01A5               	clrf	___awdiv@dividend+1
  2920  0B67  1BA4               	btfsc	___awdiv@dividend,7
  2921  0B68  03A5               	decf	___awdiv@dividend+1,f
  2922  0B69  300A               	movlw	10
  2923  0B6A  00A2               	movwf	___awdiv@divisor
  2924  0B6B  3000               	movlw	0
  2925  0B6C  00A3               	movwf	___awdiv@divisor+1
  2926  0B6D  160A  118A  2296  120A  158A  	fcall	___awdiv
  2927  0B72  1283               	bcf	3,5	;RP0=0, select bank0
  2928  0B73  1303               	bcf	3,6	;RP1=0, select bank0
  2929  0B74  0822               	movf	?___awdiv,w
  2930  0B75  160A  158A  25B6  120A  158A  	fcall	___bmul
  2931  0B7A  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2932  0B7B  0084               	movwf	4
  2933  0B7C  160A  118A  200A  120A  158A  	fcall	stringdir
  2934  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0B83  00B1               	movwf	___ftmul@f2
  2937  0B84  160A  118A  200A  120A  158A  	fcall	stringdir
  2938  0B89  00B2               	movwf	___ftmul@f2+1
  2939  0B8A  160A  118A  200A  120A  158A  	fcall	stringdir
  2940  0B8F  00B3               	movwf	___ftmul@f2+2
  2941  0B90  120A  118A  2716  120A  158A  	fcall	___ftmul
  2942  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0B97  082E               	movf	?___ftmul,w
  2945  0B98  00BE               	movwf	?_scale
  2946  0B99  082F               	movf	?___ftmul+1,w
  2947  0B9A  00BF               	movwf	?_scale+1
  2948  0B9B  0830               	movf	?___ftmul+2,w
  2949  0B9C  00C0               	movwf	?_scale+2
  2950  0B9D  2D17               	goto	l299
  2951  0B9E                     l2405:
  2952                           
  2953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2954  0B9E  3003               	movlw	3
  2955  0B9F  00C1               	movwf	??_scale
  2956  0BA0  0841               	movf	??_scale,w
  2957  0BA1  00AA               	movwf	___bmul@multiplicand
  2958  0BA2  0846               	movf	scale@scl,w
  2959  0BA3  160A  158A  25B6  120A  158A  	fcall	___bmul
  2960  0BA8  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2961  0BA9  0084               	movwf	4
  2962  0BAA  160A  118A  200A  120A  158A  	fcall	stringdir
  2963  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0BB1  00BE               	movwf	?_scale
  2966  0BB2  160A  118A  200A  120A  158A  	fcall	stringdir
  2967  0BB7  00BF               	movwf	?_scale+1
  2968  0BB8  160A  118A  200A  120A  158A  	fcall	stringdir
  2969  0BBD  00C0               	movwf	?_scale+2
  2970  0BBE  2D17               	goto	l299
  2971  0BBF                     l2409:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2974  0BBF  0846               	movf	scale@scl,w
  2975  0BC0  3A80               	xorlw	128
  2976  0BC1  3E12               	addlw	-238
  2977  0BC2  1C03               	skipc
  2978  0BC3  2BC5               	goto	u3151
  2979  0BC4  2BC6               	goto	u3150
  2980  0BC5                     u3151:
  2981  0BC5  2C84               	goto	l2417
  2982  0BC6                     u3150:
  2983  0BC6                     l2411:
  2984                           
  2985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2986  0BC6  3003               	movlw	3
  2987  0BC7  00C1               	movwf	??_scale
  2988  0BC8  0841               	movf	??_scale,w
  2989  0BC9  00AA               	movwf	___bmul@multiplicand
  2990  0BCA  0846               	movf	scale@scl,w
  2991  0BCB  00F6               	movwf	___awmod@dividend
  2992  0BCC  01F7               	clrf	___awmod@dividend+1
  2993  0BCD  1BF6               	btfsc	___awmod@dividend,7
  2994  0BCE  03F7               	decf	___awmod@dividend+1,f
  2995  0BCF  3064               	movlw	100
  2996  0BD0  00F4               	movwf	___awmod@divisor
  2997  0BD1  3000               	movlw	0
  2998  0BD2  00F5               	movwf	___awmod@divisor+1
  2999  0BD3  160A  118A  2172  120A  158A  	fcall	___awmod
  3000  0BD8  0875               	movf	?___awmod+1,w
  3001  0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0BDB  00A5               	movwf	___awdiv@dividend+1
  3004  0BDC  0874               	movf	?___awmod,w
  3005  0BDD  00A4               	movwf	___awdiv@dividend
  3006  0BDE  300A               	movlw	10
  3007  0BDF  00A2               	movwf	___awdiv@divisor
  3008  0BE0  3000               	movlw	0
  3009  0BE1  00A3               	movwf	___awdiv@divisor+1
  3010  0BE2  160A  118A  2296  120A  158A  	fcall	___awdiv
  3011  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0BE9  0822               	movf	?___awdiv,w
  3014  0BEA  160A  158A  25B6  120A  158A  	fcall	___bmul
  3015  0BEF  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3016  0BF0  0084               	movwf	4
  3017  0BF1  160A  118A  200A  120A  158A  	fcall	stringdir
  3018  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0BF8  00AE               	movwf	___ftmul@f1
  3021  0BF9  160A  118A  200A  120A  158A  	fcall	stringdir
  3022  0BFE  00AF               	movwf	___ftmul@f1+1
  3023  0BFF  160A  118A  200A  120A  158A  	fcall	stringdir
  3024  0C04  00B0               	movwf	___ftmul@f1+2
  3025  0C05  3003               	movlw	3
  3026  0C06  00C2               	movwf	??_scale+1
  3027  0C07  0842               	movf	??_scale+1,w
  3028  0C08  00AA               	movwf	___bmul@multiplicand
  3029  0C09  0846               	movf	scale@scl,w
  3030  0C0A  00A4               	movwf	___awdiv@dividend
  3031  0C0B  01A5               	clrf	___awdiv@dividend+1
  3032  0C0C  1BA4               	btfsc	___awdiv@dividend,7
  3033  0C0D  03A5               	decf	___awdiv@dividend+1,f
  3034  0C0E  3064               	movlw	100
  3035  0C0F  00A2               	movwf	___awdiv@divisor
  3036  0C10  3000               	movlw	0
  3037  0C11  00A3               	movwf	___awdiv@divisor+1
  3038  0C12  160A  118A  2296  120A  158A  	fcall	___awdiv
  3039  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0C19  0822               	movf	?___awdiv,w
  3042  0C1A  160A  158A  25B6  120A  158A  	fcall	___bmul
  3043  0C1F  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  3044  0C20  0084               	movwf	4
  3045  0C21  160A  118A  200A  120A  158A  	fcall	stringdir
  3046  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0C27  1303               	bcf	3,6	;RP1=0, select bank0
  3048  0C28  00B1               	movwf	___ftmul@f2
  3049  0C29  160A  118A  200A  120A  158A  	fcall	stringdir
  3050  0C2E  00B2               	movwf	___ftmul@f2+1
  3051  0C2F  160A  118A  200A  120A  158A  	fcall	stringdir
  3052  0C34  00B3               	movwf	___ftmul@f2+2
  3053  0C35  120A  118A  2716  120A  158A  	fcall	___ftmul
  3054  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0C3C  082E               	movf	?___ftmul,w
  3057  0C3D  00C3               	movwf	_scale$1126
  3058  0C3E  082F               	movf	?___ftmul+1,w
  3059  0C3F  00C4               	movwf	_scale$1126+1
  3060  0C40  0830               	movf	?___ftmul+2,w
  3061  0C41  00C5               	movwf	_scale$1126+2
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3064  0C42  3003               	movlw	3
  3065  0C43  00C1               	movwf	??_scale
  3066  0C44  0841               	movf	??_scale,w
  3067  0C45  00AA               	movwf	___bmul@multiplicand
  3068  0C46  0846               	movf	scale@scl,w
  3069  0C47  00F6               	movwf	___awmod@dividend
  3070  0C48  01F7               	clrf	___awmod@dividend+1
  3071  0C49  1BF6               	btfsc	___awmod@dividend,7
  3072  0C4A  03F7               	decf	___awmod@dividend+1,f
  3073  0C4B  300A               	movlw	10
  3074  0C4C  00F4               	movwf	___awmod@divisor
  3075  0C4D  3000               	movlw	0
  3076  0C4E  00F5               	movwf	___awmod@divisor+1
  3077  0C4F  160A  118A  2172  120A  158A  	fcall	___awmod
  3078  0C54  0874               	movf	?___awmod,w
  3079  0C55  160A  158A  25B6  120A  158A  	fcall	___bmul
  3080  0C5A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3081  0C5B  0084               	movwf	4
  3082  0C5C  160A  118A  200A  120A  158A  	fcall	stringdir
  3083  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  3084  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  3085  0C63  00AE               	movwf	___ftmul@f1
  3086  0C64  160A  118A  200A  120A  158A  	fcall	stringdir
  3087  0C69  00AF               	movwf	___ftmul@f1+1
  3088  0C6A  160A  118A  200A  120A  158A  	fcall	stringdir
  3089  0C6F  00B0               	movwf	___ftmul@f1+2
  3090  0C70  0843               	movf	_scale$1126,w
  3091  0C71  00B1               	movwf	___ftmul@f2
  3092  0C72  0844               	movf	_scale$1126+1,w
  3093  0C73  00B2               	movwf	___ftmul@f2+1
  3094  0C74  0845               	movf	_scale$1126+2,w
  3095  0C75  00B3               	movwf	___ftmul@f2+2
  3096  0C76  120A  118A  2716  120A  158A  	fcall	___ftmul
  3097  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0C7D  082E               	movf	?___ftmul,w
  3100  0C7E  00BE               	movwf	?_scale
  3101  0C7F  082F               	movf	?___ftmul+1,w
  3102  0C80  00BF               	movwf	?_scale+1
  3103  0C81  0830               	movf	?___ftmul+2,w
  3104  0C82  00C0               	movwf	?_scale+2
  3105  0C83  2D17               	goto	l299
  3106  0C84                     l2417:
  3107  0C84  0846               	movf	scale@scl,w
  3108  0C85  3A80               	xorlw	128
  3109  0C86  3E75               	addlw	-139
  3110  0C87  1C03               	skipc
  3111  0C88  2C8A               	goto	u3161
  3112  0C89  2C8B               	goto	u3160
  3113  0C8A                     u3161:
  3114  0C8A  2CF7               	goto	l2423
  3115  0C8B                     u3160:
  3116  0C8B                     l2419:
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3119  0C8B  3003               	movlw	3
  3120  0C8C  00C1               	movwf	??_scale
  3121  0C8D  0841               	movf	??_scale,w
  3122  0C8E  00AA               	movwf	___bmul@multiplicand
  3123  0C8F  0846               	movf	scale@scl,w
  3124  0C90  00F6               	movwf	___awmod@dividend
  3125  0C91  01F7               	clrf	___awmod@dividend+1
  3126  0C92  1BF6               	btfsc	___awmod@dividend,7
  3127  0C93  03F7               	decf	___awmod@dividend+1,f
  3128  0C94  300A               	movlw	10
  3129  0C95  00F4               	movwf	___awmod@divisor
  3130  0C96  3000               	movlw	0
  3131  0C97  00F5               	movwf	___awmod@divisor+1
  3132  0C98  160A  118A  2172  120A  158A  	fcall	___awmod
  3133  0C9D  0874               	movf	?___awmod,w
  3134  0C9E  160A  158A  25B6  120A  158A  	fcall	___bmul
  3135  0CA3  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3136  0CA4  0084               	movwf	4
  3137  0CA5  160A  118A  200A  120A  158A  	fcall	stringdir
  3138  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0CAC  00AE               	movwf	___ftmul@f1
  3141  0CAD  160A  118A  200A  120A  158A  	fcall	stringdir
  3142  0CB2  00AF               	movwf	___ftmul@f1+1
  3143  0CB3  160A  118A  200A  120A  158A  	fcall	stringdir
  3144  0CB8  00B0               	movwf	___ftmul@f1+2
  3145  0CB9  3003               	movlw	3
  3146  0CBA  00C2               	movwf	??_scale+1
  3147  0CBB  0842               	movf	??_scale+1,w
  3148  0CBC  00AA               	movwf	___bmul@multiplicand
  3149  0CBD  0846               	movf	scale@scl,w
  3150  0CBE  00A4               	movwf	___awdiv@dividend
  3151  0CBF  01A5               	clrf	___awdiv@dividend+1
  3152  0CC0  1BA4               	btfsc	___awdiv@dividend,7
  3153  0CC1  03A5               	decf	___awdiv@dividend+1,f
  3154  0CC2  300A               	movlw	10
  3155  0CC3  00A2               	movwf	___awdiv@divisor
  3156  0CC4  3000               	movlw	0
  3157  0CC5  00A3               	movwf	___awdiv@divisor+1
  3158  0CC6  160A  118A  2296  120A  158A  	fcall	___awdiv
  3159  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0CCD  0822               	movf	?___awdiv,w
  3162  0CCE  160A  158A  25B6  120A  158A  	fcall	___bmul
  3163  0CD3  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3164  0CD4  0084               	movwf	4
  3165  0CD5  160A  118A  200A  120A  158A  	fcall	stringdir
  3166  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0CDC  00B1               	movwf	___ftmul@f2
  3169  0CDD  160A  118A  200A  120A  158A  	fcall	stringdir
  3170  0CE2  00B2               	movwf	___ftmul@f2+1
  3171  0CE3  160A  118A  200A  120A  158A  	fcall	stringdir
  3172  0CE8  00B3               	movwf	___ftmul@f2+2
  3173  0CE9  120A  118A  2716  120A  158A  	fcall	___ftmul
  3174  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  3175  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0CF0  082E               	movf	?___ftmul,w
  3177  0CF1  00BE               	movwf	?_scale
  3178  0CF2  082F               	movf	?___ftmul+1,w
  3179  0CF3  00BF               	movwf	?_scale+1
  3180  0CF4  0830               	movf	?___ftmul+2,w
  3181  0CF5  00C0               	movwf	?_scale+2
  3182  0CF6  2D17               	goto	l299
  3183  0CF7                     l2423:
  3184                           
  3185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3186  0CF7  3003               	movlw	3
  3187  0CF8  00C1               	movwf	??_scale
  3188  0CF9  0841               	movf	??_scale,w
  3189  0CFA  00AA               	movwf	___bmul@multiplicand
  3190  0CFB  0846               	movf	scale@scl,w
  3191  0CFC  160A  158A  25B6  120A  158A  	fcall	___bmul
  3192  0D01  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3193  0D02  0084               	movwf	4
  3194  0D03  160A  118A  200A  120A  158A  	fcall	stringdir
  3195  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0D0A  00BE               	movwf	?_scale
  3198  0D0B  160A  118A  200A  120A  158A  	fcall	stringdir
  3199  0D10  00BF               	movwf	?_scale+1
  3200  0D11  160A  118A  200A  120A  158A  	fcall	stringdir
  3201  0D16  00C0               	movwf	?_scale+2
  3202  0D17                     l299:
  3203  0D17  0008               	return
  3204  0D18                     __end_of_scale:
  3205                           
  3206                           	psect	text3
  3207  1172                     __ptext3:	
  3208 ;; *************** function ___awmod *****************
  3209 ;; Defined at:
  3210 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  divisor         2    4[COMMON] int 
  3213 ;;  dividend        2    6[COMMON] int 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  sign            1    1[BANK0 ] unsigned char 
  3216 ;;  counter         1    0[BANK0 ] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    4[COMMON] int 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3226 ;;      Params:         4       0       0       0       0
  3227 ;;      Locals:         0       2       0       0       0
  3228 ;;      Temps:          1       0       0       0       0
  3229 ;;      Totals:         5       2       0       0       0
  3230 ;;Total ram usage:        7 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_scale
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function ___awmod
  3242  1172                     ___awmod:
  3243  1172                     l2121:	
  3244                           ;incstack = 0
  3245                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3246                           
  3247  1172  1283               	bcf	3,5	;RP0=0, select bank0
  3248  1173  1303               	bcf	3,6	;RP1=0, select bank0
  3249  1174  01A1               	clrf	___awmod@sign
  3250  1175                     l2123:
  3251  1175  1FF7               	btfss	___awmod@dividend+1,7
  3252  1176  2978               	goto	u2491
  3253  1177  2979               	goto	u2490
  3254  1178                     u2491:
  3255  1178  2980               	goto	l2129
  3256  1179                     u2490:
  3257  1179                     l2125:
  3258  1179  09F6               	comf	___awmod@dividend,f
  3259  117A  09F7               	comf	___awmod@dividend+1,f
  3260  117B  0AF6               	incf	___awmod@dividend,f
  3261  117C  1903               	skipnz
  3262  117D  0AF7               	incf	___awmod@dividend+1,f
  3263  117E                     l2127:
  3264  117E  01A1               	clrf	___awmod@sign
  3265  117F  0AA1               	incf	___awmod@sign,f
  3266  1180                     l2129:
  3267  1180  1FF5               	btfss	___awmod@divisor+1,7
  3268  1181  2983               	goto	u2501
  3269  1182  2984               	goto	u2500
  3270  1183                     u2501:
  3271  1183  2989               	goto	l2133
  3272  1184                     u2500:
  3273  1184                     l2131:
  3274  1184  09F4               	comf	___awmod@divisor,f
  3275  1185  09F5               	comf	___awmod@divisor+1,f
  3276  1186  0AF4               	incf	___awmod@divisor,f
  3277  1187  1903               	skipnz
  3278  1188  0AF5               	incf	___awmod@divisor+1,f
  3279  1189                     l2133:
  3280  1189  0874               	movf	___awmod@divisor,w
  3281  118A  0475               	iorwf	___awmod@divisor+1,w
  3282  118B  1903               	btfsc	3,2
  3283  118C  298E               	goto	u2511
  3284  118D  298F               	goto	u2510
  3285  118E                     u2511:
  3286  118E  29BE               	goto	l2151
  3287  118F                     u2510:
  3288  118F                     l2135:
  3289  118F  01A0               	clrf	___awmod@counter
  3290  1190  0AA0               	incf	___awmod@counter,f
  3291  1191  299D               	goto	l2141
  3292  1192                     l2137:
  3293  1192  3001               	movlw	1
  3294  1193                     u2525:
  3295  1193  1003               	clrc
  3296  1194  0DF4               	rlf	___awmod@divisor,f
  3297  1195  0DF5               	rlf	___awmod@divisor+1,f
  3298  1196  3EFF               	addlw	-1
  3299  1197  1D03               	skipz
  3300  1198  2993               	goto	u2525
  3301  1199                     l2139:
  3302  1199  3001               	movlw	1
  3303  119A  00F8               	movwf	??___awmod
  3304  119B  0878               	movf	??___awmod,w
  3305  119C  07A0               	addwf	___awmod@counter,f
  3306  119D                     l2141:
  3307  119D  1FF5               	btfss	___awmod@divisor+1,7
  3308  119E  29A0               	goto	u2531
  3309  119F  29A1               	goto	u2530
  3310  11A0                     u2531:
  3311  11A0  2992               	goto	l2137
  3312  11A1                     u2530:
  3313  11A1                     l2143:
  3314  11A1  0875               	movf	___awmod@divisor+1,w
  3315  11A2  0277               	subwf	___awmod@dividend+1,w
  3316  11A3  1D03               	skipz
  3317  11A4  29A7               	goto	u2545
  3318  11A5  0874               	movf	___awmod@divisor,w
  3319  11A6  0276               	subwf	___awmod@dividend,w
  3320  11A7                     u2545:
  3321  11A7  1C03               	skipc
  3322  11A8  29AA               	goto	u2541
  3323  11A9  29AB               	goto	u2540
  3324  11AA                     u2541:
  3325  11AA  29B1               	goto	l2147
  3326  11AB                     u2540:
  3327  11AB                     l2145:
  3328  11AB  0874               	movf	___awmod@divisor,w
  3329  11AC  02F6               	subwf	___awmod@dividend,f
  3330  11AD  0875               	movf	___awmod@divisor+1,w
  3331  11AE  1C03               	skipc
  3332  11AF  03F7               	decf	___awmod@dividend+1,f
  3333  11B0  02F7               	subwf	___awmod@dividend+1,f
  3334  11B1                     l2147:
  3335  11B1  3001               	movlw	1
  3336  11B2                     u2555:
  3337  11B2  1003               	clrc
  3338  11B3  0CF5               	rrf	___awmod@divisor+1,f
  3339  11B4  0CF4               	rrf	___awmod@divisor,f
  3340  11B5  3EFF               	addlw	-1
  3341  11B6  1D03               	skipz
  3342  11B7  29B2               	goto	u2555
  3343  11B8                     l2149:
  3344  11B8  3001               	movlw	1
  3345  11B9  02A0               	subwf	___awmod@counter,f
  3346  11BA  1D03               	btfss	3,2
  3347  11BB  29BD               	goto	u2561
  3348  11BC  29BE               	goto	u2560
  3349  11BD                     u2561:
  3350  11BD  29A1               	goto	l2143
  3351  11BE                     u2560:
  3352  11BE                     l2151:
  3353  11BE  0821               	movf	___awmod@sign,w
  3354  11BF  1903               	btfsc	3,2
  3355  11C0  29C2               	goto	u2571
  3356  11C1  29C3               	goto	u2570
  3357  11C2                     u2571:
  3358  11C2  29C8               	goto	l2155
  3359  11C3                     u2570:
  3360  11C3                     l2153:
  3361  11C3  09F6               	comf	___awmod@dividend,f
  3362  11C4  09F7               	comf	___awmod@dividend+1,f
  3363  11C5  0AF6               	incf	___awmod@dividend,f
  3364  11C6  1903               	skipnz
  3365  11C7  0AF7               	incf	___awmod@dividend+1,f
  3366  11C8                     l2155:
  3367  11C8  0877               	movf	___awmod@dividend+1,w
  3368  11C9  00F5               	movwf	?___awmod+1
  3369  11CA  0876               	movf	___awmod@dividend,w
  3370  11CB  00F4               	movwf	?___awmod
  3371  11CC                     l591:
  3372  11CC  0008               	return
  3373  11CD                     __end_of___awmod:
  3374                           
  3375                           	psect	text4
  3376  1296                     __ptext4:	
  3377 ;; *************** function ___awdiv *****************
  3378 ;; Defined at:
  3379 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  divisor         2    2[BANK0 ] int 
  3382 ;;  dividend        2    4[BANK0 ] int 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  quotient        2    8[BANK0 ] int 
  3385 ;;  sign            1    7[BANK0 ] unsigned char 
  3386 ;;  counter         1    6[BANK0 ] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  2    2[BANK0 ] int 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3396 ;;      Params:         0       4       0       0       0
  3397 ;;      Locals:         0       4       0       0       0
  3398 ;;      Temps:          1       0       0       0       0
  3399 ;;      Totals:         1       8       0       0       0
  3400 ;;Total ram usage:        9 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    1
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_scale
  3407 ;;		_sprintf
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function ___awdiv
  3413  1296                     ___awdiv:
  3414  1296                     l2077:	
  3415                           ;incstack = 0
  3416                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3417                           
  3418  1296  1283               	bcf	3,5	;RP0=0, select bank0
  3419  1297  1303               	bcf	3,6	;RP1=0, select bank0
  3420  1298  01A7               	clrf	___awdiv@sign
  3421  1299                     l2079:
  3422  1299  1FA3               	btfss	___awdiv@divisor+1,7
  3423  129A  2A9C               	goto	u2391
  3424  129B  2A9D               	goto	u2390
  3425  129C                     u2391:
  3426  129C  2AA4               	goto	l2085
  3427  129D                     u2390:
  3428  129D                     l2081:
  3429  129D  09A2               	comf	___awdiv@divisor,f
  3430  129E  09A3               	comf	___awdiv@divisor+1,f
  3431  129F  0AA2               	incf	___awdiv@divisor,f
  3432  12A0  1903               	skipnz
  3433  12A1  0AA3               	incf	___awdiv@divisor+1,f
  3434  12A2                     l2083:
  3435  12A2  01A7               	clrf	___awdiv@sign
  3436  12A3  0AA7               	incf	___awdiv@sign,f
  3437  12A4                     l2085:
  3438  12A4  1FA5               	btfss	___awdiv@dividend+1,7
  3439  12A5  2AA7               	goto	u2401
  3440  12A6  2AA8               	goto	u2400
  3441  12A7                     u2401:
  3442  12A7  2AB1               	goto	l2091
  3443  12A8                     u2400:
  3444  12A8                     l2087:
  3445  12A8  09A4               	comf	___awdiv@dividend,f
  3446  12A9  09A5               	comf	___awdiv@dividend+1,f
  3447  12AA  0AA4               	incf	___awdiv@dividend,f
  3448  12AB  1903               	skipnz
  3449  12AC  0AA5               	incf	___awdiv@dividend+1,f
  3450  12AD                     l2089:
  3451  12AD  3001               	movlw	1
  3452  12AE  00F9               	movwf	??___awdiv
  3453  12AF  0879               	movf	??___awdiv,w
  3454  12B0  06A7               	xorwf	___awdiv@sign,f
  3455  12B1                     l2091:
  3456  12B1  01A8               	clrf	___awdiv@quotient
  3457  12B2  01A9               	clrf	___awdiv@quotient+1
  3458  12B3                     l2093:
  3459  12B3  0822               	movf	___awdiv@divisor,w
  3460  12B4  0423               	iorwf	___awdiv@divisor+1,w
  3461  12B5  1903               	btfsc	3,2
  3462  12B6  2AB8               	goto	u2411
  3463  12B7  2AB9               	goto	u2410
  3464  12B8                     u2411:
  3465  12B8  2AF0               	goto	l2113
  3466  12B9                     u2410:
  3467  12B9                     l2095:
  3468  12B9  01A6               	clrf	___awdiv@counter
  3469  12BA  0AA6               	incf	___awdiv@counter,f
  3470  12BB  2AC7               	goto	l2101
  3471  12BC                     l2097:
  3472  12BC  3001               	movlw	1
  3473  12BD                     u2425:
  3474  12BD  1003               	clrc
  3475  12BE  0DA2               	rlf	___awdiv@divisor,f
  3476  12BF  0DA3               	rlf	___awdiv@divisor+1,f
  3477  12C0  3EFF               	addlw	-1
  3478  12C1  1D03               	skipz
  3479  12C2  2ABD               	goto	u2425
  3480  12C3                     l2099:
  3481  12C3  3001               	movlw	1
  3482  12C4  00F9               	movwf	??___awdiv
  3483  12C5  0879               	movf	??___awdiv,w
  3484  12C6  07A6               	addwf	___awdiv@counter,f
  3485  12C7                     l2101:
  3486  12C7  1FA3               	btfss	___awdiv@divisor+1,7
  3487  12C8  2ACA               	goto	u2431
  3488  12C9  2ACB               	goto	u2430
  3489  12CA                     u2431:
  3490  12CA  2ABC               	goto	l2097
  3491  12CB                     u2430:
  3492  12CB                     l2103:
  3493  12CB  3001               	movlw	1
  3494  12CC                     u2445:
  3495  12CC  1003               	clrc
  3496  12CD  0DA8               	rlf	___awdiv@quotient,f
  3497  12CE  0DA9               	rlf	___awdiv@quotient+1,f
  3498  12CF  3EFF               	addlw	-1
  3499  12D0  1D03               	skipz
  3500  12D1  2ACC               	goto	u2445
  3501  12D2  0823               	movf	___awdiv@divisor+1,w
  3502  12D3  0225               	subwf	___awdiv@dividend+1,w
  3503  12D4  1D03               	skipz
  3504  12D5  2AD8               	goto	u2455
  3505  12D6  0822               	movf	___awdiv@divisor,w
  3506  12D7  0224               	subwf	___awdiv@dividend,w
  3507  12D8                     u2455:
  3508  12D8  1C03               	skipc
  3509  12D9  2ADB               	goto	u2451
  3510  12DA  2ADC               	goto	u2450
  3511  12DB                     u2451:
  3512  12DB  2AE3               	goto	l2109
  3513  12DC                     u2450:
  3514  12DC                     l2105:
  3515  12DC  0822               	movf	___awdiv@divisor,w
  3516  12DD  02A4               	subwf	___awdiv@dividend,f
  3517  12DE  0823               	movf	___awdiv@divisor+1,w
  3518  12DF  1C03               	skipc
  3519  12E0  03A5               	decf	___awdiv@dividend+1,f
  3520  12E1  02A5               	subwf	___awdiv@dividend+1,f
  3521  12E2                     l2107:
  3522  12E2  1428               	bsf	___awdiv@quotient,0
  3523  12E3                     l2109:
  3524  12E3  3001               	movlw	1
  3525  12E4                     u2465:
  3526  12E4  1003               	clrc
  3527  12E5  0CA3               	rrf	___awdiv@divisor+1,f
  3528  12E6  0CA2               	rrf	___awdiv@divisor,f
  3529  12E7  3EFF               	addlw	-1
  3530  12E8  1D03               	skipz
  3531  12E9  2AE4               	goto	u2465
  3532  12EA                     l2111:
  3533  12EA  3001               	movlw	1
  3534  12EB  02A6               	subwf	___awdiv@counter,f
  3535  12EC  1D03               	btfss	3,2
  3536  12ED  2AEF               	goto	u2471
  3537  12EE  2AF0               	goto	u2470
  3538  12EF                     u2471:
  3539  12EF  2ACB               	goto	l2103
  3540  12F0                     u2470:
  3541  12F0                     l2113:
  3542  12F0  0827               	movf	___awdiv@sign,w
  3543  12F1  1903               	btfsc	3,2
  3544  12F2  2AF4               	goto	u2481
  3545  12F3  2AF5               	goto	u2480
  3546  12F4                     u2481:
  3547  12F4  2AFA               	goto	l2117
  3548  12F5                     u2480:
  3549  12F5                     l2115:
  3550  12F5  09A8               	comf	___awdiv@quotient,f
  3551  12F6  09A9               	comf	___awdiv@quotient+1,f
  3552  12F7  0AA8               	incf	___awdiv@quotient,f
  3553  12F8  1903               	skipnz
  3554  12F9  0AA9               	incf	___awdiv@quotient+1,f
  3555  12FA                     l2117:
  3556  12FA  0829               	movf	___awdiv@quotient+1,w
  3557  12FB  00A3               	movwf	?___awdiv+1
  3558  12FC  0828               	movf	___awdiv@quotient,w
  3559  12FD  00A2               	movwf	?___awdiv
  3560  12FE                     l578:
  3561  12FE  0008               	return
  3562  12FF                     __end_of___awdiv:
  3563                           
  3564                           	psect	text5
  3565  10BB                     __ptext5:	
  3566 ;; *************** function _isdigit *****************
  3567 ;; Defined at:
  3568 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  c               1    wreg     unsigned char 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  c               1    5[COMMON] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;		None               void
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       0       0       0       0
  3583 ;;      Locals:         2       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0
  3585 ;;      Totals:         2       0       0       0       0
  3586 ;;Total ram usage:        2 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    1
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_sprintf
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           
  3597                           ;psect for function _isdigit
  3598  10BB                     _isdigit:
  3599                           
  3600                           ;incstack = 0
  3601                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3602                           ;isdigit@c stored from wreg
  3603  10BB  00F5               	movwf	isdigit@c
  3604  10BC                     l2427:
  3605  10BC  01F4               	clrf	_isdigit$933
  3606  10BD                     l2429:
  3607  10BD  303A               	movlw	58
  3608  10BE  0275               	subwf	isdigit@c,w
  3609  10BF  1803               	skipnc
  3610  10C0  28C2               	goto	u3171
  3611  10C1  28C3               	goto	u3170
  3612  10C2                     u3171:
  3613  10C2  28CB               	goto	l2435
  3614  10C3                     u3170:
  3615  10C3                     l2431:
  3616  10C3  3030               	movlw	48
  3617  10C4  0275               	subwf	isdigit@c,w
  3618  10C5  1C03               	skipc
  3619  10C6  28C8               	goto	u3181
  3620  10C7  28C9               	goto	u3180
  3621  10C8                     u3181:
  3622  10C8  28CB               	goto	l2435
  3623  10C9                     u3180:
  3624  10C9                     l2433:
  3625  10C9  01F4               	clrf	_isdigit$933
  3626  10CA  0AF4               	incf	_isdigit$933,f
  3627  10CB                     l2435:
  3628  10CB  0C74               	rrf	_isdigit$933,w
  3629  10CC                     l857:
  3630  10CC  0008               	return
  3631  10CD                     __end_of_isdigit:
  3632                           
  3633                           	psect	text6
  3634  08B4                     __ptext6:	
  3635 ;; *************** function _fround *****************
  3636 ;; Defined at:
  3637 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  prec            1    wreg     unsigned char 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  prec            1   45[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  3   30[BANK0 ] unsigned char 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3651 ;;      Params:         0       3       0       0       0
  3652 ;;      Locals:         0       7       0       0       0
  3653 ;;      Temps:          0       6       0       0       0
  3654 ;;      Totals:         0      16       0       0       0
  3655 ;;Total ram usage:       16 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    3
  3658 ;; This function calls:
  3659 ;;		___bmul
  3660 ;;		___ftmul
  3661 ;;		___lwdiv
  3662 ;;		___lwmod
  3663 ;; This function is called by:
  3664 ;;		_sprintf
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function _fround
  3670  08B4                     _fround:
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3674                           ;fround@prec stored from wreg
  3675  08B4  1283               	bcf	3,5	;RP0=0, select bank0
  3676  08B5  1303               	bcf	3,6	;RP1=0, select bank0
  3677  08B6  00CD               	movwf	fround@prec
  3678  08B7                     l2365:
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3681  08B7  306E               	movlw	110
  3682  08B8  024D               	subwf	fround@prec,w
  3683  08B9  1C03               	skipc
  3684  08BA  28BC               	goto	u3101
  3685  08BB  28BD               	goto	u3100
  3686  08BC                     u3101:
  3687  08BC  299A               	goto	l2375
  3688  08BD                     u3100:
  3689  08BD                     l2367:
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3692  08BD  3003               	movlw	3
  3693  08BE  00C1               	movwf	??_fround
  3694  08BF  0841               	movf	??_fround,w
  3695  08C0  00AA               	movwf	___bmul@multiplicand
  3696  08C1  084D               	movf	fround@prec,w
  3697  08C2  00C2               	movwf	??_fround+1
  3698  08C3  01C3               	clrf	??_fround+2
  3699  08C4  0842               	movf	??_fround+1,w
  3700  08C5  00F6               	movwf	___lwmod@dividend
  3701  08C6  0843               	movf	??_fround+2,w
  3702  08C7  00F7               	movwf	___lwmod@dividend+1
  3703  08C8  3064               	movlw	100
  3704  08C9  00F4               	movwf	___lwmod@divisor
  3705  08CA  3000               	movlw	0
  3706  08CB  00F5               	movwf	___lwmod@divisor+1
  3707  08CC  160A  158A  273A  120A  158A  	fcall	___lwmod
  3708  08D1  0875               	movf	?___lwmod+1,w
  3709  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  3710  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  3711  08D4  00A3               	movwf	___lwdiv@dividend+1
  3712  08D5  0874               	movf	?___lwmod,w
  3713  08D6  00A2               	movwf	___lwdiv@dividend
  3714  08D7  300A               	movlw	10
  3715  08D8  00A0               	movwf	___lwdiv@divisor
  3716  08D9  3000               	movlw	0
  3717  08DA  00A1               	movwf	___lwdiv@divisor+1
  3718  08DB  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  3719  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  3720  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  3721  08E2  0820               	movf	?___lwdiv,w
  3722  08E3  160A  158A  25B6  120A  158A  	fcall	___bmul
  3723  08E8  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3724  08E9  0084               	movwf	4
  3725  08EA  160A  118A  200A  120A  158A  	fcall	stringdir
  3726  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  3727  08F0  1303               	bcf	3,6	;RP1=0, select bank0
  3728  08F1  00AE               	movwf	___ftmul@f1
  3729  08F2  160A  118A  200A  120A  158A  	fcall	stringdir
  3730  08F7  00AF               	movwf	___ftmul@f1+1
  3731  08F8  160A  118A  200A  120A  158A  	fcall	stringdir
  3732  08FD  00B0               	movwf	___ftmul@f1+2
  3733  08FE  3003               	movlw	3
  3734  08FF  00C4               	movwf	??_fround+3
  3735  0900  0844               	movf	??_fround+3,w
  3736  0901  00AA               	movwf	___bmul@multiplicand
  3737  0902  084D               	movf	fround@prec,w
  3738  0903  00C5               	movwf	??_fround+4
  3739  0904  01C6               	clrf	??_fround+5
  3740  0905  0845               	movf	??_fround+4,w
  3741  0906  00A2               	movwf	___lwdiv@dividend
  3742  0907  0846               	movf	??_fround+5,w
  3743  0908  00A3               	movwf	___lwdiv@dividend+1
  3744  0909  3064               	movlw	100
  3745  090A  00A0               	movwf	___lwdiv@divisor
  3746  090B  3000               	movlw	0
  3747  090C  00A1               	movwf	___lwdiv@divisor+1
  3748  090D  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  3749  0912  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0913  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0914  0820               	movf	?___lwdiv,w
  3752  0915  160A  158A  25B6  120A  158A  	fcall	___bmul
  3753  091A  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3754  091B  0084               	movwf	4
  3755  091C  160A  118A  200A  120A  158A  	fcall	stringdir
  3756  0921  1283               	bcf	3,5	;RP0=0, select bank0
  3757  0922  1303               	bcf	3,6	;RP1=0, select bank0
  3758  0923  00B1               	movwf	___ftmul@f2
  3759  0924  160A  118A  200A  120A  158A  	fcall	stringdir
  3760  0929  00B2               	movwf	___ftmul@f2+1
  3761  092A  160A  118A  200A  120A  158A  	fcall	stringdir
  3762  092F  00B3               	movwf	___ftmul@f2+2
  3763  0930  120A  118A  2716  120A  158A  	fcall	___ftmul
  3764  0935  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0936  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0937  082E               	movf	?___ftmul,w
  3767  0938  00CA               	movwf	_fround$1124
  3768  0939  082F               	movf	?___ftmul+1,w
  3769  093A  00CB               	movwf	_fround$1124+1
  3770  093B  0830               	movf	?___ftmul+2,w
  3771  093C  00CC               	movwf	_fround$1124+2
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3774  093D  3003               	movlw	3
  3775  093E  00C1               	movwf	??_fround
  3776  093F  0841               	movf	??_fround,w
  3777  0940  00AA               	movwf	___bmul@multiplicand
  3778  0941  084D               	movf	fround@prec,w
  3779  0942  00C2               	movwf	??_fround+1
  3780  0943  01C3               	clrf	??_fround+2
  3781  0944  0842               	movf	??_fround+1,w
  3782  0945  00F6               	movwf	___lwmod@dividend
  3783  0946  0843               	movf	??_fround+2,w
  3784  0947  00F7               	movwf	___lwmod@dividend+1
  3785  0948  300A               	movlw	10
  3786  0949  00F4               	movwf	___lwmod@divisor
  3787  094A  3000               	movlw	0
  3788  094B  00F5               	movwf	___lwmod@divisor+1
  3789  094C  160A  158A  273A  120A  158A  	fcall	___lwmod
  3790  0951  0874               	movf	?___lwmod,w
  3791  0952  160A  158A  25B6  120A  158A  	fcall	___bmul
  3792  0957  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3793  0958  0084               	movwf	4
  3794  0959  160A  118A  200A  120A  158A  	fcall	stringdir
  3795  095E  1283               	bcf	3,5	;RP0=0, select bank0
  3796  095F  1303               	bcf	3,6	;RP1=0, select bank0
  3797  0960  00AE               	movwf	___ftmul@f1
  3798  0961  160A  118A  200A  120A  158A  	fcall	stringdir
  3799  0966  00AF               	movwf	___ftmul@f1+1
  3800  0967  160A  118A  200A  120A  158A  	fcall	stringdir
  3801  096C  00B0               	movwf	___ftmul@f1+2
  3802  096D  084A               	movf	_fround$1124,w
  3803  096E  00B1               	movwf	___ftmul@f2
  3804  096F  084B               	movf	_fround$1124+1,w
  3805  0970  00B2               	movwf	___ftmul@f2+1
  3806  0971  084C               	movf	_fround$1124+2,w
  3807  0972  00B3               	movwf	___ftmul@f2+2
  3808  0973  120A  118A  2716  120A  158A  	fcall	___ftmul
  3809  0978  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0979  1303               	bcf	3,6	;RP1=0, select bank0
  3811  097A  082E               	movf	?___ftmul,w
  3812  097B  00C7               	movwf	_fround$1125
  3813  097C  082F               	movf	?___ftmul+1,w
  3814  097D  00C8               	movwf	_fround$1125+1
  3815  097E  0830               	movf	?___ftmul+2,w
  3816  097F  00C9               	movwf	_fround$1125+2
  3817  0980                     l2369:
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3820  0980  3000               	movlw	0
  3821  0981  00AE               	movwf	___ftmul@f1
  3822  0982  3000               	movlw	0
  3823  0983  00AF               	movwf	___ftmul@f1+1
  3824  0984  303F               	movlw	63
  3825  0985  00B0               	movwf	___ftmul@f1+2
  3826  0986  0847               	movf	_fround$1125,w
  3827  0987  00B1               	movwf	___ftmul@f2
  3828  0988  0848               	movf	_fround$1125+1,w
  3829  0989  00B2               	movwf	___ftmul@f2+1
  3830  098A  0849               	movf	_fround$1125+2,w
  3831  098B  00B3               	movwf	___ftmul@f2+2
  3832  098C  120A  118A  2716  120A  158A  	fcall	___ftmul
  3833  0991  1283               	bcf	3,5	;RP0=0, select bank0
  3834  0992  1303               	bcf	3,6	;RP1=0, select bank0
  3835  0993  082E               	movf	?___ftmul,w
  3836  0994  00BE               	movwf	?_fround
  3837  0995  082F               	movf	?___ftmul+1,w
  3838  0996  00BF               	movwf	?_fround+1
  3839  0997  0830               	movf	?___ftmul+2,w
  3840  0998  00C0               	movwf	?_fround+2
  3841  0999  2A5C               	goto	l292
  3842  099A                     l2375:
  3843  099A  300B               	movlw	11
  3844  099B  024D               	subwf	fround@prec,w
  3845  099C  1C03               	skipc
  3846  099D  299F               	goto	u3111
  3847  099E  29A0               	goto	u3110
  3848  099F                     u3111:
  3849  099F  2A29               	goto	l2383
  3850  09A0                     u3110:
  3851  09A0                     l2377:
  3852                           
  3853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3854  09A0  3003               	movlw	3
  3855  09A1  00C1               	movwf	??_fround
  3856  09A2  0841               	movf	??_fround,w
  3857  09A3  00AA               	movwf	___bmul@multiplicand
  3858  09A4  084D               	movf	fround@prec,w
  3859  09A5  00C2               	movwf	??_fround+1
  3860  09A6  01C3               	clrf	??_fround+2
  3861  09A7  0842               	movf	??_fround+1,w
  3862  09A8  00F6               	movwf	___lwmod@dividend
  3863  09A9  0843               	movf	??_fround+2,w
  3864  09AA  00F7               	movwf	___lwmod@dividend+1
  3865  09AB  300A               	movlw	10
  3866  09AC  00F4               	movwf	___lwmod@divisor
  3867  09AD  3000               	movlw	0
  3868  09AE  00F5               	movwf	___lwmod@divisor+1
  3869  09AF  160A  158A  273A  120A  158A  	fcall	___lwmod
  3870  09B4  0874               	movf	?___lwmod,w
  3871  09B5  160A  158A  25B6  120A  158A  	fcall	___bmul
  3872  09BA  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3873  09BB  0084               	movwf	4
  3874  09BC  160A  118A  200A  120A  158A  	fcall	stringdir
  3875  09C1  1283               	bcf	3,5	;RP0=0, select bank0
  3876  09C2  1303               	bcf	3,6	;RP1=0, select bank0
  3877  09C3  00AE               	movwf	___ftmul@f1
  3878  09C4  160A  118A  200A  120A  158A  	fcall	stringdir
  3879  09C9  00AF               	movwf	___ftmul@f1+1
  3880  09CA  160A  118A  200A  120A  158A  	fcall	stringdir
  3881  09CF  00B0               	movwf	___ftmul@f1+2
  3882  09D0  3003               	movlw	3
  3883  09D1  00C4               	movwf	??_fround+3
  3884  09D2  0844               	movf	??_fround+3,w
  3885  09D3  00AA               	movwf	___bmul@multiplicand
  3886  09D4  084D               	movf	fround@prec,w
  3887  09D5  00C5               	movwf	??_fround+4
  3888  09D6  01C6               	clrf	??_fround+5
  3889  09D7  0845               	movf	??_fround+4,w
  3890  09D8  00A2               	movwf	___lwdiv@dividend
  3891  09D9  0846               	movf	??_fround+5,w
  3892  09DA  00A3               	movwf	___lwdiv@dividend+1
  3893  09DB  300A               	movlw	10
  3894  09DC  00A0               	movwf	___lwdiv@divisor
  3895  09DD  3000               	movlw	0
  3896  09DE  00A1               	movwf	___lwdiv@divisor+1
  3897  09DF  160A  158A  27BA  120A  158A  	fcall	___lwdiv
  3898  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  3899  09E5  1303               	bcf	3,6	;RP1=0, select bank0
  3900  09E6  0820               	movf	?___lwdiv,w
  3901  09E7  160A  158A  25B6  120A  158A  	fcall	___bmul
  3902  09EC  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3903  09ED  0084               	movwf	4
  3904  09EE  160A  118A  200A  120A  158A  	fcall	stringdir
  3905  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3906  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3907  09F5  00B1               	movwf	___ftmul@f2
  3908  09F6  160A  118A  200A  120A  158A  	fcall	stringdir
  3909  09FB  00B2               	movwf	___ftmul@f2+1
  3910  09FC  160A  118A  200A  120A  158A  	fcall	stringdir
  3911  0A01  00B3               	movwf	___ftmul@f2+2
  3912  0A02  120A  118A  2716  120A  158A  	fcall	___ftmul
  3913  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  3914  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  3915  0A09  082E               	movf	?___ftmul,w
  3916  0A0A  00CA               	movwf	_fround$1124
  3917  0A0B  082F               	movf	?___ftmul+1,w
  3918  0A0C  00CB               	movwf	_fround$1124+1
  3919  0A0D  0830               	movf	?___ftmul+2,w
  3920  0A0E  00CC               	movwf	_fround$1124+2
  3921  0A0F                     l2379:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3924  0A0F  3000               	movlw	0
  3925  0A10  00AE               	movwf	___ftmul@f1
  3926  0A11  3000               	movlw	0
  3927  0A12  00AF               	movwf	___ftmul@f1+1
  3928  0A13  303F               	movlw	63
  3929  0A14  00B0               	movwf	___ftmul@f1+2
  3930  0A15  084A               	movf	_fround$1124,w
  3931  0A16  00B1               	movwf	___ftmul@f2
  3932  0A17  084B               	movf	_fround$1124+1,w
  3933  0A18  00B2               	movwf	___ftmul@f2+1
  3934  0A19  084C               	movf	_fround$1124+2,w
  3935  0A1A  00B3               	movwf	___ftmul@f2+2
  3936  0A1B  120A  118A  2716  120A  158A  	fcall	___ftmul
  3937  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  3938  0A21  1303               	bcf	3,6	;RP1=0, select bank0
  3939  0A22  082E               	movf	?___ftmul,w
  3940  0A23  00BE               	movwf	?_fround
  3941  0A24  082F               	movf	?___ftmul+1,w
  3942  0A25  00BF               	movwf	?_fround+1
  3943  0A26  0830               	movf	?___ftmul+2,w
  3944  0A27  00C0               	movwf	?_fround+2
  3945  0A28  2A5C               	goto	l292
  3946  0A29                     l2383:
  3947                           
  3948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3949  0A29  3000               	movlw	0
  3950  0A2A  00AE               	movwf	___ftmul@f1
  3951  0A2B  3000               	movlw	0
  3952  0A2C  00AF               	movwf	___ftmul@f1+1
  3953  0A2D  303F               	movlw	63
  3954  0A2E  00B0               	movwf	___ftmul@f1+2
  3955  0A2F  3003               	movlw	3
  3956  0A30  00C1               	movwf	??_fround
  3957  0A31  0841               	movf	??_fround,w
  3958  0A32  00AA               	movwf	___bmul@multiplicand
  3959  0A33  084D               	movf	fround@prec,w
  3960  0A34  160A  158A  25B6  120A  158A  	fcall	___bmul
  3961  0A39  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3962  0A3A  0084               	movwf	4
  3963  0A3B  160A  118A  200A  120A  158A  	fcall	stringdir
  3964  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  3965  0A41  1303               	bcf	3,6	;RP1=0, select bank0
  3966  0A42  00B1               	movwf	___ftmul@f2
  3967  0A43  160A  118A  200A  120A  158A  	fcall	stringdir
  3968  0A48  00B2               	movwf	___ftmul@f2+1
  3969  0A49  160A  118A  200A  120A  158A  	fcall	stringdir
  3970  0A4E  00B3               	movwf	___ftmul@f2+2
  3971  0A4F  120A  118A  2716  120A  158A  	fcall	___ftmul
  3972  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  3973  0A55  1303               	bcf	3,6	;RP1=0, select bank0
  3974  0A56  082E               	movf	?___ftmul,w
  3975  0A57  00BE               	movwf	?_fround
  3976  0A58  082F               	movf	?___ftmul+1,w
  3977  0A59  00BF               	movwf	?_fround+1
  3978  0A5A  0830               	movf	?___ftmul+2,w
  3979  0A5B  00C0               	movwf	?_fround+2
  3980  0A5C                     l292:
  3981  0A5C  0008               	return
  3982  0A5D                     __end_of_fround:
  3983                           
  3984                           	psect	text7
  3985  1F3A                     __ptext7:	
  3986 ;; *************** function ___lwmod *****************
  3987 ;; Defined at:
  3988 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  divisor         2    4[COMMON] unsigned int 
  3991 ;;  dividend        2    6[COMMON] unsigned int 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  counter         1    9[COMMON] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2    4[COMMON] unsigned int 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         4       0       0       0       0
  4004 ;;      Locals:         1       0       0       0       0
  4005 ;;      Temps:          1       0       0       0       0
  4006 ;;      Totals:         6       0       0       0       0
  4007 ;;Total ram usage:        6 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    1
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_fround
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           
  4018                           ;psect for function ___lwmod
  4019  1F3A                     ___lwmod:
  4020  1F3A                     l2305:	
  4021                           ;incstack = 0
  4022                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4023                           
  4024  1F3A  0874               	movf	___lwmod@divisor,w
  4025  1F3B  0475               	iorwf	___lwmod@divisor+1,w
  4026  1F3C  1903               	btfsc	3,2
  4027  1F3D  2F3F               	goto	u3031
  4028  1F3E  2F40               	goto	u3030
  4029  1F3F                     u3031:
  4030  1F3F  2F6F               	goto	l2323
  4031  1F40                     u3030:
  4032  1F40                     l2307:
  4033  1F40  01F9               	clrf	___lwmod@counter
  4034  1F41  0AF9               	incf	___lwmod@counter,f
  4035  1F42  2F4E               	goto	l2313
  4036  1F43                     l2309:
  4037  1F43  3001               	movlw	1
  4038  1F44                     u3045:
  4039  1F44  1003               	clrc
  4040  1F45  0DF4               	rlf	___lwmod@divisor,f
  4041  1F46  0DF5               	rlf	___lwmod@divisor+1,f
  4042  1F47  3EFF               	addlw	-1
  4043  1F48  1D03               	skipz
  4044  1F49  2F44               	goto	u3045
  4045  1F4A                     l2311:
  4046  1F4A  3001               	movlw	1
  4047  1F4B  00F8               	movwf	??___lwmod
  4048  1F4C  0878               	movf	??___lwmod,w
  4049  1F4D  07F9               	addwf	___lwmod@counter,f
  4050  1F4E                     l2313:
  4051  1F4E  1FF5               	btfss	___lwmod@divisor+1,7
  4052  1F4F  2F51               	goto	u3051
  4053  1F50  2F52               	goto	u3050
  4054  1F51                     u3051:
  4055  1F51  2F43               	goto	l2309
  4056  1F52                     u3050:
  4057  1F52                     l2315:
  4058  1F52  0875               	movf	___lwmod@divisor+1,w
  4059  1F53  0277               	subwf	___lwmod@dividend+1,w
  4060  1F54  1D03               	skipz
  4061  1F55  2F58               	goto	u3065
  4062  1F56  0874               	movf	___lwmod@divisor,w
  4063  1F57  0276               	subwf	___lwmod@dividend,w
  4064  1F58                     u3065:
  4065  1F58  1C03               	skipc
  4066  1F59  2F5B               	goto	u3061
  4067  1F5A  2F5C               	goto	u3060
  4068  1F5B                     u3061:
  4069  1F5B  2F62               	goto	l2319
  4070  1F5C                     u3060:
  4071  1F5C                     l2317:
  4072  1F5C  0874               	movf	___lwmod@divisor,w
  4073  1F5D  02F6               	subwf	___lwmod@dividend,f
  4074  1F5E  0875               	movf	___lwmod@divisor+1,w
  4075  1F5F  1C03               	skipc
  4076  1F60  03F7               	decf	___lwmod@dividend+1,f
  4077  1F61  02F7               	subwf	___lwmod@dividend+1,f
  4078  1F62                     l2319:
  4079  1F62  3001               	movlw	1
  4080  1F63                     u3075:
  4081  1F63  1003               	clrc
  4082  1F64  0CF5               	rrf	___lwmod@divisor+1,f
  4083  1F65  0CF4               	rrf	___lwmod@divisor,f
  4084  1F66  3EFF               	addlw	-1
  4085  1F67  1D03               	skipz
  4086  1F68  2F63               	goto	u3075
  4087  1F69                     l2321:
  4088  1F69  3001               	movlw	1
  4089  1F6A  02F9               	subwf	___lwmod@counter,f
  4090  1F6B  1D03               	btfss	3,2
  4091  1F6C  2F6E               	goto	u3081
  4092  1F6D  2F6F               	goto	u3080
  4093  1F6E                     u3081:
  4094  1F6E  2F52               	goto	l2315
  4095  1F6F                     u3080:
  4096  1F6F                     l2323:
  4097  1F6F  0877               	movf	___lwmod@dividend+1,w
  4098  1F70  00F5               	movwf	?___lwmod+1
  4099  1F71  0876               	movf	___lwmod@dividend,w
  4100  1F72  00F4               	movwf	?___lwmod
  4101  1F73                     l847:
  4102  1F73  0008               	return
  4103  1F74                     __end_of___lwmod:
  4104                           
  4105                           	psect	text8
  4106  1FBA                     __ptext8:	
  4107 ;; *************** function ___lwdiv *****************
  4108 ;; Defined at:
  4109 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  divisor         2    0[BANK0 ] unsigned int 
  4112 ;;  dividend        2    2[BANK0 ] unsigned int 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  quotient        2    5[BANK0 ] unsigned int 
  4115 ;;  counter         1    7[BANK0 ] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  2    0[BANK0 ] unsigned int 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4125 ;;      Params:         0       4       0       0       0
  4126 ;;      Locals:         0       3       0       0       0
  4127 ;;      Temps:          0       1       0       0       0
  4128 ;;      Totals:         0       8       0       0       0
  4129 ;;Total ram usage:        8 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    1
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_fround
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           
  4140                           ;psect for function ___lwdiv
  4141  1FBA                     ___lwdiv:
  4142  1FBA                     l2279:	
  4143                           ;incstack = 0
  4144                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4145                           
  4146  1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  4147  1FBB  1303               	bcf	3,6	;RP1=0, select bank0
  4148  1FBC  01A5               	clrf	___lwdiv@quotient
  4149  1FBD  01A6               	clrf	___lwdiv@quotient+1
  4150  1FBE                     l2281:
  4151  1FBE  0820               	movf	___lwdiv@divisor,w
  4152  1FBF  0421               	iorwf	___lwdiv@divisor+1,w
  4153  1FC0  1903               	btfsc	3,2
  4154  1FC1  2FC3               	goto	u2961
  4155  1FC2  2FC4               	goto	u2960
  4156  1FC3                     u2961:
  4157  1FC3  2FFB               	goto	l2301
  4158  1FC4                     u2960:
  4159  1FC4                     l2283:
  4160  1FC4  01A7               	clrf	___lwdiv@counter
  4161  1FC5  0AA7               	incf	___lwdiv@counter,f
  4162  1FC6  2FD2               	goto	l2289
  4163  1FC7                     l2285:
  4164  1FC7  3001               	movlw	1
  4165  1FC8                     u2975:
  4166  1FC8  1003               	clrc
  4167  1FC9  0DA0               	rlf	___lwdiv@divisor,f
  4168  1FCA  0DA1               	rlf	___lwdiv@divisor+1,f
  4169  1FCB  3EFF               	addlw	-1
  4170  1FCC  1D03               	skipz
  4171  1FCD  2FC8               	goto	u2975
  4172  1FCE                     l2287:
  4173  1FCE  3001               	movlw	1
  4174  1FCF  00A4               	movwf	??___lwdiv
  4175  1FD0  0824               	movf	??___lwdiv,w
  4176  1FD1  07A7               	addwf	___lwdiv@counter,f
  4177  1FD2                     l2289:
  4178  1FD2  1FA1               	btfss	___lwdiv@divisor+1,7
  4179  1FD3  2FD5               	goto	u2981
  4180  1FD4  2FD6               	goto	u2980
  4181  1FD5                     u2981:
  4182  1FD5  2FC7               	goto	l2285
  4183  1FD6                     u2980:
  4184  1FD6                     l2291:
  4185  1FD6  3001               	movlw	1
  4186  1FD7                     u2995:
  4187  1FD7  1003               	clrc
  4188  1FD8  0DA5               	rlf	___lwdiv@quotient,f
  4189  1FD9  0DA6               	rlf	___lwdiv@quotient+1,f
  4190  1FDA  3EFF               	addlw	-1
  4191  1FDB  1D03               	skipz
  4192  1FDC  2FD7               	goto	u2995
  4193  1FDD  0821               	movf	___lwdiv@divisor+1,w
  4194  1FDE  0223               	subwf	___lwdiv@dividend+1,w
  4195  1FDF  1D03               	skipz
  4196  1FE0  2FE3               	goto	u3005
  4197  1FE1  0820               	movf	___lwdiv@divisor,w
  4198  1FE2  0222               	subwf	___lwdiv@dividend,w
  4199  1FE3                     u3005:
  4200  1FE3  1C03               	skipc
  4201  1FE4  2FE6               	goto	u3001
  4202  1FE5  2FE7               	goto	u3000
  4203  1FE6                     u3001:
  4204  1FE6  2FEE               	goto	l2297
  4205  1FE7                     u3000:
  4206  1FE7                     l2293:
  4207  1FE7  0820               	movf	___lwdiv@divisor,w
  4208  1FE8  02A2               	subwf	___lwdiv@dividend,f
  4209  1FE9  0821               	movf	___lwdiv@divisor+1,w
  4210  1FEA  1C03               	skipc
  4211  1FEB  03A3               	decf	___lwdiv@dividend+1,f
  4212  1FEC  02A3               	subwf	___lwdiv@dividend+1,f
  4213  1FED                     l2295:
  4214  1FED  1425               	bsf	___lwdiv@quotient,0
  4215  1FEE                     l2297:
  4216  1FEE  3001               	movlw	1
  4217  1FEF                     u3015:
  4218  1FEF  1003               	clrc
  4219  1FF0  0CA1               	rrf	___lwdiv@divisor+1,f
  4220  1FF1  0CA0               	rrf	___lwdiv@divisor,f
  4221  1FF2  3EFF               	addlw	-1
  4222  1FF3  1D03               	skipz
  4223  1FF4  2FEF               	goto	u3015
  4224  1FF5                     l2299:
  4225  1FF5  3001               	movlw	1
  4226  1FF6  02A7               	subwf	___lwdiv@counter,f
  4227  1FF7  1D03               	btfss	3,2
  4228  1FF8  2FFA               	goto	u3021
  4229  1FF9  2FFB               	goto	u3020
  4230  1FFA                     u3021:
  4231  1FFA  2FD6               	goto	l2291
  4232  1FFB                     u3020:
  4233  1FFB                     l2301:
  4234  1FFB  0826               	movf	___lwdiv@quotient+1,w
  4235  1FFC  00A1               	movwf	?___lwdiv+1
  4236  1FFD  0825               	movf	___lwdiv@quotient,w
  4237  1FFE  00A0               	movwf	?___lwdiv
  4238  1FFF                     l837:
  4239  1FFF  0008               	return
  4240  2000                     __end_of___lwdiv:
  4241                           
  4242                           	psect	text9
  4243  0716                     __ptext9:	
  4244 ;; *************** function ___ftmul *****************
  4245 ;; Defined at:
  4246 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  f1              3   14[BANK0 ] float 
  4249 ;;  f2              3   17[BANK0 ] float 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  4252 ;;  sign            1   29[BANK0 ] unsigned char 
  4253 ;;  cntr            1   28[BANK0 ] unsigned char 
  4254 ;;  exp             1   24[BANK0 ] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  3   14[BANK0 ] float 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4264 ;;      Params:         0       6       0       0       0
  4265 ;;      Locals:         0       6       0       0       0
  4266 ;;      Temps:          0       4       0       0       0
  4267 ;;      Totals:         0      16       0       0       0
  4268 ;;Total ram usage:       16 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    2
  4271 ;; This function calls:
  4272 ;;		___ftpack
  4273 ;; This function is called by:
  4274 ;;		_main
  4275 ;;		_fround
  4276 ;;		_scale
  4277 ;;		_sprintf
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           
  4282                           ;psect for function ___ftmul
  4283  0716                     ___ftmul:
  4284  0716                     l2229:	
  4285                           ;incstack = 0
  4286                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4287                           
  4288  0716  1283               	bcf	3,5	;RP0=0, select bank0
  4289  0717  1303               	bcf	3,6	;RP1=0, select bank0
  4290  0718  082E               	movf	___ftmul@f1,w
  4291  0719  00B4               	movwf	??___ftmul
  4292  071A  082F               	movf	___ftmul@f1+1,w
  4293  071B  00B5               	movwf	??___ftmul+1
  4294  071C  0830               	movf	___ftmul@f1+2,w
  4295  071D  00B6               	movwf	??___ftmul+2
  4296  071E  1003               	clrc
  4297  071F  0D35               	rlf	??___ftmul+1,w
  4298  0720  0D36               	rlf	??___ftmul+2,w
  4299  0721  00B7               	movwf	??___ftmul+3
  4300  0722  0837               	movf	??___ftmul+3,w
  4301  0723  00B8               	movwf	___ftmul@exp
  4302  0724  0838               	movf	___ftmul@exp,w
  4303  0725  1D03               	btfss	3,2
  4304  0726  2F28               	goto	u2821
  4305  0727  2F29               	goto	u2820
  4306  0728                     u2821:
  4307  0728  2F30               	goto	l2235
  4308  0729                     u2820:
  4309  0729                     l2231:
  4310  0729  3000               	movlw	0
  4311  072A  00AE               	movwf	?___ftmul
  4312  072B  3000               	movlw	0
  4313  072C  00AF               	movwf	?___ftmul+1
  4314  072D  3000               	movlw	0
  4315  072E  00B0               	movwf	?___ftmul+2
  4316  072F  2FFA               	goto	l704
  4317  0730                     l2235:
  4318  0730  0831               	movf	___ftmul@f2,w
  4319  0731  00B4               	movwf	??___ftmul
  4320  0732  0832               	movf	___ftmul@f2+1,w
  4321  0733  00B5               	movwf	??___ftmul+1
  4322  0734  0833               	movf	___ftmul@f2+2,w
  4323  0735  00B6               	movwf	??___ftmul+2
  4324  0736  1003               	clrc
  4325  0737  0D35               	rlf	??___ftmul+1,w
  4326  0738  0D36               	rlf	??___ftmul+2,w
  4327  0739  00B7               	movwf	??___ftmul+3
  4328  073A  0837               	movf	??___ftmul+3,w
  4329  073B  00BD               	movwf	___ftmul@sign
  4330  073C  083D               	movf	___ftmul@sign,w
  4331  073D  1D03               	btfss	3,2
  4332  073E  2F40               	goto	u2831
  4333  073F  2F41               	goto	u2830
  4334  0740                     u2831:
  4335  0740  2F48               	goto	l2241
  4336  0741                     u2830:
  4337  0741                     l2237:
  4338  0741  3000               	movlw	0
  4339  0742  00AE               	movwf	?___ftmul
  4340  0743  3000               	movlw	0
  4341  0744  00AF               	movwf	?___ftmul+1
  4342  0745  3000               	movlw	0
  4343  0746  00B0               	movwf	?___ftmul+2
  4344  0747  2FFA               	goto	l704
  4345  0748                     l2241:
  4346  0748  083D               	movf	___ftmul@sign,w
  4347  0749  3E7B               	addlw	123
  4348  074A  00B4               	movwf	??___ftmul
  4349  074B  0834               	movf	??___ftmul,w
  4350  074C  07B8               	addwf	___ftmul@exp,f
  4351  074D  082E               	movf	___ftmul@f1,w
  4352  074E  00B4               	movwf	??___ftmul
  4353  074F  082F               	movf	___ftmul@f1+1,w
  4354  0750  00B5               	movwf	??___ftmul+1
  4355  0751  0830               	movf	___ftmul@f1+2,w
  4356  0752  00B6               	movwf	??___ftmul+2
  4357  0753  3010               	movlw	16
  4358  0754                     u2845:
  4359  0754  1003               	clrc
  4360  0755  0CB6               	rrf	??___ftmul+2,f
  4361  0756  0CB5               	rrf	??___ftmul+1,f
  4362  0757  0CB4               	rrf	??___ftmul,f
  4363  0758                     u2840:
  4364  0758  3EFF               	addlw	-1
  4365  0759  1D03               	skipz
  4366  075A  2F54               	goto	u2845
  4367  075B  0834               	movf	??___ftmul,w
  4368  075C  00B7               	movwf	??___ftmul+3
  4369  075D  0837               	movf	??___ftmul+3,w
  4370  075E  00BD               	movwf	___ftmul@sign
  4371  075F  0831               	movf	___ftmul@f2,w
  4372  0760  00B4               	movwf	??___ftmul
  4373  0761  0832               	movf	___ftmul@f2+1,w
  4374  0762  00B5               	movwf	??___ftmul+1
  4375  0763  0833               	movf	___ftmul@f2+2,w
  4376  0764  00B6               	movwf	??___ftmul+2
  4377  0765  3010               	movlw	16
  4378  0766                     u2855:
  4379  0766  1003               	clrc
  4380  0767  0CB6               	rrf	??___ftmul+2,f
  4381  0768  0CB5               	rrf	??___ftmul+1,f
  4382  0769  0CB4               	rrf	??___ftmul,f
  4383  076A                     u2850:
  4384  076A  3EFF               	addlw	-1
  4385  076B  1D03               	skipz
  4386  076C  2F66               	goto	u2855
  4387  076D  0834               	movf	??___ftmul,w
  4388  076E  00B7               	movwf	??___ftmul+3
  4389  076F  0837               	movf	??___ftmul+3,w
  4390  0770  06BD               	xorwf	___ftmul@sign,f
  4391  0771  3080               	movlw	128
  4392  0772  00B4               	movwf	??___ftmul
  4393  0773  0834               	movf	??___ftmul,w
  4394  0774  05BD               	andwf	___ftmul@sign,f
  4395  0775                     l2243:
  4396  0775  17AF               	bsf	___ftmul@f1+1,7
  4397  0776                     l2245:
  4398  0776  17B2               	bsf	___ftmul@f2+1,7
  4399  0777                     l2247:
  4400  0777  30FF               	movlw	255
  4401  0778  05B1               	andwf	___ftmul@f2,f
  4402  0779  30FF               	movlw	255
  4403  077A  05B2               	andwf	___ftmul@f2+1,f
  4404  077B  3000               	movlw	0
  4405  077C  05B3               	andwf	___ftmul@f2+2,f
  4406  077D                     l2249:
  4407  077D  3000               	movlw	0
  4408  077E  00B9               	movwf	___ftmul@f3_as_product
  4409  077F  3000               	movlw	0
  4410  0780  00BA               	movwf	___ftmul@f3_as_product+1
  4411  0781  3000               	movlw	0
  4412  0782  00BB               	movwf	___ftmul@f3_as_product+2
  4413  0783                     l2251:
  4414  0783  3007               	movlw	7
  4415  0784  00B4               	movwf	??___ftmul
  4416  0785  0834               	movf	??___ftmul,w
  4417  0786  00BC               	movwf	___ftmul@cntr
  4418  0787                     l2253:
  4419  0787  1C2E               	btfss	___ftmul@f1,0
  4420  0788  2F8A               	goto	u2861
  4421  0789  2F8B               	goto	u2860
  4422  078A                     u2861:
  4423  078A  2F9B               	goto	l2257
  4424  078B                     u2860:
  4425  078B                     l2255:
  4426  078B  0831               	movf	___ftmul@f2,w
  4427  078C  07B9               	addwf	___ftmul@f3_as_product,f
  4428  078D  0832               	movf	___ftmul@f2+1,w
  4429  078E  1103               	clrz
  4430  078F  1803               	skipnc
  4431  0790  0A32               	incf	___ftmul@f2+1,w
  4432  0791  1903               	skipnz
  4433  0792  2F94               	goto	u2871
  4434  0793  07BA               	addwf	___ftmul@f3_as_product+1,f
  4435  0794                     u2871:
  4436  0794  0833               	movf	___ftmul@f2+2,w
  4437  0795  1103               	clrz
  4438  0796  1803               	skipnc
  4439  0797  0A33               	incf	___ftmul@f2+2,w
  4440  0798  1903               	skipnz
  4441  0799  2F9B               	goto	u2872
  4442  079A  07BB               	addwf	___ftmul@f3_as_product+2,f
  4443  079B                     u2872:
  4444  079B                     l2257:
  4445  079B  3001               	movlw	1
  4446  079C                     u2885:
  4447  079C  1003               	clrc
  4448  079D  0CB0               	rrf	___ftmul@f1+2,f
  4449  079E  0CAF               	rrf	___ftmul@f1+1,f
  4450  079F  0CAE               	rrf	___ftmul@f1,f
  4451  07A0  3EFF               	addlw	-1
  4452  07A1  1D03               	skipz
  4453  07A2  2F9C               	goto	u2885
  4454  07A3                     l2259:
  4455  07A3  3001               	movlw	1
  4456  07A4                     u2895:
  4457  07A4  1003               	clrc
  4458  07A5  0DB1               	rlf	___ftmul@f2,f
  4459  07A6  0DB2               	rlf	___ftmul@f2+1,f
  4460  07A7  0DB3               	rlf	___ftmul@f2+2,f
  4461  07A8  3EFF               	addlw	-1
  4462  07A9  1D03               	skipz
  4463  07AA  2FA4               	goto	u2895
  4464  07AB                     l2261:
  4465  07AB  3001               	movlw	1
  4466  07AC  02BC               	subwf	___ftmul@cntr,f
  4467  07AD  1D03               	btfss	3,2
  4468  07AE  2FB0               	goto	u2901
  4469  07AF  2FB1               	goto	u2900
  4470  07B0                     u2901:
  4471  07B0  2F87               	goto	l2253
  4472  07B1                     u2900:
  4473  07B1                     l2263:
  4474  07B1  3009               	movlw	9
  4475  07B2  00B4               	movwf	??___ftmul
  4476  07B3  0834               	movf	??___ftmul,w
  4477  07B4  00BC               	movwf	___ftmul@cntr
  4478  07B5                     l2265:
  4479  07B5  1C2E               	btfss	___ftmul@f1,0
  4480  07B6  2FB8               	goto	u2911
  4481  07B7  2FB9               	goto	u2910
  4482  07B8                     u2911:
  4483  07B8  2FC9               	goto	l2269
  4484  07B9                     u2910:
  4485  07B9                     l2267:
  4486  07B9  0831               	movf	___ftmul@f2,w
  4487  07BA  07B9               	addwf	___ftmul@f3_as_product,f
  4488  07BB  0832               	movf	___ftmul@f2+1,w
  4489  07BC  1103               	clrz
  4490  07BD  1803               	skipnc
  4491  07BE  0A32               	incf	___ftmul@f2+1,w
  4492  07BF  1903               	skipnz
  4493  07C0  2FC2               	goto	u2921
  4494  07C1  07BA               	addwf	___ftmul@f3_as_product+1,f
  4495  07C2                     u2921:
  4496  07C2  0833               	movf	___ftmul@f2+2,w
  4497  07C3  1103               	clrz
  4498  07C4  1803               	skipnc
  4499  07C5  0A33               	incf	___ftmul@f2+2,w
  4500  07C6  1903               	skipnz
  4501  07C7  2FC9               	goto	u2922
  4502  07C8  07BB               	addwf	___ftmul@f3_as_product+2,f
  4503  07C9                     u2922:
  4504  07C9                     l2269:
  4505  07C9  3001               	movlw	1
  4506  07CA                     u2935:
  4507  07CA  1003               	clrc
  4508  07CB  0CB0               	rrf	___ftmul@f1+2,f
  4509  07CC  0CAF               	rrf	___ftmul@f1+1,f
  4510  07CD  0CAE               	rrf	___ftmul@f1,f
  4511  07CE  3EFF               	addlw	-1
  4512  07CF  1D03               	skipz
  4513  07D0  2FCA               	goto	u2935
  4514  07D1                     l2271:
  4515  07D1  3001               	movlw	1
  4516  07D2                     u2945:
  4517  07D2  1003               	clrc
  4518  07D3  0CBB               	rrf	___ftmul@f3_as_product+2,f
  4519  07D4  0CBA               	rrf	___ftmul@f3_as_product+1,f
  4520  07D5  0CB9               	rrf	___ftmul@f3_as_product,f
  4521  07D6  3EFF               	addlw	-1
  4522  07D7  1D03               	skipz
  4523  07D8  2FD2               	goto	u2945
  4524  07D9                     l2273:
  4525  07D9  3001               	movlw	1
  4526  07DA  02BC               	subwf	___ftmul@cntr,f
  4527  07DB  1D03               	btfss	3,2
  4528  07DC  2FDE               	goto	u2951
  4529  07DD  2FDF               	goto	u2950
  4530  07DE                     u2951:
  4531  07DE  2FB5               	goto	l2265
  4532  07DF                     u2950:
  4533  07DF                     l2275:
  4534  07DF  0839               	movf	___ftmul@f3_as_product,w
  4535  07E0  00F4               	movwf	___ftpack@arg
  4536  07E1  083A               	movf	___ftmul@f3_as_product+1,w
  4537  07E2  00F5               	movwf	___ftpack@arg+1
  4538  07E3  083B               	movf	___ftmul@f3_as_product+2,w
  4539  07E4  00F6               	movwf	___ftpack@arg+2
  4540  07E5  0838               	movf	___ftmul@exp,w
  4541  07E6  00B4               	movwf	??___ftmul
  4542  07E7  0834               	movf	??___ftmul,w
  4543  07E8  00F7               	movwf	___ftpack@exp
  4544  07E9  083D               	movf	___ftmul@sign,w
  4545  07EA  00B5               	movwf	??___ftmul+1
  4546  07EB  0835               	movf	??___ftmul+1,w
  4547  07EC  00F8               	movwf	___ftpack@sign
  4548  07ED  160A  118A  22FF  120A  118A  	fcall	___ftpack
  4549  07F2  0874               	movf	?___ftpack,w
  4550  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  4551  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  4552  07F5  00AE               	movwf	?___ftmul
  4553  07F6  0875               	movf	?___ftpack+1,w
  4554  07F7  00AF               	movwf	?___ftmul+1
  4555  07F8  0876               	movf	?___ftpack+2,w
  4556  07F9  00B0               	movwf	?___ftmul+2
  4557  07FA                     l704:
  4558  07FA  0008               	return
  4559  07FB                     __end_of___ftmul:
  4560                           
  4561                           	psect	text10
  4562  1DB6                     __ptext10:	
  4563 ;; *************** function ___bmul *****************
  4564 ;; Defined at:
  4565 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  multiplier      1    wreg     unsigned char 
  4568 ;;  multiplicand    1   10[BANK0 ] unsigned char 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  multiplier      1   13[BANK0 ] unsigned char 
  4571 ;;  product         1   12[BANK0 ] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      unsigned char 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4581 ;;      Params:         0       1       0       0       0
  4582 ;;      Locals:         0       2       0       0       0
  4583 ;;      Temps:          0       1       0       0       0
  4584 ;;      Totals:         0       4       0       0       0
  4585 ;;Total ram usage:        4 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    1
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_fround
  4592 ;;		_scale
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           
  4597                           ;psect for function ___bmul
  4598  1DB6                     ___bmul:
  4599                           
  4600                           ;incstack = 0
  4601                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4602                           ;___bmul@multiplier stored from wreg
  4603  1DB6  1283               	bcf	3,5	;RP0=0, select bank0
  4604  1DB7  1303               	bcf	3,6	;RP1=0, select bank0
  4605  1DB8  00AD               	movwf	___bmul@multiplier
  4606  1DB9                     l2063:
  4607  1DB9  01AC               	clrf	___bmul@product
  4608  1DBA                     l2065:
  4609  1DBA  1C2D               	btfss	___bmul@multiplier,0
  4610  1DBB  2DBD               	goto	u2371
  4611  1DBC  2DBE               	goto	u2370
  4612  1DBD                     u2371:
  4613  1DBD  2DC2               	goto	l2069
  4614  1DBE                     u2370:
  4615  1DBE                     l2067:
  4616  1DBE  082A               	movf	___bmul@multiplicand,w
  4617  1DBF  00AB               	movwf	??___bmul
  4618  1DC0  082B               	movf	??___bmul,w
  4619  1DC1  07AC               	addwf	___bmul@product,f
  4620  1DC2                     l2069:
  4621  1DC2  1003               	clrc
  4622  1DC3  0DAA               	rlf	___bmul@multiplicand,f
  4623  1DC4                     l2071:
  4624  1DC4  1003               	clrc
  4625  1DC5  0CAD               	rrf	___bmul@multiplier,f
  4626  1DC6  082D               	movf	___bmul@multiplier,w
  4627  1DC7  1D03               	btfss	3,2
  4628  1DC8  2DCA               	goto	u2381
  4629  1DC9  2DCB               	goto	u2380
  4630  1DCA                     u2381:
  4631  1DCA  2DBA               	goto	l2065
  4632  1DCB                     u2380:
  4633  1DCB                     l2073:
  4634  1DCB  082C               	movf	___bmul@product,w
  4635  1DCC                     l421:
  4636  1DCC  0008               	return
  4637  1DCD                     __end_of___bmul:
  4638                           
  4639                           	psect	text11
  4640  1381                     __ptext11:	
  4641 ;; *************** function __tdiv_to_l_ *****************
  4642 ;; Defined at:
  4643 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  f1              3    4[COMMON] float 
  4646 ;;  f2              3    7[COMMON] float 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  quot            4    4[BANK0 ] unsigned long 
  4649 ;;  exp1            1    9[BANK0 ] unsigned char 
  4650 ;;  cntr            1    8[BANK0 ] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  4    4[COMMON] unsigned long 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4660 ;;      Params:         6       0       0       0       0
  4661 ;;      Locals:         0       6       0       0       0
  4662 ;;      Temps:          0       4       0       0       0
  4663 ;;      Totals:         6      10       0       0       0
  4664 ;;Total ram usage:       16 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    1
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_sprintf
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           
  4675                           ;psect for function __tdiv_to_l_
  4676  1381                     __tdiv_to_l_:
  4677  1381                     l2439:	
  4678                           ;incstack = 0
  4679                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4680                           
  4681  1381  0874               	movf	__tdiv_to_l_@f1,w
  4682  1382  1283               	bcf	3,5	;RP0=0, select bank0
  4683  1383  1303               	bcf	3,6	;RP1=0, select bank0
  4684  1384  00A0               	movwf	??__tdiv_to_l_
  4685  1385  0875               	movf	__tdiv_to_l_@f1+1,w
  4686  1386  00A1               	movwf	??__tdiv_to_l_+1
  4687  1387  0876               	movf	__tdiv_to_l_@f1+2,w
  4688  1388  00A2               	movwf	??__tdiv_to_l_+2
  4689  1389  1003               	clrc
  4690  138A  0D21               	rlf	??__tdiv_to_l_+1,w
  4691  138B  0D22               	rlf	??__tdiv_to_l_+2,w
  4692  138C  00A3               	movwf	??__tdiv_to_l_+3
  4693  138D  0823               	movf	??__tdiv_to_l_+3,w
  4694  138E  00A9               	movwf	__tdiv_to_l_@exp1
  4695  138F  0829               	movf	__tdiv_to_l_@exp1,w
  4696  1390  1D03               	btfss	3,2
  4697  1391  2B93               	goto	u3191
  4698  1392  2B94               	goto	u3190
  4699  1393                     u3191:
  4700  1393  2B9D               	goto	l2445
  4701  1394                     u3190:
  4702  1394                     l2441:
  4703  1394  3000               	movlw	0
  4704  1395  00F7               	movwf	?__tdiv_to_l_+3
  4705  1396  3000               	movlw	0
  4706  1397  00F6               	movwf	?__tdiv_to_l_+2
  4707  1398  3000               	movlw	0
  4708  1399  00F5               	movwf	?__tdiv_to_l_+1
  4709  139A  3000               	movlw	0
  4710  139B  00F4               	movwf	?__tdiv_to_l_
  4711  139C  2C3D               	goto	l680
  4712  139D                     l2445:
  4713  139D  0877               	movf	__tdiv_to_l_@f2,w
  4714  139E  00A0               	movwf	??__tdiv_to_l_
  4715  139F  0878               	movf	__tdiv_to_l_@f2+1,w
  4716  13A0  00A1               	movwf	??__tdiv_to_l_+1
  4717  13A1  0879               	movf	__tdiv_to_l_@f2+2,w
  4718  13A2  00A2               	movwf	??__tdiv_to_l_+2
  4719  13A3  1003               	clrc
  4720  13A4  0D21               	rlf	??__tdiv_to_l_+1,w
  4721  13A5  0D22               	rlf	??__tdiv_to_l_+2,w
  4722  13A6  00A3               	movwf	??__tdiv_to_l_+3
  4723  13A7  0823               	movf	??__tdiv_to_l_+3,w
  4724  13A8  00A8               	movwf	__tdiv_to_l_@cntr
  4725  13A9  0828               	movf	__tdiv_to_l_@cntr,w
  4726  13AA  1D03               	btfss	3,2
  4727  13AB  2BAD               	goto	u3201
  4728  13AC  2BAE               	goto	u3200
  4729  13AD                     u3201:
  4730  13AD  2BAF               	goto	l681
  4731  13AE                     u3200:
  4732  13AE  2B94               	goto	l2441
  4733  13AF                     l681:
  4734  13AF  17F5               	bsf	__tdiv_to_l_@f1+1,7
  4735  13B0                     l2451:
  4736  13B0  30FF               	movlw	255
  4737  13B1  05F4               	andwf	__tdiv_to_l_@f1,f
  4738  13B2  30FF               	movlw	255
  4739  13B3  05F5               	andwf	__tdiv_to_l_@f1+1,f
  4740  13B4  3000               	movlw	0
  4741  13B5  05F6               	andwf	__tdiv_to_l_@f1+2,f
  4742  13B6                     l2453:
  4743  13B6  17F8               	bsf	__tdiv_to_l_@f2+1,7
  4744  13B7  30FF               	movlw	255
  4745  13B8  05F7               	andwf	__tdiv_to_l_@f2,f
  4746  13B9  30FF               	movlw	255
  4747  13BA  05F8               	andwf	__tdiv_to_l_@f2+1,f
  4748  13BB  3000               	movlw	0
  4749  13BC  05F9               	andwf	__tdiv_to_l_@f2+2,f
  4750  13BD  3000               	movlw	0
  4751  13BE  00A7               	movwf	__tdiv_to_l_@quot+3
  4752  13BF  3000               	movlw	0
  4753  13C0  00A6               	movwf	__tdiv_to_l_@quot+2
  4754  13C1  3000               	movlw	0
  4755  13C2  00A5               	movwf	__tdiv_to_l_@quot+1
  4756  13C3  3000               	movlw	0
  4757  13C4  00A4               	movwf	__tdiv_to_l_@quot
  4758  13C5                     l2455:
  4759  13C5  307F               	movlw	127
  4760  13C6  02A9               	subwf	__tdiv_to_l_@exp1,f
  4761  13C7                     l2457:
  4762  13C7  3098               	movlw	152
  4763  13C8  0728               	addwf	__tdiv_to_l_@cntr,w
  4764  13C9  00A0               	movwf	??__tdiv_to_l_
  4765  13CA  0820               	movf	??__tdiv_to_l_,w
  4766  13CB  02A9               	subwf	__tdiv_to_l_@exp1,f
  4767  13CC  3018               	movlw	24
  4768  13CD  00A0               	movwf	??__tdiv_to_l_
  4769  13CE  0820               	movf	??__tdiv_to_l_,w
  4770  13CF  00A8               	movwf	__tdiv_to_l_@cntr
  4771  13D0                     l2459:
  4772  13D0  3001               	movlw	1
  4773  13D1  00A0               	movwf	??__tdiv_to_l_
  4774  13D2                     u3215:
  4775  13D2  1003               	clrc
  4776  13D3  0DA4               	rlf	__tdiv_to_l_@quot,f
  4777  13D4  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4778  13D5  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4779  13D6  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4780  13D7  0BA0               	decfsz	??__tdiv_to_l_,f
  4781  13D8  2BD2               	goto	u3215
  4782  13D9                     l2461:
  4783  13D9  0879               	movf	__tdiv_to_l_@f2+2,w
  4784  13DA  0276               	subwf	__tdiv_to_l_@f1+2,w
  4785  13DB  1D03               	skipz
  4786  13DC  2BE3               	goto	u3225
  4787  13DD  0878               	movf	__tdiv_to_l_@f2+1,w
  4788  13DE  0275               	subwf	__tdiv_to_l_@f1+1,w
  4789  13DF  1D03               	skipz
  4790  13E0  2BE3               	goto	u3225
  4791  13E1  0877               	movf	__tdiv_to_l_@f2,w
  4792  13E2  0274               	subwf	__tdiv_to_l_@f1,w
  4793  13E3                     u3225:
  4794  13E3  1C03               	skipc
  4795  13E4  2BE6               	goto	u3221
  4796  13E5  2BE7               	goto	u3220
  4797  13E6                     u3221:
  4798  13E6  2BF2               	goto	l2467
  4799  13E7                     u3220:
  4800  13E7                     l2463:
  4801  13E7  0877               	movf	__tdiv_to_l_@f2,w
  4802  13E8  02F4               	subwf	__tdiv_to_l_@f1,f
  4803  13E9  0878               	movf	__tdiv_to_l_@f2+1,w
  4804  13EA  1C03               	skipc
  4805  13EB  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  4806  13EC  02F5               	subwf	__tdiv_to_l_@f1+1,f
  4807  13ED  0879               	movf	__tdiv_to_l_@f2+2,w
  4808  13EE  1C03               	skipc
  4809  13EF  0A79               	incf	__tdiv_to_l_@f2+2,w
  4810  13F0  02F6               	subwf	__tdiv_to_l_@f1+2,f
  4811  13F1                     l2465:
  4812  13F1  1424               	bsf	__tdiv_to_l_@quot,0
  4813  13F2                     l2467:
  4814  13F2  3001               	movlw	1
  4815  13F3                     u3235:
  4816  13F3  1003               	clrc
  4817  13F4  0DF4               	rlf	__tdiv_to_l_@f1,f
  4818  13F5  0DF5               	rlf	__tdiv_to_l_@f1+1,f
  4819  13F6  0DF6               	rlf	__tdiv_to_l_@f1+2,f
  4820  13F7  3EFF               	addlw	-1
  4821  13F8  1D03               	skipz
  4822  13F9  2BF3               	goto	u3235
  4823  13FA                     l2469:
  4824  13FA  3001               	movlw	1
  4825  13FB  02A8               	subwf	__tdiv_to_l_@cntr,f
  4826  13FC  1D03               	btfss	3,2
  4827  13FD  2BFF               	goto	u3241
  4828  13FE  2C00               	goto	u3240
  4829  13FF                     u3241:
  4830  13FF  2BD0               	goto	l2459
  4831  1400                     u3240:
  4832  1400                     l684:
  4833  1400  1FA9               	btfss	__tdiv_to_l_@exp1,7
  4834  1401  2C03               	goto	u3251
  4835  1402  2C04               	goto	u3250
  4836  1403                     u3251:
  4837  1403  2C1E               	goto	l2479
  4838  1404                     u3250:
  4839  1404                     l2471:
  4840  1404  0829               	movf	__tdiv_to_l_@exp1,w
  4841  1405  3A80               	xorlw	128
  4842  1406  3E97               	addlw	151
  4843  1407  1803               	skipnc
  4844  1408  2C0A               	goto	u3261
  4845  1409  2C0B               	goto	u3260
  4846  140A                     u3261:
  4847  140A  2C0C               	goto	l2477
  4848  140B                     u3260:
  4849  140B  2B94               	goto	l2441
  4850  140C                     l2477:
  4851  140C  3001               	movlw	1
  4852  140D                     u3275:
  4853  140D  1003               	clrc
  4854  140E  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  4855  140F  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  4856  1410  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  4857  1411  0CA4               	rrf	__tdiv_to_l_@quot,f
  4858  1412  3EFF               	addlw	-1
  4859  1413  1D03               	skipz
  4860  1414  2C0D               	goto	u3275
  4861  1415  3001               	movlw	1
  4862  1416  00A0               	movwf	??__tdiv_to_l_
  4863  1417  0820               	movf	??__tdiv_to_l_,w
  4864  1418  07A9               	addwf	__tdiv_to_l_@exp1,f
  4865  1419  1D03               	btfss	3,2
  4866  141A  2C1C               	goto	u3281
  4867  141B  2C1D               	goto	u3280
  4868  141C                     u3281:
  4869  141C  2C0C               	goto	l2477
  4870  141D                     u3280:
  4871  141D  2C35               	goto	l2487
  4872  141E                     l2479:
  4873  141E  3018               	movlw	24
  4874  141F  0229               	subwf	__tdiv_to_l_@exp1,w
  4875  1420  1C03               	skipc
  4876  1421  2C23               	goto	u3291
  4877  1422  2C24               	goto	u3290
  4878  1423                     u3291:
  4879  1423  2C30               	goto	l691
  4880  1424                     u3290:
  4881  1424  2B94               	goto	l2441
  4882  1425                     l2485:
  4883  1425  3001               	movlw	1
  4884  1426  00A0               	movwf	??__tdiv_to_l_
  4885  1427                     u3305:
  4886  1427  1003               	clrc
  4887  1428  0DA4               	rlf	__tdiv_to_l_@quot,f
  4888  1429  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4889  142A  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4890  142B  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4891  142C  0BA0               	decfsz	??__tdiv_to_l_,f
  4892  142D  2C27               	goto	u3305
  4893  142E  3001               	movlw	1
  4894  142F  02A9               	subwf	__tdiv_to_l_@exp1,f
  4895  1430                     l691:
  4896  1430  0829               	movf	__tdiv_to_l_@exp1,w
  4897  1431  1D03               	btfss	3,2
  4898  1432  2C34               	goto	u3311
  4899  1433  2C35               	goto	u3310
  4900  1434                     u3311:
  4901  1434  2C25               	goto	l2485
  4902  1435                     u3310:
  4903  1435                     l2487:
  4904  1435  0827               	movf	__tdiv_to_l_@quot+3,w
  4905  1436  00F7               	movwf	?__tdiv_to_l_+3
  4906  1437  0826               	movf	__tdiv_to_l_@quot+2,w
  4907  1438  00F6               	movwf	?__tdiv_to_l_+2
  4908  1439  0825               	movf	__tdiv_to_l_@quot+1,w
  4909  143A  00F5               	movwf	?__tdiv_to_l_+1
  4910  143B  0824               	movf	__tdiv_to_l_@quot,w
  4911  143C  00F4               	movwf	?__tdiv_to_l_
  4912  143D                     l680:
  4913  143D  0008               	return
  4914  143E                     __end_of__tdiv_to_l_:
  4915                           
  4916                           	psect	text12
  4917  143E                     __ptext12:	
  4918 ;; *************** function __div_to_l_ *****************
  4919 ;; Defined at:
  4920 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  f1              3    4[COMMON] unsigned long 
  4923 ;;  f2              3    7[COMMON] unsigned long 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  quot            4    8[BANK0 ] unsigned long 
  4926 ;;  exp1            1   13[BANK0 ] unsigned char 
  4927 ;;  cntr            1   12[BANK0 ] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  4    4[COMMON] unsigned long 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4937 ;;      Params:         6       0       0       0       0
  4938 ;;      Locals:         0       6       0       0       0
  4939 ;;      Temps:          0       8       0       0       0
  4940 ;;      Totals:         6      14       0       0       0
  4941 ;;Total ram usage:       20 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:    1
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_sprintf
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           
  4952                           ;psect for function __div_to_l_
  4953  143E                     __div_to_l_:
  4954  143E                     l2491:	
  4955                           ;incstack = 0
  4956                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4957                           
  4958  143E  3074               	movlw	low (__div_to_l_@f1| 0)
  4959  143F  0084               	movwf	4
  4960  1440  0800               	movf	0,w
  4961  1441  1283               	bcf	3,5	;RP0=0, select bank0
  4962  1442  1303               	bcf	3,6	;RP1=0, select bank0
  4963  1443  00A0               	movwf	??__div_to_l_
  4964  1444  0A84               	incf	4,f
  4965  1445  0800               	movf	0,w
  4966  1446  00A1               	movwf	??__div_to_l_+1
  4967  1447  0A84               	incf	4,f
  4968  1448  0800               	movf	0,w
  4969  1449  00A2               	movwf	??__div_to_l_+2
  4970  144A  0A84               	incf	4,f
  4971  144B  0800               	movf	0,w
  4972  144C  00A3               	movwf	??__div_to_l_+3
  4973  144D  1003               	clrc
  4974  144E  0D22               	rlf	??__div_to_l_+2,w
  4975  144F  0D23               	rlf	??__div_to_l_+3,w
  4976  1450  00A4               	movwf	??__div_to_l_+4
  4977  1451  0824               	movf	??__div_to_l_+4,w
  4978  1452  00AD               	movwf	__div_to_l_@exp1
  4979  1453  082D               	movf	__div_to_l_@exp1,w
  4980  1454  1D03               	btfss	3,2
  4981  1455  2C57               	goto	u3321
  4982  1456  2C58               	goto	u3320
  4983  1457                     u3321:
  4984  1457  2C61               	goto	l2497
  4985  1458                     u3320:
  4986  1458                     l2493:
  4987  1458  3000               	movlw	0
  4988  1459  00F7               	movwf	?__div_to_l_+3
  4989  145A  3000               	movlw	0
  4990  145B  00F6               	movwf	?__div_to_l_+2
  4991  145C  3000               	movlw	0
  4992  145D  00F5               	movwf	?__div_to_l_+1
  4993  145E  3000               	movlw	0
  4994  145F  00F4               	movwf	?__div_to_l_
  4995  1460  2D69               	goto	l601
  4996  1461                     l2497:
  4997  1461  3077               	movlw	low (__div_to_l_@f2| 0)
  4998  1462  0084               	movwf	4
  4999  1463  0800               	movf	0,w
  5000  1464  00A0               	movwf	??__div_to_l_
  5001  1465  0A84               	incf	4,f
  5002  1466  0800               	movf	0,w
  5003  1467  00A1               	movwf	??__div_to_l_+1
  5004  1468  0A84               	incf	4,f
  5005  1469  0800               	movf	0,w
  5006  146A  00A2               	movwf	??__div_to_l_+2
  5007  146B  0A84               	incf	4,f
  5008  146C  0800               	movf	0,w
  5009  146D  00A3               	movwf	??__div_to_l_+3
  5010  146E  1003               	clrc
  5011  146F  0D22               	rlf	??__div_to_l_+2,w
  5012  1470  0D23               	rlf	??__div_to_l_+3,w
  5013  1471  00A4               	movwf	??__div_to_l_+4
  5014  1472  0824               	movf	??__div_to_l_+4,w
  5015  1473  00AC               	movwf	__div_to_l_@cntr
  5016  1474  082C               	movf	__div_to_l_@cntr,w
  5017  1475  1D03               	btfss	3,2
  5018  1476  2C78               	goto	u3331
  5019  1477  2C79               	goto	u3330
  5020  1478                     u3331:
  5021  1478  2C7A               	goto	l2503
  5022  1479                     u3330:
  5023  1479  2C58               	goto	l2493
  5024  147A                     l2503:
  5025  147A  3074               	movlw	low (__div_to_l_@f1| 0)
  5026  147B  0084               	movwf	4
  5027  147C  3000               	movlw	0
  5028  147D  0480               	iorwf	0,f
  5029  147E  0A84               	incf	4,f
  5030  147F  3000               	movlw	0
  5031  1480  0480               	iorwf	0,f
  5032  1481  0A84               	incf	4,f
  5033  1482  3080               	movlw	128
  5034  1483  0480               	iorwf	0,f
  5035  1484  0A84               	incf	4,f
  5036  1485  3000               	movlw	0
  5037  1486  0480               	iorwf	0,f
  5038  1487  3074               	movlw	low (__div_to_l_@f1| 0)
  5039  1488  0084               	movwf	4
  5040  1489  30FF               	movlw	255
  5041  148A  0580               	andwf	0,f
  5042  148B  0A84               	incf	4,f
  5043  148C  30FF               	movlw	255
  5044  148D  0580               	andwf	0,f
  5045  148E  0A84               	incf	4,f
  5046  148F  30FF               	movlw	255
  5047  1490  0580               	andwf	0,f
  5048  1491  0A84               	incf	4,f
  5049  1492  3000               	movlw	0
  5050  1493  0580               	andwf	0,f
  5051  1494  3077               	movlw	low (__div_to_l_@f2| 0)
  5052  1495  0084               	movwf	4
  5053  1496  3000               	movlw	0
  5054  1497  0480               	iorwf	0,f
  5055  1498  0A84               	incf	4,f
  5056  1499  3000               	movlw	0
  5057  149A  0480               	iorwf	0,f
  5058  149B  0A84               	incf	4,f
  5059  149C  3080               	movlw	128
  5060  149D  0480               	iorwf	0,f
  5061  149E  0A84               	incf	4,f
  5062  149F  3000               	movlw	0
  5063  14A0  0480               	iorwf	0,f
  5064  14A1  3077               	movlw	low (__div_to_l_@f2| 0)
  5065  14A2  0084               	movwf	4
  5066  14A3  30FF               	movlw	255
  5067  14A4  0580               	andwf	0,f
  5068  14A5  0A84               	incf	4,f
  5069  14A6  30FF               	movlw	255
  5070  14A7  0580               	andwf	0,f
  5071  14A8  0A84               	incf	4,f
  5072  14A9  30FF               	movlw	255
  5073  14AA  0580               	andwf	0,f
  5074  14AB  0A84               	incf	4,f
  5075  14AC  3000               	movlw	0
  5076  14AD  0580               	andwf	0,f
  5077  14AE                     l2505:
  5078  14AE  3000               	movlw	0
  5079  14AF  00AB               	movwf	__div_to_l_@quot+3
  5080  14B0  3000               	movlw	0
  5081  14B1  00AA               	movwf	__div_to_l_@quot+2
  5082  14B2  3000               	movlw	0
  5083  14B3  00A9               	movwf	__div_to_l_@quot+1
  5084  14B4  3000               	movlw	0
  5085  14B5  00A8               	movwf	__div_to_l_@quot
  5086  14B6                     l2507:
  5087  14B6  307F               	movlw	127
  5088  14B7  02AD               	subwf	__div_to_l_@exp1,f
  5089  14B8                     l2509:
  5090  14B8  30A0               	movlw	160
  5091  14B9  072C               	addwf	__div_to_l_@cntr,w
  5092  14BA  00A0               	movwf	??__div_to_l_
  5093  14BB  0820               	movf	??__div_to_l_,w
  5094  14BC  02AD               	subwf	__div_to_l_@exp1,f
  5095  14BD                     l2511:
  5096  14BD  3020               	movlw	32
  5097  14BE  00A0               	movwf	??__div_to_l_
  5098  14BF  0820               	movf	??__div_to_l_,w
  5099  14C0  00AC               	movwf	__div_to_l_@cntr
  5100  14C1                     l2513:
  5101  14C1  3001               	movlw	1
  5102  14C2  00A0               	movwf	??__div_to_l_
  5103  14C3                     u3345:
  5104  14C3  1003               	clrc
  5105  14C4  0DA8               	rlf	__div_to_l_@quot,f
  5106  14C5  0DA9               	rlf	__div_to_l_@quot+1,f
  5107  14C6  0DAA               	rlf	__div_to_l_@quot+2,f
  5108  14C7  0DAB               	rlf	__div_to_l_@quot+3,f
  5109  14C8  0BA0               	decfsz	??__div_to_l_,f
  5110  14C9  2CC3               	goto	u3345
  5111  14CA                     l2515:
  5112  14CA  3077               	movlw	low (__div_to_l_@f2| 0)
  5113  14CB  0084               	movwf	4
  5114  14CC  0800               	movf	0,w
  5115  14CD  00A0               	movwf	??__div_to_l_
  5116  14CE  0A84               	incf	4,f
  5117  14CF  0800               	movf	0,w
  5118  14D0  00A1               	movwf	??__div_to_l_+1
  5119  14D1  0A84               	incf	4,f
  5120  14D2  0800               	movf	0,w
  5121  14D3  00A2               	movwf	??__div_to_l_+2
  5122  14D4  0A84               	incf	4,f
  5123  14D5  0800               	movf	0,w
  5124  14D6  00A3               	movwf	??__div_to_l_+3
  5125  14D7  3074               	movlw	low (__div_to_l_@f1| 0)
  5126  14D8  0084               	movwf	4
  5127  14D9  0800               	movf	0,w
  5128  14DA  00A4               	movwf	??__div_to_l_+4
  5129  14DB  0A84               	incf	4,f
  5130  14DC  0800               	movf	0,w
  5131  14DD  00A5               	movwf	??__div_to_l_+5
  5132  14DE  0A84               	incf	4,f
  5133  14DF  0800               	movf	0,w
  5134  14E0  00A6               	movwf	??__div_to_l_+6
  5135  14E1  0A84               	incf	4,f
  5136  14E2  0800               	movf	0,w
  5137  14E3  00A7               	movwf	??__div_to_l_+7
  5138  14E4  0823               	movf	??__div_to_l_+3,w
  5139  14E5  0227               	subwf	??__div_to_l_+7,w
  5140  14E6  1D03               	skipz
  5141  14E7  2CF2               	goto	u3355
  5142  14E8  0822               	movf	??__div_to_l_+2,w
  5143  14E9  0226               	subwf	??__div_to_l_+6,w
  5144  14EA  1D03               	skipz
  5145  14EB  2CF2               	goto	u3355
  5146  14EC  0821               	movf	??__div_to_l_+1,w
  5147  14ED  0225               	subwf	??__div_to_l_+5,w
  5148  14EE  1D03               	skipz
  5149  14EF  2CF2               	goto	u3355
  5150  14F0  0820               	movf	??__div_to_l_,w
  5151  14F1  0224               	subwf	??__div_to_l_+4,w
  5152  14F2                     u3355:
  5153  14F2  1C03               	skipc
  5154  14F3  2CF5               	goto	u3351
  5155  14F4  2CF6               	goto	u3350
  5156  14F5                     u3351:
  5157  14F5  2D19               	goto	l604
  5158  14F6                     u3350:
  5159  14F6                     l2517:
  5160  14F6  3077               	movlw	low (__div_to_l_@f2| 0)
  5161  14F7  0084               	movwf	4
  5162  14F8  0800               	movf	0,w
  5163  14F9  00A0               	movwf	??__div_to_l_
  5164  14FA  0A84               	incf	4,f
  5165  14FB  0800               	movf	0,w
  5166  14FC  00A1               	movwf	??__div_to_l_+1
  5167  14FD  0A84               	incf	4,f
  5168  14FE  0800               	movf	0,w
  5169  14FF  00A2               	movwf	??__div_to_l_+2
  5170  1500  0A84               	incf	4,f
  5171  1501  0800               	movf	0,w
  5172  1502  00A3               	movwf	??__div_to_l_+3
  5173  1503  3074               	movlw	low (__div_to_l_@f1| 0)
  5174  1504  0084               	movwf	4
  5175  1505  0820               	movf	??__div_to_l_,w
  5176  1506  0280               	subwf	0,f
  5177  1507  0A84               	incf	4,f
  5178  1508  0821               	movf	??__div_to_l_+1,w
  5179  1509  1C03               	skipc
  5180  150A  0F21               	incfsz	??__div_to_l_+1,w
  5181  150B  0280               	subwf	0,f
  5182  150C  0A84               	incf	4,f
  5183  150D  0822               	movf	??__div_to_l_+2,w
  5184  150E  1C03               	skipc
  5185  150F  0F22               	incfsz	??__div_to_l_+2,w
  5186  1510  0280               	subwf	0,f
  5187  1511  0A84               	incf	4,f
  5188  1512  0823               	movf	??__div_to_l_+3,w
  5189  1513  1C03               	skipc
  5190  1514  0A23               	incf	??__div_to_l_+3,w
  5191  1515  0280               	subwf	0,f
  5192  1516  3003               	movlw	3
  5193  1517  0284               	subwf	4,f
  5194  1518                     l2519:
  5195  1518  1428               	bsf	__div_to_l_@quot,0
  5196  1519                     l604:
  5197  1519  3074               	movlw	low (__div_to_l_@f1| 0)
  5198  151A  0084               	movwf	4
  5199  151B  1003               	clrc
  5200  151C  0D80               	rlf	0,f
  5201  151D  0A84               	incf	4,f
  5202  151E  0D80               	rlf	0,f
  5203  151F  0A84               	incf	4,f
  5204  1520  0D80               	rlf	0,f
  5205  1521  0A84               	incf	4,f
  5206  1522  0D80               	rlf	0,f
  5207  1523  0384               	decf	4,f
  5208  1524  0384               	decf	4,f
  5209  1525  0384               	decf	4,f
  5210  1526                     l2521:
  5211  1526  3001               	movlw	1
  5212  1527  02AC               	subwf	__div_to_l_@cntr,f
  5213  1528  1D03               	btfss	3,2
  5214  1529  2D2B               	goto	u3361
  5215  152A  2D2C               	goto	u3360
  5216  152B                     u3361:
  5217  152B  2CC1               	goto	l2513
  5218  152C                     u3360:
  5219  152C                     l605:
  5220  152C  1FAD               	btfss	__div_to_l_@exp1,7
  5221  152D  2D2F               	goto	u3371
  5222  152E  2D30               	goto	u3370
  5223  152F                     u3371:
  5224  152F  2D4A               	goto	l2531
  5225  1530                     u3370:
  5226  1530                     l2523:
  5227  1530  082D               	movf	__div_to_l_@exp1,w
  5228  1531  3A80               	xorlw	128
  5229  1532  3E9F               	addlw	159
  5230  1533  1803               	skipnc
  5231  1534  2D36               	goto	u3381
  5232  1535  2D37               	goto	u3380
  5233  1536                     u3381:
  5234  1536  2D38               	goto	l2529
  5235  1537                     u3380:
  5236  1537  2C58               	goto	l2493
  5237  1538                     l2529:
  5238  1538  3001               	movlw	1
  5239  1539                     u3395:
  5240  1539  1003               	clrc
  5241  153A  0CAB               	rrf	__div_to_l_@quot+3,f
  5242  153B  0CAA               	rrf	__div_to_l_@quot+2,f
  5243  153C  0CA9               	rrf	__div_to_l_@quot+1,f
  5244  153D  0CA8               	rrf	__div_to_l_@quot,f
  5245  153E  3EFF               	addlw	-1
  5246  153F  1D03               	skipz
  5247  1540  2D39               	goto	u3395
  5248  1541  3001               	movlw	1
  5249  1542  00A0               	movwf	??__div_to_l_
  5250  1543  0820               	movf	??__div_to_l_,w
  5251  1544  07AD               	addwf	__div_to_l_@exp1,f
  5252  1545  1D03               	btfss	3,2
  5253  1546  2D48               	goto	u3401
  5254  1547  2D49               	goto	u3400
  5255  1548                     u3401:
  5256  1548  2D38               	goto	l2529
  5257  1549                     u3400:
  5258  1549  2D61               	goto	l2539
  5259  154A                     l2531:
  5260  154A  3020               	movlw	32
  5261  154B  022D               	subwf	__div_to_l_@exp1,w
  5262  154C  1C03               	skipc
  5263  154D  2D4F               	goto	u3411
  5264  154E  2D50               	goto	u3410
  5265  154F                     u3411:
  5266  154F  2D5C               	goto	l612
  5267  1550                     u3410:
  5268  1550  2C58               	goto	l2493
  5269  1551                     l2537:
  5270  1551  3001               	movlw	1
  5271  1552  00A0               	movwf	??__div_to_l_
  5272  1553                     u3425:
  5273  1553  1003               	clrc
  5274  1554  0DA8               	rlf	__div_to_l_@quot,f
  5275  1555  0DA9               	rlf	__div_to_l_@quot+1,f
  5276  1556  0DAA               	rlf	__div_to_l_@quot+2,f
  5277  1557  0DAB               	rlf	__div_to_l_@quot+3,f
  5278  1558  0BA0               	decfsz	??__div_to_l_,f
  5279  1559  2D53               	goto	u3425
  5280  155A  3001               	movlw	1
  5281  155B  02AD               	subwf	__div_to_l_@exp1,f
  5282  155C                     l612:
  5283  155C  082D               	movf	__div_to_l_@exp1,w
  5284  155D  1D03               	btfss	3,2
  5285  155E  2D60               	goto	u3431
  5286  155F  2D61               	goto	u3430
  5287  1560                     u3431:
  5288  1560  2D51               	goto	l2537
  5289  1561                     u3430:
  5290  1561                     l2539:
  5291  1561  082B               	movf	__div_to_l_@quot+3,w
  5292  1562  00F7               	movwf	?__div_to_l_+3
  5293  1563  082A               	movf	__div_to_l_@quot+2,w
  5294  1564  00F6               	movwf	?__div_to_l_+2
  5295  1565  0829               	movf	__div_to_l_@quot+1,w
  5296  1566  00F5               	movwf	?__div_to_l_+1
  5297  1567  0828               	movf	__div_to_l_@quot,w
  5298  1568  00F4               	movwf	?__div_to_l_
  5299  1569                     l601:
  5300  1569  0008               	return
  5301  156A                     __end_of__div_to_l_:
  5302                           
  5303                           	psect	text13
  5304  1E30                     __ptext13:	
  5305 ;; *************** function ___wmul *****************
  5306 ;; Defined at:
  5307 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  multiplier      2    4[COMMON] unsigned int 
  5310 ;;  multiplicand    2    6[COMMON] unsigned int 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  product         2    8[COMMON] unsigned int 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  2    4[COMMON] unsigned int 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5322 ;;      Params:         4       0       0       0       0
  5323 ;;      Locals:         2       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0
  5325 ;;      Totals:         6       0       0       0       0
  5326 ;;Total ram usage:        6 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    1
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_sprintf
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           
  5337                           ;psect for function ___wmul
  5338  1E30                     ___wmul:
  5339  1E30                     l2543:	
  5340                           ;incstack = 0
  5341                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5342                           
  5343  1E30  01F8               	clrf	___wmul@product
  5344  1E31  01F9               	clrf	___wmul@product+1
  5345  1E32                     l2545:
  5346  1E32  1C74               	btfss	___wmul@multiplier,0
  5347  1E33  2E35               	goto	u3441
  5348  1E34  2E36               	goto	u3440
  5349  1E35                     u3441:
  5350  1E35  2E3C               	goto	l395
  5351  1E36                     u3440:
  5352  1E36                     l2547:
  5353  1E36  0876               	movf	___wmul@multiplicand,w
  5354  1E37  07F8               	addwf	___wmul@product,f
  5355  1E38  1803               	skipnc
  5356  1E39  0AF9               	incf	___wmul@product+1,f
  5357  1E3A  0877               	movf	___wmul@multiplicand+1,w
  5358  1E3B  07F9               	addwf	___wmul@product+1,f
  5359  1E3C                     l395:
  5360  1E3C  3001               	movlw	1
  5361  1E3D                     u3455:
  5362  1E3D  1003               	clrc
  5363  1E3E  0DF6               	rlf	___wmul@multiplicand,f
  5364  1E3F  0DF7               	rlf	___wmul@multiplicand+1,f
  5365  1E40  3EFF               	addlw	-1
  5366  1E41  1D03               	skipz
  5367  1E42  2E3D               	goto	u3455
  5368  1E43                     l2549:
  5369  1E43  3001               	movlw	1
  5370  1E44                     u3465:
  5371  1E44  1003               	clrc
  5372  1E45  0CF5               	rrf	___wmul@multiplier+1,f
  5373  1E46  0CF4               	rrf	___wmul@multiplier,f
  5374  1E47  3EFF               	addlw	-1
  5375  1E48  1D03               	skipz
  5376  1E49  2E44               	goto	u3465
  5377  1E4A                     l2551:
  5378  1E4A  0874               	movf	___wmul@multiplier,w
  5379  1E4B  0475               	iorwf	___wmul@multiplier+1,w
  5380  1E4C  1D03               	btfss	3,2
  5381  1E4D  2E4F               	goto	u3471
  5382  1E4E  2E50               	goto	u3470
  5383  1E4F                     u3471:
  5384  1E4F  2E32               	goto	l2545
  5385  1E50                     u3470:
  5386  1E50                     l2553:
  5387  1E50  0879               	movf	___wmul@product+1,w
  5388  1E51  00F5               	movwf	?___wmul+1
  5389  1E52  0878               	movf	___wmul@product,w
  5390  1E53  00F4               	movwf	?___wmul
  5391  1E54                     l397:
  5392  1E54  0008               	return
  5393  1E55                     __end_of___wmul:
  5394                           
  5395                           	psect	text14
  5396  1ECF                     __ptext14:	
  5397 ;; *************** function ___lltoft *****************
  5398 ;; Defined at:
  5399 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  c               4    3[BANK0 ] unsigned long 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  exp             1    7[BANK0 ] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  3    3[BANK0 ] float 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0, pclath, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5413 ;;      Params:         0       4       0       0       0
  5414 ;;      Locals:         0       1       0       0       0
  5415 ;;      Temps:          1       0       0       0       0
  5416 ;;      Totals:         1       5       0       0       0
  5417 ;;Total ram usage:        6 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    2
  5420 ;; This function calls:
  5421 ;;		___ftpack
  5422 ;; This function is called by:
  5423 ;;		_sprintf
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           
  5428                           ;psect for function ___lltoft
  5429  1ECF                     ___lltoft:
  5430  1ECF                     l2679:	
  5431                           ;incstack = 0
  5432                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5433                           
  5434  1ECF  308E               	movlw	142
  5435  1ED0  00F9               	movwf	??___lltoft
  5436  1ED1  0879               	movf	??___lltoft,w
  5437  1ED2  1283               	bcf	3,5	;RP0=0, select bank0
  5438  1ED3  1303               	bcf	3,6	;RP1=0, select bank0
  5439  1ED4  00A7               	movwf	___lltoft@exp
  5440  1ED5  2EE3               	goto	l2683
  5441  1ED6                     l2681:
  5442  1ED6  3001               	movlw	1
  5443  1ED7                     u3765:
  5444  1ED7  1003               	clrc
  5445  1ED8  0CA6               	rrf	___lltoft@c+3,f
  5446  1ED9  0CA5               	rrf	___lltoft@c+2,f
  5447  1EDA  0CA4               	rrf	___lltoft@c+1,f
  5448  1EDB  0CA3               	rrf	___lltoft@c,f
  5449  1EDC  3EFF               	addlw	-1
  5450  1EDD  1D03               	skipz
  5451  1EDE  2ED7               	goto	u3765
  5452  1EDF  3001               	movlw	1
  5453  1EE0  00F9               	movwf	??___lltoft
  5454  1EE1  0879               	movf	??___lltoft,w
  5455  1EE2  07A7               	addwf	___lltoft@exp,f
  5456  1EE3                     l2683:
  5457  1EE3  30FF               	movlw	255
  5458  1EE4  0526               	andwf	___lltoft@c+3,w
  5459  1EE5  1D03               	btfss	3,2
  5460  1EE6  2EE8               	goto	u3771
  5461  1EE7  2EE9               	goto	u3770
  5462  1EE8                     u3771:
  5463  1EE8  2ED6               	goto	l2681
  5464  1EE9                     u3770:
  5465  1EE9                     l2685:
  5466  1EE9  0823               	movf	___lltoft@c,w
  5467  1EEA  00F4               	movwf	___ftpack@arg
  5468  1EEB  0824               	movf	___lltoft@c+1,w
  5469  1EEC  00F5               	movwf	___ftpack@arg+1
  5470  1EED  0825               	movf	___lltoft@c+2,w
  5471  1EEE  00F6               	movwf	___ftpack@arg+2
  5472  1EEF  0827               	movf	___lltoft@exp,w
  5473  1EF0  00F9               	movwf	??___lltoft
  5474  1EF1  0879               	movf	??___lltoft,w
  5475  1EF2  00F7               	movwf	___ftpack@exp
  5476  1EF3  01F8               	clrf	___ftpack@sign
  5477  1EF4  160A  118A  22FF  160A  158A  	fcall	___ftpack
  5478  1EF9  0874               	movf	?___ftpack,w
  5479  1EFA  1283               	bcf	3,5	;RP0=0, select bank0
  5480  1EFB  1303               	bcf	3,6	;RP1=0, select bank0
  5481  1EFC  00A3               	movwf	?___lltoft
  5482  1EFD  0875               	movf	?___ftpack+1,w
  5483  1EFE  00A4               	movwf	?___lltoft+1
  5484  1EFF  0876               	movf	?___ftpack+2,w
  5485  1F00  00A5               	movwf	?___lltoft+2
  5486  1F01                     l774:
  5487  1F01  0008               	return
  5488  1F02                     __end_of___lltoft:
  5489                           
  5490                           	psect	text15
  5491  111C                     __ptext15:	
  5492 ;; *************** function ___llmod *****************
  5493 ;; Defined at:
  5494 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  divisor         4    8[BANK0 ] unsigned long 
  5497 ;;  dividend        4   12[BANK0 ] unsigned long 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  counter         1   17[BANK0 ] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  4    8[BANK0 ] unsigned long 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5509 ;;      Params:         0       8       0       0       0
  5510 ;;      Locals:         0       1       0       0       0
  5511 ;;      Temps:          0       1       0       0       0
  5512 ;;      Totals:         0      10       0       0       0
  5513 ;;Total ram usage:       10 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_sprintf
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           
  5524                           ;psect for function ___llmod
  5525  111C                     ___llmod:
  5526  111C                     l2659:	
  5527                           ;incstack = 0
  5528                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5529                           
  5530  111C  1283               	bcf	3,5	;RP0=0, select bank0
  5531  111D  1303               	bcf	3,6	;RP1=0, select bank0
  5532  111E  082B               	movf	___llmod@divisor+3,w
  5533  111F  042A               	iorwf	___llmod@divisor+2,w
  5534  1120  0429               	iorwf	___llmod@divisor+1,w
  5535  1121  0428               	iorwf	___llmod@divisor,w
  5536  1122  1903               	skipnz
  5537  1123  2925               	goto	u3701
  5538  1124  2926               	goto	u3700
  5539  1125                     u3701:
  5540  1125  2969               	goto	l2675
  5541  1126                     u3700:
  5542  1126                     l2661:
  5543  1126  01B1               	clrf	___llmod@counter
  5544  1127  0AB1               	incf	___llmod@counter,f
  5545  1128  2936               	goto	l2665
  5546  1129                     l2663:
  5547  1129  3001               	movlw	1
  5548  112A  00B0               	movwf	??___llmod
  5549  112B                     u3715:
  5550  112B  1003               	clrc
  5551  112C  0DA8               	rlf	___llmod@divisor,f
  5552  112D  0DA9               	rlf	___llmod@divisor+1,f
  5553  112E  0DAA               	rlf	___llmod@divisor+2,f
  5554  112F  0DAB               	rlf	___llmod@divisor+3,f
  5555  1130  0BB0               	decfsz	??___llmod,f
  5556  1131  292B               	goto	u3715
  5557  1132  3001               	movlw	1
  5558  1133  00B0               	movwf	??___llmod
  5559  1134  0830               	movf	??___llmod,w
  5560  1135  07B1               	addwf	___llmod@counter,f
  5561  1136                     l2665:
  5562  1136  1FAB               	btfss	___llmod@divisor+3,7
  5563  1137  2939               	goto	u3721
  5564  1138  293A               	goto	u3720
  5565  1139                     u3721:
  5566  1139  2929               	goto	l2663
  5567  113A                     u3720:
  5568  113A                     l2667:
  5569  113A  082B               	movf	___llmod@divisor+3,w
  5570  113B  022F               	subwf	___llmod@dividend+3,w
  5571  113C  1D03               	skipz
  5572  113D  2948               	goto	u3735
  5573  113E  082A               	movf	___llmod@divisor+2,w
  5574  113F  022E               	subwf	___llmod@dividend+2,w
  5575  1140  1D03               	skipz
  5576  1141  2948               	goto	u3735
  5577  1142  0829               	movf	___llmod@divisor+1,w
  5578  1143  022D               	subwf	___llmod@dividend+1,w
  5579  1144  1D03               	skipz
  5580  1145  2948               	goto	u3735
  5581  1146  0828               	movf	___llmod@divisor,w
  5582  1147  022C               	subwf	___llmod@dividend,w
  5583  1148                     u3735:
  5584  1148  1C03               	skipc
  5585  1149  294B               	goto	u3731
  5586  114A  294C               	goto	u3730
  5587  114B                     u3731:
  5588  114B  295A               	goto	l2671
  5589  114C                     u3730:
  5590  114C                     l2669:
  5591  114C  0828               	movf	___llmod@divisor,w
  5592  114D  02AC               	subwf	___llmod@dividend,f
  5593  114E  0829               	movf	___llmod@divisor+1,w
  5594  114F  1C03               	skipc
  5595  1150  0F29               	incfsz	___llmod@divisor+1,w
  5596  1151  02AD               	subwf	___llmod@dividend+1,f
  5597  1152  082A               	movf	___llmod@divisor+2,w
  5598  1153  1C03               	skipc
  5599  1154  0F2A               	incfsz	___llmod@divisor+2,w
  5600  1155  02AE               	subwf	___llmod@dividend+2,f
  5601  1156  082B               	movf	___llmod@divisor+3,w
  5602  1157  1C03               	skipc
  5603  1158  0F2B               	incfsz	___llmod@divisor+3,w
  5604  1159  02AF               	subwf	___llmod@dividend+3,f
  5605  115A                     l2671:
  5606  115A  3001               	movlw	1
  5607  115B                     u3745:
  5608  115B  1003               	clrc
  5609  115C  0CAB               	rrf	___llmod@divisor+3,f
  5610  115D  0CAA               	rrf	___llmod@divisor+2,f
  5611  115E  0CA9               	rrf	___llmod@divisor+1,f
  5612  115F  0CA8               	rrf	___llmod@divisor,f
  5613  1160  3EFF               	addlw	-1
  5614  1161  1D03               	skipz
  5615  1162  295B               	goto	u3745
  5616  1163                     l2673:
  5617  1163  3001               	movlw	1
  5618  1164  02B1               	subwf	___llmod@counter,f
  5619  1165  1D03               	btfss	3,2
  5620  1166  2968               	goto	u3751
  5621  1167  2969               	goto	u3750
  5622  1168                     u3751:
  5623  1168  293A               	goto	l2667
  5624  1169                     u3750:
  5625  1169                     l2675:
  5626  1169  082F               	movf	___llmod@dividend+3,w
  5627  116A  00AB               	movwf	?___llmod+3
  5628  116B  082E               	movf	___llmod@dividend+2,w
  5629  116C  00AA               	movwf	?___llmod+2
  5630  116D  082D               	movf	___llmod@dividend+1,w
  5631  116E  00A9               	movwf	?___llmod+1
  5632  116F  082C               	movf	___llmod@dividend,w
  5633  1170  00A8               	movwf	?___llmod
  5634  1171                     l766:
  5635  1171  0008               	return
  5636  1172                     __end_of___llmod:
  5637                           
  5638                           	psect	text16
  5639  122E                     __ptext16:	
  5640 ;; *************** function ___lldiv *****************
  5641 ;; Defined at:
  5642 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  divisor         4    0[BANK0 ] unsigned long 
  5645 ;;  dividend        4    4[BANK0 ] unsigned long 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  quotient        4    5[COMMON] unsigned long 
  5648 ;;  counter         1    9[COMMON] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  4    0[BANK0 ] unsigned long 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2, status,0
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5658 ;;      Params:         0       8       0       0       0
  5659 ;;      Locals:         5       0       0       0       0
  5660 ;;      Temps:          1       0       0       0       0
  5661 ;;      Totals:         6       8       0       0       0
  5662 ;;Total ram usage:       14 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    1
  5665 ;; This function calls:
  5666 ;;		Nothing
  5667 ;; This function is called by:
  5668 ;;		_sprintf
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           
  5673                           ;psect for function ___lldiv
  5674  122E                     ___lldiv:
  5675  122E                     l2557:	
  5676                           ;incstack = 0
  5677                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5678                           
  5679  122E  3000               	movlw	0
  5680  122F  00F8               	movwf	___lldiv@quotient+3
  5681  1230  3000               	movlw	0
  5682  1231  00F7               	movwf	___lldiv@quotient+2
  5683  1232  3000               	movlw	0
  5684  1233  00F6               	movwf	___lldiv@quotient+1
  5685  1234  3000               	movlw	0
  5686  1235  00F5               	movwf	___lldiv@quotient
  5687  1236  1283               	bcf	3,5	;RP0=0, select bank0
  5688  1237  1303               	bcf	3,6	;RP1=0, select bank0
  5689  1238  0823               	movf	___lldiv@divisor+3,w
  5690  1239  0422               	iorwf	___lldiv@divisor+2,w
  5691  123A  0421               	iorwf	___lldiv@divisor+1,w
  5692  123B  0420               	iorwf	___lldiv@divisor,w
  5693  123C  1903               	skipnz
  5694  123D  2A3F               	goto	u3481
  5695  123E  2A40               	goto	u3480
  5696  123F                     u3481:
  5697  123F  2A8D               	goto	l2577
  5698  1240                     u3480:
  5699  1240                     l2559:
  5700  1240  01F9               	clrf	___lldiv@counter
  5701  1241  0AF9               	incf	___lldiv@counter,f
  5702  1242  2A50               	goto	l2563
  5703  1243                     l2561:
  5704  1243  3001               	movlw	1
  5705  1244  00F4               	movwf	??___lldiv
  5706  1245                     u3495:
  5707  1245  1003               	clrc
  5708  1246  0DA0               	rlf	___lldiv@divisor,f
  5709  1247  0DA1               	rlf	___lldiv@divisor+1,f
  5710  1248  0DA2               	rlf	___lldiv@divisor+2,f
  5711  1249  0DA3               	rlf	___lldiv@divisor+3,f
  5712  124A  0BF4               	decfsz	??___lldiv,f
  5713  124B  2A45               	goto	u3495
  5714  124C  3001               	movlw	1
  5715  124D  00F4               	movwf	??___lldiv
  5716  124E  0874               	movf	??___lldiv,w
  5717  124F  07F9               	addwf	___lldiv@counter,f
  5718  1250                     l2563:
  5719  1250  1FA3               	btfss	___lldiv@divisor+3,7
  5720  1251  2A53               	goto	u3501
  5721  1252  2A54               	goto	u3500
  5722  1253                     u3501:
  5723  1253  2A43               	goto	l2561
  5724  1254                     u3500:
  5725  1254                     l2565:
  5726  1254  3001               	movlw	1
  5727  1255  00F4               	movwf	??___lldiv
  5728  1256                     u3515:
  5729  1256  1003               	clrc
  5730  1257  0DF5               	rlf	___lldiv@quotient,f
  5731  1258  0DF6               	rlf	___lldiv@quotient+1,f
  5732  1259  0DF7               	rlf	___lldiv@quotient+2,f
  5733  125A  0DF8               	rlf	___lldiv@quotient+3,f
  5734  125B  0BF4               	decfsz	??___lldiv,f
  5735  125C  2A56               	goto	u3515
  5736  125D                     l2567:
  5737  125D  0823               	movf	___lldiv@divisor+3,w
  5738  125E  0227               	subwf	___lldiv@dividend+3,w
  5739  125F  1D03               	skipz
  5740  1260  2A6B               	goto	u3525
  5741  1261  0822               	movf	___lldiv@divisor+2,w
  5742  1262  0226               	subwf	___lldiv@dividend+2,w
  5743  1263  1D03               	skipz
  5744  1264  2A6B               	goto	u3525
  5745  1265  0821               	movf	___lldiv@divisor+1,w
  5746  1266  0225               	subwf	___lldiv@dividend+1,w
  5747  1267  1D03               	skipz
  5748  1268  2A6B               	goto	u3525
  5749  1269  0820               	movf	___lldiv@divisor,w
  5750  126A  0224               	subwf	___lldiv@dividend,w
  5751  126B                     u3525:
  5752  126B  1C03               	skipc
  5753  126C  2A6E               	goto	u3521
  5754  126D  2A6F               	goto	u3520
  5755  126E                     u3521:
  5756  126E  2A7E               	goto	l2573
  5757  126F                     u3520:
  5758  126F                     l2569:
  5759  126F  0820               	movf	___lldiv@divisor,w
  5760  1270  02A4               	subwf	___lldiv@dividend,f
  5761  1271  0821               	movf	___lldiv@divisor+1,w
  5762  1272  1C03               	skipc
  5763  1273  0F21               	incfsz	___lldiv@divisor+1,w
  5764  1274  02A5               	subwf	___lldiv@dividend+1,f
  5765  1275  0822               	movf	___lldiv@divisor+2,w
  5766  1276  1C03               	skipc
  5767  1277  0F22               	incfsz	___lldiv@divisor+2,w
  5768  1278  02A6               	subwf	___lldiv@dividend+2,f
  5769  1279  0823               	movf	___lldiv@divisor+3,w
  5770  127A  1C03               	skipc
  5771  127B  0F23               	incfsz	___lldiv@divisor+3,w
  5772  127C  02A7               	subwf	___lldiv@dividend+3,f
  5773  127D                     l2571:
  5774  127D  1475               	bsf	___lldiv@quotient,0
  5775  127E                     l2573:
  5776  127E  3001               	movlw	1
  5777  127F                     u3535:
  5778  127F  1003               	clrc
  5779  1280  0CA3               	rrf	___lldiv@divisor+3,f
  5780  1281  0CA2               	rrf	___lldiv@divisor+2,f
  5781  1282  0CA1               	rrf	___lldiv@divisor+1,f
  5782  1283  0CA0               	rrf	___lldiv@divisor,f
  5783  1284  3EFF               	addlw	-1
  5784  1285  1D03               	skipz
  5785  1286  2A7F               	goto	u3535
  5786  1287                     l2575:
  5787  1287  3001               	movlw	1
  5788  1288  02F9               	subwf	___lldiv@counter,f
  5789  1289  1D03               	btfss	3,2
  5790  128A  2A8C               	goto	u3541
  5791  128B  2A8D               	goto	u3540
  5792  128C                     u3541:
  5793  128C  2A54               	goto	l2565
  5794  128D                     u3540:
  5795  128D                     l2577:
  5796  128D  0878               	movf	___lldiv@quotient+3,w
  5797  128E  00A3               	movwf	?___lldiv+3
  5798  128F  0877               	movf	___lldiv@quotient+2,w
  5799  1290  00A2               	movwf	?___lldiv+2
  5800  1291  0876               	movf	___lldiv@quotient+1,w
  5801  1292  00A1               	movwf	?___lldiv+1
  5802  1293  0875               	movf	___lldiv@quotient,w
  5803  1294  00A0               	movwf	?___lldiv
  5804  1295                     l431:
  5805  1295  0008               	return
  5806  1296                     __end_of___lldiv:
  5807                           
  5808                           	psect	text17
  5809  0828                     __ptext17:	
  5810 ;; *************** function ___fttol *****************
  5811 ;; Defined at:
  5812 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  f1              3   39[BANK0 ] float 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  lval            4   48[BANK0 ] unsigned long 
  5817 ;;  exp1            1   52[BANK0 ] unsigned char 
  5818 ;;  sign1           1   47[BANK0 ] unsigned char 
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  4   39[BANK0 ] long 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, status,0
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5828 ;;      Params:         0       4       0       0       0
  5829 ;;      Locals:         0       6       0       0       0
  5830 ;;      Temps:          0       4       0       0       0
  5831 ;;      Totals:         0      14       0       0       0
  5832 ;;Total ram usage:       14 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    1
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_sprintf
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           
  5843                           ;psect for function ___fttol
  5844  0828                     ___fttol:
  5845  0828                     l2617:	
  5846                           ;incstack = 0
  5847                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5848                           
  5849  0828  1283               	bcf	3,5	;RP0=0, select bank0
  5850  0829  1303               	bcf	3,6	;RP1=0, select bank0
  5851  082A  0847               	movf	___fttol@f1,w
  5852  082B  00CB               	movwf	??___fttol
  5853  082C  0848               	movf	___fttol@f1+1,w
  5854  082D  00CC               	movwf	??___fttol+1
  5855  082E  0849               	movf	___fttol@f1+2,w
  5856  082F  00CD               	movwf	??___fttol+2
  5857  0830  1003               	clrc
  5858  0831  0D4C               	rlf	??___fttol+1,w
  5859  0832  0D4D               	rlf	??___fttol+2,w
  5860  0833  00CE               	movwf	??___fttol+3
  5861  0834  084E               	movf	??___fttol+3,w
  5862  0835  00D4               	movwf	___fttol@exp1
  5863  0836  0854               	movf	___fttol@exp1,w
  5864  0837  1D03               	btfss	3,2
  5865  0838  283A               	goto	u3601
  5866  0839  283B               	goto	u3600
  5867  083A                     u3601:
  5868  083A  2844               	goto	l2623
  5869  083B                     u3600:
  5870  083B                     l2619:
  5871  083B  3000               	movlw	0
  5872  083C  00CA               	movwf	?___fttol+3
  5873  083D  3000               	movlw	0
  5874  083E  00C9               	movwf	?___fttol+2
  5875  083F  3000               	movlw	0
  5876  0840  00C8               	movwf	?___fttol+1
  5877  0841  3000               	movlw	0
  5878  0842  00C7               	movwf	?___fttol
  5879  0843  28B3               	goto	l725
  5880  0844                     l2623:
  5881  0844  0847               	movf	___fttol@f1,w
  5882  0845  00CB               	movwf	??___fttol
  5883  0846  0848               	movf	___fttol@f1+1,w
  5884  0847  00CC               	movwf	??___fttol+1
  5885  0848  0849               	movf	___fttol@f1+2,w
  5886  0849  00CD               	movwf	??___fttol+2
  5887  084A  3017               	movlw	23
  5888  084B                     u3615:
  5889  084B  1003               	clrc
  5890  084C  0CCD               	rrf	??___fttol+2,f
  5891  084D  0CCC               	rrf	??___fttol+1,f
  5892  084E  0CCB               	rrf	??___fttol,f
  5893  084F                     u3610:
  5894  084F  3EFF               	addlw	-1
  5895  0850  1D03               	skipz
  5896  0851  284B               	goto	u3615
  5897  0852  084B               	movf	??___fttol,w
  5898  0853  00CE               	movwf	??___fttol+3
  5899  0854  084E               	movf	??___fttol+3,w
  5900  0855  00CF               	movwf	___fttol@sign1
  5901  0856                     l2625:
  5902  0856  17C8               	bsf	___fttol@f1+1,7
  5903  0857                     l2627:
  5904  0857  30FF               	movlw	255
  5905  0858  05C7               	andwf	___fttol@f1,f
  5906  0859  30FF               	movlw	255
  5907  085A  05C8               	andwf	___fttol@f1+1,f
  5908  085B  3000               	movlw	0
  5909  085C  05C9               	andwf	___fttol@f1+2,f
  5910  085D                     l2629:
  5911  085D  0847               	movf	___fttol@f1,w
  5912  085E  00D0               	movwf	___fttol@lval
  5913  085F  0848               	movf	___fttol@f1+1,w
  5914  0860  00D1               	movwf	___fttol@lval+1
  5915  0861  0849               	movf	___fttol@f1+2,w
  5916  0862  00D2               	movwf	___fttol@lval+2
  5917  0863  01D3               	clrf	___fttol@lval+3
  5918  0864                     l2631:
  5919  0864  308E               	movlw	142
  5920  0865  02D4               	subwf	___fttol@exp1,f
  5921  0866                     l2633:
  5922  0866  1FD4               	btfss	___fttol@exp1,7
  5923  0867  2869               	goto	u3621
  5924  0868  286A               	goto	u3620
  5925  0869                     u3621:
  5926  0869  2884               	goto	l2643
  5927  086A                     u3620:
  5928  086A                     l2635:
  5929  086A  0854               	movf	___fttol@exp1,w
  5930  086B  3A80               	xorlw	128
  5931  086C  3E8F               	addlw	143
  5932  086D  1803               	skipnc
  5933  086E  2870               	goto	u3631
  5934  086F  2871               	goto	u3630
  5935  0870                     u3631:
  5936  0870  2872               	goto	l2641
  5937  0871                     u3630:
  5938  0871  283B               	goto	l2619
  5939  0872                     l2641:
  5940  0872  3001               	movlw	1
  5941  0873                     u3645:
  5942  0873  1003               	clrc
  5943  0874  0CD3               	rrf	___fttol@lval+3,f
  5944  0875  0CD2               	rrf	___fttol@lval+2,f
  5945  0876  0CD1               	rrf	___fttol@lval+1,f
  5946  0877  0CD0               	rrf	___fttol@lval,f
  5947  0878  3EFF               	addlw	-1
  5948  0879  1D03               	skipz
  5949  087A  2873               	goto	u3645
  5950  087B  3001               	movlw	1
  5951  087C  00CB               	movwf	??___fttol
  5952  087D  084B               	movf	??___fttol,w
  5953  087E  07D4               	addwf	___fttol@exp1,f
  5954  087F  1D03               	btfss	3,2
  5955  0880  2882               	goto	u3651
  5956  0881  2883               	goto	u3650
  5957  0882                     u3651:
  5958  0882  2872               	goto	l2641
  5959  0883                     u3650:
  5960  0883  289B               	goto	l2651
  5961  0884                     l2643:
  5962  0884  3018               	movlw	24
  5963  0885  0254               	subwf	___fttol@exp1,w
  5964  0886  1C03               	skipc
  5965  0887  2889               	goto	u3661
  5966  0888  288A               	goto	u3660
  5967  0889                     u3661:
  5968  0889  2896               	goto	l732
  5969  088A                     u3660:
  5970  088A  283B               	goto	l2619
  5971  088B                     l2649:
  5972  088B  3001               	movlw	1
  5973  088C  00CB               	movwf	??___fttol
  5974  088D                     u3675:
  5975  088D  1003               	clrc
  5976  088E  0DD0               	rlf	___fttol@lval,f
  5977  088F  0DD1               	rlf	___fttol@lval+1,f
  5978  0890  0DD2               	rlf	___fttol@lval+2,f
  5979  0891  0DD3               	rlf	___fttol@lval+3,f
  5980  0892  0BCB               	decfsz	??___fttol,f
  5981  0893  288D               	goto	u3675
  5982  0894  3001               	movlw	1
  5983  0895  02D4               	subwf	___fttol@exp1,f
  5984  0896                     l732:
  5985  0896  0854               	movf	___fttol@exp1,w
  5986  0897  1D03               	btfss	3,2
  5987  0898  289A               	goto	u3681
  5988  0899  289B               	goto	u3680
  5989  089A                     u3681:
  5990  089A  288B               	goto	l2649
  5991  089B                     u3680:
  5992  089B                     l2651:
  5993  089B  084F               	movf	___fttol@sign1,w
  5994  089C  1903               	btfsc	3,2
  5995  089D  289F               	goto	u3691
  5996  089E  28A0               	goto	u3690
  5997  089F                     u3691:
  5998  089F  28AB               	goto	l2655
  5999  08A0                     u3690:
  6000  08A0                     l2653:
  6001  08A0  09D0               	comf	___fttol@lval,f
  6002  08A1  09D1               	comf	___fttol@lval+1,f
  6003  08A2  09D2               	comf	___fttol@lval+2,f
  6004  08A3  09D3               	comf	___fttol@lval+3,f
  6005  08A4  0AD0               	incf	___fttol@lval,f
  6006  08A5  1903               	skipnz
  6007  08A6  0AD1               	incf	___fttol@lval+1,f
  6008  08A7  1903               	skipnz
  6009  08A8  0AD2               	incf	___fttol@lval+2,f
  6010  08A9  1903               	skipnz
  6011  08AA  0AD3               	incf	___fttol@lval+3,f
  6012  08AB                     l2655:
  6013  08AB  0853               	movf	___fttol@lval+3,w
  6014  08AC  00CA               	movwf	?___fttol+3
  6015  08AD  0852               	movf	___fttol@lval+2,w
  6016  08AE  00C9               	movwf	?___fttol+2
  6017  08AF  0851               	movf	___fttol@lval+1,w
  6018  08B0  00C8               	movwf	?___fttol+1
  6019  08B1  0850               	movf	___fttol@lval,w
  6020  08B2  00C7               	movwf	?___fttol
  6021  08B3                     l725:
  6022  08B3  0008               	return
  6023  08B4                     __end_of___fttol:
  6024                           
  6025                           	psect	text18
  6026  1E0B                     __ptext18:	
  6027 ;; *************** function ___ftsub *****************
  6028 ;; Defined at:
  6029 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;  f2              3   59[BANK0 ] float 
  6032 ;;  f1              3   62[BANK0 ] float 
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;		None
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  3   59[BANK0 ] float 
  6037 ;; Registers used:
  6038 ;;		wreg, status,2, status,0, pclath, cstack
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6044 ;;      Params:         0       6       0       0       0
  6045 ;;      Locals:         0       0       0       0       0
  6046 ;;      Temps:          0       0       0       0       0
  6047 ;;      Totals:         0       6       0       0       0
  6048 ;;Total ram usage:        6 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    3
  6051 ;; This function calls:
  6052 ;;		___ftadd
  6053 ;; This function is called by:
  6054 ;;		_sprintf
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           
  6059                           ;psect for function ___ftsub
  6060  1E0B                     ___ftsub:
  6061  1E0B                     l2609:	
  6062                           ;incstack = 0
  6063                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6064                           
  6065  1E0B  1283               	bcf	3,5	;RP0=0, select bank0
  6066  1E0C  1303               	bcf	3,6	;RP1=0, select bank0
  6067  1E0D  085D               	movf	___ftsub@f2+2,w
  6068  1E0E  045C               	iorwf	___ftsub@f2+1,w
  6069  1E0F  045B               	iorwf	___ftsub@f2,w
  6070  1E10  1903               	skipnz
  6071  1E11  2E13               	goto	u3591
  6072  1E12  2E14               	goto	u3590
  6073  1E13                     u3591:
  6074  1E13  2E16               	goto	l2613
  6075  1E14                     u3590:
  6076  1E14                     l2611:
  6077  1E14  3080               	movlw	128
  6078  1E15  06DD               	xorwf	___ftsub@f2+2,f
  6079  1E16                     l2613:
  6080  1E16  085E               	movf	___ftsub@f1,w
  6081  1E17  00CE               	movwf	___ftadd@f1
  6082  1E18  085F               	movf	___ftsub@f1+1,w
  6083  1E19  00CF               	movwf	___ftadd@f1+1
  6084  1E1A  0860               	movf	___ftsub@f1+2,w
  6085  1E1B  00D0               	movwf	___ftadd@f1+2
  6086  1E1C  085B               	movf	___ftsub@f2,w
  6087  1E1D  00D1               	movwf	___ftadd@f2
  6088  1E1E  085C               	movf	___ftsub@f2+1,w
  6089  1E1F  00D2               	movwf	___ftadd@f2+1
  6090  1E20  085D               	movf	___ftsub@f2+2,w
  6091  1E21  00D3               	movwf	___ftadd@f2+2
  6092  1E22  160A  118A  256A  160A  158A  	fcall	___ftadd
  6093  1E27  1283               	bcf	3,5	;RP0=0, select bank0
  6094  1E28  1303               	bcf	3,6	;RP1=0, select bank0
  6095  1E29  084E               	movf	?___ftadd,w
  6096  1E2A  00DB               	movwf	?___ftsub
  6097  1E2B  084F               	movf	?___ftadd+1,w
  6098  1E2C  00DC               	movwf	?___ftsub+1
  6099  1E2D  0850               	movf	?___ftadd+2,w
  6100  1E2E  00DD               	movwf	?___ftsub+2
  6101  1E2F                     l721:
  6102  1E2F  0008               	return
  6103  1E30                     __end_of___ftsub:
  6104                           
  6105                           	psect	text19
  6106  156A                     __ptext19:	
  6107 ;; *************** function ___ftadd *****************
  6108 ;; Defined at:
  6109 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  f1              3   46[BANK0 ] float 
  6112 ;;  f2              3   49[BANK0 ] float 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  exp1            1   58[BANK0 ] unsigned char 
  6115 ;;  exp2            1   57[BANK0 ] unsigned char 
  6116 ;;  sign            1   56[BANK0 ] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  3   46[BANK0 ] float 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0, pclath, cstack
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6126 ;;      Params:         0       6       0       0       0
  6127 ;;      Locals:         0       3       0       0       0
  6128 ;;      Temps:          0       4       0       0       0
  6129 ;;      Totals:         0      13       0       0       0
  6130 ;;Total ram usage:       13 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    2
  6133 ;; This function calls:
  6134 ;;		___ftpack
  6135 ;; This function is called by:
  6136 ;;		_sprintf
  6137 ;;		___ftsub
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           
  6142                           ;psect for function ___ftadd
  6143  156A                     ___ftadd:
  6144  156A                     l2159:	
  6145                           ;incstack = 0
  6146                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6147                           
  6148  156A  1283               	bcf	3,5	;RP0=0, select bank0
  6149  156B  1303               	bcf	3,6	;RP1=0, select bank0
  6150  156C  084E               	movf	___ftadd@f1,w
  6151  156D  00D4               	movwf	??___ftadd
  6152  156E  084F               	movf	___ftadd@f1+1,w
  6153  156F  00D5               	movwf	??___ftadd+1
  6154  1570  0850               	movf	___ftadd@f1+2,w
  6155  1571  00D6               	movwf	??___ftadd+2
  6156  1572  1003               	clrc
  6157  1573  0D55               	rlf	??___ftadd+1,w
  6158  1574  0D56               	rlf	??___ftadd+2,w
  6159  1575  00D7               	movwf	??___ftadd+3
  6160  1576  0857               	movf	??___ftadd+3,w
  6161  1577  00DA               	movwf	___ftadd@exp1
  6162  1578  0851               	movf	___ftadd@f2,w
  6163  1579  00D4               	movwf	??___ftadd
  6164  157A  0852               	movf	___ftadd@f2+1,w
  6165  157B  00D5               	movwf	??___ftadd+1
  6166  157C  0853               	movf	___ftadd@f2+2,w
  6167  157D  00D6               	movwf	??___ftadd+2
  6168  157E  1003               	clrc
  6169  157F  0D55               	rlf	??___ftadd+1,w
  6170  1580  0D56               	rlf	??___ftadd+2,w
  6171  1581  00D7               	movwf	??___ftadd+3
  6172  1582  0857               	movf	??___ftadd+3,w
  6173  1583  00D9               	movwf	___ftadd@exp2
  6174  1584  085A               	movf	___ftadd@exp1,w
  6175  1585  1903               	btfsc	3,2
  6176  1586  2D88               	goto	u2581
  6177  1587  2D89               	goto	u2580
  6178  1588                     u2581:
  6179  1588  2D99               	goto	l2165
  6180  1589                     u2580:
  6181  1589                     l2161:
  6182  1589  0859               	movf	___ftadd@exp2,w
  6183  158A  025A               	subwf	___ftadd@exp1,w
  6184  158B  1803               	skipnc
  6185  158C  2D8E               	goto	u2591
  6186  158D  2D8F               	goto	u2590
  6187  158E                     u2591:
  6188  158E  2DA0               	goto	l2169
  6189  158F                     u2590:
  6190  158F                     l2163:
  6191  158F  0859               	movf	___ftadd@exp2,w
  6192  1590  00D4               	movwf	??___ftadd
  6193  1591  085A               	movf	___ftadd@exp1,w
  6194  1592  02D4               	subwf	??___ftadd,f
  6195  1593  3019               	movlw	25
  6196  1594  0254               	subwf	??___ftadd,w
  6197  1595  1C03               	skipc
  6198  1596  2D98               	goto	u2601
  6199  1597  2D99               	goto	u2600
  6200  1598                     u2601:
  6201  1598  2DA0               	goto	l2169
  6202  1599                     u2600:
  6203  1599                     l2165:
  6204  1599  0851               	movf	___ftadd@f2,w
  6205  159A  00CE               	movwf	?___ftadd
  6206  159B  0852               	movf	___ftadd@f2+1,w
  6207  159C  00CF               	movwf	?___ftadd+1
  6208  159D  0853               	movf	___ftadd@f2+2,w
  6209  159E  00D0               	movwf	?___ftadd+2
  6210  159F  2E9F               	goto	l641
  6211  15A0                     l2169:
  6212  15A0  0859               	movf	___ftadd@exp2,w
  6213  15A1  1903               	btfsc	3,2
  6214  15A2  2DA4               	goto	u2611
  6215  15A3  2DA5               	goto	u2610
  6216  15A4                     u2611:
  6217  15A4  2DB5               	goto	l644
  6218  15A5                     u2610:
  6219  15A5                     l2171:
  6220  15A5  085A               	movf	___ftadd@exp1,w
  6221  15A6  0259               	subwf	___ftadd@exp2,w
  6222  15A7  1803               	skipnc
  6223  15A8  2DAA               	goto	u2621
  6224  15A9  2DAB               	goto	u2620
  6225  15AA                     u2621:
  6226  15AA  2DB6               	goto	l2175
  6227  15AB                     u2620:
  6228  15AB                     l2173:
  6229  15AB  085A               	movf	___ftadd@exp1,w
  6230  15AC  00D4               	movwf	??___ftadd
  6231  15AD  0859               	movf	___ftadd@exp2,w
  6232  15AE  02D4               	subwf	??___ftadd,f
  6233  15AF  3019               	movlw	25
  6234  15B0  0254               	subwf	??___ftadd,w
  6235  15B1  1C03               	skipc
  6236  15B2  2DB4               	goto	u2631
  6237  15B3  2DB5               	goto	u2630
  6238  15B4                     u2631:
  6239  15B4  2DB6               	goto	l2175
  6240  15B5                     u2630:
  6241  15B5                     l644:
  6242  15B5  2E9F               	goto	l641
  6243  15B6                     l2175:
  6244  15B6  3006               	movlw	6
  6245  15B7  00D4               	movwf	??___ftadd
  6246  15B8  0854               	movf	??___ftadd,w
  6247  15B9  00D8               	movwf	___ftadd@sign
  6248  15BA                     l2177:
  6249  15BA  1FD0               	btfss	___ftadd@f1+2,7
  6250  15BB  2DBD               	goto	u2641
  6251  15BC  2DBE               	goto	u2640
  6252  15BD                     u2641:
  6253  15BD  2DBF               	goto	l645
  6254  15BE                     u2640:
  6255  15BE                     l2179:
  6256  15BE  17D8               	bsf	___ftadd@sign,7
  6257  15BF                     l645:
  6258  15BF  1FD3               	btfss	___ftadd@f2+2,7
  6259  15C0  2DC2               	goto	u2651
  6260  15C1  2DC3               	goto	u2650
  6261  15C2                     u2651:
  6262  15C2  2DC4               	goto	l646
  6263  15C3                     u2650:
  6264  15C3                     l2181:
  6265  15C3  1758               	bsf	___ftadd@sign,6
  6266  15C4                     l646:
  6267  15C4  17CF               	bsf	___ftadd@f1+1,7
  6268  15C5                     l2183:
  6269  15C5  30FF               	movlw	255
  6270  15C6  05CE               	andwf	___ftadd@f1,f
  6271  15C7  30FF               	movlw	255
  6272  15C8  05CF               	andwf	___ftadd@f1+1,f
  6273  15C9  3000               	movlw	0
  6274  15CA  05D0               	andwf	___ftadd@f1+2,f
  6275  15CB                     l2185:
  6276  15CB  17D2               	bsf	___ftadd@f2+1,7
  6277  15CC  30FF               	movlw	255
  6278  15CD  05D1               	andwf	___ftadd@f2,f
  6279  15CE  30FF               	movlw	255
  6280  15CF  05D2               	andwf	___ftadd@f2+1,f
  6281  15D0  3000               	movlw	0
  6282  15D1  05D3               	andwf	___ftadd@f2+2,f
  6283  15D2  0859               	movf	___ftadd@exp2,w
  6284  15D3  025A               	subwf	___ftadd@exp1,w
  6285  15D4  1803               	skipnc
  6286  15D5  2DD7               	goto	u2661
  6287  15D6  2DD8               	goto	u2660
  6288  15D7                     u2661:
  6289  15D7  2E04               	goto	l2197
  6290  15D8                     u2660:
  6291  15D8                     l2187:
  6292  15D8  3001               	movlw	1
  6293  15D9                     u2675:
  6294  15D9  1003               	clrc
  6295  15DA  0DD1               	rlf	___ftadd@f2,f
  6296  15DB  0DD2               	rlf	___ftadd@f2+1,f
  6297  15DC  0DD3               	rlf	___ftadd@f2+2,f
  6298  15DD  3EFF               	addlw	-1
  6299  15DE  1D03               	skipz
  6300  15DF  2DD9               	goto	u2675
  6301  15E0  3001               	movlw	1
  6302  15E1  02D9               	subwf	___ftadd@exp2,f
  6303  15E2                     l2189:
  6304  15E2  0859               	movf	___ftadd@exp2,w
  6305  15E3  065A               	xorwf	___ftadd@exp1,w
  6306  15E4  1903               	skipnz
  6307  15E5  2DE7               	goto	u2681
  6308  15E6  2DE8               	goto	u2680
  6309  15E7                     u2681:
  6310  15E7  2DFD               	goto	l2195
  6311  15E8                     u2680:
  6312  15E8                     l2191:
  6313  15E8  3001               	movlw	1
  6314  15E9  02D8               	subwf	___ftadd@sign,f
  6315  15EA  0858               	movf	___ftadd@sign,w
  6316  15EB  3907               	andlw	7
  6317  15EC  1D03               	btfss	3,2
  6318  15ED  2DEF               	goto	u2691
  6319  15EE  2DF0               	goto	u2690
  6320  15EF                     u2691:
  6321  15EF  2DD8               	goto	l2187
  6322  15F0                     u2690:
  6323  15F0  2DFD               	goto	l2195
  6324  15F1                     l2193:
  6325  15F1  3001               	movlw	1
  6326  15F2                     u2705:
  6327  15F2  1003               	clrc
  6328  15F3  0CD0               	rrf	___ftadd@f1+2,f
  6329  15F4  0CCF               	rrf	___ftadd@f1+1,f
  6330  15F5  0CCE               	rrf	___ftadd@f1,f
  6331  15F6  3EFF               	addlw	-1
  6332  15F7  1D03               	skipz
  6333  15F8  2DF2               	goto	u2705
  6334  15F9  3001               	movlw	1
  6335  15FA  00D4               	movwf	??___ftadd
  6336  15FB  0854               	movf	??___ftadd,w
  6337  15FC  07DA               	addwf	___ftadd@exp1,f
  6338  15FD                     l2195:
  6339  15FD  085A               	movf	___ftadd@exp1,w
  6340  15FE  0659               	xorwf	___ftadd@exp2,w
  6341  15FF  1D03               	skipz
  6342  1600  2E02               	goto	u2711
  6343  1601  2E03               	goto	u2710
  6344  1602                     u2711:
  6345  1602  2DF1               	goto	l2193
  6346  1603                     u2710:
  6347  1603  2E35               	goto	l655
  6348  1604                     l2197:
  6349  1604  085A               	movf	___ftadd@exp1,w
  6350  1605  0259               	subwf	___ftadd@exp2,w
  6351  1606  1803               	skipnc
  6352  1607  2E09               	goto	u2721
  6353  1608  2E0A               	goto	u2720
  6354  1609                     u2721:
  6355  1609  2E35               	goto	l655
  6356  160A                     u2720:
  6357  160A                     l2199:
  6358  160A  3001               	movlw	1
  6359  160B                     u2735:
  6360  160B  1003               	clrc
  6361  160C  0DCE               	rlf	___ftadd@f1,f
  6362  160D  0DCF               	rlf	___ftadd@f1+1,f
  6363  160E  0DD0               	rlf	___ftadd@f1+2,f
  6364  160F  3EFF               	addlw	-1
  6365  1610  1D03               	skipz
  6366  1611  2E0B               	goto	u2735
  6367  1612  3001               	movlw	1
  6368  1613  02DA               	subwf	___ftadd@exp1,f
  6369  1614                     l2201:
  6370  1614  0859               	movf	___ftadd@exp2,w
  6371  1615  065A               	xorwf	___ftadd@exp1,w
  6372  1616  1903               	skipnz
  6373  1617  2E19               	goto	u2741
  6374  1618  2E1A               	goto	u2740
  6375  1619                     u2741:
  6376  1619  2E2F               	goto	l2207
  6377  161A                     u2740:
  6378  161A                     l2203:
  6379  161A  3001               	movlw	1
  6380  161B  02D8               	subwf	___ftadd@sign,f
  6381  161C  0858               	movf	___ftadd@sign,w
  6382  161D  3907               	andlw	7
  6383  161E  1D03               	btfss	3,2
  6384  161F  2E21               	goto	u2751
  6385  1620  2E22               	goto	u2750
  6386  1621                     u2751:
  6387  1621  2E0A               	goto	l2199
  6388  1622                     u2750:
  6389  1622  2E2F               	goto	l2207
  6390  1623                     l2205:
  6391  1623  3001               	movlw	1
  6392  1624                     u2765:
  6393  1624  1003               	clrc
  6394  1625  0CD3               	rrf	___ftadd@f2+2,f
  6395  1626  0CD2               	rrf	___ftadd@f2+1,f
  6396  1627  0CD1               	rrf	___ftadd@f2,f
  6397  1628  3EFF               	addlw	-1
  6398  1629  1D03               	skipz
  6399  162A  2E24               	goto	u2765
  6400  162B  3001               	movlw	1
  6401  162C  00D4               	movwf	??___ftadd
  6402  162D  0854               	movf	??___ftadd,w
  6403  162E  07D9               	addwf	___ftadd@exp2,f
  6404  162F                     l2207:
  6405  162F  085A               	movf	___ftadd@exp1,w
  6406  1630  0659               	xorwf	___ftadd@exp2,w
  6407  1631  1D03               	skipz
  6408  1632  2E34               	goto	u2771
  6409  1633  2E35               	goto	u2770
  6410  1634                     u2771:
  6411  1634  2E23               	goto	l2205
  6412  1635                     u2770:
  6413  1635                     l655:
  6414  1635  1FD8               	btfss	___ftadd@sign,7
  6415  1636  2E38               	goto	u2781
  6416  1637  2E39               	goto	u2780
  6417  1638                     u2781:
  6418  1638  2E49               	goto	l2211
  6419  1639                     u2780:
  6420  1639                     l2209:
  6421  1639  30FF               	movlw	255
  6422  163A  06CE               	xorwf	___ftadd@f1,f
  6423  163B  30FF               	movlw	255
  6424  163C  06CF               	xorwf	___ftadd@f1+1,f
  6425  163D  30FF               	movlw	255
  6426  163E  06D0               	xorwf	___ftadd@f1+2,f
  6427  163F  3001               	movlw	1
  6428  1640  07CE               	addwf	___ftadd@f1,f
  6429  1641  3000               	movlw	0
  6430  1642  1803               	skipnc
  6431  1643  3001               	movlw	1
  6432  1644  07CF               	addwf	___ftadd@f1+1,f
  6433  1645  3000               	movlw	0
  6434  1646  1803               	skipnc
  6435  1647  3001               	movlw	1
  6436  1648  07D0               	addwf	___ftadd@f1+2,f
  6437  1649                     l2211:
  6438  1649  1F58               	btfss	___ftadd@sign,6
  6439  164A  2E4C               	goto	u2791
  6440  164B  2E4D               	goto	u2790
  6441  164C                     u2791:
  6442  164C  2E5D               	goto	l2215
  6443  164D                     u2790:
  6444  164D                     l2213:
  6445  164D  30FF               	movlw	255
  6446  164E  06D1               	xorwf	___ftadd@f2,f
  6447  164F  30FF               	movlw	255
  6448  1650  06D2               	xorwf	___ftadd@f2+1,f
  6449  1651  30FF               	movlw	255
  6450  1652  06D3               	xorwf	___ftadd@f2+2,f
  6451  1653  3001               	movlw	1
  6452  1654  07D1               	addwf	___ftadd@f2,f
  6453  1655  3000               	movlw	0
  6454  1656  1803               	skipnc
  6455  1657  3001               	movlw	1
  6456  1658  07D2               	addwf	___ftadd@f2+1,f
  6457  1659  3000               	movlw	0
  6458  165A  1803               	skipnc
  6459  165B  3001               	movlw	1
  6460  165C  07D3               	addwf	___ftadd@f2+2,f
  6461  165D                     l2215:
  6462  165D  01D8               	clrf	___ftadd@sign
  6463  165E                     l2217:
  6464  165E  084E               	movf	___ftadd@f1,w
  6465  165F  07D1               	addwf	___ftadd@f2,f
  6466  1660  084F               	movf	___ftadd@f1+1,w
  6467  1661  1103               	clrz
  6468  1662  1803               	skipnc
  6469  1663  0A4F               	incf	___ftadd@f1+1,w
  6470  1664  1903               	skipnz
  6471  1665  2E67               	goto	u2801
  6472  1666  07D2               	addwf	___ftadd@f2+1,f
  6473  1667                     u2801:
  6474  1667  0850               	movf	___ftadd@f1+2,w
  6475  1668  1103               	clrz
  6476  1669  1803               	skipnc
  6477  166A  0A50               	incf	___ftadd@f1+2,w
  6478  166B  1903               	skipnz
  6479  166C  2E6E               	goto	u2802
  6480  166D  07D3               	addwf	___ftadd@f2+2,f
  6481  166E                     u2802:
  6482  166E                     l2219:
  6483  166E  1FD3               	btfss	___ftadd@f2+2,7
  6484  166F  2E71               	goto	u2811
  6485  1670  2E72               	goto	u2810
  6486  1671                     u2811:
  6487  1671  2E84               	goto	l2225
  6488  1672                     u2810:
  6489  1672                     l2221:
  6490  1672  30FF               	movlw	255
  6491  1673  06D1               	xorwf	___ftadd@f2,f
  6492  1674  30FF               	movlw	255
  6493  1675  06D2               	xorwf	___ftadd@f2+1,f
  6494  1676  30FF               	movlw	255
  6495  1677  06D3               	xorwf	___ftadd@f2+2,f
  6496  1678  3001               	movlw	1
  6497  1679  07D1               	addwf	___ftadd@f2,f
  6498  167A  3000               	movlw	0
  6499  167B  1803               	skipnc
  6500  167C  3001               	movlw	1
  6501  167D  07D2               	addwf	___ftadd@f2+1,f
  6502  167E  3000               	movlw	0
  6503  167F  1803               	skipnc
  6504  1680  3001               	movlw	1
  6505  1681  07D3               	addwf	___ftadd@f2+2,f
  6506  1682                     l2223:
  6507  1682  01D8               	clrf	___ftadd@sign
  6508  1683  0AD8               	incf	___ftadd@sign,f
  6509  1684                     l2225:
  6510  1684  0851               	movf	___ftadd@f2,w
  6511  1685  00F4               	movwf	___ftpack@arg
  6512  1686  0852               	movf	___ftadd@f2+1,w
  6513  1687  00F5               	movwf	___ftpack@arg+1
  6514  1688  0853               	movf	___ftadd@f2+2,w
  6515  1689  00F6               	movwf	___ftpack@arg+2
  6516  168A  085A               	movf	___ftadd@exp1,w
  6517  168B  00D4               	movwf	??___ftadd
  6518  168C  0854               	movf	??___ftadd,w
  6519  168D  00F7               	movwf	___ftpack@exp
  6520  168E  0858               	movf	___ftadd@sign,w
  6521  168F  00D5               	movwf	??___ftadd+1
  6522  1690  0855               	movf	??___ftadd+1,w
  6523  1691  00F8               	movwf	___ftpack@sign
  6524  1692  160A  118A  22FF  160A  118A  	fcall	___ftpack
  6525  1697  0874               	movf	?___ftpack,w
  6526  1698  1283               	bcf	3,5	;RP0=0, select bank0
  6527  1699  1303               	bcf	3,6	;RP1=0, select bank0
  6528  169A  00CE               	movwf	?___ftadd
  6529  169B  0875               	movf	?___ftpack+1,w
  6530  169C  00CF               	movwf	?___ftadd+1
  6531  169D  0876               	movf	?___ftpack+2,w
  6532  169E  00D0               	movwf	?___ftadd+2
  6533  169F                     l641:
  6534  169F  0008               	return
  6535  16A0                     __end_of___ftadd:
  6536                           
  6537                           	psect	text20
  6538  1D71                     __ptext20:	
  6539 ;; *************** function ___ftneg *****************
  6540 ;; Defined at:
  6541 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  f1              3    4[COMMON] float 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  3    4[COMMON] float 
  6548 ;; Registers used:
  6549 ;;		wreg
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6555 ;;      Params:         3       0       0       0       0
  6556 ;;      Locals:         0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0
  6558 ;;      Totals:         3       0       0       0       0
  6559 ;;Total ram usage:        3 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    1
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_sprintf
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           
  6570                           ;psect for function ___ftneg
  6571  1D71                     ___ftneg:
  6572  1D71                     l2601:	
  6573                           ;incstack = 0
  6574                           ; Regs used in ___ftneg: [wreg]
  6575                           
  6576  1D71  0876               	movf	___ftneg@f1+2,w
  6577  1D72  0475               	iorwf	___ftneg@f1+1,w
  6578  1D73  0474               	iorwf	___ftneg@f1,w
  6579  1D74  1903               	skipnz
  6580  1D75  2D77               	goto	u3581
  6581  1D76  2D78               	goto	u3580
  6582  1D77                     u3581:
  6583  1D77  2D7A               	goto	l2605
  6584  1D78                     u3580:
  6585  1D78                     l2603:
  6586  1D78  3080               	movlw	128
  6587  1D79  06F6               	xorwf	___ftneg@f1+2,f
  6588  1D7A                     l2605:
  6589  1D7A                     l715:
  6590  1D7A  0008               	return
  6591  1D7B                     __end_of___ftneg:
  6592                           
  6593                           	psect	text21
  6594  1F02                     __ptext21:	
  6595 ;; *************** function ___ftge *****************
  6596 ;; Defined at:
  6597 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;  ff1             3    4[COMMON] float 
  6600 ;;  ff2             3    7[COMMON] float 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;		None
  6603 ;; Return value:  Size  Location     Type
  6604 ;;		None               void
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6612 ;;      Params:         6       0       0       0       0
  6613 ;;      Locals:         0       0       0       0       0
  6614 ;;      Temps:          0       0       0       0       0
  6615 ;;      Totals:         6       0       0       0       0
  6616 ;;Total ram usage:        6 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    1
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_sprintf
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           
  6627                           ;psect for function ___ftge
  6628  1F02                     ___ftge:
  6629  1F02                     l2581:	
  6630                           ;incstack = 0
  6631                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6632                           
  6633  1F02  1FF6               	btfss	___ftge@ff1+2,7
  6634  1F03  2F05               	goto	u3551
  6635  1F04  2F06               	goto	u3550
  6636  1F05                     u3551:
  6637  1F05  2F13               	goto	l2585
  6638  1F06                     u3550:
  6639  1F06                     l2583:
  6640  1F06  0874               	movf	___ftge@ff1,w
  6641  1F07  3C00               	sublw	0
  6642  1F08  00F4               	movwf	___ftge@ff1
  6643  1F09  0875               	movf	___ftge@ff1+1,w
  6644  1F0A  1C03               	skipc
  6645  1F0B  0F75               	incfsz	___ftge@ff1+1,w
  6646  1F0C  3C00               	sublw	0
  6647  1F0D  00F5               	movwf	___ftge@ff1+1
  6648  1F0E  0876               	movf	___ftge@ff1+2,w
  6649  1F0F  1C03               	skipc
  6650  1F10  0F76               	incfsz	___ftge@ff1+2,w
  6651  1F11  3C80               	sublw	128
  6652  1F12  00F6               	movwf	___ftge@ff1+2
  6653  1F13                     l2585:
  6654  1F13  1FF9               	btfss	___ftge@ff2+2,7
  6655  1F14  2F16               	goto	u3561
  6656  1F15  2F17               	goto	u3560
  6657  1F16                     u3561:
  6658  1F16  2F24               	goto	l2589
  6659  1F17                     u3560:
  6660  1F17                     l2587:
  6661  1F17  0877               	movf	___ftge@ff2,w
  6662  1F18  3C00               	sublw	0
  6663  1F19  00F7               	movwf	___ftge@ff2
  6664  1F1A  0878               	movf	___ftge@ff2+1,w
  6665  1F1B  1C03               	skipc
  6666  1F1C  0F78               	incfsz	___ftge@ff2+1,w
  6667  1F1D  3C00               	sublw	0
  6668  1F1E  00F8               	movwf	___ftge@ff2+1
  6669  1F1F  0879               	movf	___ftge@ff2+2,w
  6670  1F20  1C03               	skipc
  6671  1F21  0F79               	incfsz	___ftge@ff2+2,w
  6672  1F22  3C80               	sublw	128
  6673  1F23  00F9               	movwf	___ftge@ff2+2
  6674  1F24                     l2589:
  6675  1F24  3080               	movlw	128
  6676  1F25  06F6               	xorwf	___ftge@ff1+2,f
  6677  1F26                     l2591:
  6678  1F26  3080               	movlw	128
  6679  1F27  06F9               	xorwf	___ftge@ff2+2,f
  6680  1F28                     l2593:
  6681  1F28  0879               	movf	___ftge@ff2+2,w
  6682  1F29  0276               	subwf	___ftge@ff1+2,w
  6683  1F2A  1D03               	skipz
  6684  1F2B  2F32               	goto	u3575
  6685  1F2C  0878               	movf	___ftge@ff2+1,w
  6686  1F2D  0275               	subwf	___ftge@ff1+1,w
  6687  1F2E  1D03               	skipz
  6688  1F2F  2F32               	goto	u3575
  6689  1F30  0877               	movf	___ftge@ff2,w
  6690  1F31  0274               	subwf	___ftge@ff1,w
  6691  1F32                     u3575:
  6692  1F32  1803               	skipnc
  6693  1F33  2F35               	goto	u3571
  6694  1F34  2F36               	goto	u3570
  6695  1F35                     u3571:
  6696  1F35  2F38               	goto	l2597
  6697  1F36                     u3570:
  6698  1F36                     l2595:
  6699  1F36  1003               	clrc
  6700  1F37  2F39               	goto	l698
  6701  1F38                     l2597:
  6702  1F38  1403               	setc
  6703  1F39                     l698:
  6704  1F39  0008               	return
  6705  1F3A                     __end_of___ftge:
  6706                           
  6707                           	psect	text22
  6708  1E7B                     __ptext22:	
  6709 ;; *************** function ___awtoft *****************
  6710 ;; Defined at:
  6711 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  c               2    3[BANK0 ] int 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  sign            1    9[COMMON] unsigned char 
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  3    3[BANK0 ] float 
  6718 ;; Registers used:
  6719 ;;		wreg, status,2, status,0, pclath, cstack
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6725 ;;      Params:         0       3       0       0       0
  6726 ;;      Locals:         1       0       0       0       0
  6727 ;;      Temps:          0       2       0       0       0
  6728 ;;      Totals:         1       5       0       0       0
  6729 ;;Total ram usage:        6 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:    2
  6732 ;; This function calls:
  6733 ;;		___ftpack
  6734 ;; This function is called by:
  6735 ;;		_main
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           
  6740                           ;psect for function ___awtoft
  6741  1E7B                     ___awtoft:
  6742  1E7B                     l3039:	
  6743                           ;incstack = 0
  6744                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6745                           
  6746  1E7B  01F9               	clrf	___awtoft@sign
  6747  1E7C                     l3041:
  6748  1E7C  1283               	bcf	3,5	;RP0=0, select bank0
  6749  1E7D  1303               	bcf	3,6	;RP1=0, select bank0
  6750  1E7E  1FA4               	btfss	___awtoft@c+1,7
  6751  1E7F  2E81               	goto	u4381
  6752  1E80  2E82               	goto	u4380
  6753  1E81                     u4381:
  6754  1E81  2E89               	goto	l3047
  6755  1E82                     u4380:
  6756  1E82                     l3043:
  6757  1E82  09A3               	comf	___awtoft@c,f
  6758  1E83  09A4               	comf	___awtoft@c+1,f
  6759  1E84  0AA3               	incf	___awtoft@c,f
  6760  1E85  1903               	skipnz
  6761  1E86  0AA4               	incf	___awtoft@c+1,f
  6762  1E87                     l3045:
  6763  1E87  01F9               	clrf	___awtoft@sign
  6764  1E88  0AF9               	incf	___awtoft@sign,f
  6765  1E89                     l3047:
  6766  1E89  0823               	movf	___awtoft@c,w
  6767  1E8A  00F4               	movwf	___ftpack@arg
  6768  1E8B  0824               	movf	___awtoft@c+1,w
  6769  1E8C  00F5               	movwf	___ftpack@arg+1
  6770  1E8D  01F6               	clrf	___ftpack@arg+2
  6771  1E8E  308E               	movlw	142
  6772  1E8F  00A6               	movwf	??___awtoft
  6773  1E90  0826               	movf	??___awtoft,w
  6774  1E91  00F7               	movwf	___ftpack@exp
  6775  1E92  0879               	movf	___awtoft@sign,w
  6776  1E93  00A7               	movwf	??___awtoft+1
  6777  1E94  0827               	movf	??___awtoft+1,w
  6778  1E95  00F8               	movwf	___ftpack@sign
  6779  1E96  160A  118A  22FF  160A  158A  	fcall	___ftpack
  6780  1E9B  0874               	movf	?___ftpack,w
  6781  1E9C  1283               	bcf	3,5	;RP0=0, select bank0
  6782  1E9D  1303               	bcf	3,6	;RP1=0, select bank0
  6783  1E9E  00A3               	movwf	?___awtoft
  6784  1E9F  0875               	movf	?___ftpack+1,w
  6785  1EA0  00A4               	movwf	?___awtoft+1
  6786  1EA1  0876               	movf	?___ftpack+2,w
  6787  1EA2  00A5               	movwf	?___awtoft+2
  6788  1EA3                     l597:
  6789  1EA3  0008               	return
  6790  1EA4                     __end_of___awtoft:
  6791                           
  6792                           	psect	text23
  6793  12FF                     __ptext23:	
  6794 ;; *************** function ___ftpack *****************
  6795 ;; Defined at:
  6796 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  arg             3    4[COMMON] unsigned um
  6799 ;;  exp             1    7[COMMON] unsigned char 
  6800 ;;  sign            1    8[COMMON] unsigned char 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  3    4[COMMON] float 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6812 ;;      Params:         5       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0
  6814 ;;      Temps:          0       3       0       0       0
  6815 ;;      Totals:         5       3       0       0       0
  6816 ;;Total ram usage:        8 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    1
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		___awtoft
  6823 ;;		___ftadd
  6824 ;;		___ftmul
  6825 ;;		___lltoft
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           
  6830                           ;psect for function ___ftpack
  6831  12FF                     ___ftpack:
  6832  12FF                     l2029:	
  6833                           ;incstack = 0
  6834                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6835                           
  6836  12FF  0877               	movf	___ftpack@exp,w
  6837  1300  1903               	btfsc	3,2
  6838  1301  2B03               	goto	u2251
  6839  1302  2B04               	goto	u2250
  6840  1303                     u2251:
  6841  1303  2B0B               	goto	l2033
  6842  1304                     u2250:
  6843  1304                     l2031:
  6844  1304  0876               	movf	___ftpack@arg+2,w
  6845  1305  0475               	iorwf	___ftpack@arg+1,w
  6846  1306  0474               	iorwf	___ftpack@arg,w
  6847  1307  1D03               	skipz
  6848  1308  2B0A               	goto	u2261
  6849  1309  2B0B               	goto	u2260
  6850  130A                     u2261:
  6851  130A  2B20               	goto	l2039
  6852  130B                     u2260:
  6853  130B                     l2033:
  6854  130B  3000               	movlw	0
  6855  130C  00F4               	movwf	?___ftpack
  6856  130D  3000               	movlw	0
  6857  130E  00F5               	movwf	?___ftpack+1
  6858  130F  3000               	movlw	0
  6859  1310  00F6               	movwf	?___ftpack+2
  6860  1311  2B80               	goto	l620
  6861  1312                     l2037:
  6862  1312  3001               	movlw	1
  6863  1313  1283               	bcf	3,5	;RP0=0, select bank0
  6864  1314  1303               	bcf	3,6	;RP1=0, select bank0
  6865  1315  00A0               	movwf	??___ftpack
  6866  1316  0820               	movf	??___ftpack,w
  6867  1317  07F7               	addwf	___ftpack@exp,f
  6868  1318  3001               	movlw	1
  6869  1319                     u2275:
  6870  1319  1003               	clrc
  6871  131A  0CF6               	rrf	___ftpack@arg+2,f
  6872  131B  0CF5               	rrf	___ftpack@arg+1,f
  6873  131C  0CF4               	rrf	___ftpack@arg,f
  6874  131D  3EFF               	addlw	-1
  6875  131E  1D03               	skipz
  6876  131F  2B19               	goto	u2275
  6877  1320                     l2039:
  6878  1320  30FE               	movlw	254
  6879  1321  0576               	andwf	___ftpack@arg+2,w
  6880  1322  1D03               	btfss	3,2
  6881  1323  2B25               	goto	u2281
  6882  1324  2B26               	goto	u2280
  6883  1325                     u2281:
  6884  1325  2B12               	goto	l2037
  6885  1326                     u2280:
  6886  1326  2B3F               	goto	l624
  6887  1327                     l2041:
  6888  1327  3001               	movlw	1
  6889  1328  1283               	bcf	3,5	;RP0=0, select bank0
  6890  1329  1303               	bcf	3,6	;RP1=0, select bank0
  6891  132A  00A0               	movwf	??___ftpack
  6892  132B  0820               	movf	??___ftpack,w
  6893  132C  07F7               	addwf	___ftpack@exp,f
  6894  132D                     l2043:
  6895  132D  3001               	movlw	1
  6896  132E  07F4               	addwf	___ftpack@arg,f
  6897  132F  3000               	movlw	0
  6898  1330  1803               	skipnc
  6899  1331  3001               	movlw	1
  6900  1332  07F5               	addwf	___ftpack@arg+1,f
  6901  1333  3000               	movlw	0
  6902  1334  1803               	skipnc
  6903  1335  3001               	movlw	1
  6904  1336  07F6               	addwf	___ftpack@arg+2,f
  6905  1337                     l2045:
  6906  1337  3001               	movlw	1
  6907  1338                     u2295:
  6908  1338  1003               	clrc
  6909  1339  0CF6               	rrf	___ftpack@arg+2,f
  6910  133A  0CF5               	rrf	___ftpack@arg+1,f
  6911  133B  0CF4               	rrf	___ftpack@arg,f
  6912  133C  3EFF               	addlw	-1
  6913  133D  1D03               	skipz
  6914  133E  2B38               	goto	u2295
  6915  133F                     l624:
  6916  133F  30FF               	movlw	255
  6917  1340  0576               	andwf	___ftpack@arg+2,w
  6918  1341  1D03               	btfss	3,2
  6919  1342  2B44               	goto	u2301
  6920  1343  2B45               	goto	u2300
  6921  1344                     u2301:
  6922  1344  2B27               	goto	l2041
  6923  1345                     u2300:
  6924  1345  2B50               	goto	l2049
  6925  1346                     l2047:
  6926  1346  3001               	movlw	1
  6927  1347  02F7               	subwf	___ftpack@exp,f
  6928  1348  3001               	movlw	1
  6929  1349                     u2315:
  6930  1349  1003               	clrc
  6931  134A  0DF4               	rlf	___ftpack@arg,f
  6932  134B  0DF5               	rlf	___ftpack@arg+1,f
  6933  134C  0DF6               	rlf	___ftpack@arg+2,f
  6934  134D  3EFF               	addlw	-1
  6935  134E  1D03               	skipz
  6936  134F  2B49               	goto	u2315
  6937  1350                     l2049:
  6938  1350  1BF5               	btfsc	___ftpack@arg+1,7
  6939  1351  2B53               	goto	u2321
  6940  1352  2B54               	goto	u2320
  6941  1353                     u2321:
  6942  1353  2B5A               	goto	l631
  6943  1354                     u2320:
  6944  1354                     l2051:
  6945  1354  3002               	movlw	2
  6946  1355  0277               	subwf	___ftpack@exp,w
  6947  1356  1803               	skipnc
  6948  1357  2B59               	goto	u2331
  6949  1358  2B5A               	goto	u2330
  6950  1359                     u2331:
  6951  1359  2B46               	goto	l2047
  6952  135A                     u2330:
  6953  135A                     l631:
  6954  135A  1877               	btfsc	___ftpack@exp,0
  6955  135B  2B5D               	goto	u2341
  6956  135C  2B5E               	goto	u2340
  6957  135D                     u2341:
  6958  135D  2B64               	goto	l632
  6959  135E                     u2340:
  6960  135E                     l2053:
  6961  135E  30FF               	movlw	255
  6962  135F  05F4               	andwf	___ftpack@arg,f
  6963  1360  307F               	movlw	127
  6964  1361  05F5               	andwf	___ftpack@arg+1,f
  6965  1362  30FF               	movlw	255
  6966  1363  05F6               	andwf	___ftpack@arg+2,f
  6967  1364                     l632:
  6968  1364  1003               	clrc
  6969  1365  0CF7               	rrf	___ftpack@exp,f
  6970  1366                     l2055:
  6971  1366  0877               	movf	___ftpack@exp,w
  6972  1367  1283               	bcf	3,5	;RP0=0, select bank0
  6973  1368  1303               	bcf	3,6	;RP1=0, select bank0
  6974  1369  00A0               	movwf	??___ftpack
  6975  136A  01A1               	clrf	??___ftpack+1
  6976  136B  01A2               	clrf	??___ftpack+2
  6977  136C  3010               	movlw	16
  6978  136D                     u2355:
  6979  136D  1003               	clrc
  6980  136E  0DA0               	rlf	??___ftpack,f
  6981  136F  0DA1               	rlf	??___ftpack+1,f
  6982  1370  0DA2               	rlf	??___ftpack+2,f
  6983  1371                     u2350:
  6984  1371  3EFF               	addlw	-1
  6985  1372  1D03               	skipz
  6986  1373  2B6D               	goto	u2355
  6987  1374  0820               	movf	??___ftpack,w
  6988  1375  04F4               	iorwf	___ftpack@arg,f
  6989  1376  0821               	movf	??___ftpack+1,w
  6990  1377  04F5               	iorwf	___ftpack@arg+1,f
  6991  1378  0822               	movf	??___ftpack+2,w
  6992  1379  04F6               	iorwf	___ftpack@arg+2,f
  6993  137A                     l2057:
  6994  137A  0878               	movf	___ftpack@sign,w
  6995  137B  1903               	btfsc	3,2
  6996  137C  2B7E               	goto	u2361
  6997  137D  2B7F               	goto	u2360
  6998  137E                     u2361:
  6999  137E  2B80               	goto	l633
  7000  137F                     u2360:
  7001  137F                     l2059:
  7002  137F  17F6               	bsf	___ftpack@arg+2,7
  7003  1380                     l633:
  7004  1380                     l620:
  7005  1380  0008               	return
  7006  1381                     __end_of___ftpack:
  7007                           
  7008                           	psect	text24
  7009  1EA4                     __ptext24:	
  7010 ;; *************** function _USART_WriteStr *****************
  7011 ;; Defined at:
  7012 ;;		line 38 in file "USART.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  a               2    5[COMMON] PTR unsigned char 
  7015 ;;		 -> Lcdvar(20), STR_1(19), 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  i               1    8[COMMON] unsigned char 
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7027 ;;      Params:         2       0       0       0       0
  7028 ;;      Locals:         1       0       0       0       0
  7029 ;;      Temps:          1       0       0       0       0
  7030 ;;      Totals:         4       0       0       0       0
  7031 ;;Total ram usage:        4 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:    2
  7034 ;; This function calls:
  7035 ;;		_USART_Write
  7036 ;; This function is called by:
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           
  7042                           ;psect for function _USART_WriteStr
  7043  1EA4                     _USART_WriteStr:
  7044  1EA4                     l2719:	
  7045                           ;incstack = 0
  7046                           ; Regs used in _USART_WriteStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7047                           
  7048                           
  7049                           ;USART.c: 39:     uint8_t i;;USART.c: 40:     for(i=0;a[i]!='\0';i++){
  7050  1EA4  01F8               	clrf	USART_WriteStr@i
  7051  1EA5  2EBB               	goto	l2725
  7052  1EA6                     l2721:
  7053                           
  7054                           ;USART.c: 41:         USART_Write(a[i]);
  7055  1EA6  0878               	movf	USART_WriteStr@i,w
  7056  1EA7  0775               	addwf	USART_WriteStr@a,w
  7057  1EA8  0084               	movwf	4
  7058  1EA9  0876               	movf	USART_WriteStr@a+1,w
  7059  1EAA  1803               	skipnc
  7060  1EAB  0A76               	incf	USART_WriteStr@a+1,w
  7061  1EAC  00FF               	movwf	btemp+1
  7062  1EAD  160A  118A  2000  160A  158A  	fcall	stringtab
  7063  1EB2  160A  158A  257B  160A  158A  	fcall	_USART_Write
  7064  1EB7                     l2723:
  7065                           
  7066                           ;USART.c: 42:     }
  7067  1EB7  3001               	movlw	1
  7068  1EB8  00F7               	movwf	??_USART_WriteStr
  7069  1EB9  0877               	movf	??_USART_WriteStr,w
  7070  1EBA  07F8               	addwf	USART_WriteStr@i,f
  7071  1EBB                     l2725:
  7072  1EBB  0878               	movf	USART_WriteStr@i,w
  7073  1EBC  0775               	addwf	USART_WriteStr@a,w
  7074  1EBD  0084               	movwf	4
  7075  1EBE  0876               	movf	USART_WriteStr@a+1,w
  7076  1EBF  1803               	skipnc
  7077  1EC0  0A76               	incf	USART_WriteStr@a+1,w
  7078  1EC1  1283               	bcf	3,5	;RP0=0, select bank0
  7079  1EC2  1303               	bcf	3,6	;RP1=0, select bank0
  7080  1EC3  00FF               	movwf	btemp+1
  7081  1EC4  160A  118A  2000  160A  158A  	fcall	stringtab
  7082  1EC9  3A00               	xorlw	0
  7083  1ECA  1D03               	skipz
  7084  1ECB  2ECD               	goto	u3781
  7085  1ECC  2ECE               	goto	u3780
  7086  1ECD                     u3781:
  7087  1ECD  2EA6               	goto	l2721
  7088  1ECE                     u3780:
  7089  1ECE                     l184:
  7090  1ECE  0008               	return
  7091  1ECF                     __end_of_USART_WriteStr:
  7092                           
  7093                           	psect	text25
  7094  1D7B                     __ptext25:	
  7095 ;; *************** function _USART_Write *****************
  7096 ;; Defined at:
  7097 ;;		line 33 in file "USART.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;  a               1    wreg     unsigned char 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  a               1    4[COMMON] unsigned char 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		wreg
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7111 ;;      Params:         0       0       0       0       0
  7112 ;;      Locals:         1       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0
  7114 ;;      Totals:         1       0       0       0       0
  7115 ;;Total ram usage:        1 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    1
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_main
  7122 ;;		_USART_WriteStr
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           
  7127                           ;psect for function _USART_Write
  7128  1D7B                     _USART_Write:
  7129                           
  7130                           ;incstack = 0
  7131                           ; Regs used in _USART_Write: [wreg]
  7132                           ;USART_Write@a stored from wreg
  7133  1D7B  00F4               	movwf	USART_Write@a
  7134  1D7C                     l2337:
  7135  1D7C                     l175:	
  7136                           ;USART.c: 34:     while(!TRMT);
  7137                           
  7138  1D7C  1683               	bsf	3,5	;RP0=1, select bank1
  7139  1D7D  1303               	bcf	3,6	;RP1=0, select bank1
  7140  1D7E  1C98               	btfss	24,1	;volatile
  7141  1D7F  2D81               	goto	u3091
  7142  1D80  2D82               	goto	u3090
  7143  1D81                     u3091:
  7144  1D81  2D7C               	goto	l175
  7145  1D82                     u3090:
  7146  1D82                     l2339:
  7147                           
  7148                           ;USART.c: 35:     TXREG=a;
  7149  1D82  0874               	movf	USART_Write@a,w
  7150  1D83  1283               	bcf	3,5	;RP0=0, select bank0
  7151  1D84  1303               	bcf	3,6	;RP1=0, select bank0
  7152  1D85  0099               	movwf	25	;volatile
  7153  1D86                     l178:
  7154  1D86  0008               	return
  7155  1D87                     __end_of_USART_Write:
  7156                           
  7157                           	psect	text26
  7158  0800                     __ptext26:	
  7159 ;; *************** function _Setup *****************
  7160 ;; Defined at:
  7161 ;;		line 68 in file "LAB03.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;		None
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;		None
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      void 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0, pclath, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7175 ;;      Params:         0       0       0       0       0
  7176 ;;      Locals:         0       0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0
  7178 ;;      Totals:         0       0       0       0       0
  7179 ;;Total ram usage:        0 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:    2
  7182 ;; This function calls:
  7183 ;;		_ADC_CONFIG
  7184 ;; This function is called by:
  7185 ;;		_main
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           
  7190                           ;psect for function _Setup
  7191  0800                     _Setup:
  7192  0800                     l2689:	
  7193                           ;incstack = 0
  7194                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  7195                           
  7196                           
  7197                           ;LAB03.c: 70:     ANSEL = 0b00000011;
  7198  0800  3003               	movlw	3
  7199  0801  1683               	bsf	3,5	;RP0=1, select bank3
  7200  0802  1703               	bsf	3,6	;RP1=1, select bank3
  7201  0803  0088               	movwf	8	;volatile
  7202  0804                     l2691:
  7203                           
  7204                           ;LAB03.c: 71:     ANSELH = 0;
  7205  0804  0189               	clrf	9	;volatile
  7206  0805                     l2693:
  7207                           
  7208                           ;LAB03.c: 73:     TRISA = 0b00000011;
  7209  0805  3003               	movlw	3
  7210  0806  1683               	bsf	3,5	;RP0=1, select bank1
  7211  0807  1303               	bcf	3,6	;RP1=0, select bank1
  7212  0808  0085               	movwf	5	;volatile
  7213                           
  7214                           ;LAB03.c: 74:     PORTA = 0;
  7215  0809  1283               	bcf	3,5	;RP0=0, select bank0
  7216  080A  1303               	bcf	3,6	;RP1=0, select bank0
  7217  080B  0185               	clrf	5	;volatile
  7218                           
  7219                           ;LAB03.c: 77:     TRISC = 0b0000000;
  7220  080C  1683               	bsf	3,5	;RP0=1, select bank1
  7221  080D  1303               	bcf	3,6	;RP1=0, select bank1
  7222  080E  0187               	clrf	7	;volatile
  7223                           
  7224                           ;LAB03.c: 78:     PORTC = 0;
  7225  080F  1283               	bcf	3,5	;RP0=0, select bank0
  7226  0810  1303               	bcf	3,6	;RP1=0, select bank0
  7227  0811  0187               	clrf	7	;volatile
  7228                           
  7229                           ;LAB03.c: 80:     TRISD = 0;
  7230  0812  1683               	bsf	3,5	;RP0=1, select bank1
  7231  0813  1303               	bcf	3,6	;RP1=0, select bank1
  7232  0814  0188               	clrf	8	;volatile
  7233                           
  7234                           ;LAB03.c: 81:     PORTD = 0;
  7235  0815  1283               	bcf	3,5	;RP0=0, select bank0
  7236  0816  1303               	bcf	3,6	;RP1=0, select bank0
  7237  0817  0188               	clrf	8	;volatile
  7238                           
  7239                           ;LAB03.c: 83:     TRISE = 0;
  7240  0818  1683               	bsf	3,5	;RP0=1, select bank1
  7241  0819  1303               	bcf	3,6	;RP1=0, select bank1
  7242  081A  0189               	clrf	9	;volatile
  7243                           
  7244                           ;LAB03.c: 84:     PORTE = 0;
  7245  081B  1283               	bcf	3,5	;RP0=0, select bank0
  7246  081C  1303               	bcf	3,6	;RP1=0, select bank0
  7247  081D  0189               	clrf	9	;volatile
  7248  081E                     l2695:
  7249                           
  7250                           ;LAB03.c: 86:     ADC_CONFIG();
  7251  081E  160A  158A  25A2  120A  158A  	fcall	_ADC_CONFIG
  7252  0823                     l2697:
  7253                           
  7254                           ;LAB03.c: 87:     ADCON0bits.CHS=0;
  7255  0823  30C3               	movlw	-61
  7256  0824  1283               	bcf	3,5	;RP0=0, select bank0
  7257  0825  1303               	bcf	3,6	;RP1=0, select bank0
  7258  0826  059F               	andwf	31,f	;volatile
  7259  0827                     l71:
  7260  0827  0008               	return
  7261  0828                     __end_of_Setup:
  7262                           
  7263                           	psect	text27
  7264  1DA2                     __ptext27:	
  7265 ;; *************** function _ADC_CONFIG *****************
  7266 ;; Defined at:
  7267 ;;		line 10 in file "LIB_ADC.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;		None
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;		None
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  1    wreg      void 
  7274 ;; Registers used:
  7275 ;;		wreg, status,2, status,0
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7281 ;;      Params:         0       0       0       0       0
  7282 ;;      Locals:         0       0       0       0       0
  7283 ;;      Temps:          0       0       0       0       0
  7284 ;;      Totals:         0       0       0       0       0
  7285 ;;Total ram usage:        0 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; Hardware stack levels required when called:    1
  7288 ;; This function calls:
  7289 ;;		Nothing
  7290 ;; This function is called by:
  7291 ;;		_Setup
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           
  7296                           ;psect for function _ADC_CONFIG
  7297  1DA2                     _ADC_CONFIG:
  7298  1DA2                     l2327:	
  7299                           ;incstack = 0
  7300                           ; Regs used in _ADC_CONFIG: [wreg+status,2+status,0]
  7301                           
  7302                           
  7303                           ;LIB_ADC.c: 11:     INTCONbits.GIE = 1;
  7304  1DA2  178B               	bsf	11,7	;volatile
  7305                           
  7306                           ;LIB_ADC.c: 12:     INTCONbits.PEIE = 1;
  7307  1DA3  170B               	bsf	11,6	;volatile
  7308                           
  7309                           ;LIB_ADC.c: 13:     PIR1bits.ADIF = 0;
  7310  1DA4  1283               	bcf	3,5	;RP0=0, select bank0
  7311  1DA5  1303               	bcf	3,6	;RP1=0, select bank0
  7312  1DA6  130C               	bcf	12,6	;volatile
  7313                           
  7314                           ;LIB_ADC.c: 14:     PIE1bits.ADIE = 1;
  7315  1DA7  1683               	bsf	3,5	;RP0=1, select bank1
  7316  1DA8  1303               	bcf	3,6	;RP1=0, select bank1
  7317  1DA9  170C               	bsf	12,6	;volatile
  7318  1DAA                     l2329:
  7319                           
  7320                           ;LIB_ADC.c: 15:     ADCON0bits.ADCS = 0b10;
  7321  1DAA  1283               	bcf	3,5	;RP0=0, select bank0
  7322  1DAB  1303               	bcf	3,6	;RP1=0, select bank0
  7323  1DAC  081F               	movf	31,w	;volatile
  7324  1DAD  393F               	andlw	-193
  7325  1DAE  3880               	iorlw	128
  7326  1DAF  009F               	movwf	31	;volatile
  7327  1DB0                     l2331:
  7328                           
  7329                           ;LIB_ADC.c: 16:     ADCON0bits.GO = 0;
  7330  1DB0  109F               	bcf	31,1	;volatile
  7331  1DB1                     l2333:
  7332                           
  7333                           ;LIB_ADC.c: 17:     ADCON0bits.ADON = 1;
  7334  1DB1  141F               	bsf	31,0	;volatile
  7335  1DB2                     l2335:
  7336                           
  7337                           ;LIB_ADC.c: 18:     ADCON1 = 0b0000000;
  7338  1DB2  1683               	bsf	3,5	;RP0=1, select bank1
  7339  1DB3  1303               	bcf	3,6	;RP1=0, select bank1
  7340  1DB4  019F               	clrf	31	;volatile
  7341  1DB5                     l102:
  7342  1DB5  0008               	return
  7343  1DB6                     __end_of_ADC_CONFIG:
  7344                           
  7345                           	psect	text28
  7346  07FB                     __ptext28:	
  7347 ;; *************** function _Set_BaudRate *****************
  7348 ;; Defined at:
  7349 ;;		line 13 in file "USART.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      void 
  7356 ;; Registers used:
  7357 ;;		wreg
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7363 ;;      Params:         0       0       0       0       0
  7364 ;;      Locals:         0       0       0       0       0
  7365 ;;      Temps:          0       0       0       0       0
  7366 ;;      Totals:         0       0       0       0       0
  7367 ;;Total ram usage:        0 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    1
  7370 ;; This function calls:
  7371 ;;		Nothing
  7372 ;; This function is called by:
  7373 ;;		_main
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           
  7378                           ;psect for function _Set_BaudRate
  7379  07FB                     _Set_BaudRate:
  7380  07FB                     l2713:	
  7381                           ;incstack = 0
  7382                           ; Regs used in _Set_BaudRate: [wreg]
  7383                           
  7384                           
  7385                           ;USART.c: 14:     SPBRG = 12;
  7386  07FB  300C               	movlw	12
  7387  07FC  1683               	bsf	3,5	;RP0=1, select bank1
  7388  07FD  1303               	bcf	3,6	;RP1=0, select bank1
  7389  07FE  0099               	movwf	25	;volatile
  7390  07FF                     l166:
  7391  07FF  0008               	return
  7392  0800                     __end_of_Set_BaudRate:
  7393                           
  7394                           	psect	text29
  7395  1F74                     __ptext29:	
  7396 ;; *************** function _LCD_Write_String *****************
  7397 ;; Defined at:
  7398 ;;		line 67 in file "LCD.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;  a               2    7[COMMON] PTR unsigned char 
  7401 ;;		 -> STR_3(16), Lcdvar(20), 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;  i               2    3[BANK0 ] int 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      void 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7413 ;;      Params:         2       0       0       0       0
  7414 ;;      Locals:         0       2       0       0       0
  7415 ;;      Temps:          0       3       0       0       0
  7416 ;;      Totals:         2       5       0       0       0
  7417 ;;Total ram usage:        7 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    3
  7420 ;; This function calls:
  7421 ;;		_LCD_Write_Char
  7422 ;; This function is called by:
  7423 ;;		_main
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           
  7428                           ;psect for function _LCD_Write_String
  7429  1F74                     _LCD_Write_String:
  7430  1F74                     l3031:	
  7431                           ;incstack = 0
  7432                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7433                           
  7434                           
  7435                           ;LCD.c: 68:  int i;;LCD.c: 69:  for(i=0;a[i]!='\0';i++)
  7436  1F74  1283               	bcf	3,5	;RP0=0, select bank0
  7437  1F75  1303               	bcf	3,6	;RP1=0, select bank0
  7438  1F76  01A3               	clrf	LCD_Write_String@i
  7439  1F77  01A4               	clrf	LCD_Write_String@i+1
  7440  1F78  2F9D               	goto	l3037
  7441  1F79                     l3033:
  7442                           
  7443                           ;LCD.c: 70:     LCD_Write_Char(a[i]);
  7444  1F79  0823               	movf	LCD_Write_String@i,w
  7445  1F7A  0777               	addwf	LCD_Write_String@a,w
  7446  1F7B  00A1               	movwf	??_LCD_Write_String+1
  7447  1F7C  0878               	movf	LCD_Write_String@a+1,w
  7448  1F7D  00A0               	movwf	??_LCD_Write_String
  7449  1F7E  1803               	skipnc
  7450  1F7F  0AA0               	incf	??_LCD_Write_String,f
  7451  1F80  1FA3               	btfss	LCD_Write_String@i,7
  7452  1F81  2F83               	goto	u4350
  7453  1F82  03A0               	decf	??_LCD_Write_String,f
  7454  1F83                     u4350:
  7455  1F83  1283               	bcf	3,5	;RP0=0, select bank0
  7456  1F84  1303               	bcf	3,6	;RP1=0, select bank0
  7457  1F85  0820               	movf	??_LCD_Write_String,w
  7458  1F86  00A2               	movwf	??_LCD_Write_String+2
  7459  1F87  0822               	movf	??_LCD_Write_String+2,w
  7460  1F88  00FF               	movwf	btemp+1
  7461  1F89  0821               	movf	??_LCD_Write_String+1,w
  7462  1F8A  0084               	movwf	4
  7463  1F8B  160A  118A  2000  160A  158A  	fcall	stringtab
  7464  1F90  160A  158A  25CD  160A  158A  	fcall	_LCD_Write_Char
  7465  1F95                     l3035:
  7466  1F95  3001               	movlw	1
  7467  1F96  1283               	bcf	3,5	;RP0=0, select bank0
  7468  1F97  1303               	bcf	3,6	;RP1=0, select bank0
  7469  1F98  07A3               	addwf	LCD_Write_String@i,f
  7470  1F99  1803               	skipnc
  7471  1F9A  0AA4               	incf	LCD_Write_String@i+1,f
  7472  1F9B  3000               	movlw	0
  7473  1F9C  07A4               	addwf	LCD_Write_String@i+1,f
  7474  1F9D                     l3037:
  7475  1F9D  0823               	movf	LCD_Write_String@i,w
  7476  1F9E  0777               	addwf	LCD_Write_String@a,w
  7477  1F9F  00A1               	movwf	??_LCD_Write_String+1
  7478  1FA0  0878               	movf	LCD_Write_String@a+1,w
  7479  1FA1  00A0               	movwf	??_LCD_Write_String
  7480  1FA2  1803               	skipnc
  7481  1FA3  0AA0               	incf	??_LCD_Write_String,f
  7482  1FA4  1FA3               	btfss	LCD_Write_String@i,7
  7483  1FA5  2FA7               	goto	u4360
  7484  1FA6  03A0               	decf	??_LCD_Write_String,f
  7485  1FA7                     u4360:
  7486  1FA7  1283               	bcf	3,5	;RP0=0, select bank0
  7487  1FA8  1303               	bcf	3,6	;RP1=0, select bank0
  7488  1FA9  0820               	movf	??_LCD_Write_String,w
  7489  1FAA  00A2               	movwf	??_LCD_Write_String+2
  7490  1FAB  0822               	movf	??_LCD_Write_String+2,w
  7491  1FAC  00FF               	movwf	btemp+1
  7492  1FAD  0821               	movf	??_LCD_Write_String+1,w
  7493  1FAE  0084               	movwf	4
  7494  1FAF  160A  118A  2000  160A  158A  	fcall	stringtab
  7495  1FB4  3A00               	xorlw	0
  7496  1FB5  1D03               	skipz
  7497  1FB6  2FB8               	goto	u4371
  7498  1FB7  2FB9               	goto	u4370
  7499  1FB8                     u4371:
  7500  1FB8  2F79               	goto	l3033
  7501  1FB9                     u4370:
  7502  1FB9                     l141:
  7503  1FB9  0008               	return
  7504  1FBA                     __end_of_LCD_Write_String:
  7505                           
  7506                           	psect	text30
  7507  1DCD                     __ptext30:	
  7508 ;; *************** function _LCD_Write_Char *****************
  7509 ;; Defined at:
  7510 ;;		line 30 in file "LCD.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  a               1    wreg     unsigned char 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  a               1    6[COMMON] unsigned char 
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      void 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0, pclath, cstack
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7524 ;;      Params:         0       0       0       0       0
  7525 ;;      Locals:         1       0       0       0       0
  7526 ;;      Temps:          1       0       0       0       0
  7527 ;;      Totals:         2       0       0       0       0
  7528 ;;Total ram usage:        2 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    2
  7531 ;; This function calls:
  7532 ;;		_LCD_Port
  7533 ;; This function is called by:
  7534 ;;		_LCD_Write_String
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           
  7539                           ;psect for function _LCD_Write_Char
  7540  1DCD                     _LCD_Write_Char:
  7541                           
  7542                           ;incstack = 0
  7543                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  7544                           ;LCD_Write_Char@a stored from wreg
  7545  1DCD  00F6               	movwf	LCD_Write_Char@a
  7546  1DCE                     l2353:
  7547                           
  7548                           ;LCD.c: 31:     RE0 = 1;
  7549  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
  7550  1DCF  1303               	bcf	3,6	;RP1=0, select bank0
  7551  1DD0  1409               	bsf	9,0	;volatile
  7552  1DD1                     l2355:
  7553                           
  7554                           ;LCD.c: 32:     LCD_Port(a);
  7555  1DD1  0876               	movf	LCD_Write_Char@a,w
  7556  1DD2  160A  158A  255B  160A  158A  	fcall	_LCD_Port
  7557  1DD7                     l2357:
  7558                           
  7559                           ;LCD.c: 33:     RE1 = 1;
  7560  1DD7  1283               	bcf	3,5	;RP0=0, select bank0
  7561  1DD8  1303               	bcf	3,6	;RP1=0, select bank0
  7562  1DD9  1489               	bsf	9,1	;volatile
  7563  1DDA                     l2359:
  7564                           
  7565                           ;LCD.c: 34:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  7566  1DDA  301A               	movlw	26
  7567  1DDB  00F5               	movwf	??_LCD_Write_Char
  7568  1DDC                     u4507:
  7569  1DDC  0BF5               	decfsz	??_LCD_Write_Char,f
  7570  1DDD  2DDC               	goto	u4507
  7571  1DDE  0000               	nop
  7572  1DDF                     l2361:
  7573                           
  7574                           ;LCD.c: 35:     RE1 = 0;
  7575  1DDF  1283               	bcf	3,5	;RP0=0, select bank0
  7576  1DE0  1303               	bcf	3,6	;RP1=0, select bank0
  7577  1DE1  1089               	bcf	9,1	;volatile
  7578  1DE2                     l2363:
  7579                           
  7580                           ;LCD.c: 36:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7581  1DE2  3006               	movlw	6
  7582  1DE3  00F5               	movwf	??_LCD_Write_Char
  7583  1DE4                     u4517:
  7584  1DE4  0BF5               	decfsz	??_LCD_Write_Char,f
  7585  1DE5  2DE4               	goto	u4517
  7586  1DE6  0000               	nop
  7587  1DE7                     l123:
  7588  1DE7  0008               	return
  7589  1DE8                     __end_of_LCD_Write_Char:
  7590                           
  7591                           	psect	text31
  7592  1E55                     __ptext31:	
  7593 ;; *************** function _LCD_Set_Cursor *****************
  7594 ;; Defined at:
  7595 ;;		line 53 in file "LCD.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  x               1    wreg     unsigned char 
  7598 ;;  y               1    8[COMMON] unsigned char 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  x               1    0[BANK0 ] unsigned char 
  7601 ;;  a               1    1[BANK0 ] unsigned char 
  7602 ;; Return value:  Size  Location     Type
  7603 ;;                  1    wreg      void 
  7604 ;; Registers used:
  7605 ;;		wreg, status,2, status,0, pclath, cstack
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7611 ;;      Params:         1       0       0       0       0
  7612 ;;      Locals:         0       2       0       0       0
  7613 ;;      Temps:          1       0       0       0       0
  7614 ;;      Totals:         2       2       0       0       0
  7615 ;;Total ram usage:        4 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; Hardware stack levels required when called:    3
  7618 ;; This function calls:
  7619 ;;		_LCD_Cmd
  7620 ;; This function is called by:
  7621 ;;		_main
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           
  7626                           ;psect for function _LCD_Set_Cursor
  7627  1E55                     _LCD_Set_Cursor:
  7628                           
  7629                           ;incstack = 0
  7630                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7631                           ;LCD_Set_Cursor@x stored from wreg
  7632  1E55  1283               	bcf	3,5	;RP0=0, select bank0
  7633  1E56  1303               	bcf	3,6	;RP1=0, select bank0
  7634  1E57  00A0               	movwf	LCD_Set_Cursor@x
  7635  1E58                     l3019:
  7636                           
  7637                           ;LCD.c: 54:  uint8_t a;;LCD.c: 55:  if(x == 1)
  7638  1E58  0320               	decf	LCD_Set_Cursor@x,w
  7639  1E59  1D03               	btfss	3,2
  7640  1E5A  2E5C               	goto	u4331
  7641  1E5B  2E5D               	goto	u4330
  7642  1E5C                     u4331:
  7643  1E5C  2E69               	goto	l3025
  7644  1E5D                     u4330:
  7645  1E5D                     l3021:
  7646                           
  7647                           ;LCD.c: 56:  {;LCD.c: 57:         a = 0x80 + y;
  7648  1E5D  0878               	movf	LCD_Set_Cursor@y,w
  7649  1E5E  3E80               	addlw	128
  7650  1E5F  00F9               	movwf	??_LCD_Set_Cursor
  7651  1E60  0879               	movf	??_LCD_Set_Cursor,w
  7652  1E61  00A1               	movwf	LCD_Set_Cursor@a
  7653  1E62                     l3023:
  7654                           
  7655                           ;LCD.c: 58:   LCD_Cmd(a);
  7656  1E62  0821               	movf	LCD_Set_Cursor@a,w
  7657  1E63  160A  158A  25E8  160A  158A  	fcall	_LCD_Cmd
  7658                           
  7659                           ;LCD.c: 59:  }
  7660  1E68  2E7A               	goto	l135
  7661  1E69                     l3025:
  7662  1E69  3002               	movlw	2
  7663  1E6A  0620               	xorwf	LCD_Set_Cursor@x,w
  7664  1E6B  1D03               	btfss	3,2
  7665  1E6C  2E6E               	goto	u4341
  7666  1E6D  2E6F               	goto	u4340
  7667  1E6E                     u4341:
  7668  1E6E  2E7A               	goto	l135
  7669  1E6F                     u4340:
  7670  1E6F                     l3027:
  7671                           
  7672                           ;LCD.c: 61:  {;LCD.c: 62:   a = 0xC0 + y;
  7673  1E6F  0878               	movf	LCD_Set_Cursor@y,w
  7674  1E70  3EC0               	addlw	192
  7675  1E71  00F9               	movwf	??_LCD_Set_Cursor
  7676  1E72  0879               	movf	??_LCD_Set_Cursor,w
  7677  1E73  00A1               	movwf	LCD_Set_Cursor@a
  7678  1E74                     l3029:
  7679                           
  7680                           ;LCD.c: 63:   LCD_Cmd(a);
  7681  1E74  0821               	movf	LCD_Set_Cursor@a,w
  7682  1E75  160A  158A  25E8  160A  158A  	fcall	_LCD_Cmd
  7683  1E7A                     l135:
  7684  1E7A  0008               	return
  7685  1E7B                     __end_of_LCD_Set_Cursor:
  7686                           
  7687                           	psect	text32
  7688  10CD                     __ptext32:	
  7689 ;; *************** function _LCD_Init *****************
  7690 ;; Defined at:
  7691 ;;		line 10 in file "LCD.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;		None
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;		None
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  1    wreg      void 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0, pclath, cstack
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7705 ;;      Params:         0       0       0       0       0
  7706 ;;      Locals:         0       0       0       0       0
  7707 ;;      Temps:          2       0       0       0       0
  7708 ;;      Totals:         2       0       0       0       0
  7709 ;;Total ram usage:        2 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; Hardware stack levels required when called:    3
  7712 ;; This function calls:
  7713 ;;		_LCD_Cmd
  7714 ;;		_LCD_Port
  7715 ;; This function is called by:
  7716 ;;		_main
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           
  7721                           ;psect for function _LCD_Init
  7722  10CD                     _LCD_Init:
  7723  10CD                     l2699:	
  7724                           ;incstack = 0
  7725                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  7726                           
  7727                           
  7728                           ;LCD.c: 11:     RE0=0;
  7729  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  7730  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  7731  10CF  1009               	bcf	9,0	;volatile
  7732                           
  7733                           ;LCD.c: 12:     RE1=0;
  7734  10D0  1089               	bcf	9,1	;volatile
  7735  10D1                     l2701:
  7736                           
  7737                           ;LCD.c: 13:     LCD_Port(0x00);
  7738  10D1  3000               	movlw	0
  7739  10D2  160A  158A  255B  160A  118A  	fcall	_LCD_Port
  7740  10D7                     l2703:
  7741                           
  7742                           ;LCD.c: 14:     _delay((unsigned long)((20)*(8000000/4000.0)));
  7743  10D7  3034               	movlw	52
  7744  10D8  00F9               	movwf	??_LCD_Init+1
  7745  10D9  30F1               	movlw	241
  7746  10DA  00F8               	movwf	??_LCD_Init
  7747  10DB                     u4527:
  7748  10DB  0BF8               	decfsz	??_LCD_Init,f
  7749  10DC  28DB               	goto	u4527
  7750  10DD  0BF9               	decfsz	??_LCD_Init+1,f
  7751  10DE  28DB               	goto	u4527
  7752  10DF  28E0               	nop2
  7753  10E0                     l2705:
  7754                           
  7755                           ;LCD.c: 15:     LCD_Cmd(0x30);
  7756  10E0  3030               	movlw	48
  7757  10E1  160A  158A  25E8  160A  118A  	fcall	_LCD_Cmd
  7758                           
  7759                           ;LCD.c: 16:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7760  10E6  300D               	movlw	13
  7761  10E7  00F9               	movwf	??_LCD_Init+1
  7762  10E8  30FB               	movlw	251
  7763  10E9  00F8               	movwf	??_LCD_Init
  7764  10EA                     u4537:
  7765  10EA  0BF8               	decfsz	??_LCD_Init,f
  7766  10EB  28EA               	goto	u4537
  7767  10EC  0BF9               	decfsz	??_LCD_Init+1,f
  7768  10ED  28EA               	goto	u4537
  7769  10EE  28EF               	nop2
  7770  10EF                     l2707:
  7771                           
  7772                           ;LCD.c: 17:     LCD_Cmd(0x30);
  7773  10EF  3030               	movlw	48
  7774  10F0  160A  158A  25E8  160A  118A  	fcall	_LCD_Cmd
  7775  10F5                     l2709:
  7776                           
  7777                           ;LCD.c: 18:     _delay((unsigned long)((11)*(8000000/4000.0)));
  7778  10F5  301D               	movlw	29
  7779  10F6  00F9               	movwf	??_LCD_Init+1
  7780  10F7  3091               	movlw	145
  7781  10F8  00F8               	movwf	??_LCD_Init
  7782  10F9                     u4547:
  7783  10F9  0BF8               	decfsz	??_LCD_Init,f
  7784  10FA  28F9               	goto	u4547
  7785  10FB  0BF9               	decfsz	??_LCD_Init+1,f
  7786  10FC  28F9               	goto	u4547
  7787                           
  7788                           ;LCD.c: 19:     LCD_Cmd(0x30);
  7789  10FD  3030               	movlw	48
  7790  10FE  160A  158A  25E8  160A  118A  	fcall	_LCD_Cmd
  7791                           
  7792                           ;LCD.c: 20:     LCD_Cmd(0x38);
  7793  1103  3038               	movlw	56
  7794  1104  160A  158A  25E8  160A  118A  	fcall	_LCD_Cmd
  7795                           
  7796                           ;LCD.c: 21:     LCD_Cmd(0x0C);
  7797  1109  300C               	movlw	12
  7798  110A  160A  158A  25E8  160A  118A  	fcall	_LCD_Cmd
  7799                           
  7800                           ;LCD.c: 22:     LCD_Cmd(0x01);
  7801  110F  3001               	movlw	1
  7802  1110  160A  158A  25E8  160A  118A  	fcall	_LCD_Cmd
  7803                           
  7804                           ;LCD.c: 23:     LCD_Cmd(0x06);
  7805  1115  3006               	movlw	6
  7806  1116  160A  158A  25E8  160A  118A  	fcall	_LCD_Cmd
  7807  111B                     l117:
  7808  111B  0008               	return
  7809  111C                     __end_of_LCD_Init:
  7810                           
  7811                           	psect	text33
  7812  1D87                     __ptext33:	
  7813 ;; *************** function _LCD_Clear *****************
  7814 ;; Defined at:
  7815 ;;		line 48 in file "LCD.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;		None
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      void 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, status,0, pclath, cstack
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7829 ;;      Params:         0       0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0
  7831 ;;      Temps:          0       0       0       0       0
  7832 ;;      Totals:         0       0       0       0       0
  7833 ;;Total ram usage:        0 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:    3
  7836 ;; This function calls:
  7837 ;;		_LCD_Cmd
  7838 ;; This function is called by:
  7839 ;;		_main
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           
  7844                           ;psect for function _LCD_Clear
  7845  1D87                     _LCD_Clear:
  7846  1D87                     l2711:	
  7847                           ;incstack = 0
  7848                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  7849                           
  7850                           
  7851                           ;LCD.c: 49:     LCD_Cmd(0);
  7852  1D87  3000               	movlw	0
  7853  1D88  160A  158A  25E8  160A  158A  	fcall	_LCD_Cmd
  7854                           
  7855                           ;LCD.c: 50:     LCD_Cmd(1);
  7856  1D8D  3001               	movlw	1
  7857  1D8E  160A  158A  25E8  160A  158A  	fcall	_LCD_Cmd
  7858  1D93                     l129:
  7859  1D93  0008               	return
  7860  1D94                     __end_of_LCD_Clear:
  7861                           
  7862                           	psect	text34
  7863  1DE8                     __ptext34:	
  7864 ;; *************** function _LCD_Cmd *****************
  7865 ;; Defined at:
  7866 ;;		line 39 in file "LCD.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  a               1    wreg     unsigned char 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;  a               1    7[COMMON] unsigned char 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  1    wreg      void 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, pclath, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7880 ;;      Params:         0       0       0       0       0
  7881 ;;      Locals:         1       0       0       0       0
  7882 ;;      Temps:          2       0       0       0       0
  7883 ;;      Totals:         3       0       0       0       0
  7884 ;;Total ram usage:        3 bytes
  7885 ;; Hardware stack levels used:    1
  7886 ;; Hardware stack levels required when called:    2
  7887 ;; This function calls:
  7888 ;;		_LCD_Port
  7889 ;; This function is called by:
  7890 ;;		_LCD_Init
  7891 ;;		_LCD_Clear
  7892 ;;		_LCD_Set_Cursor
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           
  7897                           ;psect for function _LCD_Cmd
  7898  1DE8                     _LCD_Cmd:
  7899                           
  7900                           ;incstack = 0
  7901                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7902                           ;LCD_Cmd@a stored from wreg
  7903  1DE8  00F7               	movwf	LCD_Cmd@a
  7904  1DE9                     l2341:
  7905                           
  7906                           ;LCD.c: 40:     RE0=0;
  7907  1DE9  1283               	bcf	3,5	;RP0=0, select bank0
  7908  1DEA  1303               	bcf	3,6	;RP1=0, select bank0
  7909  1DEB  1009               	bcf	9,0	;volatile
  7910  1DEC                     l2343:
  7911                           
  7912                           ;LCD.c: 41:     LCD_Port(a);
  7913  1DEC  0877               	movf	LCD_Cmd@a,w
  7914  1DED  160A  158A  255B  160A  158A  	fcall	_LCD_Port
  7915  1DF2                     l2345:
  7916                           
  7917                           ;LCD.c: 42:     RE1=1;
  7918  1DF2  1283               	bcf	3,5	;RP0=0, select bank0
  7919  1DF3  1303               	bcf	3,6	;RP1=0, select bank0
  7920  1DF4  1489               	bsf	9,1	;volatile
  7921  1DF5                     l2347:
  7922                           
  7923                           ;LCD.c: 43:     _delay((unsigned long)((4)*(8000000/4000.0)));
  7924  1DF5  300B               	movlw	11
  7925  1DF6  00F6               	movwf	??_LCD_Cmd+1
  7926  1DF7  3062               	movlw	98
  7927  1DF8  00F5               	movwf	??_LCD_Cmd
  7928  1DF9                     u4557:
  7929  1DF9  0BF5               	decfsz	??_LCD_Cmd,f
  7930  1DFA  2DF9               	goto	u4557
  7931  1DFB  0BF6               	decfsz	??_LCD_Cmd+1,f
  7932  1DFC  2DF9               	goto	u4557
  7933  1DFD  0000               	nop
  7934  1DFE                     l2349:
  7935                           
  7936                           ;LCD.c: 44:     RE1=0;
  7937  1DFE  1283               	bcf	3,5	;RP0=0, select bank0
  7938  1DFF  1303               	bcf	3,6	;RP1=0, select bank0
  7939  1E00  1089               	bcf	9,1	;volatile
  7940  1E01                     l2351:
  7941                           
  7942                           ;LCD.c: 45:     _delay((unsigned long)((2)*(8000000/4000.0)));
  7943  1E01  3006               	movlw	6
  7944  1E02  00F6               	movwf	??_LCD_Cmd+1
  7945  1E03  3030               	movlw	48
  7946  1E04  00F5               	movwf	??_LCD_Cmd
  7947  1E05                     u4567:
  7948  1E05  0BF5               	decfsz	??_LCD_Cmd,f
  7949  1E06  2E05               	goto	u4567
  7950  1E07  0BF6               	decfsz	??_LCD_Cmd+1,f
  7951  1E08  2E05               	goto	u4567
  7952  1E09  0000               	nop
  7953  1E0A                     l126:
  7954  1E0A  0008               	return
  7955  1E0B                     __end_of_LCD_Cmd:
  7956                           
  7957                           	psect	text35
  7958  1D5B                     __ptext35:	
  7959 ;; *************** function _LCD_Port *****************
  7960 ;; Defined at:
  7961 ;;		line 26 in file "LCD.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  a               1    wreg     unsigned char 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;  a               1    4[COMMON] unsigned char 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7975 ;;      Params:         0       0       0       0       0
  7976 ;;      Locals:         1       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0
  7978 ;;      Totals:         1       0       0       0       0
  7979 ;;Total ram usage:        1 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    1
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_LCD_Init
  7986 ;;		_LCD_Write_Char
  7987 ;;		_LCD_Cmd
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           
  7992                           ;psect for function _LCD_Port
  7993  1D5B                     _LCD_Port:
  7994                           
  7995                           ;incstack = 0
  7996                           ; Regs used in _LCD_Port: [wreg]
  7997                           ;LCD_Port@a stored from wreg
  7998  1D5B  00F4               	movwf	LCD_Port@a
  7999  1D5C                     l2061:
  8000                           
  8001                           ;LCD.c: 27:     PORTD = a;
  8002  1D5C  0874               	movf	LCD_Port@a,w
  8003  1D5D  1283               	bcf	3,5	;RP0=0, select bank0
  8004  1D5E  1303               	bcf	3,6	;RP1=0, select bank0
  8005  1D5F  0088               	movwf	8	;volatile
  8006  1D60                     l120:
  8007  1D60  0008               	return
  8008  1D61                     __end_of_LCD_Port:
  8009                           
  8010                           	psect	text36
  8011  1D94                     __ptext36:	
  8012 ;; *************** function _Init_Trans *****************
  8013 ;; Defined at:
  8014 ;;		line 17 in file "USART.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  1    wreg      void 
  8021 ;; Registers used:
  8022 ;;		None
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8028 ;;      Params:         0       0       0       0       0
  8029 ;;      Locals:         0       0       0       0       0
  8030 ;;      Temps:          0       0       0       0       0
  8031 ;;      Totals:         0       0       0       0       0
  8032 ;;Total ram usage:        0 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:    1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_main
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           
  8043                           ;psect for function _Init_Trans
  8044  1D94                     _Init_Trans:
  8045  1D94                     l2715:	
  8046                           ;incstack = 0
  8047                           ; Regs used in _Init_Trans: []
  8048                           
  8049                           
  8050                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
  8051  1D94  1683               	bsf	3,5	;RP0=1, select bank1
  8052  1D95  1303               	bcf	3,6	;RP1=0, select bank1
  8053  1D96  1698               	bsf	24,5	;volatile
  8054                           
  8055                           ;USART.c: 19:     PIR1bits.TXIF = 0;
  8056  1D97  1283               	bcf	3,5	;RP0=0, select bank0
  8057  1D98  1303               	bcf	3,6	;RP1=0, select bank0
  8058  1D99  120C               	bcf	12,4	;volatile
  8059                           
  8060                           ;USART.c: 20:     PIE1bits.TXIE = 0;
  8061  1D9A  1683               	bsf	3,5	;RP0=1, select bank1
  8062  1D9B  1303               	bcf	3,6	;RP1=0, select bank1
  8063  1D9C  120C               	bcf	12,4	;volatile
  8064                           
  8065                           ;USART.c: 21:     INTCONbits.GIE = 1;
  8066  1D9D  178B               	bsf	11,7	;volatile
  8067                           
  8068                           ;USART.c: 22:     INTCONbits.PEIE = 1;
  8069  1D9E  170B               	bsf	11,6	;volatile
  8070                           
  8071                           ;USART.c: 23:     TRISCbits.TRISC6 = 0;
  8072  1D9F  1307               	bcf	7,6	;volatile
  8073                           
  8074                           ;USART.c: 24:     TRISCbits.TRISC7 = 1;
  8075  1DA0  1787               	bsf	7,7	;volatile
  8076  1DA1                     l169:
  8077  1DA1  0008               	return
  8078  1DA2                     __end_of_Init_Trans:
  8079                           
  8080                           	psect	text37
  8081  1D61                     __ptext37:	
  8082 ;; *************** function _Init_Receive *****************
  8083 ;; Defined at:
  8084 ;;		line 27 in file "USART.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;		None
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;		None
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  1    wreg      void 
  8091 ;; Registers used:
  8092 ;;		None
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8098 ;;      Params:         0       0       0       0       0
  8099 ;;      Locals:         0       0       0       0       0
  8100 ;;      Temps:          0       0       0       0       0
  8101 ;;      Totals:         0       0       0       0       0
  8102 ;;Total ram usage:        0 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    1
  8105 ;; This function calls:
  8106 ;;		Nothing
  8107 ;; This function is called by:
  8108 ;;		_main
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           
  8113                           ;psect for function _Init_Receive
  8114  1D61                     _Init_Receive:
  8115  1D61                     l2717:	
  8116                           ;incstack = 0
  8117                           ; Regs used in _Init_Receive: []
  8118                           
  8119                           
  8120                           ;USART.c: 28:     TXSTAbits.SYNC = 0;
  8121  1D61  1683               	bsf	3,5	;RP0=1, select bank1
  8122  1D62  1303               	bcf	3,6	;RP1=0, select bank1
  8123  1D63  1218               	bcf	24,4	;volatile
  8124                           
  8125                           ;USART.c: 29:     RCSTAbits.SPEN = 1;
  8126  1D64  1283               	bcf	3,5	;RP0=0, select bank0
  8127  1D65  1303               	bcf	3,6	;RP1=0, select bank0
  8128  1D66  1798               	bsf	24,7	;volatile
  8129                           
  8130                           ;USART.c: 30:     RCSTAbits.CREN = 1;
  8131  1D67  1618               	bsf	24,4	;volatile
  8132  1D68                     l172:
  8133  1D68  0008               	return
  8134  1D69                     __end_of_Init_Receive:
  8135                           
  8136                           	psect	text38
  8137  11CD                     __ptext38:	
  8138 ;; *************** function _ISR *****************
  8139 ;; Defined at:
  8140 ;;		line 94 in file "LAB03.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;		None
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;		None
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg, status,2, status,0
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8154 ;;      Params:         0       0       0       0       0
  8155 ;;      Locals:         0       0       0       0       0
  8156 ;;      Temps:          4       0       0       0       0
  8157 ;;      Totals:         4       0       0       0       0
  8158 ;;Total ram usage:        4 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		Interrupt level 1
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           
  8168                           ;psect for function _ISR
  8169  11CD                     _ISR:
  8170  11CD                     i1l3051:
  8171                           
  8172                           ;LAB03.c: 95:     if (ADCON0bits.GO == 0 & ADCON0bits.CHS == 0){
  8173  11CD  1283               	bcf	3,5	;RP0=0, select bank0
  8174  11CE  1303               	bcf	3,6	;RP1=0, select bank0
  8175  11CF  1C9F               	btfss	31,1	;volatile
  8176  11D0  29D2               	goto	u439_21
  8177  11D1  29D4               	goto	u439_20
  8178  11D2                     u439_21:
  8179  11D2  3001               	movlw	1
  8180  11D3  29D5               	goto	u439_22
  8181  11D4                     u439_20:
  8182  11D4  3000               	movlw	0
  8183  11D5                     u439_22:
  8184  11D5  00F0               	movwf	??_ISR
  8185  11D6  0C1F               	rrf	31,w	;volatile
  8186  11D7  00F1               	movwf	??_ISR+1
  8187  11D8  0C71               	rrf	??_ISR+1,w
  8188  11D9  390F               	andlw	15
  8189  11DA  3A00               	xorlw	0
  8190  11DB  1903               	skipnz
  8191  11DC  29DE               	goto	u440_21
  8192  11DD  29E0               	goto	u440_20
  8193  11DE                     u440_21:
  8194  11DE  3001               	movlw	1
  8195  11DF  29E1               	goto	u440_22
  8196  11E0                     u440_20:
  8197  11E0  3000               	movlw	0
  8198  11E1                     u440_22:
  8199  11E1  0570               	andwf	??_ISR,w
  8200  11E2  3800               	iorlw	0
  8201  11E3  1903               	skipnz
  8202  11E4  29E6               	goto	u441_21
  8203  11E5  29E7               	goto	u441_20
  8204  11E6                     u441_21:
  8205  11E6  29FC               	goto	i1l76
  8206  11E7                     u441_20:
  8207  11E7                     i1l3053:
  8208                           
  8209                           ;LAB03.c: 96:         adcvar = ADRESH;
  8210  11E7  081E               	movf	30,w	;volatile
  8211  11E8  00F0               	movwf	??_ISR
  8212  11E9  0870               	movf	??_ISR,w
  8213  11EA  1683               	bsf	3,5	;RP0=1, select bank1
  8214  11EB  1303               	bcf	3,6	;RP1=0, select bank1
  8215  11EC  00A9               	movwf	_adcvar^(0+128)
  8216  11ED                     i1l3055:
  8217                           
  8218                           ;LAB03.c: 97:         ADCON0bits.CHS = 1;
  8219  11ED  1283               	bcf	3,5	;RP0=0, select bank0
  8220  11EE  1303               	bcf	3,6	;RP1=0, select bank0
  8221  11EF  081F               	movf	31,w	;volatile
  8222  11F0  39C3               	andlw	-61
  8223  11F1  3804               	iorlw	4
  8224  11F2  009F               	movwf	31	;volatile
  8225  11F3                     i1l3057:
  8226                           
  8227                           ;LAB03.c: 98:         _delay((unsigned long)((25)*(8000000/4000000.0)));
  8228  11F3  3010               	movlw	16
  8229  11F4  00F0               	movwf	??_ISR
  8230  11F5                     u457_27:
  8231  11F5  0BF0               	decfsz	??_ISR,f
  8232  11F6  29F5               	goto	u457_27
  8233  11F7  0000               	nop
  8234  11F8                     i1l3059:
  8235                           
  8236                           ;LAB03.c: 99:         ADCON0bits.GO_DONE = 1;
  8237  11F8  1283               	bcf	3,5	;RP0=0, select bank0
  8238  11F9  1303               	bcf	3,6	;RP1=0, select bank0
  8239  11FA  149F               	bsf	31,1	;volatile
  8240  11FB                     i1l3061:
  8241                           
  8242                           ;LAB03.c: 100:         PIR1bits.ADIF = 0;
  8243  11FB  130C               	bcf	12,6	;volatile
  8244  11FC                     i1l76:	
  8245                           ;LAB03.c: 101:     }
  8246                           
  8247                           
  8248                           ;LAB03.c: 103:     if (ADCON0bits.GO == 0 & ADCON0bits.CHS == 1){
  8249  11FC  1C9F               	btfss	31,1	;volatile
  8250  11FD  29FF               	goto	u442_21
  8251  11FE  2A01               	goto	u442_20
  8252  11FF                     u442_21:
  8253  11FF  3001               	movlw	1
  8254  1200  2A02               	goto	u442_22
  8255  1201                     u442_20:
  8256  1201  3000               	movlw	0
  8257  1202                     u442_22:
  8258  1202  00F0               	movwf	??_ISR
  8259  1203  0C1F               	rrf	31,w	;volatile
  8260  1204  00F1               	movwf	??_ISR+1
  8261  1205  0C71               	rrf	??_ISR+1,w
  8262  1206  390F               	andlw	15
  8263  1207  3A01               	xorlw	1
  8264  1208  1903               	skipnz
  8265  1209  2A0B               	goto	u443_21
  8266  120A  2A0D               	goto	u443_20
  8267  120B                     u443_21:
  8268  120B  3001               	movlw	1
  8269  120C  2A0E               	goto	u443_22
  8270  120D                     u443_20:
  8271  120D  3000               	movlw	0
  8272  120E                     u443_22:
  8273  120E  0570               	andwf	??_ISR,w
  8274  120F  3800               	iorlw	0
  8275  1210  1903               	skipnz
  8276  1211  2A13               	goto	u444_21
  8277  1212  2A14               	goto	u444_20
  8278  1213                     u444_21:
  8279  1213  2A27               	goto	i1l78
  8280  1214                     u444_20:
  8281  1214                     i1l3063:
  8282                           
  8283                           ;LAB03.c: 104:         adcvar1 = ADRESH;
  8284  1214  081E               	movf	30,w	;volatile
  8285  1215  00F0               	movwf	??_ISR
  8286  1216  0870               	movf	??_ISR,w
  8287  1217  1683               	bsf	3,5	;RP0=1, select bank1
  8288  1218  1303               	bcf	3,6	;RP1=0, select bank1
  8289  1219  00A8               	movwf	_adcvar1^(0+128)
  8290  121A                     i1l3065:
  8291                           
  8292                           ;LAB03.c: 105:         ADCON0bits.CHS = 0;
  8293  121A  30C3               	movlw	-61
  8294  121B  1283               	bcf	3,5	;RP0=0, select bank0
  8295  121C  1303               	bcf	3,6	;RP1=0, select bank0
  8296  121D  059F               	andwf	31,f	;volatile
  8297  121E                     i1l3067:
  8298                           
  8299                           ;LAB03.c: 106:         _delay((unsigned long)((25)*(8000000/4000000.0)));
  8300  121E  3010               	movlw	16
  8301  121F  00F0               	movwf	??_ISR
  8302  1220                     u458_27:
  8303  1220  0BF0               	decfsz	??_ISR,f
  8304  1221  2A20               	goto	u458_27
  8305  1222  0000               	nop
  8306  1223                     i1l3069:
  8307                           
  8308                           ;LAB03.c: 107:         ADCON0bits.GO_DONE = 1;
  8309  1223  1283               	bcf	3,5	;RP0=0, select bank0
  8310  1224  1303               	bcf	3,6	;RP1=0, select bank0
  8311  1225  149F               	bsf	31,1	;volatile
  8312  1226                     i1l3071:
  8313                           
  8314                           ;LAB03.c: 108:         PIR1bits.ADIF = 0;
  8315  1226  130C               	bcf	12,6	;volatile
  8316  1227                     i1l78:
  8317  1227  0873               	movf	??_ISR+3,w
  8318  1228  008A               	movwf	10
  8319  1229  0E72               	swapf	??_ISR+2,w
  8320  122A  0083               	movwf	3
  8321  122B  0EFE               	swapf	btemp,f
  8322  122C  0E7E               	swapf	btemp,w
  8323  122D  0009               	retfie
  8324  122E                     __end_of_ISR:
  8325  007E                     btemp	set	126	;btemp
  8326  007E                     wtemp0	set	126
  8327                           
  8328                           	psect	intentry
  8329  0004                     __pintentry:	
  8330                           ;incstack = 0
  8331                           ; Regs used in _ISR: [wreg+status,2+status,0]
  8332                           
  8333  0004                     interrupt_function:
  8334  007E                     saved_w	set	btemp
  8335  0004  00FE               	movwf	btemp
  8336  0005  0E03               	swapf	3,w
  8337  0006  00F2               	movwf	??_ISR+2
  8338  0007  080A               	movf	10,w
  8339  0008  00F3               	movwf	??_ISR+3
  8340  0009  160A  118A  29CD   	ljmp	_ISR
  8341                           
  8342                           	psect	config
  8343                           
  8344                           ;Config register CONFIG1 @ 0x2007
  8345                           ;	Oscillator Selection bits
  8346                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  8347                           ;	Watchdog Timer Enable bit
  8348                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8349                           ;	Power-up Timer Enable bit
  8350                           ;	PWRTE = OFF, PWRT disabled
  8351                           ;	RE3/MCLR pin function select bit
  8352                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8353                           ;	Code Protection bit
  8354                           ;	CP = OFF, Program memory code protection is disabled
  8355                           ;	Data Code Protection bit
  8356                           ;	CPD = OFF, Data memory code protection is disabled
  8357                           ;	Brown Out Reset Selection bits
  8358                           ;	BOREN = OFF, BOR disabled
  8359                           ;	Internal External Switchover bit
  8360                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8361                           ;	Fail-Safe Clock Monitor Enabled bit
  8362                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8363                           ;	Low Voltage Programming Enable bit
  8364                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8365                           ;	In-Circuit Debugger Mode bit
  8366                           ;	DEBUG = 0x1, unprogrammed default
  8367  2007                     	org	8199
  8368  2007  20D1               	dw	8401
  8369                           
  8370                           ;Config register CONFIG2 @ 0x2008
  8371                           ;	Brown-out Reset Selection bit
  8372                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8373                           ;	Flash Program Memory Self Write Enable bits
  8374                           ;	WRT = OFF, Write protection off
  8375  2008                     	org	8200
  8376  2008  3FFF               	dw	16383
  8377                           
  8378                           	psect	text1_split_1
  8379  001C                     u3930:
  8380  001C                     l2823:
  8381  001C  1683               	bsf	3,5	;RP0=1, select bank1
  8382  001D  1303               	bcf	3,6	;RP1=0, select bank1
  8383  001E  0852               	movf	(sprintf@fval+2)^(0+128),w
  8384  001F  0451               	iorwf	(sprintf@fval+1)^(0+128),w
  8385  0020  0450               	iorwf	sprintf@fval^(0+128),w
  8386  0021  1903               	skipnz
  8387  0022  2824               	goto	u3941
  8388  0023  2825               	goto	u3940
  8389  0024                     u3941:
  8390  0024  28B5               	goto	l2843
  8391  0025                     u3940:
  8392  0025                     l2825:
  8393  0025  0850               	movf	sprintf@fval^(0+128),w
  8394  0026  1283               	bcf	3,5	;RP0=0, select bank0
  8395  0027  1303               	bcf	3,6	;RP1=0, select bank0
  8396  0028  00C7               	movwf	___fttol@f1
  8397  0029  1683               	bsf	3,5	;RP0=1, select bank1
  8398  002A  1303               	bcf	3,6	;RP1=0, select bank1
  8399  002B  0851               	movf	(sprintf@fval+1)^(0+128),w
  8400  002C  1283               	bcf	3,5	;RP0=0, select bank0
  8401  002D  1303               	bcf	3,6	;RP1=0, select bank0
  8402  002E  00C8               	movwf	___fttol@f1+1
  8403  002F  1683               	bsf	3,5	;RP0=1, select bank1
  8404  0030  1303               	bcf	3,6	;RP1=0, select bank1
  8405  0031  0852               	movf	(sprintf@fval+2)^(0+128),w
  8406  0032  1283               	bcf	3,5	;RP0=0, select bank0
  8407  0033  1303               	bcf	3,6	;RP1=0, select bank0
  8408  0034  00C9               	movwf	___fttol@f1+2
  8409  0035  120A  158A  2028  120A  118A  	fcall	___fttol
  8410  003A  1283               	bcf	3,5	;RP0=0, select bank0
  8411  003B  1303               	bcf	3,6	;RP1=0, select bank0
  8412  003C  084A               	movf	?___fttol+3,w
  8413  003D  0449               	iorwf	?___fttol+2,w
  8414  003E  0448               	iorwf	?___fttol+1,w
  8415  003F  0447               	iorwf	?___fttol,w
  8416  0040  1D03               	skipz
  8417  0041  2843               	goto	u3951
  8418  0042  2844               	goto	u3950
  8419  0043                     u3951:
  8420  0043  28B5               	goto	l2843
  8421  0044                     u3950:
  8422  0044                     l2827:
  8423  0044  1683               	bsf	3,5	;RP0=1, select bank1
  8424  0045  1303               	bcf	3,6	;RP1=0, select bank1
  8425  0046  084F               	movf	(sprintf@eexp+1)^(0+128),w
  8426  0047  3A80               	xorlw	128
  8427  0048  00FF               	movwf	btemp+1
  8428  0049  3080               	movlw	128
  8429  004A  027F               	subwf	btemp+1,w
  8430  004B  1D03               	skipz
  8431  004C  284F               	goto	u3965
  8432  004D  3002               	movlw	2
  8433  004E  024E               	subwf	sprintf@eexp^(0+128),w
  8434  004F                     u3965:
  8435  004F  1C03               	skipc
  8436  0050  2852               	goto	u3961
  8437  0051  2853               	goto	u3960
  8438  0052                     u3961:
  8439  0052  28B5               	goto	l2843
  8440  0053                     u3960:
  8441  0053                     l2829:
  8442                           
  8443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8444  0053  1683               	bsf	3,5	;RP0=1, select bank1
  8445  0054  1303               	bcf	3,6	;RP1=0, select bank1
  8446  0055  0846               	movf	sprintf@tmpval^(0+128),w
  8447  0056  00F4               	movwf	___ftge@ff1
  8448  0057  0847               	movf	(sprintf@tmpval+1)^(0+128),w
  8449  0058  00F5               	movwf	___ftge@ff1+1
  8450  0059  0848               	movf	(sprintf@tmpval+2)^(0+128),w
  8451  005A  00F6               	movwf	___ftge@ff1+2
  8452  005B  3070               	movlw	112
  8453  005C  00F7               	movwf	___ftge@ff2
  8454  005D  3089               	movlw	137
  8455  005E  00F8               	movwf	___ftge@ff2+1
  8456  005F  3040               	movlw	64
  8457  0060  00F9               	movwf	___ftge@ff2+2
  8458  0061  160A  158A  2702  120A  118A  	fcall	___ftge
  8459  0066  1803               	btfsc	3,0
  8460  0067  2869               	goto	u3971
  8461  0068  286A               	goto	u3970
  8462  0069                     u3971:
  8463  0069  2873               	goto	l2833
  8464  006A                     u3970:
  8465  006A                     l2831:
  8466                           
  8467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8468  006A  30F7               	movlw	247
  8469  006B  1683               	bsf	3,5	;RP0=1, select bank1
  8470  006C  1303               	bcf	3,6	;RP1=0, select bank1
  8471  006D  07CE               	addwf	sprintf@eexp^(0+128),f
  8472  006E  1803               	skipnc
  8473  006F  0ACF               	incf	(sprintf@eexp+1)^(0+128),f
  8474  0070  30FF               	movlw	255
  8475  0071  07CF               	addwf	(sprintf@eexp+1)^(0+128),f
  8476                           
  8477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8478  0072  287B               	goto	l2835
  8479  0073                     l2833:
  8480                           
  8481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8482  0073  30F8               	movlw	248
  8483  0074  1683               	bsf	3,5	;RP0=1, select bank1
  8484  0075  1303               	bcf	3,6	;RP1=0, select bank1
  8485  0076  07CE               	addwf	sprintf@eexp^(0+128),f
  8486  0077  1803               	skipnc
  8487  0078  0ACF               	incf	(sprintf@eexp+1)^(0+128),f
  8488  0079  30FF               	movlw	255
  8489  007A  07CF               	addwf	(sprintf@eexp+1)^(0+128),f
  8490  007B                     l2835:
  8491                           
  8492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  8493  007B  084E               	movf	sprintf@eexp^(0+128),w
  8494  007C  120A  158A  225D  120A  118A  	fcall	_scale
  8495  0081  1283               	bcf	3,5	;RP0=0, select bank0
  8496  0082  1303               	bcf	3,6	;RP1=0, select bank0
  8497  0083  083E               	movf	?_scale,w
  8498  0084  1683               	bsf	3,5	;RP0=1, select bank1
  8499  0085  1303               	bcf	3,6	;RP1=0, select bank1
  8500  0086  00C6               	movwf	sprintf@tmpval^(0+128)
  8501  0087  1283               	bcf	3,5	;RP0=0, select bank0
  8502  0088  1303               	bcf	3,6	;RP1=0, select bank0
  8503  0089  083F               	movf	?_scale+1,w
  8504  008A  1683               	bsf	3,5	;RP0=1, select bank1
  8505  008B  1303               	bcf	3,6	;RP1=0, select bank1
  8506  008C  00C7               	movwf	(sprintf@tmpval+1)^(0+128)
  8507  008D  1283               	bcf	3,5	;RP0=0, select bank0
  8508  008E  1303               	bcf	3,6	;RP1=0, select bank0
  8509  008F  0840               	movf	?_scale+2,w
  8510  0090  1683               	bsf	3,5	;RP0=1, select bank1
  8511  0091  1303               	bcf	3,6	;RP1=0, select bank1
  8512  0092  00C8               	movwf	(sprintf@tmpval+2)^(0+128)
  8513  0093                     l2839:	
  8514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8515                           
  8516  0093  0850               	movf	sprintf@fval^(0+128),w
  8517  0094  00F4               	movwf	__tdiv_to_l_@f1
  8518  0095  0851               	movf	(sprintf@fval+1)^(0+128),w
  8519  0096  00F5               	movwf	__tdiv_to_l_@f1+1
  8520  0097  0852               	movf	(sprintf@fval+2)^(0+128),w
  8521  0098  00F6               	movwf	__tdiv_to_l_@f1+2
  8522  0099  0846               	movf	sprintf@tmpval^(0+128),w
  8523  009A  00F7               	movwf	__tdiv_to_l_@f2
  8524  009B  0847               	movf	(sprintf@tmpval+1)^(0+128),w
  8525  009C  00F8               	movwf	__tdiv_to_l_@f2+1
  8526  009D  0848               	movf	(sprintf@tmpval+2)^(0+128),w
  8527  009E  00F9               	movwf	__tdiv_to_l_@f2+2
  8528  009F  160A  118A  2381  120A  118A  	fcall	__tdiv_to_l_
  8529  00A4  0877               	movf	?__tdiv_to_l_+3,w
  8530  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  8531  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  8532  00A7  00CD               	movwf	(sprintf@val+3)^(0+128)
  8533  00A8  0876               	movf	?__tdiv_to_l_+2,w
  8534  00A9  00CC               	movwf	(sprintf@val+2)^(0+128)
  8535  00AA  0875               	movf	?__tdiv_to_l_+1,w
  8536  00AB  00CB               	movwf	(sprintf@val+1)^(0+128)
  8537  00AC  0874               	movf	?__tdiv_to_l_,w
  8538  00AD  00CA               	movwf	sprintf@val^(0+128)
  8539  00AE                     l2841:
  8540                           
  8541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  8542  00AE  3000               	movlw	0
  8543  00AF  00D0               	movwf	sprintf@fval^(0+128)
  8544  00B0  3000               	movlw	0
  8545  00B1  00D1               	movwf	(sprintf@fval+1)^(0+128)
  8546  00B2  3000               	movlw	0
  8547  00B3  00D2               	movwf	(sprintf@fval+2)^(0+128)
  8548                           
  8549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  8550  00B4  2932               	goto	l2847
  8551  00B5                     l2843:
  8552                           
  8553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  8554  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  8555  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  8556  00B7  0850               	movf	sprintf@fval^(0+128),w
  8557  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  8558  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  8559  00BA  00C7               	movwf	___fttol@f1
  8560  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  8561  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  8562  00BD  0851               	movf	(sprintf@fval+1)^(0+128),w
  8563  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  8564  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  8565  00C0  00C8               	movwf	___fttol@f1+1
  8566  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  8567  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  8568  00C3  0852               	movf	(sprintf@fval+2)^(0+128),w
  8569  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  8570  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  8571  00C6  00C9               	movwf	___fttol@f1+2
  8572  00C7  120A  158A  2028  120A  118A  	fcall	___fttol
  8573  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  8574  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  8575  00CE  084A               	movf	?___fttol+3,w
  8576  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  8577  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  8578  00D1  00CD               	movwf	(sprintf@val+3)^(0+128)
  8579  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  8580  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  8581  00D4  0849               	movf	?___fttol+2,w
  8582  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  8583  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  8584  00D7  00CC               	movwf	(sprintf@val+2)^(0+128)
  8585  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  8586  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  8587  00DA  0848               	movf	?___fttol+1,w
  8588  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  8589  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  8590  00DD  00CB               	movwf	(sprintf@val+1)^(0+128)
  8591  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  8592  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  8593  00E0  0847               	movf	?___fttol,w
  8594  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  8595  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  8596  00E3  00CA               	movwf	sprintf@val^(0+128)
  8597                           
  8598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  8599  00E4  084D               	movf	(sprintf@val+3)^(0+128),w
  8600  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  8601  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  8602  00E7  00A6               	movwf	___lltoft@c+3
  8603  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  8604  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  8605  00EA  084C               	movf	(sprintf@val+2)^(0+128),w
  8606  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  8607  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  8608  00ED  00A5               	movwf	___lltoft@c+2
  8609  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  8610  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  8611  00F0  084B               	movf	(sprintf@val+1)^(0+128),w
  8612  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  8613  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  8614  00F3  00A4               	movwf	___lltoft@c+1
  8615  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  8616  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  8617  00F6  084A               	movf	sprintf@val^(0+128),w
  8618  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  8619  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  8620  00F9  00A3               	movwf	___lltoft@c
  8621  00FA  160A  158A  26CF  120A  118A  	fcall	___lltoft
  8622  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  8623  0100  1303               	bcf	3,6	;RP1=0, select bank0
  8624  0101  0823               	movf	?___lltoft,w
  8625  0102  00DB               	movwf	___ftsub@f2
  8626  0103  0824               	movf	?___lltoft+1,w
  8627  0104  00DC               	movwf	___ftsub@f2+1
  8628  0105  0825               	movf	?___lltoft+2,w
  8629  0106  00DD               	movwf	___ftsub@f2+2
  8630  0107  1683               	bsf	3,5	;RP0=1, select bank1
  8631  0108  1303               	bcf	3,6	;RP1=0, select bank1
  8632  0109  0850               	movf	sprintf@fval^(0+128),w
  8633  010A  1283               	bcf	3,5	;RP0=0, select bank0
  8634  010B  1303               	bcf	3,6	;RP1=0, select bank0
  8635  010C  00DE               	movwf	___ftsub@f1
  8636  010D  1683               	bsf	3,5	;RP0=1, select bank1
  8637  010E  1303               	bcf	3,6	;RP1=0, select bank1
  8638  010F  0851               	movf	(sprintf@fval+1)^(0+128),w
  8639  0110  1283               	bcf	3,5	;RP0=0, select bank0
  8640  0111  1303               	bcf	3,6	;RP1=0, select bank0
  8641  0112  00DF               	movwf	___ftsub@f1+1
  8642  0113  1683               	bsf	3,5	;RP0=1, select bank1
  8643  0114  1303               	bcf	3,6	;RP1=0, select bank1
  8644  0115  0852               	movf	(sprintf@fval+2)^(0+128),w
  8645  0116  1283               	bcf	3,5	;RP0=0, select bank0
  8646  0117  1303               	bcf	3,6	;RP1=0, select bank0
  8647  0118  00E0               	movwf	___ftsub@f1+2
  8648  0119  160A  158A  260B  120A  118A  	fcall	___ftsub
  8649  011E  1283               	bcf	3,5	;RP0=0, select bank0
  8650  011F  1303               	bcf	3,6	;RP1=0, select bank0
  8651  0120  085B               	movf	?___ftsub,w
  8652  0121  1683               	bsf	3,5	;RP0=1, select bank1
  8653  0122  1303               	bcf	3,6	;RP1=0, select bank1
  8654  0123  00D0               	movwf	sprintf@fval^(0+128)
  8655  0124  1283               	bcf	3,5	;RP0=0, select bank0
  8656  0125  1303               	bcf	3,6	;RP1=0, select bank0
  8657  0126  085C               	movf	?___ftsub+1,w
  8658  0127  1683               	bsf	3,5	;RP0=1, select bank1
  8659  0128  1303               	bcf	3,6	;RP1=0, select bank1
  8660  0129  00D1               	movwf	(sprintf@fval+1)^(0+128)
  8661  012A  1283               	bcf	3,5	;RP0=0, select bank0
  8662  012B  1303               	bcf	3,6	;RP1=0, select bank0
  8663  012C  085D               	movf	?___ftsub+2,w
  8664  012D  1683               	bsf	3,5	;RP0=1, select bank1
  8665  012E  1303               	bcf	3,6	;RP1=0, select bank1
  8666  012F  00D2               	movwf	(sprintf@fval+2)^(0+128)
  8667  0130                     l2845:
  8668                           
  8669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  8670  0130  01CE               	clrf	sprintf@eexp^(0+128)
  8671  0131  01CF               	clrf	(sprintf@eexp+1)^(0+128)
  8672  0132                     l2847:
  8673                           
  8674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8675  0132  01D6               	clrf	sprintf@c^(0+128)
  8676  0133  0AD6               	incf	sprintf@c^(0+128),f
  8677  0134                     l2853:
  8678                           
  8679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  8680  0134  0856               	movf	sprintf@c^(0+128),w
  8681  0135  1283               	bcf	3,5	;RP0=0, select bank0
  8682  0136  1303               	bcf	3,6	;RP1=0, select bank0
  8683  0137  00EA               	movwf	??_sprintf
  8684  0138  3001               	movlw	1
  8685  0139                     u3985:
  8686  0139  1003               	clrc
  8687  013A  0DEA               	rlf	??_sprintf,f
  8688  013B  3EFF               	addlw	-1
  8689  013C  1D03               	skipz
  8690  013D  2939               	goto	u3985
  8691  013E  1003               	clrc
  8692  013F  0D6A               	rlf	??_sprintf,w
  8693  0140  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8694  0141  0084               	movwf	4
  8695  0142  160A  118A  200A  120A  118A  	fcall	stringdir
  8696  0147  00EB               	movwf	??_sprintf+1
  8697  0148  160A  118A  200A  120A  118A  	fcall	stringdir
  8698  014D  00EC               	movwf	??_sprintf+2
  8699  014E  160A  118A  200A  120A  118A  	fcall	stringdir
  8700  0153  00ED               	movwf	??_sprintf+3
  8701  0154  160A  118A  200A  120A  118A  	fcall	stringdir
  8702  0159  00EE               	movwf	??_sprintf+4
  8703  015A  086E               	movf	??_sprintf+4,w
  8704  015B  1683               	bsf	3,5	;RP0=1, select bank1
  8705  015C  1303               	bcf	3,6	;RP1=0, select bank1
  8706  015D  024D               	subwf	(sprintf@val+3)^(0+128),w
  8707  015E  1D03               	skipz
  8708  015F  2976               	goto	u3995
  8709  0160  1283               	bcf	3,5	;RP0=0, select bank0
  8710  0161  1303               	bcf	3,6	;RP1=0, select bank0
  8711  0162  086D               	movf	??_sprintf+3,w
  8712  0163  1683               	bsf	3,5	;RP0=1, select bank1
  8713  0164  1303               	bcf	3,6	;RP1=0, select bank1
  8714  0165  024C               	subwf	(sprintf@val+2)^(0+128),w
  8715  0166  1D03               	skipz
  8716  0167  2976               	goto	u3995
  8717  0168  1283               	bcf	3,5	;RP0=0, select bank0
  8718  0169  1303               	bcf	3,6	;RP1=0, select bank0
  8719  016A  086C               	movf	??_sprintf+2,w
  8720  016B  1683               	bsf	3,5	;RP0=1, select bank1
  8721  016C  1303               	bcf	3,6	;RP1=0, select bank1
  8722  016D  024B               	subwf	(sprintf@val+1)^(0+128),w
  8723  016E  1D03               	skipz
  8724  016F  2976               	goto	u3995
  8725  0170  1283               	bcf	3,5	;RP0=0, select bank0
  8726  0171  1303               	bcf	3,6	;RP1=0, select bank0
  8727  0172  086B               	movf	??_sprintf+1,w
  8728  0173  1683               	bsf	3,5	;RP0=1, select bank1
  8729  0174  1303               	bcf	3,6	;RP1=0, select bank1
  8730  0175  024A               	subwf	sprintf@val^(0+128),w
  8731  0176                     u3995:
  8732  0176  1803               	skipnc
  8733  0177  2979               	goto	u3991
  8734  0178  297A               	goto	u3990
  8735  0179                     u3991:
  8736  0179  297B               	goto	l2857
  8737  017A                     u3990:
  8738  017A  2989               	goto	l2859
  8739  017B                     l2857:
  8740  017B  3001               	movlw	1
  8741  017C  1283               	bcf	3,5	;RP0=0, select bank0
  8742  017D  1303               	bcf	3,6	;RP1=0, select bank0
  8743  017E  00EA               	movwf	??_sprintf
  8744  017F  086A               	movf	??_sprintf,w
  8745  0180  1683               	bsf	3,5	;RP0=1, select bank1
  8746  0181  1303               	bcf	3,6	;RP1=0, select bank1
  8747  0182  07D6               	addwf	sprintf@c^(0+128),f
  8748  0183  300A               	movlw	10
  8749  0184  0656               	xorwf	sprintf@c^(0+128),w
  8750  0185  1D03               	btfss	3,2
  8751  0186  2988               	goto	u4001
  8752  0187  2989               	goto	u4000
  8753  0188                     u4001:
  8754  0188  2934               	goto	l2853
  8755  0189                     u4000:
  8756  0189                     l2859:
  8757                           
  8758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  8759  0189  0856               	movf	sprintf@c^(0+128),w
  8760  018A  0754               	addwf	sprintf@prec^(0+128),w
  8761  018B  1283               	bcf	3,5	;RP0=0, select bank0
  8762  018C  1303               	bcf	3,6	;RP1=0, select bank0
  8763  018D  00EA               	movwf	??_sprintf
  8764  018E  1683               	bsf	3,5	;RP0=1, select bank1
  8765  018F  1303               	bcf	3,6	;RP1=0, select bank1
  8766  0190  0855               	movf	(sprintf@prec+1)^(0+128),w
  8767  0191  1803               	skipnc
  8768  0192  0A55               	incf	(sprintf@prec+1)^(0+128),w
  8769  0193  1283               	bcf	3,5	;RP0=0, select bank0
  8770  0194  1303               	bcf	3,6	;RP1=0, select bank0
  8771  0195  00EB               	movwf	??_sprintf+1
  8772  0196  1683               	bsf	3,5	;RP0=1, select bank1
  8773  0197  1303               	bcf	3,6	;RP1=0, select bank1
  8774  0198  084E               	movf	sprintf@eexp^(0+128),w
  8775  0199  1283               	bcf	3,5	;RP0=0, select bank0
  8776  019A  1303               	bcf	3,6	;RP1=0, select bank0
  8777  019B  076A               	addwf	??_sprintf,w
  8778  019C  00EC               	movwf	??_sprintf+2
  8779  019D  1683               	bsf	3,5	;RP0=1, select bank1
  8780  019E  1303               	bcf	3,6	;RP1=0, select bank1
  8781  019F  084F               	movf	(sprintf@eexp+1)^(0+128),w
  8782  01A0  1803               	skipnc
  8783  01A1  0A4F               	incf	(sprintf@eexp+1)^(0+128),w
  8784  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  8785  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  8786  01A4  076B               	addwf	??_sprintf+1,w
  8787  01A5  00ED               	movwf	??_sprintf+3
  8788  01A6  086C               	movf	??_sprintf+2,w
  8789  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  8790  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  8791  01A9  02C4               	subwf	sprintf@width^(0+128),f
  8792  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  8793  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  8794  01AC  086D               	movf	??_sprintf+3,w
  8795  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  8796  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  8797  01AF  1C03               	skipc
  8798  01B0  03C5               	decf	(sprintf@width+1)^(0+128),f
  8799  01B1  02C5               	subwf	(sprintf@width+1)^(0+128),f
  8800                           
  8801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  8802  01B2  0854               	movf	sprintf@prec^(0+128),w
  8803  01B3  0455               	iorwf	(sprintf@prec+1)^(0+128),w
  8804  01B4  1903               	btfsc	3,2
  8805  01B5  29B7               	goto	u4011
  8806  01B6  29B8               	goto	u4010
  8807  01B7                     u4011:
  8808  01B7  29BE               	goto	l2863
  8809  01B8                     u4010:
  8810  01B8                     l2861:
  8811                           
  8812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  8813  01B8  30FF               	movlw	255
  8814  01B9  07C4               	addwf	sprintf@width^(0+128),f
  8815  01BA  1803               	skipnc
  8816  01BB  0AC5               	incf	(sprintf@width+1)^(0+128),f
  8817  01BC  30FF               	movlw	255
  8818  01BD  07C5               	addwf	(sprintf@width+1)^(0+128),f
  8819  01BE                     l2863:
  8820                           
  8821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  8822  01BE  3003               	movlw	3
  8823  01BF  0542               	andwf	sprintf@flag^(0+128),w
  8824  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  8825  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  8826  01C2  00EA               	movwf	??_sprintf
  8827  01C3  3000               	movlw	0
  8828  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  8829  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  8830  01C6  0543               	andwf	(sprintf@flag+1)^(0+128),w
  8831  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  8832  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  8833  01C9  00EB               	movwf	??_sprintf+1
  8834  01CA  086A               	movf	??_sprintf,w
  8835  01CB  046B               	iorwf	??_sprintf+1,w
  8836  01CC  1903               	btfsc	3,2
  8837  01CD  29CF               	goto	u4021
  8838  01CE  29D0               	goto	u4020
  8839  01CF                     u4021:
  8840  01CF  29ED               	goto	l2873
  8841  01D0                     u4020:
  8842  01D0                     l2865:
  8843                           
  8844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  8845  01D0  30FF               	movlw	255
  8846  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  8847  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  8848  01D3  07C4               	addwf	sprintf@width^(0+128),f
  8849  01D4  1803               	skipnc
  8850  01D5  0AC5               	incf	(sprintf@width+1)^(0+128),f
  8851  01D6  30FF               	movlw	255
  8852  01D7  07C5               	addwf	(sprintf@width+1)^(0+128),f
  8853  01D8  29ED               	goto	l2873
  8854  01D9                     l2867:
  8855                           
  8856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  8857  01D9  3020               	movlw	32
  8858  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  8859  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  8860  01DC  00EA               	movwf	??_sprintf
  8861  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  8862  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  8863  01DF  0853               	movf	sprintf@sp^(0+128),w
  8864  01E0  0084               	movwf	4
  8865  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  8866  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  8867  01E3  086A               	movf	??_sprintf,w
  8868  01E4  1383               	bcf	3,7	;select IRP bank0
  8869  01E5  0080               	movwf	0
  8870  01E6                     l2869:
  8871  01E6  3001               	movlw	1
  8872  01E7  00EA               	movwf	??_sprintf
  8873  01E8  086A               	movf	??_sprintf,w
  8874  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  8875  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  8876  01EB  07D3               	addwf	sprintf@sp^(0+128),f
  8877  01EC  29D0               	goto	l2865
  8878  01ED                     l2873:
  8879                           
  8880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  8881  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  8882  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  8883  01EF  0845               	movf	(sprintf@width+1)^(0+128),w
  8884  01F0  3A80               	xorlw	128
  8885  01F1  00FF               	movwf	btemp+1
  8886  01F2  3080               	movlw	128
  8887  01F3  027F               	subwf	btemp+1,w
  8888  01F4  1D03               	skipz
  8889  01F5  29F8               	goto	u4035
  8890  01F6  3001               	movlw	1
  8891  01F7  0244               	subwf	sprintf@width^(0+128),w
  8892  01F8                     u4035:
  8893  01F8  1803               	skipnc
  8894  01F9  29FB               	goto	u4031
  8895  01FA  29FC               	goto	u4030
  8896  01FB                     u4031:
  8897  01FB  29D9               	goto	l2867
  8898  01FC                     u4030:
  8899  01FC                     l2875:
  8900                           
  8901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  8902  01FC  3003               	movlw	3
  8903  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  8904  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  8905  01FF  0542               	andwf	sprintf@flag^(0+128),w
  8906  0200  1283               	bcf	3,5	;RP0=0, select bank0
  8907  0201  1303               	bcf	3,6	;RP1=0, select bank0
  8908  0202  00EA               	movwf	??_sprintf
  8909  0203  3000               	movlw	0
  8910  0204  1683               	bsf	3,5	;RP0=1, select bank1
  8911  0205  1303               	bcf	3,6	;RP1=0, select bank1
  8912  0206  0543               	andwf	(sprintf@flag+1)^(0+128),w
  8913  0207  1283               	bcf	3,5	;RP0=0, select bank0
  8914  0208  1303               	bcf	3,6	;RP1=0, select bank0
  8915  0209  00EB               	movwf	??_sprintf+1
  8916  020A  086A               	movf	??_sprintf,w
  8917  020B  046B               	iorwf	??_sprintf+1,w
  8918  020C  1903               	btfsc	3,2
  8919  020D  2A0F               	goto	u4041
  8920  020E  2A10               	goto	u4040
  8921  020F                     u4041:
  8922  020F  2AD0               	goto	l354
  8923  0210                     u4040:
  8924  0210                     l2877:
  8925                           
  8926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  8927  0210  302D               	movlw	45
  8928  0211  00EA               	movwf	??_sprintf
  8929  0212  1683               	bsf	3,5	;RP0=1, select bank1
  8930  0213  1303               	bcf	3,6	;RP1=0, select bank1
  8931  0214  0853               	movf	sprintf@sp^(0+128),w
  8932  0215  0084               	movwf	4
  8933  0216  1283               	bcf	3,5	;RP0=0, select bank0
  8934  0217  1303               	bcf	3,6	;RP1=0, select bank0
  8935  0218  086A               	movf	??_sprintf,w
  8936  0219  1383               	bcf	3,7	;select IRP bank0
  8937  021A  0080               	movwf	0
  8938  021B                     l2879:
  8939  021B  3001               	movlw	1
  8940  021C  00EA               	movwf	??_sprintf
  8941  021D  086A               	movf	??_sprintf,w
  8942  021E  1683               	bsf	3,5	;RP0=1, select bank1
  8943  021F  1303               	bcf	3,6	;RP1=0, select bank1
  8944  0220  07D3               	addwf	sprintf@sp^(0+128),f
  8945  0221  2AD0               	goto	l354
  8946  0222                     l2881:
  8947                           
  8948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  8949  0222  0856               	movf	sprintf@c^(0+128),w
  8950  0223  1283               	bcf	3,5	;RP0=0, select bank0
  8951  0224  1303               	bcf	3,6	;RP1=0, select bank0
  8952  0225  00EA               	movwf	??_sprintf
  8953  0226  3001               	movlw	1
  8954  0227                     u4055:
  8955  0227  1003               	clrc
  8956  0228  0DEA               	rlf	??_sprintf,f
  8957  0229  3EFF               	addlw	-1
  8958  022A  1D03               	skipz
  8959  022B  2A27               	goto	u4055
  8960  022C  1003               	clrc
  8961  022D  0D6A               	rlf	??_sprintf,w
  8962  022E  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8963  022F  0084               	movwf	4
  8964  0230  160A  118A  200A  120A  118A  	fcall	stringdir
  8965  0235  00A0               	movwf	___lldiv@divisor
  8966  0236  160A  118A  200A  120A  118A  	fcall	stringdir
  8967  023B  00A1               	movwf	___lldiv@divisor+1
  8968  023C  160A  118A  200A  120A  118A  	fcall	stringdir
  8969  0241  00A2               	movwf	___lldiv@divisor+2
  8970  0242  160A  118A  200A  120A  118A  	fcall	stringdir
  8971  0247  00A3               	movwf	___lldiv@divisor+3
  8972  0248  1683               	bsf	3,5	;RP0=1, select bank1
  8973  0249  1303               	bcf	3,6	;RP1=0, select bank1
  8974  024A  084D               	movf	(sprintf@val+3)^(0+128),w
  8975  024B  1283               	bcf	3,5	;RP0=0, select bank0
  8976  024C  1303               	bcf	3,6	;RP1=0, select bank0
  8977  024D  00A7               	movwf	___lldiv@dividend+3
  8978  024E  1683               	bsf	3,5	;RP0=1, select bank1
  8979  024F  1303               	bcf	3,6	;RP1=0, select bank1
  8980  0250  084C               	movf	(sprintf@val+2)^(0+128),w
  8981  0251  1283               	bcf	3,5	;RP0=0, select bank0
  8982  0252  1303               	bcf	3,6	;RP1=0, select bank0
  8983  0253  00A6               	movwf	___lldiv@dividend+2
  8984  0254  1683               	bsf	3,5	;RP0=1, select bank1
  8985  0255  1303               	bcf	3,6	;RP1=0, select bank1
  8986  0256  084B               	movf	(sprintf@val+1)^(0+128),w
  8987  0257  1283               	bcf	3,5	;RP0=0, select bank0
  8988  0258  1303               	bcf	3,6	;RP1=0, select bank0
  8989  0259  00A5               	movwf	___lldiv@dividend+1
  8990  025A  1683               	bsf	3,5	;RP0=1, select bank1
  8991  025B  1303               	bcf	3,6	;RP1=0, select bank1
  8992  025C  084A               	movf	sprintf@val^(0+128),w
  8993  025D  1283               	bcf	3,5	;RP0=0, select bank0
  8994  025E  1303               	bcf	3,6	;RP1=0, select bank0
  8995  025F  00A4               	movwf	___lldiv@dividend
  8996  0260  160A  118A  222E  120A  118A  	fcall	___lldiv
  8997  0265  1283               	bcf	3,5	;RP0=0, select bank0
  8998  0266  1303               	bcf	3,6	;RP1=0, select bank0
  8999  0267  0823               	movf	?___lldiv+3,w
  9000  0268  1683               	bsf	3,5	;RP0=1, select bank1
  9001  0269  1303               	bcf	3,6	;RP1=0, select bank1
  9002  026A  00C9               	movwf	(sprintf@tmpval+3)^(0+128)
  9003  026B  1283               	bcf	3,5	;RP0=0, select bank0
  9004  026C  1303               	bcf	3,6	;RP1=0, select bank0
  9005  026D  0822               	movf	?___lldiv+2,w
  9006  026E  1683               	bsf	3,5	;RP0=1, select bank1
  9007  026F  1303               	bcf	3,6	;RP1=0, select bank1
  9008  0270  00C8               	movwf	(sprintf@tmpval+2)^(0+128)
  9009  0271  1283               	bcf	3,5	;RP0=0, select bank0
  9010  0272  1303               	bcf	3,6	;RP1=0, select bank0
  9011  0273  0821               	movf	?___lldiv+1,w
  9012  0274  1683               	bsf	3,5	;RP0=1, select bank1
  9013  0275  1303               	bcf	3,6	;RP1=0, select bank1
  9014  0276  00C7               	movwf	(sprintf@tmpval+1)^(0+128)
  9015  0277  1283               	bcf	3,5	;RP0=0, select bank0
  9016  0278  1303               	bcf	3,6	;RP1=0, select bank0
  9017  0279  0820               	movf	?___lldiv,w
  9018  027A  1683               	bsf	3,5	;RP0=1, select bank1
  9019  027B  1303               	bcf	3,6	;RP1=0, select bank1
  9020  027C  00C6               	movwf	sprintf@tmpval^(0+128)
  9021  027D                     l2883:
  9022                           
  9023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9024  027D  3000               	movlw	0
  9025  027E  1283               	bcf	3,5	;RP0=0, select bank0
  9026  027F  1303               	bcf	3,6	;RP1=0, select bank0
  9027  0280  00AB               	movwf	___llmod@divisor+3
  9028  0281  3000               	movlw	0
  9029  0282  00AA               	movwf	___llmod@divisor+2
  9030  0283  3000               	movlw	0
  9031  0284  00A9               	movwf	___llmod@divisor+1
  9032  0285  300A               	movlw	10
  9033  0286  00A8               	movwf	___llmod@divisor
  9034  0287  1683               	bsf	3,5	;RP0=1, select bank1
  9035  0288  1303               	bcf	3,6	;RP1=0, select bank1
  9036  0289  0849               	movf	(sprintf@tmpval+3)^(0+128),w
  9037  028A  1283               	bcf	3,5	;RP0=0, select bank0
  9038  028B  1303               	bcf	3,6	;RP1=0, select bank0
  9039  028C  00AF               	movwf	___llmod@dividend+3
  9040  028D  1683               	bsf	3,5	;RP0=1, select bank1
  9041  028E  1303               	bcf	3,6	;RP1=0, select bank1
  9042  028F  0848               	movf	(sprintf@tmpval+2)^(0+128),w
  9043  0290  1283               	bcf	3,5	;RP0=0, select bank0
  9044  0291  1303               	bcf	3,6	;RP1=0, select bank0
  9045  0292  00AE               	movwf	___llmod@dividend+2
  9046  0293  1683               	bsf	3,5	;RP0=1, select bank1
  9047  0294  1303               	bcf	3,6	;RP1=0, select bank1
  9048  0295  0847               	movf	(sprintf@tmpval+1)^(0+128),w
  9049  0296  1283               	bcf	3,5	;RP0=0, select bank0
  9050  0297  1303               	bcf	3,6	;RP1=0, select bank0
  9051  0298  00AD               	movwf	___llmod@dividend+1
  9052  0299  1683               	bsf	3,5	;RP0=1, select bank1
  9053  029A  1303               	bcf	3,6	;RP1=0, select bank1
  9054  029B  0846               	movf	sprintf@tmpval^(0+128),w
  9055  029C  1283               	bcf	3,5	;RP0=0, select bank0
  9056  029D  1303               	bcf	3,6	;RP1=0, select bank0
  9057  029E  00AC               	movwf	___llmod@dividend
  9058  029F  160A  118A  211C  120A  118A  	fcall	___llmod
  9059  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  9060  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  9061  02A6  082B               	movf	?___llmod+3,w
  9062  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  9063  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  9064  02A9  00C9               	movwf	(sprintf@tmpval+3)^(0+128)
  9065  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  9066  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  9067  02AC  082A               	movf	?___llmod+2,w
  9068  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  9069  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  9070  02AF  00C8               	movwf	(sprintf@tmpval+2)^(0+128)
  9071  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  9072  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  9073  02B2  0829               	movf	?___llmod+1,w
  9074  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  9075  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  9076  02B5  00C7               	movwf	(sprintf@tmpval+1)^(0+128)
  9077  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  9078  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  9079  02B8  0828               	movf	?___llmod,w
  9080  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  9081  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  9082  02BB  00C6               	movwf	sprintf@tmpval^(0+128)
  9083  02BC                     l2885:
  9084                           
  9085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9086  02BC  0846               	movf	sprintf@tmpval^(0+128),w
  9087  02BD  3E30               	addlw	48
  9088  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  9089  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  9090  02C0  00EA               	movwf	??_sprintf
  9091  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  9092  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  9093  02C3  0853               	movf	sprintf@sp^(0+128),w
  9094  02C4  0084               	movwf	4
  9095  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  9096  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  9097  02C7  086A               	movf	??_sprintf,w
  9098  02C8  1383               	bcf	3,7	;select IRP bank0
  9099  02C9  0080               	movwf	0
  9100  02CA  3001               	movlw	1
  9101  02CB  00EA               	movwf	??_sprintf
  9102  02CC  086A               	movf	??_sprintf,w
  9103  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  9104  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  9105  02CF  07D3               	addwf	sprintf@sp^(0+128),f
  9106  02D0                     l354:	
  9107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9108                           
  9109                           
  9110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9111  02D0  3001               	movlw	1
  9112  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  9113  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  9114  02D3  02D6               	subwf	sprintf@c^(0+128),f
  9115  02D4  0A56               	incf	sprintf@c^(0+128),w
  9116  02D5  1D03               	btfss	3,2
  9117  02D6  2AD8               	goto	u4061
  9118  02D7  2AD9               	goto	u4060
  9119  02D8                     u4061:
  9120  02D8  2A22               	goto	l2881
  9121  02D9                     u4060:
  9122  02D9  2AF3               	goto	l2893
  9123  02DA                     l2887:
  9124                           
  9125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9126  02DA  3030               	movlw	48
  9127  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  9128  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  9129  02DD  00EA               	movwf	??_sprintf
  9130  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  9131  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  9132  02E0  0853               	movf	sprintf@sp^(0+128),w
  9133  02E1  0084               	movwf	4
  9134  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  9135  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  9136  02E4  086A               	movf	??_sprintf,w
  9137  02E5  1383               	bcf	3,7	;select IRP bank0
  9138  02E6  0080               	movwf	0
  9139  02E7                     l2889:
  9140  02E7  3001               	movlw	1
  9141  02E8  00EA               	movwf	??_sprintf
  9142  02E9  086A               	movf	??_sprintf,w
  9143  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  9144  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  9145  02EC  07D3               	addwf	sprintf@sp^(0+128),f
  9146  02ED                     l2891:
  9147                           
  9148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9149  02ED  30FF               	movlw	255
  9150  02EE  07CE               	addwf	sprintf@eexp^(0+128),f
  9151  02EF  1803               	skipnc
  9152  02F0  0ACF               	incf	(sprintf@eexp+1)^(0+128),f
  9153  02F1  30FF               	movlw	255
  9154  02F2  07CF               	addwf	(sprintf@eexp+1)^(0+128),f
  9155  02F3                     l2893:
  9156                           
  9157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9158  02F3  084F               	movf	(sprintf@eexp+1)^(0+128),w
  9159  02F4  3A80               	xorlw	128
  9160  02F5  00FF               	movwf	btemp+1
  9161  02F6  3080               	movlw	128
  9162  02F7  027F               	subwf	btemp+1,w
  9163  02F8  1D03               	skipz
  9164  02F9  2AFC               	goto	u4075
  9165  02FA  3001               	movlw	1
  9166  02FB  024E               	subwf	sprintf@eexp^(0+128),w
  9167  02FC                     u4075:
  9168  02FC  1803               	skipnc
  9169  02FD  2AFF               	goto	u4071
  9170  02FE  2B00               	goto	u4070
  9171  02FF                     u4071:
  9172  02FF  2ADA               	goto	l2887
  9173  0300                     u4070:
  9174  0300                     l2895:
  9175                           
  9176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9177  0300  1683               	bsf	3,5	;RP0=1, select bank1
  9178  0301  1303               	bcf	3,6	;RP1=0, select bank1
  9179  0302  0855               	movf	(sprintf@prec+1)^(0+128),w
  9180  0303  3A80               	xorlw	128
  9181  0304  00FF               	movwf	btemp+1
  9182  0305  3080               	movlw	128
  9183  0306  027F               	subwf	btemp+1,w
  9184  0307  1D03               	skipz
  9185  0308  2B0B               	goto	u4085
  9186  0309  3009               	movlw	9
  9187  030A  0254               	subwf	sprintf@prec^(0+128),w
  9188  030B                     u4085:
  9189  030B  1C03               	skipc
  9190  030C  2B0E               	goto	u4081
  9191  030D  2B0F               	goto	u4080
  9192  030E                     u4081:
  9193  030E  2B18               	goto	l2899
  9194  030F                     u4080:
  9195  030F                     l2897:
  9196                           
  9197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9198  030F  3008               	movlw	8
  9199  0310  1283               	bcf	3,5	;RP0=0, select bank0
  9200  0311  1303               	bcf	3,6	;RP1=0, select bank0
  9201  0312  00EA               	movwf	??_sprintf
  9202  0313  086A               	movf	??_sprintf,w
  9203  0314  1683               	bsf	3,5	;RP0=1, select bank1
  9204  0315  1303               	bcf	3,6	;RP1=0, select bank1
  9205  0316  00D6               	movwf	sprintf@c^(0+128)
  9206  0317  2B22               	goto	l361
  9207  0318                     l2899:
  9208                           
  9209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9210  0318  1683               	bsf	3,5	;RP0=1, select bank1
  9211  0319  1303               	bcf	3,6	;RP1=0, select bank1
  9212  031A  0854               	movf	sprintf@prec^(0+128),w
  9213  031B  1283               	bcf	3,5	;RP0=0, select bank0
  9214  031C  1303               	bcf	3,6	;RP1=0, select bank0
  9215  031D  00EA               	movwf	??_sprintf
  9216  031E  086A               	movf	??_sprintf,w
  9217  031F  1683               	bsf	3,5	;RP0=1, select bank1
  9218  0320  1303               	bcf	3,6	;RP1=0, select bank1
  9219  0321  00D6               	movwf	sprintf@c^(0+128)
  9220  0322                     l361:
  9221                           
  9222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9223  0322  0856               	movf	sprintf@c^(0+128),w
  9224  0323  1283               	bcf	3,5	;RP0=0, select bank0
  9225  0324  1303               	bcf	3,6	;RP1=0, select bank0
  9226  0325  00EA               	movwf	??_sprintf
  9227  0326  01EB               	clrf	??_sprintf+1
  9228  0327  086A               	movf	??_sprintf,w
  9229  0328  1683               	bsf	3,5	;RP0=1, select bank1
  9230  0329  1303               	bcf	3,6	;RP1=0, select bank1
  9231  032A  02D4               	subwf	sprintf@prec^(0+128),f
  9232  032B  1283               	bcf	3,5	;RP0=0, select bank0
  9233  032C  1303               	bcf	3,6	;RP1=0, select bank0
  9234  032D  086B               	movf	??_sprintf+1,w
  9235  032E  1683               	bsf	3,5	;RP0=1, select bank1
  9236  032F  1303               	bcf	3,6	;RP1=0, select bank1
  9237  0330  1C03               	skipc
  9238  0331  03D5               	decf	(sprintf@prec+1)^(0+128),f
  9239  0332  02D5               	subwf	(sprintf@prec+1)^(0+128),f
  9240  0333                     l2901:
  9241                           
  9242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9243  0333  0856               	movf	sprintf@c^(0+128),w
  9244  0334  1903               	btfsc	3,2
  9245  0335  2B37               	goto	u4091
  9246  0336  2B38               	goto	u4090
  9247  0337                     u4091:
  9248  0337  2B4B               	goto	l2907
  9249  0338                     u4090:
  9250  0338                     l2903:
  9251                           
  9252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9253  0338  302E               	movlw	46
  9254  0339  1283               	bcf	3,5	;RP0=0, select bank0
  9255  033A  1303               	bcf	3,6	;RP1=0, select bank0
  9256  033B  00EA               	movwf	??_sprintf
  9257  033C  1683               	bsf	3,5	;RP0=1, select bank1
  9258  033D  1303               	bcf	3,6	;RP1=0, select bank1
  9259  033E  0853               	movf	sprintf@sp^(0+128),w
  9260  033F  0084               	movwf	4
  9261  0340  1283               	bcf	3,5	;RP0=0, select bank0
  9262  0341  1303               	bcf	3,6	;RP1=0, select bank0
  9263  0342  086A               	movf	??_sprintf,w
  9264  0343  1383               	bcf	3,7	;select IRP bank0
  9265  0344  0080               	movwf	0
  9266  0345                     l2905:
  9267  0345  3001               	movlw	1
  9268  0346  00EA               	movwf	??_sprintf
  9269  0347  086A               	movf	??_sprintf,w
  9270  0348  1683               	bsf	3,5	;RP0=1, select bank1
  9271  0349  1303               	bcf	3,6	;RP1=0, select bank1
  9272  034A  07D3               	addwf	sprintf@sp^(0+128),f
  9273  034B                     l2907:
  9274                           
  9275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9276  034B  0856               	movf	sprintf@c^(0+128),w
  9277  034C  120A  158A  225D  120A  118A  	fcall	_scale
  9278  0351  1283               	bcf	3,5	;RP0=0, select bank0
  9279  0352  1303               	bcf	3,6	;RP1=0, select bank0
  9280  0353  083E               	movf	?_scale,w
  9281  0354  1683               	bsf	3,5	;RP0=1, select bank1
  9282  0355  1303               	bcf	3,6	;RP1=0, select bank1
  9283  0356  00BE               	movwf	_sprintf$1127^(0+128)
  9284  0357  1283               	bcf	3,5	;RP0=0, select bank0
  9285  0358  1303               	bcf	3,6	;RP1=0, select bank0
  9286  0359  083F               	movf	?_scale+1,w
  9287  035A  1683               	bsf	3,5	;RP0=1, select bank1
  9288  035B  1303               	bcf	3,6	;RP1=0, select bank1
  9289  035C  00BF               	movwf	(_sprintf$1127+1)^(0+128)
  9290  035D  1283               	bcf	3,5	;RP0=0, select bank0
  9291  035E  1303               	bcf	3,6	;RP1=0, select bank0
  9292  035F  0840               	movf	?_scale+2,w
  9293  0360  1683               	bsf	3,5	;RP0=1, select bank1
  9294  0361  1303               	bcf	3,6	;RP1=0, select bank1
  9295  0362  00C0               	movwf	(_sprintf$1127+2)^(0+128)
  9296  0363                     l2909:
  9297                           
  9298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9299  0363  083E               	movf	_sprintf$1127^(0+128),w
  9300  0364  1283               	bcf	3,5	;RP0=0, select bank0
  9301  0365  1303               	bcf	3,6	;RP1=0, select bank0
  9302  0366  00B1               	movwf	___ftmul@f2
  9303  0367  1683               	bsf	3,5	;RP0=1, select bank1
  9304  0368  1303               	bcf	3,6	;RP1=0, select bank1
  9305  0369  083F               	movf	(_sprintf$1127+1)^(0+128),w
  9306  036A  1283               	bcf	3,5	;RP0=0, select bank0
  9307  036B  1303               	bcf	3,6	;RP1=0, select bank0
  9308  036C  00B2               	movwf	___ftmul@f2+1
  9309  036D  1683               	bsf	3,5	;RP0=1, select bank1
  9310  036E  1303               	bcf	3,6	;RP1=0, select bank1
  9311  036F  0840               	movf	(_sprintf$1127+2)^(0+128),w
  9312  0370  1283               	bcf	3,5	;RP0=0, select bank0
  9313  0371  1303               	bcf	3,6	;RP1=0, select bank0
  9314  0372  00B3               	movwf	___ftmul@f2+2
  9315  0373  1683               	bsf	3,5	;RP0=1, select bank1
  9316  0374  1303               	bcf	3,6	;RP1=0, select bank1
  9317  0375  0850               	movf	sprintf@fval^(0+128),w
  9318  0376  1283               	bcf	3,5	;RP0=0, select bank0
  9319  0377  1303               	bcf	3,6	;RP1=0, select bank0
  9320  0378  00AE               	movwf	___ftmul@f1
  9321  0379  1683               	bsf	3,5	;RP0=1, select bank1
  9322  037A  1303               	bcf	3,6	;RP1=0, select bank1
  9323  037B  0851               	movf	(sprintf@fval+1)^(0+128),w
  9324  037C  1283               	bcf	3,5	;RP0=0, select bank0
  9325  037D  1303               	bcf	3,6	;RP1=0, select bank0
  9326  037E  00AF               	movwf	___ftmul@f1+1
  9327  037F  1683               	bsf	3,5	;RP0=1, select bank1
  9328  0380  1303               	bcf	3,6	;RP1=0, select bank1
  9329  0381  0852               	movf	(sprintf@fval+2)^(0+128),w
  9330  0382  1283               	bcf	3,5	;RP0=0, select bank0
  9331  0383  1303               	bcf	3,6	;RP1=0, select bank0
  9332  0384  00B0               	movwf	___ftmul@f1+2
  9333  0385  120A  118A  2716  120A  118A  	fcall	___ftmul
  9334  038A  1283               	bcf	3,5	;RP0=0, select bank0
  9335  038B  1303               	bcf	3,6	;RP1=0, select bank0
  9336  038C  082E               	movf	?___ftmul,w
  9337  038D  00C7               	movwf	___fttol@f1
  9338  038E  082F               	movf	?___ftmul+1,w
  9339  038F  00C8               	movwf	___fttol@f1+1
  9340  0390  0830               	movf	?___ftmul+2,w
  9341  0391  00C9               	movwf	___fttol@f1+2
  9342  0392  120A  158A  2028  120A  118A  	fcall	___fttol
  9343  0397  1283               	bcf	3,5	;RP0=0, select bank0
  9344  0398  1303               	bcf	3,6	;RP1=0, select bank0
  9345  0399  084A               	movf	?___fttol+3,w
  9346  039A  1683               	bsf	3,5	;RP0=1, select bank1
  9347  039B  1303               	bcf	3,6	;RP1=0, select bank1
  9348  039C  00CD               	movwf	(sprintf@val+3)^(0+128)
  9349  039D  1283               	bcf	3,5	;RP0=0, select bank0
  9350  039E  1303               	bcf	3,6	;RP1=0, select bank0
  9351  039F  0849               	movf	?___fttol+2,w
  9352  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  9353  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  9354  03A2  00CC               	movwf	(sprintf@val+2)^(0+128)
  9355  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  9356  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  9357  03A5  0848               	movf	?___fttol+1,w
  9358  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  9359  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  9360  03A8  00CB               	movwf	(sprintf@val+1)^(0+128)
  9361  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  9362  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  9363  03AB  0847               	movf	?___fttol,w
  9364  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  9365  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  9366  03AE  00CA               	movwf	sprintf@val^(0+128)
  9367                           
  9368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9369  03AF  2CB9               	goto	l2919
  9370  03B0                     l2911:
  9371                           
  9372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9373  03B0  0856               	movf	sprintf@c^(0+128),w
  9374  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  9375  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  9376  03B3  00EA               	movwf	??_sprintf
  9377  03B4  3001               	movlw	1
  9378  03B5                     u4105:
  9379  03B5  1003               	clrc
  9380  03B6  0DEA               	rlf	??_sprintf,f
  9381  03B7  3EFF               	addlw	-1
  9382  03B8  1D03               	skipz
  9383  03B9  2BB5               	goto	u4105
  9384  03BA  1003               	clrc
  9385  03BB  0D6A               	rlf	??_sprintf,w
  9386  03BC  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9387  03BD  0084               	movwf	4
  9388  03BE  160A  118A  200A  120A  118A  	fcall	stringdir
  9389  03C3  00A0               	movwf	___lldiv@divisor
  9390  03C4  160A  118A  200A  120A  118A  	fcall	stringdir
  9391  03C9  00A1               	movwf	___lldiv@divisor+1
  9392  03CA  160A  118A  200A  120A  118A  	fcall	stringdir
  9393  03CF  00A2               	movwf	___lldiv@divisor+2
  9394  03D0  160A  118A  200A  120A  118A  	fcall	stringdir
  9395  03D5  00A3               	movwf	___lldiv@divisor+3
  9396  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  9397  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  9398  03D8  084D               	movf	(sprintf@val+3)^(0+128),w
  9399  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  9400  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  9401  03DB  00A7               	movwf	___lldiv@dividend+3
  9402  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  9403  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  9404  03DE  084C               	movf	(sprintf@val+2)^(0+128),w
  9405  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  9406  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  9407  03E1  00A6               	movwf	___lldiv@dividend+2
  9408  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  9409  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  9410  03E4  084B               	movf	(sprintf@val+1)^(0+128),w
  9411  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  9412  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  9413  03E7  00A5               	movwf	___lldiv@dividend+1
  9414  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  9415  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  9416  03EA  084A               	movf	sprintf@val^(0+128),w
  9417  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  9418  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  9419  03ED  00A4               	movwf	___lldiv@dividend
  9420  03EE  160A  118A  222E  120A  118A  	fcall	___lldiv
  9421  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  9422  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  9423  03F5  0823               	movf	?___lldiv+3,w
  9424  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  9425  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  9426  03F8  00C9               	movwf	(sprintf@tmpval+3)^(0+128)
  9427  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  9428  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  9429  03FB  0822               	movf	?___lldiv+2,w
  9430  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  9431  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  9432  03FE  00C8               	movwf	(sprintf@tmpval+2)^(0+128)
  9433  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  9434  0400  1303               	bcf	3,6	;RP1=0, select bank0
  9435  0401  0821               	movf	?___lldiv+1,w
  9436  0402  1683               	bsf	3,5	;RP0=1, select bank1
  9437  0403  1303               	bcf	3,6	;RP1=0, select bank1
  9438  0404  00C7               	movwf	(sprintf@tmpval+1)^(0+128)
  9439  0405  1283               	bcf	3,5	;RP0=0, select bank0
  9440  0406  1303               	bcf	3,6	;RP1=0, select bank0
  9441  0407  0820               	movf	?___lldiv,w
  9442  0408  1683               	bsf	3,5	;RP0=1, select bank1
  9443  0409  1303               	bcf	3,6	;RP1=0, select bank1
  9444  040A  00C6               	movwf	sprintf@tmpval^(0+128)
  9445  040B                     l2913:
  9446                           
  9447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9448  040B  3000               	movlw	0
  9449  040C  1283               	bcf	3,5	;RP0=0, select bank0
  9450  040D  1303               	bcf	3,6	;RP1=0, select bank0
  9451  040E  00AB               	movwf	___llmod@divisor+3
  9452  040F  3000               	movlw	0
  9453  0410  00AA               	movwf	___llmod@divisor+2
  9454  0411  3000               	movlw	0
  9455  0412  00A9               	movwf	___llmod@divisor+1
  9456  0413  300A               	movlw	10
  9457  0414  00A8               	movwf	___llmod@divisor
  9458  0415  1683               	bsf	3,5	;RP0=1, select bank1
  9459  0416  1303               	bcf	3,6	;RP1=0, select bank1
  9460  0417  0849               	movf	(sprintf@tmpval+3)^(0+128),w
  9461  0418  1283               	bcf	3,5	;RP0=0, select bank0
  9462  0419  1303               	bcf	3,6	;RP1=0, select bank0
  9463  041A  00AF               	movwf	___llmod@dividend+3
  9464  041B  1683               	bsf	3,5	;RP0=1, select bank1
  9465  041C  1303               	bcf	3,6	;RP1=0, select bank1
  9466  041D  0848               	movf	(sprintf@tmpval+2)^(0+128),w
  9467  041E  1283               	bcf	3,5	;RP0=0, select bank0
  9468  041F  1303               	bcf	3,6	;RP1=0, select bank0
  9469  0420  00AE               	movwf	___llmod@dividend+2
  9470  0421  1683               	bsf	3,5	;RP0=1, select bank1
  9471  0422  1303               	bcf	3,6	;RP1=0, select bank1
  9472  0423  0847               	movf	(sprintf@tmpval+1)^(0+128),w
  9473  0424  1283               	bcf	3,5	;RP0=0, select bank0
  9474  0425  1303               	bcf	3,6	;RP1=0, select bank0
  9475  0426  00AD               	movwf	___llmod@dividend+1
  9476  0427  1683               	bsf	3,5	;RP0=1, select bank1
  9477  0428  1303               	bcf	3,6	;RP1=0, select bank1
  9478  0429  0846               	movf	sprintf@tmpval^(0+128),w
  9479  042A  1283               	bcf	3,5	;RP0=0, select bank0
  9480  042B  1303               	bcf	3,6	;RP1=0, select bank0
  9481  042C  00AC               	movwf	___llmod@dividend
  9482  042D  160A  118A  211C  120A  118A  	fcall	___llmod
  9483  0432  1283               	bcf	3,5	;RP0=0, select bank0
  9484  0433  1303               	bcf	3,6	;RP1=0, select bank0
  9485  0434  082B               	movf	?___llmod+3,w
  9486  0435  1683               	bsf	3,5	;RP0=1, select bank1
  9487  0436  1303               	bcf	3,6	;RP1=0, select bank1
  9488  0437  00C9               	movwf	(sprintf@tmpval+3)^(0+128)
  9489  0438  1283               	bcf	3,5	;RP0=0, select bank0
  9490  0439  1303               	bcf	3,6	;RP1=0, select bank0
  9491  043A  082A               	movf	?___llmod+2,w
  9492  043B  1683               	bsf	3,5	;RP0=1, select bank1
  9493  043C  1303               	bcf	3,6	;RP1=0, select bank1
  9494  043D  00C8               	movwf	(sprintf@tmpval+2)^(0+128)
  9495  043E  1283               	bcf	3,5	;RP0=0, select bank0
  9496  043F  1303               	bcf	3,6	;RP1=0, select bank0
  9497  0440  0829               	movf	?___llmod+1,w
  9498  0441  1683               	bsf	3,5	;RP0=1, select bank1
  9499  0442  1303               	bcf	3,6	;RP1=0, select bank1
  9500  0443  00C7               	movwf	(sprintf@tmpval+1)^(0+128)
  9501  0444  1283               	bcf	3,5	;RP0=0, select bank0
  9502  0445  1303               	bcf	3,6	;RP1=0, select bank0
  9503  0446  0828               	movf	?___llmod,w
  9504  0447  1683               	bsf	3,5	;RP0=1, select bank1
  9505  0448  1303               	bcf	3,6	;RP1=0, select bank1
  9506  0449  00C6               	movwf	sprintf@tmpval^(0+128)
  9507  044A                     l2915:
  9508                           
  9509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  9510  044A  0846               	movf	sprintf@tmpval^(0+128),w
  9511  044B  3E30               	addlw	48
  9512  044C  1283               	bcf	3,5	;RP0=0, select bank0
  9513  044D  1303               	bcf	3,6	;RP1=0, select bank0
  9514  044E  00EA               	movwf	??_sprintf
  9515  044F  1683               	bsf	3,5	;RP0=1, select bank1
  9516  0450  1303               	bcf	3,6	;RP1=0, select bank1
  9517  0451  0853               	movf	sprintf@sp^(0+128),w
  9518  0452  0084               	movwf	4
  9519  0453  1283               	bcf	3,5	;RP0=0, select bank0
  9520  0454  1303               	bcf	3,6	;RP1=0, select bank0
  9521  0455  086A               	movf	??_sprintf,w
  9522  0456  1383               	bcf	3,7	;select IRP bank0
  9523  0457  0080               	movwf	0
  9524  0458  3001               	movlw	1
  9525  0459  00EA               	movwf	??_sprintf
  9526  045A  086A               	movf	??_sprintf,w
  9527  045B  1683               	bsf	3,5	;RP0=1, select bank1
  9528  045C  1303               	bcf	3,6	;RP1=0, select bank1
  9529  045D  07D3               	addwf	sprintf@sp^(0+128),f
  9530  045E                     l2917:
  9531                           
  9532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  9533  045E  0856               	movf	sprintf@c^(0+128),w
  9534  045F  1283               	bcf	3,5	;RP0=0, select bank0
  9535  0460  1303               	bcf	3,6	;RP1=0, select bank0
  9536  0461  00EA               	movwf	??_sprintf
  9537  0462  3001               	movlw	1
  9538  0463                     u4115:
  9539  0463  1003               	clrc
  9540  0464  0DEA               	rlf	??_sprintf,f
  9541  0465  3EFF               	addlw	-1
  9542  0466  1D03               	skipz
  9543  0467  2C63               	goto	u4115
  9544  0468  1003               	clrc
  9545  0469  0D6A               	rlf	??_sprintf,w
  9546  046A  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9547  046B  0084               	movwf	4
  9548  046C  160A  118A  200A  120A  118A  	fcall	stringdir
  9549  0471  00A8               	movwf	___llmod@divisor
  9550  0472  160A  118A  200A  120A  118A  	fcall	stringdir
  9551  0477  00A9               	movwf	___llmod@divisor+1
  9552  0478  160A  118A  200A  120A  118A  	fcall	stringdir
  9553  047D  00AA               	movwf	___llmod@divisor+2
  9554  047E  160A  118A  200A  120A  118A  	fcall	stringdir
  9555  0483  00AB               	movwf	___llmod@divisor+3
  9556  0484  1683               	bsf	3,5	;RP0=1, select bank1
  9557  0485  1303               	bcf	3,6	;RP1=0, select bank1
  9558  0486  084D               	movf	(sprintf@val+3)^(0+128),w
  9559  0487  1283               	bcf	3,5	;RP0=0, select bank0
  9560  0488  1303               	bcf	3,6	;RP1=0, select bank0
  9561  0489  00AF               	movwf	___llmod@dividend+3
  9562  048A  1683               	bsf	3,5	;RP0=1, select bank1
  9563  048B  1303               	bcf	3,6	;RP1=0, select bank1
  9564  048C  084C               	movf	(sprintf@val+2)^(0+128),w
  9565  048D  1283               	bcf	3,5	;RP0=0, select bank0
  9566  048E  1303               	bcf	3,6	;RP1=0, select bank0
  9567  048F  00AE               	movwf	___llmod@dividend+2
  9568  0490  1683               	bsf	3,5	;RP0=1, select bank1
  9569  0491  1303               	bcf	3,6	;RP1=0, select bank1
  9570  0492  084B               	movf	(sprintf@val+1)^(0+128),w
  9571  0493  1283               	bcf	3,5	;RP0=0, select bank0
  9572  0494  1303               	bcf	3,6	;RP1=0, select bank0
  9573  0495  00AD               	movwf	___llmod@dividend+1
  9574  0496  1683               	bsf	3,5	;RP0=1, select bank1
  9575  0497  1303               	bcf	3,6	;RP1=0, select bank1
  9576  0498  084A               	movf	sprintf@val^(0+128),w
  9577  0499  1283               	bcf	3,5	;RP0=0, select bank0
  9578  049A  1303               	bcf	3,6	;RP1=0, select bank0
  9579  049B  00AC               	movwf	___llmod@dividend
  9580  049C  160A  118A  211C  120A  118A  	fcall	___llmod
  9581  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  9582  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  9583  04A3  082B               	movf	?___llmod+3,w
  9584  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  9585  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  9586  04A6  00CD               	movwf	(sprintf@val+3)^(0+128)
  9587  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  9588  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  9589  04A9  082A               	movf	?___llmod+2,w
  9590  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  9591  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  9592  04AC  00CC               	movwf	(sprintf@val+2)^(0+128)
  9593  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  9594  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  9595  04AF  0829               	movf	?___llmod+1,w
  9596  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  9597  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  9598  04B2  00CB               	movwf	(sprintf@val+1)^(0+128)
  9599  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  9600  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  9601  04B5  0828               	movf	?___llmod,w
  9602  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  9603  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  9604  04B8  00CA               	movwf	sprintf@val^(0+128)
  9605  04B9                     l2919:
  9606                           
  9607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9608  04B9  3001               	movlw	1
  9609  04BA  02D6               	subwf	sprintf@c^(0+128),f
  9610  04BB  0A56               	incf	sprintf@c^(0+128),w
  9611  04BC  1D03               	btfss	3,2
  9612  04BD  2CBF               	goto	u4121
  9613  04BE  2CC0               	goto	u4120
  9614  04BF                     u4121:
  9615  04BF  2BB0               	goto	l2911
  9616  04C0                     u4120:
  9617  04C0  2CDA               	goto	l2927
  9618  04C1                     l2921:
  9619                           
  9620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  9621  04C1  3030               	movlw	48
  9622  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  9623  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  9624  04C4  00EA               	movwf	??_sprintf
  9625  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  9626  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  9627  04C7  0853               	movf	sprintf@sp^(0+128),w
  9628  04C8  0084               	movwf	4
  9629  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  9630  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  9631  04CB  086A               	movf	??_sprintf,w
  9632  04CC  1383               	bcf	3,7	;select IRP bank0
  9633  04CD  0080               	movwf	0
  9634  04CE                     l2923:
  9635  04CE  3001               	movlw	1
  9636  04CF  00EA               	movwf	??_sprintf
  9637  04D0  086A               	movf	??_sprintf,w
  9638  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  9639  04D2  1303               	bcf	3,6	;RP1=0, select bank1
  9640  04D3  07D3               	addwf	sprintf@sp^(0+128),f
  9641  04D4                     l2925:
  9642                           
  9643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9644  04D4  30FF               	movlw	255
  9645  04D5  07D4               	addwf	sprintf@prec^(0+128),f
  9646  04D6  1803               	skipnc
  9647  04D7  0AD5               	incf	(sprintf@prec+1)^(0+128),f
  9648  04D8  30FF               	movlw	255
  9649  04D9  07D5               	addwf	(sprintf@prec+1)^(0+128),f
  9650  04DA                     l2927:
  9651                           
  9652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  9653  04DA  0854               	movf	sprintf@prec^(0+128),w
  9654  04DB  0455               	iorwf	(sprintf@prec+1)^(0+128),w
  9655  04DC  1D03               	btfss	3,2
  9656  04DD  2CDF               	goto	u4131
  9657  04DE  2CE0               	goto	u4130
  9658  04DF                     u4131:
  9659  04DF  2CC1               	goto	l2921
  9660  04E0                     u4130:
  9661  04E0  2EF8               	goto	l3007
  9662  04E1                     l2929:
  9663                           
  9664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9665  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  9666  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  9667  04E3  0841               	movf	sprintf@ap^(0+128),w
  9668  04E4  0084               	movwf	4
  9669  04E5  1383               	bcf	3,7	;select IRP bank0
  9670  04E6  0800               	movf	0,w
  9671  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  9672  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  9673  04E9  00EA               	movwf	??_sprintf
  9674  04EA  0A84               	incf	4,f
  9675  04EB  0800               	movf	0,w
  9676  04EC  00EB               	movwf	??_sprintf+1
  9677  04ED  086A               	movf	??_sprintf,w
  9678  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  9679  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  9680  04F0  00CA               	movwf	sprintf@val^(0+128)
  9681  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  9682  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  9683  04F3  086B               	movf	??_sprintf+1,w
  9684  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  9685  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  9686  04F6  00CB               	movwf	(sprintf@val+1)^(0+128)
  9687  04F7  3000               	movlw	0
  9688  04F8  1BCB               	btfsc	(sprintf@val+1)^(0+128),7
  9689  04F9  30FF               	movlw	255
  9690  04FA  00CC               	movwf	(sprintf@val+2)^(0+128)
  9691  04FB  00CD               	movwf	(sprintf@val+3)^(0+128)
  9692  04FC                     l2931:
  9693  04FC  3002               	movlw	2
  9694  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  9695  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  9696  04FF  00EA               	movwf	??_sprintf
  9697  0500  086A               	movf	??_sprintf,w
  9698  0501  1683               	bsf	3,5	;RP0=1, select bank1
  9699  0502  1303               	bcf	3,6	;RP1=0, select bank1
  9700  0503  07C1               	addwf	sprintf@ap^(0+128),f
  9701  0504                     l2933:
  9702                           
  9703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  9704  0504  1FCD               	btfss	(sprintf@val+3)^(0+128),7
  9705  0505  2D07               	goto	u4141
  9706  0506  2D08               	goto	u4140
  9707  0507                     u4141:
  9708  0507  2D17               	goto	l2939
  9709  0508                     u4140:
  9710  0508                     l2935:
  9711                           
  9712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  9713  0508  3003               	movlw	3
  9714  0509  04C2               	iorwf	sprintf@flag^(0+128),f
  9715  050A  3000               	movlw	0
  9716  050B  04C3               	iorwf	(sprintf@flag+1)^(0+128),f
  9717  050C                     l2937:
  9718                           
  9719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  9720  050C  09CA               	comf	sprintf@val^(0+128),f
  9721  050D  09CB               	comf	(sprintf@val+1)^(0+128),f
  9722  050E  09CC               	comf	(sprintf@val+2)^(0+128),f
  9723  050F  09CD               	comf	(sprintf@val+3)^(0+128),f
  9724  0510  0ACA               	incf	sprintf@val^(0+128),f
  9725  0511  1903               	skipnz
  9726  0512  0ACB               	incf	(sprintf@val+1)^(0+128),f
  9727  0513  1903               	skipnz
  9728  0514  0ACC               	incf	(sprintf@val+2)^(0+128),f
  9729  0515  1903               	skipnz
  9730  0516  0ACD               	incf	(sprintf@val+3)^(0+128),f
  9731  0517                     l2939:
  9732                           
  9733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  9734  0517  0854               	movf	sprintf@prec^(0+128),w
  9735  0518  0455               	iorwf	(sprintf@prec+1)^(0+128),w
  9736  0519  1D03               	btfss	3,2
  9737  051A  2D1C               	goto	u4151
  9738  051B  2D1D               	goto	u4150
  9739  051C                     u4151:
  9740  051C  2D2B               	goto	l2945
  9741  051D                     u4150:
  9742  051D                     l2941:
  9743  051D  084D               	movf	(sprintf@val+3)^(0+128),w
  9744  051E  044C               	iorwf	(sprintf@val+2)^(0+128),w
  9745  051F  044B               	iorwf	(sprintf@val+1)^(0+128),w
  9746  0520  044A               	iorwf	sprintf@val^(0+128),w
  9747  0521  1D03               	skipz
  9748  0522  2D24               	goto	u4161
  9749  0523  2D25               	goto	u4160
  9750  0524                     u4161:
  9751  0524  2D2B               	goto	l2945
  9752  0525                     u4160:
  9753  0525                     l2943:
  9754                           
  9755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9756  0525  3001               	movlw	1
  9757  0526  07D4               	addwf	sprintf@prec^(0+128),f
  9758  0527  1803               	skipnc
  9759  0528  0AD5               	incf	(sprintf@prec+1)^(0+128),f
  9760  0529  3000               	movlw	0
  9761  052A  07D5               	addwf	(sprintf@prec+1)^(0+128),f
  9762  052B                     l2945:
  9763                           
  9764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9765  052B  01D6               	clrf	sprintf@c^(0+128)
  9766  052C  0AD6               	incf	sprintf@c^(0+128),f
  9767  052D                     l2951:
  9768                           
  9769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  9770  052D  0856               	movf	sprintf@c^(0+128),w
  9771  052E  1283               	bcf	3,5	;RP0=0, select bank0
  9772  052F  1303               	bcf	3,6	;RP1=0, select bank0
  9773  0530  00EA               	movwf	??_sprintf
  9774  0531  3001               	movlw	1
  9775  0532                     u4175:
  9776  0532  1003               	clrc
  9777  0533  0DEA               	rlf	??_sprintf,f
  9778  0534  3EFF               	addlw	-1
  9779  0535  1D03               	skipz
  9780  0536  2D32               	goto	u4175
  9781  0537  1003               	clrc
  9782  0538  0D6A               	rlf	??_sprintf,w
  9783  0539  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9784  053A  0084               	movwf	4
  9785  053B  160A  118A  200A  120A  118A  	fcall	stringdir
  9786  0540  00EB               	movwf	??_sprintf+1
  9787  0541  160A  118A  200A  120A  118A  	fcall	stringdir
  9788  0546  00EC               	movwf	??_sprintf+2
  9789  0547  160A  118A  200A  120A  118A  	fcall	stringdir
  9790  054C  00ED               	movwf	??_sprintf+3
  9791  054D  160A  118A  200A  120A  118A  	fcall	stringdir
  9792  0552  00EE               	movwf	??_sprintf+4
  9793  0553  086E               	movf	??_sprintf+4,w
  9794  0554  1683               	bsf	3,5	;RP0=1, select bank1
  9795  0555  1303               	bcf	3,6	;RP1=0, select bank1
  9796  0556  024D               	subwf	(sprintf@val+3)^(0+128),w
  9797  0557  1D03               	skipz
  9798  0558  2D6F               	goto	u4185
  9799  0559  1283               	bcf	3,5	;RP0=0, select bank0
  9800  055A  1303               	bcf	3,6	;RP1=0, select bank0
  9801  055B  086D               	movf	??_sprintf+3,w
  9802  055C  1683               	bsf	3,5	;RP0=1, select bank1
  9803  055D  1303               	bcf	3,6	;RP1=0, select bank1
  9804  055E  024C               	subwf	(sprintf@val+2)^(0+128),w
  9805  055F  1D03               	skipz
  9806  0560  2D6F               	goto	u4185
  9807  0561  1283               	bcf	3,5	;RP0=0, select bank0
  9808  0562  1303               	bcf	3,6	;RP1=0, select bank0
  9809  0563  086C               	movf	??_sprintf+2,w
  9810  0564  1683               	bsf	3,5	;RP0=1, select bank1
  9811  0565  1303               	bcf	3,6	;RP1=0, select bank1
  9812  0566  024B               	subwf	(sprintf@val+1)^(0+128),w
  9813  0567  1D03               	skipz
  9814  0568  2D6F               	goto	u4185
  9815  0569  1283               	bcf	3,5	;RP0=0, select bank0
  9816  056A  1303               	bcf	3,6	;RP1=0, select bank0
  9817  056B  086B               	movf	??_sprintf+1,w
  9818  056C  1683               	bsf	3,5	;RP0=1, select bank1
  9819  056D  1303               	bcf	3,6	;RP1=0, select bank1
  9820  056E  024A               	subwf	sprintf@val^(0+128),w
  9821  056F                     u4185:
  9822  056F  1803               	skipnc
  9823  0570  2D72               	goto	u4181
  9824  0571  2D73               	goto	u4180
  9825  0572                     u4181:
  9826  0572  2D74               	goto	l2955
  9827  0573                     u4180:
  9828  0573  2D82               	goto	l2957
  9829  0574                     l2955:
  9830  0574  3001               	movlw	1
  9831  0575  1283               	bcf	3,5	;RP0=0, select bank0
  9832  0576  1303               	bcf	3,6	;RP1=0, select bank0
  9833  0577  00EA               	movwf	??_sprintf
  9834  0578  086A               	movf	??_sprintf,w
  9835  0579  1683               	bsf	3,5	;RP0=1, select bank1
  9836  057A  1303               	bcf	3,6	;RP1=0, select bank1
  9837  057B  07D6               	addwf	sprintf@c^(0+128),f
  9838  057C  300A               	movlw	10
  9839  057D  0656               	xorwf	sprintf@c^(0+128),w
  9840  057E  1D03               	btfss	3,2
  9841  057F  2D81               	goto	u4191
  9842  0580  2D82               	goto	u4190
  9843  0581                     u4191:
  9844  0581  2D2D               	goto	l2951
  9845  0582                     u4190:
  9846  0582                     l2957:
  9847                           
  9848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  9849  0582  0855               	movf	(sprintf@prec+1)^(0+128),w
  9850  0583  3A80               	xorlw	128
  9851  0584  3C80               	sublw	128
  9852  0585  1D03               	skipz
  9853  0586  2D89               	goto	u4205
  9854  0587  0854               	movf	sprintf@prec^(0+128),w
  9855  0588  0256               	subwf	sprintf@c^(0+128),w
  9856  0589                     u4205:
  9857  0589  1803               	skipnc
  9858  058A  2D8C               	goto	u4201
  9859  058B  2D8D               	goto	u4200
  9860  058C                     u4201:
  9861  058C  2D98               	goto	l2961
  9862  058D                     u4200:
  9863  058D                     l2959:
  9864                           
  9865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  9866  058D  1683               	bsf	3,5	;RP0=1, select bank1
  9867  058E  1303               	bcf	3,6	;RP1=0, select bank1
  9868  058F  0854               	movf	sprintf@prec^(0+128),w
  9869  0590  1283               	bcf	3,5	;RP0=0, select bank0
  9870  0591  1303               	bcf	3,6	;RP1=0, select bank0
  9871  0592  00EA               	movwf	??_sprintf
  9872  0593  086A               	movf	??_sprintf,w
  9873  0594  1683               	bsf	3,5	;RP0=1, select bank1
  9874  0595  1303               	bcf	3,6	;RP1=0, select bank1
  9875  0596  00D6               	movwf	sprintf@c^(0+128)
  9876  0597  2DBC               	goto	l2965
  9877  0598                     l2961:
  9878  0598  1683               	bsf	3,5	;RP0=1, select bank1
  9879  0599  1303               	bcf	3,6	;RP1=0, select bank1
  9880  059A  0855               	movf	(sprintf@prec+1)^(0+128),w
  9881  059B  3A80               	xorlw	128
  9882  059C  1283               	bcf	3,5	;RP0=0, select bank0
  9883  059D  1303               	bcf	3,6	;RP1=0, select bank0
  9884  059E  00EA               	movwf	??_sprintf
  9885  059F  3080               	movlw	128
  9886  05A0  026A               	subwf	??_sprintf,w
  9887  05A1  1D03               	skipz
  9888  05A2  2DA7               	goto	u4215
  9889  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  9890  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  9891  05A5  0856               	movf	sprintf@c^(0+128),w
  9892  05A6  0254               	subwf	sprintf@prec^(0+128),w
  9893  05A7                     u4215:
  9894  05A7  1803               	skipnc
  9895  05A8  2DAA               	goto	u4211
  9896  05A9  2DAB               	goto	u4210
  9897  05AA                     u4211:
  9898  05AA  2DBC               	goto	l2965
  9899  05AB                     u4210:
  9900  05AB                     l2963:
  9901                           
  9902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  9903  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  9904  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  9905  05AD  0856               	movf	sprintf@c^(0+128),w
  9906  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  9907  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  9908  05B0  00EA               	movwf	??_sprintf
  9909  05B1  01EB               	clrf	??_sprintf+1
  9910  05B2  086A               	movf	??_sprintf,w
  9911  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  9912  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  9913  05B5  00D4               	movwf	sprintf@prec^(0+128)
  9914  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  9915  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  9916  05B8  086B               	movf	??_sprintf+1,w
  9917  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  9918  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  9919  05BB  00D5               	movwf	(sprintf@prec+1)^(0+128)
  9920  05BC                     l2965:
  9921                           
  9922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  9923  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  9924  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  9925  05BE  0844               	movf	sprintf@width^(0+128),w
  9926  05BF  0445               	iorwf	(sprintf@width+1)^(0+128),w
  9927  05C0  1903               	btfsc	3,2
  9928  05C1  2DC3               	goto	u4221
  9929  05C2  2DC4               	goto	u4220
  9930  05C3                     u4221:
  9931  05C3  2DDE               	goto	l2971
  9932  05C4                     u4220:
  9933  05C4                     l2967:
  9934  05C4  3003               	movlw	3
  9935  05C5  0542               	andwf	sprintf@flag^(0+128),w
  9936  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  9937  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  9938  05C8  00EA               	movwf	??_sprintf
  9939  05C9  3000               	movlw	0
  9940  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  9941  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  9942  05CC  0543               	andwf	(sprintf@flag+1)^(0+128),w
  9943  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  9944  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  9945  05CF  00EB               	movwf	??_sprintf+1
  9946  05D0  086A               	movf	??_sprintf,w
  9947  05D1  046B               	iorwf	??_sprintf+1,w
  9948  05D2  1903               	btfsc	3,2
  9949  05D3  2DD5               	goto	u4231
  9950  05D4  2DD6               	goto	u4230
  9951  05D5                     u4231:
  9952  05D5  2DDE               	goto	l2971
  9953  05D6                     u4230:
  9954  05D6                     l2969:
  9955                           
  9956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  9957  05D6  30FF               	movlw	255
  9958  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  9959  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  9960  05D9  07C4               	addwf	sprintf@width^(0+128),f
  9961  05DA  1803               	skipnc
  9962  05DB  0AC5               	incf	(sprintf@width+1)^(0+128),f
  9963  05DC  30FF               	movlw	255
  9964  05DD  07C5               	addwf	(sprintf@width+1)^(0+128),f
  9965  05DE                     l2971:
  9966                           
  9967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  9968  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  9969  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  9970  05E0  1F43               	btfss	(sprintf@flag+1)^(0+128),6
  9971  05E1  2DE3               	goto	u4241
  9972  05E2  2DE4               	goto	u4240
  9973  05E3                     u4241:
  9974  05E3  2E07               	goto	l2979
  9975  05E4                     u4240:
  9976  05E4                     l2973:
  9977                           
  9978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  9979  05E4  0855               	movf	(sprintf@prec+1)^(0+128),w
  9980  05E5  3A80               	xorlw	128
  9981  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  9982  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  9983  05E8  00EA               	movwf	??_sprintf
  9984  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  9985  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  9986  05EB  0845               	movf	(sprintf@width+1)^(0+128),w
  9987  05EC  3A80               	xorlw	128
  9988  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  9989  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  9990  05EF  026A               	subwf	??_sprintf,w
  9991  05F0  1D03               	skipz
  9992  05F1  2DF6               	goto	u4255
  9993  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  9994  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  9995  05F4  0844               	movf	sprintf@width^(0+128),w
  9996  05F5  0254               	subwf	sprintf@prec^(0+128),w
  9997  05F6                     u4255:
  9998  05F6  1803               	skipnc
  9999  05F7  2DF9               	goto	u4251
 10000  05F8  2DFA               	goto	u4250
 10001  05F9                     u4251:
 10002  05F9  2E03               	goto	l2977
 10003  05FA                     u4250:
 10004  05FA                     l2975:
 10005                           
 10006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10007  05FA  1683               	bsf	3,5	;RP0=1, select bank1
 10008  05FB  1303               	bcf	3,6	;RP1=0, select bank1
 10009  05FC  0854               	movf	sprintf@prec^(0+128),w
 10010  05FD  02C4               	subwf	sprintf@width^(0+128),f
 10011  05FE  0855               	movf	(sprintf@prec+1)^(0+128),w
 10012  05FF  1C03               	skipc
 10013  0600  03C5               	decf	(sprintf@width+1)^(0+128),f
 10014  0601  02C5               	subwf	(sprintf@width+1)^(0+128),f
 10015  0602  2E07               	goto	l2979
 10016  0603                     l2977:
 10017                           
 10018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10019  0603  1683               	bsf	3,5	;RP0=1, select bank1
 10020  0604  1303               	bcf	3,6	;RP1=0, select bank1
 10021  0605  01C4               	clrf	sprintf@width^(0+128)
 10022  0606  01C5               	clrf	(sprintf@width+1)^(0+128)
 10023  0607                     l2979:
 10024                           
 10025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10026  0607  0845               	movf	(sprintf@width+1)^(0+128),w
 10027  0608  3A80               	xorlw	128
 10028  0609  3C80               	sublw	128
 10029  060A  1D03               	skipz
 10030  060B  2E0E               	goto	u4265
 10031  060C  0844               	movf	sprintf@width^(0+128),w
 10032  060D  0256               	subwf	sprintf@c^(0+128),w
 10033  060E                     u4265:
 10034  060E  1803               	skipnc
 10035  060F  2E11               	goto	u4261
 10036  0610  2E12               	goto	u4260
 10037  0611                     u4261:
 10038  0611  2E26               	goto	l2983
 10039  0612                     u4260:
 10040  0612                     l2981:
 10041                           
 10042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10043  0612  1683               	bsf	3,5	;RP0=1, select bank1
 10044  0613  1303               	bcf	3,6	;RP1=0, select bank1
 10045  0614  0856               	movf	sprintf@c^(0+128),w
 10046  0615  1283               	bcf	3,5	;RP0=0, select bank0
 10047  0616  1303               	bcf	3,6	;RP1=0, select bank0
 10048  0617  00EA               	movwf	??_sprintf
 10049  0618  01EB               	clrf	??_sprintf+1
 10050  0619  086A               	movf	??_sprintf,w
 10051  061A  1683               	bsf	3,5	;RP0=1, select bank1
 10052  061B  1303               	bcf	3,6	;RP1=0, select bank1
 10053  061C  02C4               	subwf	sprintf@width^(0+128),f
 10054  061D  1283               	bcf	3,5	;RP0=0, select bank0
 10055  061E  1303               	bcf	3,6	;RP1=0, select bank0
 10056  061F  086B               	movf	??_sprintf+1,w
 10057  0620  1683               	bsf	3,5	;RP0=1, select bank1
 10058  0621  1303               	bcf	3,6	;RP1=0, select bank1
 10059  0622  1C03               	skipc
 10060  0623  03C5               	decf	(sprintf@width+1)^(0+128),f
 10061  0624  02C5               	subwf	(sprintf@width+1)^(0+128),f
 10062  0625  2E2A               	goto	l2985
 10063  0626                     l2983:
 10064                           
 10065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10066  0626  1683               	bsf	3,5	;RP0=1, select bank1
 10067  0627  1303               	bcf	3,6	;RP1=0, select bank1
 10068  0628  01C4               	clrf	sprintf@width^(0+128)
 10069  0629  01C5               	clrf	(sprintf@width+1)^(0+128)
 10070  062A                     l2985:
 10071                           
 10072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10073  062A  0844               	movf	sprintf@width^(0+128),w
 10074  062B  0445               	iorwf	(sprintf@width+1)^(0+128),w
 10075  062C  1903               	btfsc	3,2
 10076  062D  2E2F               	goto	u4271
 10077  062E  2E30               	goto	u4270
 10078  062F                     u4271:
 10079  062F  2E4F               	goto	l2993
 10080  0630                     u4270:
 10081  0630                     l2987:
 10082                           
 10083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10084  0630  3020               	movlw	32
 10085  0631  1283               	bcf	3,5	;RP0=0, select bank0
 10086  0632  1303               	bcf	3,6	;RP1=0, select bank0
 10087  0633  00EA               	movwf	??_sprintf
 10088  0634  1683               	bsf	3,5	;RP0=1, select bank1
 10089  0635  1303               	bcf	3,6	;RP1=0, select bank1
 10090  0636  0853               	movf	sprintf@sp^(0+128),w
 10091  0637  0084               	movwf	4
 10092  0638  1283               	bcf	3,5	;RP0=0, select bank0
 10093  0639  1303               	bcf	3,6	;RP1=0, select bank0
 10094  063A  086A               	movf	??_sprintf,w
 10095  063B  1383               	bcf	3,7	;select IRP bank0
 10096  063C  0080               	movwf	0
 10097  063D                     l2989:
 10098  063D  3001               	movlw	1
 10099  063E  00EA               	movwf	??_sprintf
 10100  063F  086A               	movf	??_sprintf,w
 10101  0640  1683               	bsf	3,5	;RP0=1, select bank1
 10102  0641  1303               	bcf	3,6	;RP1=0, select bank1
 10103  0642  07D3               	addwf	sprintf@sp^(0+128),f
 10104  0643                     l2991:
 10105  0643  30FF               	movlw	255
 10106  0644  07C4               	addwf	sprintf@width^(0+128),f
 10107  0645  1803               	skipnc
 10108  0646  0AC5               	incf	(sprintf@width+1)^(0+128),f
 10109  0647  30FF               	movlw	255
 10110  0648  07C5               	addwf	(sprintf@width+1)^(0+128),f
 10111  0649  0844               	movf	sprintf@width^(0+128),w
 10112  064A  0445               	iorwf	(sprintf@width+1)^(0+128),w
 10113  064B  1D03               	btfss	3,2
 10114  064C  2E4E               	goto	u4281
 10115  064D  2E4F               	goto	u4280
 10116  064E                     u4281:
 10117  064E  2E30               	goto	l2987
 10118  064F                     u4280:
 10119  064F                     l2993:
 10120                           
 10121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10122  064F  3003               	movlw	3
 10123  0650  0542               	andwf	sprintf@flag^(0+128),w
 10124  0651  1283               	bcf	3,5	;RP0=0, select bank0
 10125  0652  1303               	bcf	3,6	;RP1=0, select bank0
 10126  0653  00EA               	movwf	??_sprintf
 10127  0654  3000               	movlw	0
 10128  0655  1683               	bsf	3,5	;RP0=1, select bank1
 10129  0656  1303               	bcf	3,6	;RP1=0, select bank1
 10130  0657  0543               	andwf	(sprintf@flag+1)^(0+128),w
 10131  0658  1283               	bcf	3,5	;RP0=0, select bank0
 10132  0659  1303               	bcf	3,6	;RP1=0, select bank0
 10133  065A  00EB               	movwf	??_sprintf+1
 10134  065B  086A               	movf	??_sprintf,w
 10135  065C  046B               	iorwf	??_sprintf+1,w
 10136  065D  1903               	btfsc	3,2
 10137  065E  2E60               	goto	u4291
 10138  065F  2E61               	goto	u4290
 10139  0660                     u4291:
 10140  0660  2EE8               	goto	l3005
 10141  0661                     u4290:
 10142  0661                     l2995:
 10143                           
 10144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10145  0661  302D               	movlw	45
 10146  0662  00EA               	movwf	??_sprintf
 10147  0663  1683               	bsf	3,5	;RP0=1, select bank1
 10148  0664  1303               	bcf	3,6	;RP1=0, select bank1
 10149  0665  0853               	movf	sprintf@sp^(0+128),w
 10150  0666  0084               	movwf	4
 10151  0667  1283               	bcf	3,5	;RP0=0, select bank0
 10152  0668  1303               	bcf	3,6	;RP1=0, select bank0
 10153  0669  086A               	movf	??_sprintf,w
 10154  066A  1383               	bcf	3,7	;select IRP bank0
 10155  066B  0080               	movwf	0
 10156  066C                     l2997:
 10157  066C  3001               	movlw	1
 10158  066D  00EA               	movwf	??_sprintf
 10159  066E  086A               	movf	??_sprintf,w
 10160  066F  1683               	bsf	3,5	;RP0=1, select bank1
 10161  0670  1303               	bcf	3,6	;RP1=0, select bank1
 10162  0671  07D3               	addwf	sprintf@sp^(0+128),f
 10163  0672  2EE8               	goto	l3005
 10164  0673                     l2999:
 10165                           
 10166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 10167  0673  3000               	movlw	0
 10168  0674  1283               	bcf	3,5	;RP0=0, select bank0
 10169  0675  1303               	bcf	3,6	;RP1=0, select bank0
 10170  0676  00AB               	movwf	___llmod@divisor+3
 10171  0677  3000               	movlw	0
 10172  0678  00AA               	movwf	___llmod@divisor+2
 10173  0679  3000               	movlw	0
 10174  067A  00A9               	movwf	___llmod@divisor+1
 10175  067B  300A               	movlw	10
 10176  067C  00A8               	movwf	___llmod@divisor
 10177  067D  1683               	bsf	3,5	;RP0=1, select bank1
 10178  067E  1303               	bcf	3,6	;RP1=0, select bank1
 10179  067F  0854               	movf	sprintf@prec^(0+128),w
 10180  0680  1283               	bcf	3,5	;RP0=0, select bank0
 10181  0681  1303               	bcf	3,6	;RP1=0, select bank0
 10182  0682  00EA               	movwf	??_sprintf
 10183  0683  3001               	movlw	1
 10184  0684                     u4305:
 10185  0684  1003               	clrc
 10186  0685  0DEA               	rlf	??_sprintf,f
 10187  0686  3EFF               	addlw	-1
 10188  0687  1D03               	skipz
 10189  0688  2E84               	goto	u4305
 10190  0689  1003               	clrc
 10191  068A  0D6A               	rlf	??_sprintf,w
 10192  068B  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10193  068C  0084               	movwf	4
 10194  068D  160A  118A  200A  120A  118A  	fcall	stringdir
 10195  0692  00A0               	movwf	___lldiv@divisor
 10196  0693  160A  118A  200A  120A  118A  	fcall	stringdir
 10197  0698  00A1               	movwf	___lldiv@divisor+1
 10198  0699  160A  118A  200A  120A  118A  	fcall	stringdir
 10199  069E  00A2               	movwf	___lldiv@divisor+2
 10200  069F  160A  118A  200A  120A  118A  	fcall	stringdir
 10201  06A4  00A3               	movwf	___lldiv@divisor+3
 10202  06A5  1683               	bsf	3,5	;RP0=1, select bank1
 10203  06A6  1303               	bcf	3,6	;RP1=0, select bank1
 10204  06A7  084D               	movf	(sprintf@val+3)^(0+128),w
 10205  06A8  1283               	bcf	3,5	;RP0=0, select bank0
 10206  06A9  1303               	bcf	3,6	;RP1=0, select bank0
 10207  06AA  00A7               	movwf	___lldiv@dividend+3
 10208  06AB  1683               	bsf	3,5	;RP0=1, select bank1
 10209  06AC  1303               	bcf	3,6	;RP1=0, select bank1
 10210  06AD  084C               	movf	(sprintf@val+2)^(0+128),w
 10211  06AE  1283               	bcf	3,5	;RP0=0, select bank0
 10212  06AF  1303               	bcf	3,6	;RP1=0, select bank0
 10213  06B0  00A6               	movwf	___lldiv@dividend+2
 10214  06B1  1683               	bsf	3,5	;RP0=1, select bank1
 10215  06B2  1303               	bcf	3,6	;RP1=0, select bank1
 10216  06B3  084B               	movf	(sprintf@val+1)^(0+128),w
 10217  06B4  1283               	bcf	3,5	;RP0=0, select bank0
 10218  06B5  1303               	bcf	3,6	;RP1=0, select bank0
 10219  06B6  00A5               	movwf	___lldiv@dividend+1
 10220  06B7  1683               	bsf	3,5	;RP0=1, select bank1
 10221  06B8  1303               	bcf	3,6	;RP1=0, select bank1
 10222  06B9  084A               	movf	sprintf@val^(0+128),w
 10223  06BA  1283               	bcf	3,5	;RP0=0, select bank0
 10224  06BB  1303               	bcf	3,6	;RP1=0, select bank0
 10225  06BC  00A4               	movwf	___lldiv@dividend
 10226  06BD  160A  118A  222E  120A  118A  	fcall	___lldiv
 10227  06C2  1283               	bcf	3,5	;RP0=0, select bank0
 10228  06C3  1303               	bcf	3,6	;RP1=0, select bank0
 10229  06C4  0823               	movf	?___lldiv+3,w
 10230  06C5  00AF               	movwf	___llmod@dividend+3
 10231  06C6  0822               	movf	?___lldiv+2,w
 10232  06C7  00AE               	movwf	___llmod@dividend+2
 10233  06C8  0821               	movf	?___lldiv+1,w
 10234  06C9  00AD               	movwf	___llmod@dividend+1
 10235  06CA  0820               	movf	?___lldiv,w
 10236  06CB  00AC               	movwf	___llmod@dividend
 10237  06CC  160A  118A  211C  120A  118A  	fcall	___llmod
 10238  06D1  1283               	bcf	3,5	;RP0=0, select bank0
 10239  06D2  1303               	bcf	3,6	;RP1=0, select bank0
 10240  06D3  0828               	movf	?___llmod,w
 10241  06D4  3E30               	addlw	48
 10242  06D5  00EB               	movwf	??_sprintf+1
 10243  06D6  086B               	movf	??_sprintf+1,w
 10244  06D7  1683               	bsf	3,5	;RP0=1, select bank1
 10245  06D8  1303               	bcf	3,6	;RP1=0, select bank1
 10246  06D9  00D6               	movwf	sprintf@c^(0+128)
 10247  06DA                     l3001:
 10248                           
 10249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 10250  06DA  0856               	movf	sprintf@c^(0+128),w
 10251  06DB  1283               	bcf	3,5	;RP0=0, select bank0
 10252  06DC  1303               	bcf	3,6	;RP1=0, select bank0
 10253  06DD  00EA               	movwf	??_sprintf
 10254  06DE  1683               	bsf	3,5	;RP0=1, select bank1
 10255  06DF  1303               	bcf	3,6	;RP1=0, select bank1
 10256  06E0  0853               	movf	sprintf@sp^(0+128),w
 10257  06E1  0084               	movwf	4
 10258  06E2  1283               	bcf	3,5	;RP0=0, select bank0
 10259  06E3  1303               	bcf	3,6	;RP1=0, select bank0
 10260  06E4  086A               	movf	??_sprintf,w
 10261  06E5  1383               	bcf	3,7	;select IRP bank0
 10262  06E6  0080               	movwf	0
 10263  06E7  2E6C               	goto	l2997
 10264  06E8                     l3005:
 10265                           
 10266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 10267  06E8  30FF               	movlw	255
 10268  06E9  1683               	bsf	3,5	;RP0=1, select bank1
 10269  06EA  1303               	bcf	3,6	;RP1=0, select bank1
 10270  06EB  07D4               	addwf	sprintf@prec^(0+128),f
 10271  06EC  1803               	skipnc
 10272  06ED  0AD5               	incf	(sprintf@prec+1)^(0+128),f
 10273  06EE  30FF               	movlw	255
 10274  06EF  07D5               	addwf	(sprintf@prec+1)^(0+128),f
 10275  06F0  0A54               	incf	sprintf@prec^(0+128),w
 10276  06F1  1D03               	skipz
 10277  06F2  2EF7               	goto	u4311
 10278  06F3  0A55               	incf	(sprintf@prec+1)^(0+128),w
 10279  06F4  1D03               	btfss	3,2
 10280  06F5  2EF7               	goto	u4311
 10281  06F6  2EF8               	goto	u4310
 10282  06F7                     u4311:
 10283  06F7  2E73               	goto	l2999
 10284  06F8                     u4310:
 10285  06F8                     l3007:
 10286                           
 10287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10288  06F8  3001               	movlw	1
 10289  06F9  1283               	bcf	3,5	;RP0=0, select bank0
 10290  06FA  07E1               	addwf	sprintf@f,f
 10291  06FB  30FF               	movlw	-1
 10292  06FC  0761               	addwf	sprintf@f,w
 10293  06FD  0084               	movwf	4
 10294  06FE  160A  118A  200A  120A  118A  	fcall	stringdir
 10295  0703  00EA               	movwf	??_sprintf
 10296  0704  086A               	movf	??_sprintf,w
 10297  0705  1683               	bsf	3,5	;RP0=1, select bank1
 10298  0706  1303               	bcf	3,6	;RP1=0, select bank1
 10299  0707  00D6               	movwf	sprintf@c^(0+128)
 10300  0708  0856               	movf	sprintf@c^(0+128),w
 10301  0709  1D03               	btfss	3,2
 10302  070A  2F0C               	goto	u4321
 10303  070B  2F0F               	goto	u4320
 10304  070C                     u4321:
 10305  070C  120A  158A  2D26   	goto	l2729
 10306  070F                     u4320:
 10307  070F                     l3009:
 10308                           
 10309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10310  070F  1683               	bsf	3,5	;RP0=1, select bank1
 10311  0710  1303               	bcf	3,6	;RP1=0, select bank1
 10312  0711  0853               	movf	sprintf@sp^(0+128),w
 10313  0712  0084               	movwf	4
 10314  0713  1383               	bcf	3,7	;select IRP bank0
 10315  0714  0180               	clrf	0
 10316  0715                     l391:
 10317  0715  0008               	return
 10318  0716                     __end_of_sprintf:

Data Sizes:
    Strings     52
    Constant    118
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     80      80
    BANK1            80     28      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> Lcdvar(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    USART_WriteStr@a	PTR unsigned char  size(2) Largest target is 20
		 -> Lcdvar(BANK1[20]), STR_1(CODE[19]), 

    LCD_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), Lcdvar(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Set_Cursor
    _main->___awtoft
    _sprintf->___awdiv
    _sprintf->___ftge
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->___wmul
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___ftmul->___awdiv
    ___ftmul->___awtoft
    ___ftmul->___lwmod
    ___bmul->___awdiv
    ___bmul->___lwmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    ___awtoft->___ftpack
    _USART_WriteStr->_USART_Write
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___awtoft->___ftpack

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   40222
                                             25 BANK1      3     3      0
                       _Init_Receive
                         _Init_Trans
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                       _Set_BaudRate
                              _Setup
                        _USART_Write
                     _USART_WriteStr
                           ___awtoft
                            ___ftmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    36      9   33235
                                             65 BANK0     15     6      9
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    6946
                                             30 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              4 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1042
                                              9 COMMON     1     1      0
                                              2 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    5731
                                             30 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              0 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3969
                                             14 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             10 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              4 COMMON     6     0      6
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              4 COMMON     6     0      6
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2069
                                              9 COMMON     1     1      0
                                              3 BANK0      5     1      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     583
                                              8 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     480
                                              4 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             39 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3172
                                             59 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2999
                                             46 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              4 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              4 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2144
                                              9 COMMON     1     1      0
                                              3 BANK0      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1947
                                              4 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_WriteStr                                       4     2      2     218
                                              5 COMMON     4     2      2
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
                         _ADC_CONFIG
 ---------------------------------------------------------------------------------
 (2) _ADC_CONFIG                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Set_BaudRate                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     240
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0      44
                                              5 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     284
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      66
                                              8 COMMON     2     2      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      44
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      44
                                              5 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Trans                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Receive
   _Init_Trans
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Init
     _LCD_Cmd
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _Set_BaudRate
   _Setup
     _ADC_CONFIG
   _USART_Write
   _USART_WriteStr
     _USART_Write
   ___awtoft
     ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftpack (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1C      3A       7       72.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      94      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 11:39:45 2021

      __size_of_ADC_CONFIG 0014                          pc 0002             ___bmul@product 002C  
                       l71 0827                         l85 17E6               ___awdiv@sign 0027  
                       fsr 0004        ___wmul@multiplicand 0076               ___ftadd@exp1 005A  
             ___ftadd@exp2 0059               ___ftadd@sign 0058                        l102 1DB5  
                      l120 1D60                        l123 1DE7                        l117 111B  
                      l141 1FB9                        l126 1E0A                        l135 1E7A  
                      l129 1D93                        l321 0E0A                        l172 1D68  
                      l421 1DCC                        l166 07FF                        l175 1D7C  
                      l431 1295                        l184 1ECE                        l169 1DA1  
                      l601 1569                        l361 0322                        l178 1D86  
                      l354 02D0                        l620 1380                        l612 155C  
                      l604 1519                        l292 0A5C                        l605 152C  
                      l631 135A                        l391 0715                        l632 1364  
                      l624 133F                        l704 07FA                        l633 1380  
                      l641 169F                        l721 1E2F                        l715 1D7A  
                      l395 1E3C                        l299 0D17                        l644 15B5  
                      l732 0896                        l645 15BF                        l725 08B3  
                      l397 1E54                        l646 15C4                        l655 1635  
                      l591 11CC                        l680 143D                        l681 13AF  
                      l578 12FE                        l691 1430                        l684 1400  
                      l597 1EA3                        l837 1FFF                        l766 1171  
                      l774 1F01                        l847 1F73                        l857 10CC  
                      l698 1F39                        _RE0 0048                        _RE1 0049  
                      _ISR 11CD                        fsr0 0004                        indf 0000  
             ___awmod@sign 0021     __end_of_USART_WriteStr 1ECF            __end_of_LCD_Cmd 1E0B  
                     ?_ISR 0070             _LCD_Set_Cursor 1E55                       l2101 12C7  
                     l2031 1304                       l2111 12EA                       l2103 12CB  
                     l2041 1327                       l2033 130B                       l2201 1614  
                     l2105 12DC                       l2113 12F0                       l2121 1172  
                     l3001 06DA                       l2051 1354                       l2043 132D  
                     l2211 1649                       l2203 161A                       l2115 12F5  
                     l2107 12E2                       l2131 1184                       l2123 1175  
                     l2061 1D5C                       l3021 1E5D                       l2053 135E  
                     l2045 1337                       l2037 1312                       l2029 12FF  
                     l2221 1672                       l2213 164D                       l2205 1623  
                     l2301 1FFB                       l2117 12FA                       l2109 12E3  
                     l2141 119D                       l2133 1189                       l2125 1179  
                     l3005 06E8                       l3101 17A9                       l3023 1E62  
                     l3031 1F74                       l2055 1366                       l2047 1346  
                     l2039 1320                       l2223 1682                       l2215 165D  
                     l2207 162F                       l2071 1DC4                       l2063 1DB9  
                     l2231 0729                       l2311 1F4A                       l2143 11A1  
                     l2135 118F                       l2151 11BE                       l2127 117E  
                     l3007 06F8                       l3111 17D0                       l3103 17AE  
                     l3025 1E69                       l3033 1F79                       l2057 137A  
                     l2049 1350                       l3041 1E7C                       l2225 1684  
                     l2217 165E                       l2209 1639                       l2161 1589  
                     l2073 1DCB                       l2065 1DBA                       l2241 0748  
                     l2321 1F69                       l2313 1F4E                       l2305 1F3A  
                     l2081 129D                       l2153 11C3                       l2145 11AB  
                     l2137 1192                       l2129 1180                       l2401 0B32  
                     l3009 070F                       l3113 17D6                       l3121 17EE  
                     l3105 17B6                       l3027 1E6F                       l3019 1E58  
                     l3035 1F95                       l2331 1DB0                       l2059 137F  
                     l3043 1E82                       l2219 166E                       l2171 15A5  
                     l2163 158F                       l2067 1DBE                       l2251 0783  
                     l2243 0775                       l2235 0730                       l2315 1F52  
                     l2307 1F40                       l2323 1F6F                       l2091 12B1  
                     l2083 12A2                       l2155 11C8                       l2147 11B1  
                     l2139 1199                       l2411 0BC6                       l3115 17DC  
                     l3107 17BF                       l2341 1DE9                       l3029 1E74  
                     l3037 1F9D                       l2333 1DB1                       l3045 1E87  
                     l2181 15C3                       l2173 15AB                       l2165 1599  
                     l2069 1DC2                       l2261 07AB                       l2253 0787  
                     l2245 0776                       l2237 0741                       l2229 0716  
                     l2317 1F5C                       l2309 1F43                       l2093 12B3  
                     l2085 12A4                       l2077 1296                       l2149 11B8  
                     l2405 0B9E                       l3117 17E2                       l3109 17C7  
                     l2351 1E01                       l2343 1DEC                       l2335 1DB2  
                     l2327 1DA2                       l3047 1E89                       l3039 1E7B  
                     l2191 15E8                       l2183 15C5                       l2175 15B6  
                     l2159 156A                       l2511 14BD                       l2503 147A  
                     l2271 07D1                       l2263 07B1                       l2255 078B  
                     l2247 0777                       l2319 1F62                       l2431 10C3  
                     l2095 12B9                       l2087 12A8                       l2079 1299  
                     l2423 0CF7                       l3119 17EC                       l2345 1DF2  
                     l2361 1DDF                       l2353 1DCE                       l2329 1DAA  
                     l2337 1D7C                       l2601 1D71                       l2193 15F1  
                     l2185 15CB                       l2177 15BA                       l2169 15A0  
                     l2521 1526                       l2513 14C1                       l2505 14AE  
                     l2441 1394                       l2273 07D9                       l2265 07B5  
                     l2257 079B                       l2249 077D                       l2281 1FBE  
                     l2433 10C9                       l2097 12BC                       l2089 12AD  
                     l2417 0C84                       l2409 0BBF                       l3153 0E26  
                     l3081 16C5                       l3073 16A0                       l2347 1DF5  
                     l2363 1DE2                       l2355 1DD1                       l2339 1D82  
                     l2603 1D78                       l2195 15FD                       l2187 15D8  
                     l2179 15BE                       l2611 1E14                       l2523 1530  
                     l2531 154A                       l2515 14CA                       l2507 14B6  
                     l2451 13B0                       l2275 07DF                       l2267 07B9  
                     l2259 07A3                       l2291 1FD6                       l2283 1FC4  
                     l2435 10CB                       l2427 10BC                       l2099 12C3  
                     l2419 0C8B                       l3091 174D                       l3083 16C8  
                     l3075 16B4                       l2349 1DFE                       l2701 10D1  
                     l2357 1DD7                       l2605 1D7A                       l2189 15E2  
                     l2197 1604                       l2613 1E16                       l2517 14F6  
                     l2509 14B8                       l2461 13D9                       l2453 13B6  
                     l2445 139D                       l2269 07C9                       l2293 1FE7  
                     l2285 1FC7                       l2365 08B7                       l2429 10BD  
                     l3093 1753                       l3085 1703                       l3077 16B9  
                     l2711 1D87                       l2703 10D7                       l2359 1DDA  
                     l2199 160A                       l2631 0864                       l2623 0844  
                     l2551 1E4A                       l2543 1E30                       l2519 1518  
                     l2471 1404                       l2463 13E7                       l2455 13C5  
                     l2439 1381                       l2295 1FED                       l2287 1FCE  
                     l2279 1FBA                       l2383 0A29                       l2367 08BD  
                     l2375 099A                       l2391 0A66                       l3095 1794  
                     l3087 173E                       l3079 16BE                       l2705 10E0  
                     l2713 07FB                       l2721 1EA6                       l2609 1E0B  
                     l2641 0872                       l2633 0866                       l2625 0856  
                     l2617 0828                       l2561 1243                       l2553 1E50  
                     l2545 1E32                       l2537 1551                       l2529 1538  
                     l2465 13F1                       l2457 13C7                       l2297 1FEE  
                     l2289 1FD2                       l2377 09A0                       l2369 0980  
                     l2393 0A6D                       l2801 0F09                       l3097 179D  
                     l3089 1747                       l2715 1D94                       l2707 10EF  
                     l2723 1EB7                       l2651 089B                       l2635 086A  
                     l2643 0884                       l2627 0857                       l2619 083B  
                     l2571 127D                       l2563 1250                       l2547 1E36  
                     l2539 1561                       l2491 143E                       l2467 13F2  
                     l2459 13D0                       l2299 1FF5                       l2379 0A0F  
                     l2387 0A60                       l2811 0F7A                       l2803 0F0D  
                     l2731 0D2C                       l3099 17A3                       l2717 1D61  
                     l2709 10F5                       l2725 1EBB                       l2581 1F02  
                     l2653 08A0                       l2629 085D                       l2573 127E  
                     l2565 1254                       l2557 122E                       l2661 1126  
                     l2549 1E43                       l2493 1458                       l2485 1425  
                     l2477 140C                       l2469 13FA                       l2389 0A64  
                     l2901 0333                       l2821 0FEA                       l2813 0F83  
                     l2805 0F13                       l2741 0D5A                       l2733 0D39  
                     l2719 1EA4                       l2591 1F26                       l2583 1F06  
                     l2655 08AB                       l2575 1287                       l2567 125D  
                     l2559 1240                       l2671 115A                       l2663 1129  
                     l2487 1435                       l2479 141E                       l2399 0B2B  
                     l2911 03B0                       l2903 0338                       l2831 006A  
                     l2823 001C                       l2815 0F9A                       l2807 0F2C  
                     l2751 0DAE                       l2743 0D6F                       l2735 0D40  
                     l2727 0D1B                       l2593 1F28                       l2585 1F13  
                     l2649 088B                       l2569 126F                       l2577 128D  
                     l2673 1163                       l2665 1136                       l2681 1ED6  
                     l2497 1461                       l2921 04C1                       l2913 040B  
                     l2905 0345                       l2841 00AE                       l2833 0073  
                     l2825 0025                       l2809 0F65                       l2817 0FA2  
                     l2761 0DEC                       l2753 0DB1                       l2745 0D8A  
                     l2737 0D44                       l2729 0D26                       l2691 0804  
                     l2595 1F36                       l2587 1F17                       l2667 113A  
                     l2675 1169                       l2659 111C                       l2683 1EE3  
                     l2931 04FC                       l2923 04CE                       l2915 044A  
                     l2907 034B                       l2835 007B                       l2827 0044  
                     l2843 00B5                       l2819 0FB1                       l2771 0E0E  
                     l2763 0DF2                       l2755 0DB7                       l2747 0D90  
                     l2739 0D56                       l2693 0805                       l2597 1F38  
                     l2589 1F24                       l2669 114C                       l2685 1EE9  
                     l2941 051D                       l2933 0504                       l2925 04D4  
                     l2917 045E                       l2909 0363                       l2861 01B8  
                     l2853 0134                       l2845 0130                       l2829 0053  
                     l2781 0E5F                       l2773 0E34                       l2757 0DBC  
                     l2765 0E04                       l2749 0DA0                       l2695 081E  
                     l2679 1ECF                       l2951 052D                       l2943 0525  
                     l2935 0508                       l2927 04DA                       l2919 04B9  
                     l2863 01BE                       l2847 0132                       l2839 0093  
                     l2791 0E99                       l2783 0E67                       l2775 0E4A  
                     l2767 0E08                       l2759 0DD1                       l2697 0823  
                     l2689 0800                       l2961 0598                       l2945 052B  
                     l2937 050C                       l2881 0222                       l2865 01D0  
                     l2873 01ED                       l2857 017B                       l2793 0EA0  
                     l2785 0E7C                       l2777 0E50                       l2929 04E1  
                     l2699 10CD                       l2971 05DE                       l2963 05AB  
                     l2955 0574                       l2939 0517                       l2891 02ED  
                     l2883 027D                       l2875 01FC                       l2867 01D9  
                     l2859 0189                       l2795 0ECD                       l2787 0E91  
                     l2779 0E54                       l2981 0612                       l2973 05E4  
                     l2965 05BC                       l2957 0582                       l2893 02F3  
                     l2885 02BC                       l2877 0210                       l2869 01E6  
                     l2797 0ED3                       l2789 0E95                       l2991 0643  
                     l2983 0626                       l2975 05FA                       l2967 05C4  
                     l2959 058D                       l2895 0300                       l2887 02DA  
                     l2879 021B                       l2799 0EE6                       l2993 064F  
                     l2985 062A                       l2977 0603                       l2969 05D6  
                     l2897 030F                       l2889 02E7                       l2995 0661  
                     l2987 0630                       l2979 0607                       l2899 0318  
                     l2997 066C                       l2989 063D                       l2999 0673  
                     STR_1 1086                       STR_2 1099                       STR_3 10AA  
                     u3000 1FE7                       u3001 1FE6                       u2300 1345  
                     u3020 1FFB                       u3100 08BD                       u2301 1344  
                     u3021 1FFA                       u3005 1FE3                       u3101 08BC  
                     u3030 1F40                       u3110 09A0                       u3015 1FEF  
                     u3031 1F3F                       u3111 099F                       u2320 1354  
                     u3200 13AE                       u2400 12A8                       u3120 0A64  
                     u4000 0189                       u2321 1353                       u3201 13AD  
                     u2401 12A7                       u3121 0A63                       u4001 0188  
                     u2330 135A                       u2250 1304                       u3050 1F52  
                     u2410 12B9                       u3130 0A6D                       u4010 01B8  
                     u2331 1359                       u2315 1349                       u2251 1303  
                     u3051 1F51                       u2411 12B8                       u3131 0A6C  
                     u4011 01B7                       u2340 135E                       u2260 130B  
                     u3220 13E7                       u3060 1F5C                       u2500 1184  
                     u3140 0B32                       u4020 01D0                       u2341 135D  
                     u2261 130A                       u3221 13E6                       u3061 1F5B  
                     u3045 1F44                       u2501 1183                       u3141 0B31  
                     u4021 01CF                       u2350 1371                       u3310 1435  
                     u2430 12CB                       u2510 118F                       u3150 0BC6  
                     u4030 01FC                       u3311 1434                       u3215 13D2  
                     u2431 12CA                       u2511 118E                       u3151 0BC5  
                     u4031 01FB                       u2360 137F                       u2280 1326  
                     u2600 1599                       u3400 1549                       u3320 1458  
                     u3240 1400                       u3080 1F6F                       u3160 0C8B  
                     u4200 058D                       u4120 04C0                       u4040 0210  
                     u2361 137E                       u2281 1325                       u2601 1598  
                     u3401 1548                       u3321 1457                       u3305 1427  
                     u3241 13FF                       u3225 13E3                       u3081 1F6E  
                     u3065 1F58                       u2425 12BD                       u3161 0C8A  
                     u4201 058C                       u4121 04BF                       u4105 03B5  
                     u4041 020F                       u3090 1D82                       u2610 15A5  
                     u3410 1550                       u3330 1479                       u3250 1404  
                     u2370 1DBE                       u3170 10C3                       u2450 12DC  
                     u2530 11A1                       u4210 05AB                       u4130 04E0  
                     u3091 1D81                       u2355 136D                       u2275 1319  
                     u2611 15A4                       u3411 154F                       u3331 1478  
                     u3251 1403                       u3235 13F3                       u2371 1DBD  
                     u3075 1F63                       u3171 10C2                       u2451 12DB  
                     u2531 11A0                       u4211 05AA                       u4131 04DF  
                     u4115 0463                       u4035 01F8                       u2620 15AB  
                     u3500 1254                       u3260 140B                       u2380 1DCB  
                     u3180 10C9                       u2540 11AB                       u4220 05C4  
                     u4140 0508                       u4060 02D9                       u2621 15AA  
                     u3501 1253                       u3261 140A                       u2381 1DCA  
                     u3181 10C8                       u2445 12CC                       u2541 11AA  
                     u2525 1193                       u4221 05C3                       u4205 0589  
                     u4141 0507                       u4061 02D8                       u2710 1603  
                     u2630 15B5                       u3430 1561                       u3350 14F6  
                     u3190 1394                       u2470 12F0                       u2390 129D  
                     u4310 06F8                       u4230 05D6                       u4150 051D  
                     u4070 0300                       u2295 1338                       u2711 1602  
                     u2631 15B4                       u3431 1560                       u3351 14F5  
                     u3191 1393                       u2471 12EF                       u2455 12D8  
                     u2391 129C                       u4311 06F7                       u4231 05D5  
                     u4215 05A7                       u4151 051C                       u4071 02FF  
                     u4055 0227                       u2720 160A                       u2640 15BE  
                     u3600 083B                       u3520 126F                       u3440 1E36  
                     u3360 152C                       u3280 141D                       u2480 12F5  
                     u2560 11BE                       u4320 070F                       u4240 05E4  
                     u4160 0525                       u4080 030F                       u2801 1667  
                     u2721 1609                       u2705 15F2                       u2641 15BD  
                     u3601 083A                       u3521 126E                       u3441 1E35  
                     u3425 1553                       u3361 152B                       u3345 14C3  
                     u3281 141C                       u2481 12F4                       u2465 12E4  
                     u2561 11BD                       u2545 11A7                       u4321 070C  
                     u4305 0684                       u4241 05E3                       u4161 0524  
                     u4081 030E                       u4330 1E5D                       u2810 1672  
                     u2802 166E                       u2650 15C3                       u3610 084F  
                     u3370 1530                       u3290 1424                       u2570 11C3  
                     u2490 1179                       u4250 05FA                       u4090 0338  
                     u4331 1E5C                       u2811 1671                       u2651 15C2  
                     u3515 1256                       u3371 152F                       u3355 14F2  
                     u3291 1423                       u3275 140D                       u2571 11C2  
                     u2555 11B2                       u2491 1178                       u4251 05F9  
                     u4091 0337                       u4075 02FC                       u4340 1E6F  
                     u2740 161A                       u2660 15D8                       u2580 1589  
                     u3620 086A                       u3540 128D                       u3700 1126  
                     u3380 1537                       u2900 07B1                       u2820 0729  
                     u4260 0612                       u4180 0573                       u4341 1E6E  
                     u2741 1619                       u2661 15D7                       u2581 1588  
                     u3621 0869                       u3541 128C                       u3525 126B  
                     u3701 1125                       u3381 1536                       u2901 07B0  
                     u2821 0728                       u4261 0611                       u4181 0572  
                     u4085 030B                       u4350 1F83                       u3550 1F06  
                     u2750 1622                       u2590 158F                       u3630 0871  
                     u3470 1E50                       u2910 07B9                       u2830 0741  
                     u4270 0630                       u4190 0582                       u3551 1F05  
                     u2751 1621                       u2735 160B                       u2591 158E  
                     u3631 0870                       u3615 084B                       u3535 127F  
                     u3471 1E4F                       u3455 1E3D                       u2911 07B8  
                     u2831 0740                       u4271 062F                       u4255 05F6  
                     u4191 0581                       u4175 0532                       u4360 1FA7  
                     u3560 1F17                       u2680 15E8                       u3480 1240  
                     u3720 113A                       u2840 0758                       u4280 064F  
                     u3800 0D56                       u3561 1F16                       u2681 15E7  
                     u3481 123F                       u3721 1139                       u3465 1E44  
                     u2921 07C2                       u4281 064E                       u4265 060E  
                     u4185 056F                       u3801 0D55                       u4370 1FB9  
                     u3570 1F36                       u2770 1635                       u2690 15F0  
                     u3650 0883                       u3730 114C                       u2922 07C9  
                     u2850 076A                       u4290 0661                       u3810 0DA0  
                     u4450 17D6                       u4507 1DDC                       u4371 1FB8  
                     u3571 1F35                       u2771 1634                       u2691 15EF  
                     u2675 15D9                       u3651 0882                       u3731 114B  
                     u3715 112B                       u3395 1539                       u4291 0660  
                     u3811 0D9F                       u4451 17D5                       u4380 1E82  
                     u3580 1D78                       u2780 1639                       u3660 088A  
                     u2860 078B                       u3900 0F7A                       u3820 0DAE  
                     u4460 17E2                       u4517 1DE4                       u4381 1E81  
                     u3581 1D77                       u2781 1638                       u2765 1624  
                     u3661 0889                       u3645 0873                       u2861 078A  
                     u2845 0754                       u3901 0F79                       u3821 0DAD  
                     u4461 17E1                       u2790 164D                       u3590 1E14  
                     u3750 1169                       u2950 07DF                       u3910 0F9A  
                     u3830 0E03                       u4470 17EC                       u4527 10DB  
                     u3575 1F32                       u2791 164C                       u3591 1E13  
                     u3495 1245                       u3751 1168                       u3735 1148  
                     u2951 07DE                       u2935 07CA                       u2871 0794  
                     u2855 0766                       u3911 0F99                       u3831 0E02  
                     u4471 17EB                       u3680 089B                       u2872 079B  
                     u2960 1FC4                       u3920 0FB1                       u3840 0E4A  
                     u4537 10EA                       u3681 089A                       u3745 115B  
                     u2945 07D2                       u2961 1FC3                       u3921 0FB0  
                     u3841 0E47                       u3690 08A0                       u3770 1EE9  
                     u3930 001C                       u3850 0E50                       u4547 10F9  
                     u3691 089F                       u3675 088D                       u3771 1EE8  
                     u3931 0FFA                       u3851 0E4F                       u3780 1ECE  
                     u2980 1FD6                       u3940 0025                       u3860 0E7C  
                     _RCIF 0065                       u4557 1DF9                       u3781 1ECD  
                     u3765 1ED7                       u2885 079C                       u2981 1FD5  
                     u3941 0024                       u3925 0FAD                       u3861 0E7B  
                     u3950 0044                       u3870 0EA0                       u3790 0D2C  
                     u4567 1E05                       u2895 07A4                       u2975 1FC8  
                     u3951 0043                       u3935 0FF5                       u3871 0E9F  
                     u3791 0D2B                       u4487 16C2                       u3960 0053  
                     u3880 0EB6                       u3961 0052                       u4497 17F6  
                     u3970 006A                       u3890 0F0D                       u2995 1FD7  
                     u3971 0069                       u3891 0F0C                       i1l76 11FC  
                     u3965 004F                       u3885 0EB1                       i1l78 1227  
                     u3990 017A                       u3991 0179                       u3985 0139  
                     u3995 0176                       _TRMT 04C1                       _Vol1 00A3  
                     _Vol2 00A0          ?_LCD_Write_String 0077                       _main 16A0  
             ___ftpack@arg 0074         __size_of_LCD_Clear 000D               ___ftpack@exp 0077  
                     btemp 007E                       start 000C         ??_LCD_Write_String 0020  
             _sprintf$1127 00BE          ___bmul@multiplier 002D               ___ftmul@cntr 003C  
             ___ftmul@sign 003D              ?_Init_Receive 0070                      ??_ISR 0070  
             ___fttol@exp1 0054               ___fttol@lval 0050           __end_of_LCD_Init 111C  
         __end_of_LCD_Port 1D61                      ?_main 0070            __end_of___awdiv 12FF  
          __end_of___ftadd 16A0            __end_of___awmod 11CD            __end_of___ftneg 1D7B  
                    _ANSEL 0188            __end_of___lldiv 1296            __end_of___ftmul 07FB  
          ___awdiv@divisor 0022            __end_of___llmod 1172            __end_of___ftsub 1E30  
          __end_of___fttol 08B4            __end_of___lwdiv 2000            __end_of___lwmod 1F74  
          ___awdiv@counter 0026                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
             ___lltoft@exp 0027     __end_of_LCD_Set_Cursor 1E7B                      _Setup 0800  
            ___awtoft@sign 0079            __end_of_dpowers 1086            ?_USART_WriteStr 0075  
                    _scale 0A5D            __end_of_isdigit 10CD              ___ftpack@sign 0078  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 0716               USART_Write@a 0074             _LCD_Write_Char 1DCD  
          __initialization 000F             ??_Init_Receive 0074                 _Init_Trans 1D94  
             __end_of_main 1800                     ??_main 00D7              ___fttol@sign1 004F  
        __end_of_LCD_Clear 1D94                  ??_LCD_Cmd 0075       __size_of__tdiv_to_l_ 00BD  
             ??_ADC_CONFIG 0074            ?_LCD_Set_Cursor 0078                     ?_Setup 0070  
                   _ADCON1 009F           ___llmod@dividend 002C                     ?_scale 003E  
                   _ADRESH 001E           ___awdiv@dividend 0024           __end_of___awtoft 1EA4  
         __end_of___ftpack 1381                     _ANSELH 0189           __end_of___lltoft 1F02  
                   i1l3051 11CD                     i1l3061 11FB                     i1l3053 11E7  
                   i1l3071 1226                     i1l3063 1214                     i1l3055 11ED  
                   i1l3065 121A                     i1l3057 11F3                     i1l3067 121E  
                   i1l3059 11F8                     i1l3069 1223                     u440_20 11E0  
                   u440_21 11DE                     u440_22 11E1                     u441_20 11E7  
                   u441_21 11E6                     u442_20 1201                     u442_21 11FF  
                   u442_22 1202                     u443_20 120D                     u443_21 120B  
                   u443_22 120E                     u444_20 1214                     u444_21 1213  
                   u439_20 11D4                     u439_21 11D2                     u439_22 11D5  
                   u457_27 11F5                     u458_27 1220     __end_of_LCD_Write_Char 1DE8  
                   _Lcdvar 00AA           __end_of__powers_ 1037                     ___bmul 1DB6  
                   ___ftge 1F02                     _adcvar 00A9         __end_of_ADC_CONFIG 1DB6  
                   ___wmul 1E30                  ??___awdiv 0079                  ??___ftadd 0054  
                ??___awmod 0078                  ??___ftneg 0077                  ??___lldiv 0074  
                ??___ftmul 0034                  ??___llmod 0030                  ??___ftsub 007A  
                ??___fttol 004B                  ??___lwdiv 0024                  ??___lwmod 0078  
                   _fround 08B4           ___awdiv@quotient 0028            ___awmod@divisor 0074  
          ___awmod@counter 0020              ?_Set_BaudRate 0070      ___ftmul@f3_as_product 0039  
                ??_isdigit 0074                     saved_w 007E                  ??_sprintf 006A  
          LCD_Set_Cursor@a 0021            LCD_Set_Cursor@x 0020            LCD_Set_Cursor@y 0078  
  __end_of__initialization 0018                  ?_LCD_Init 0070                  ?_LCD_Port 0070  
               ___ftadd@f1 004E                 ___ftadd@f2 0051                 ___ftge@ff1 0074  
               ___ftge@ff2 0077            ?_LCD_Write_Char 0070                 ___ftneg@f1 0074  
               ___awtoft@c 0023               ?_USART_Write 0070        ___bmul@multiplicand 002A  
               ___ftmul@f1 002E                 ___ftmul@f2 0031                 ___ftsub@f1 005E  
               ___ftsub@f2 005B                 ___fttol@f1 0047             __pcstackCOMMON 0070  
              ?_Init_Trans 0070              __end_of_Setup 0828                  LCD_Port@a 0074  
               ___lltoft@c 0023              __end_of_scale 0D18             ??_Set_BaudRate 0074  
               __div_to_l_ 143E                    ??_Setup 0074       __end_of_Init_Receive 1D69  
          __div_to_l_@exp1 002D            __div_to_l_@cntr 002C                    ??_scale 0041  
          __div_to_l_@quot 0028               sprintf@width 00C4                 __pbssBANK1 00A0  
               ??_LCD_Init 0078                 ??_LCD_Port 0074              __div_to_l_@f1 0074  
            __div_to_l_@f2 0077                 __pmaintext 16A0                    ?___bmul 002A  
                  ?___ftge 0074                    ?___wmul 0074                 __pintentry 0004  
                  ?_fround 003E  __size_of_LCD_Write_String 0046                  ?___awtoft 0023  
                ?___ftpack 0074                  ?___lltoft 0023           ??_USART_WriteStr 0077  
                  _LCD_Cmd 1DE8        __size_of_Init_Trans 000E                 __stringtab 1000  
        __end_of__npowers_ 105E                 _scale$1126 0043            __size_of___bmul 0017  
          __size_of___ftge 0038                    ___awdiv 1296                    ___ftadd 156A  
                  ___awmod 1172                    ___ftneg 1D71                    ___lldiv 122E  
          __size_of___wmul 0025                    ___ftmul 0716                    ___llmod 111C  
                  ___ftsub 1E0B                    ___fttol 0828                    ___lwdiv 1FBA  
                  ___lwmod 1F3A                    _adcvar1 00A8                 ??___awtoft 0026  
               ??___ftpack 0020            __size_of_fround 01A9                 ??___lltoft 0079  
         ??_LCD_Set_Cursor 0079                    __ptext1 0D18                    __ptext2 0A5D  
                  __ptext3 1172                    __ptext4 1296                    __ptext5 10BB  
                  __ptext6 08B4                    __ptext7 1F3A                    __ptext8 1FBA  
                  __ptext9 0716               __size_of_ISR 0061                ?__div_to_l_ 0074  
                  _dpowers 105E                    _isdigit 10BB                    _receive 00A7  
         ___awmod@dividend 0076                  _LCD_Clear 1D87                    _sprintf 0D18  
                  clrloop0 1D6A       end_of_initialization 0018       __end_of_Set_BaudRate 0800  
          ___lldiv@divisor 0020            ___lldiv@counter 0079                  _RCSTAbits 0018  
                  psplit$0 A0032       __size_of_USART_Write 000C             __tdiv_to_l_@f1 0074  
           __tdiv_to_l_@f2 0077              ??__tdiv_to_l_ 0020      __size_of_Init_Receive 0008  
                _TRISCbits 0087                 ?_LCD_Clear 0070          LCD_Write_String@a 0077  
        LCD_Write_String@i 0023           ??_LCD_Write_Char 0075                  _TXSTAbits 0098  
        __size_of_LCD_Init 004F        __size_of__div_to_l_ 012C          __size_of_LCD_Port 0006  
              ___ftmul@exp 0038               ??_Init_Trans 0074               _Init_Receive 1D61  
           __end_of___bmul 1DCD             __end_of___ftge 1F3A             __end_of___wmul 1E55  
         _LCD_Write_String 1F74          pnum$text1_split_1 0032             __end_of_fround 0A5D  
      start_initialization 000F                __end_of_ISR 122E        __end_of__tdiv_to_l_ 143E  
       __end_of_Init_Trans 1DA2            ___llmod@divisor 0028            ___llmod@counter 0031  
                 ??___bmul 002B                   ??___ftge 007A                   ??___wmul 0078  
          LCD_Write_Char@a 0076                   ??_fround 0041              sprintf@tmpval 00C6  
               fround@prec 004D                   ?_LCD_Cmd 0070          __size_of___awtoft 0029  
        __size_of___ftpack 0082          __size_of___lltoft 0033                   LCD_Cmd@a 0077  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00BE  
              ??_LCD_Clear 0078      __size_of_Set_BaudRate 0005                sprintf@flag 00C2  
              sprintf@eexp 00CE                sprintf@fval 00D0                sprintf@prec 00D4  
         ___lwdiv@dividend 0022                   ?___awdiv 0022                   ?___ftadd 004E  
                 ?___awmod 0074                   ?___ftneg 0074                   ?___lldiv 0020  
                 ?___ftmul 002E                   ?___llmod 0028                   ?___ftsub 005B  
                __npowers_ 1037                   ?___fttol 0047                   ?___lwdiv 0020  
                 ?___lwmod 0074                  __pstrings 1000                __tdiv_to_l_ 1381  
             ??__div_to_l_ 0020               _Set_BaudRate 07FB                   ?_isdigit 0070  
           __size_of_Setup 0028           ___lwdiv@quotient 0025                   ?_sprintf 0061  
           __size_of_scale 02BB          interrupt_function 0004                   _LCD_Init 10CD  
           ___wmul@product 0078                   _LCD_Port 1D5B                  clear_ram0 1D69  
                 _PIE1bits 008C                   _PIR1bits 000C         __end_of__div_to_l_ 156A  
               _ADCON0bits 001F                __stringbase 100F          ___wmul@multiplier 0074  
         __size_of_LCD_Cmd 0023                 _ADC_CONFIG 1DA2   __end_of_LCD_Write_String 1FBA  
  __size_of_USART_WriteStr 002B              ??_USART_Write 0074           __size_of___awdiv 0069  
         __size_of___ftadd 0136           __size_of___awmod 005B           __size_of___ftneg 000A  
         __size_of___lldiv 0068           __size_of___ftmul 00E5           __size_of___llmod 0056  
         __size_of___ftsub 0025           __size_of___fttol 008C           __size_of___lwdiv 0046  
         __size_of___lwmod 003A                   ___awtoft 1E7B                   ___ftpack 12FF  
              _fround$1124 004A                _fround$1125 0047         __end_of__stringtab 1010  
                 ___lltoft 1ECF                _isdigit$933 0074                 sprintf@val 00CA  
         __size_of_isdigit 0012            ___lwdiv@divisor 0020            ___lwdiv@counter 0027  
                 __ptext10 1DB6                   __ptext11 1381                   __ptext20 1D71  
                 __ptext12 143E                   __ptext21 1F02                   __ptext13 1E30  
                 __ptext30 1DCD                   __ptext22 1E7B                   __ptext14 1ECF  
                 __ptext31 1E55                   __ptext23 12FF                   __ptext15 111C  
                 __ptext32 10CD                   __ptext24 1EA4                   __ptext16 122E  
                 __ptext33 1D87                   __ptext25 1D7B                   __ptext17 0828  
                 __ptext34 1DE8                   __ptext26 0800                   __ptext18 1E0B  
                 __ptext35 1D5B                   __ptext27 1DA2                   __ptext19 156A  
                 __ptext36 1D94                   __ptext28 07FB                   __ptext37 1D61  
                 __ptext29 1F74                   __ptext38 11CD                   __powers_ 1010  
  __size_of_LCD_Set_Cursor 0026                   _contador 00A6           __size_of_sprintf F9FE  
            __size_of_main 0160                  pnum$text1 000A        __end_of_USART_Write 1D87  
               _INTCONbits 000B                ?_ADC_CONFIG 0070                   isdigit@c 0075  
                 scale@scl 0046                   intlevel1 0000                  sprintf@ap 00C1  
         __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028                  sprintf@sp 00D3  
         __tdiv_to_l_@quot 0024           ___lwmod@dividend 0076           ___lldiv@dividend 0024  
                stringcode 100A    __size_of_LCD_Write_Char 001B               ?__tdiv_to_l_ 0074  
                 sprintf@c 00D6                   sprintf@f 0061           ___lldiv@quotient 0075  
          ___lwmod@divisor 0074            ___lwmod@counter 0079                   stringdir 100A  
                 stringtab 1000             _USART_WriteStr 1EA4            USART_WriteStr@a 0075  
          USART_WriteStr@i 0078                _USART_Write 1D7B  
