

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 21:31:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  001A                     _RCREG	set	26
   453  000C                     _PIR1bits	set	12
   454  0005                     _PORTA	set	5
   455  000B                     _INTCONbits	set	11
   456  0018                     _RCSTAbits	set	24
   457  0013                     _SSPBUF	set	19
   458  0014                     _SSPCON	set	20
   459  008F                     _OSCCONbits	set	143
   460  0085                     _TRISA	set	133
   461  008C                     _PIE1bits	set	140
   462  0099                     _SPBRG	set	153
   463  0098                     _TXSTAbits	set	152
   464  0094                     _SSPSTAT	set	148
   465  0093                     _SSPADD	set	147
   466  0091                     _SSPCON2	set	145
   467  048C                     _ACKEN	set	1164
   468  048D                     _ACKDT	set	1165
   469  048B                     _RCEN	set	1163
   470  048A                     _PEN	set	1162
   471  0489                     _RSEN	set	1161
   472  0488                     _SEN	set	1160
   473  043C                     _TRISC4	set	1084
   474  043B                     _TRISC3	set	1083
   475  0188                     _ANSEL	set	392
   476  0187                     _BAUDCTLbits	set	391
   477                           
   478                           	psect	cinit
   479  000F                     start_initialization:	
   480                           ; #config settings
   481                           
   482  000F                     __initialization:
   483                           
   484                           ; Clear objects allocated to COMMON
   485  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   486                           
   487                           ; Clear objects allocated to BANK0
   488  0010  1283               	bcf	3,5	;RP0=0, select bank0
   489  0011  1303               	bcf	3,6	;RP1=0, select bank0
   490  0012  01BF               	clrf	__pbssBANK0& (0+127)
   491  0013  01C0               	clrf	(__pbssBANK0+1)& (0+127)
   492  0014  01C1               	clrf	(__pbssBANK0+2)& (0+127)
   493  0015  01C2               	clrf	(__pbssBANK0+3)& (0+127)
   494  0016  01C3               	clrf	(__pbssBANK0+4)& (0+127)
   495  0017  01C4               	clrf	(__pbssBANK0+5)& (0+127)
   496  0018                     end_of_initialization:	
   497                           ;End of C runtime variable initialization code
   498                           
   499  0018                     __end_of__initialization:
   500  0018  0183               	clrf	3
   501  0019  120A  118A  28B9   	ljmp	_main	;jump to C main() function
   502                           
   503                           	psect	bssCOMMON
   504  007A                     __pbssCOMMON:
   505  007A                     _Read_val:
   506  007A                     	ds	1
   507                           
   508                           	psect	bssBANK0
   509  003F                     __pbssBANK0:
   510  003F                     _accelerometer_val:
   511  003F                     	ds	6
   512                           
   513                           	psect	cstackCOMMON
   514  0070                     __pcstackCOMMON:
   515  0070                     ?_ADXL345_Init:
   516  0070                     ?_MAS_WAIT:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_MAS_START:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_MAS_STOP:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_Setup:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_ISR:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_ISR:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_main:	
   535                           ; 1 bytes @ 0x0
   536                           
   537                           
   538                           ; 1 bytes @ 0x0
   539  0070                     	ds	3
   540  0073                     ??_MAS_WAIT:
   541  0073                     ??_MAS_START:	
   542                           ; 1 bytes @ 0x3
   543                           
   544  0073                     ??_MAS_STOP:	
   545                           ; 1 bytes @ 0x3
   546                           
   547  0073                     ?_MAS_WRITE:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0073                     ??___lldiv:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     ??___aldiv:	
   554                           ; 1 bytes @ 0x3
   555                           
   556  0073                     ?_MAS_READ:	
   557                           ; 1 bytes @ 0x3
   558                           
   559  0073                     MAS_WRITE@d:	
   560                           ; 2 bytes @ 0x3
   561                           
   562  0073                     MAS_READ@a:	
   563                           ; 2 bytes @ 0x3
   564                           
   565                           
   566                           ; 2 bytes @ 0x3
   567  0073                     	ds	1
   568  0074                     ___aldiv@counter:
   569  0074                     ___lldiv@quotient:	
   570                           ; 1 bytes @ 0x4
   571                           
   572                           
   573                           ; 4 bytes @ 0x4
   574  0074                     	ds	1
   575  0075                     ??_MAS_WRITE:
   576  0075                     ??_MAS_READ:	
   577                           ; 1 bytes @ 0x5
   578                           
   579  0075                     ?_ADXL345_Write:	
   580                           ; 1 bytes @ 0x5
   581                           
   582  0075                     ___aldiv@sign:	
   583                           ; 1 bytes @ 0x5
   584                           
   585  0075                     ADXL345_Write@add:	
   586                           ; 1 bytes @ 0x5
   587                           
   588                           
   589                           ; 2 bytes @ 0x5
   590  0075                     	ds	1
   591  0076                     ___aldiv@quotient:
   592                           
   593                           ; 4 bytes @ 0x6
   594  0076                     	ds	1
   595  0077                     MAS_READ@temp:
   596  0077                     ADXL345_Write@data:	
   597                           ; 2 bytes @ 0x7
   598                           
   599                           
   600                           ; 2 bytes @ 0x7
   601  0077                     	ds	1
   602  0078                     ___lldiv@counter:
   603                           
   604                           ; 1 bytes @ 0x8
   605  0078                     	ds	1
   606  0079                     ??_ADXL345_Read:
   607  0079                     ??_ADXL345_Write:	
   608                           ; 1 bytes @ 0x9
   609                           
   610                           
   611                           ; 1 bytes @ 0x9
   612  0079                     	ds	1
   613  007A                     ??_Setup:
   614                           
   615                           	psect	cstackBANK0
   616  0020                     __pcstackBANK0:	
   617                           ; 1 bytes @ 0xA
   618                           
   619  0020                     ??_ADXL345_Init:
   620  0020                     ?_ADXL345_Read:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0020                     ?___lldiv:	
   624                           ; 2 bytes @ 0x0
   625                           
   626  0020                     ?___aldiv:	
   627                           ; 4 bytes @ 0x0
   628                           
   629  0020                     ADXL345_Read@add:	
   630                           ; 4 bytes @ 0x0
   631                           
   632  0020                     ___lldiv@divisor:	
   633                           ; 2 bytes @ 0x0
   634                           
   635  0020                     ___aldiv@divisor:	
   636                           ; 4 bytes @ 0x0
   637                           
   638                           
   639                           ; 4 bytes @ 0x0
   640  0020                     	ds	2
   641  0022                     ADXL345_Read@retval:
   642                           
   643                           ; 2 bytes @ 0x2
   644  0022                     	ds	2
   645  0024                     ___lldiv@dividend:
   646  0024                     ___aldiv@dividend:	
   647                           ; 4 bytes @ 0x4
   648                           
   649                           
   650                           ; 4 bytes @ 0x4
   651  0024                     	ds	4
   652  0028                     ?_MAS_INIT:
   653  0028                     ?_USART_Initialize:	
   654                           ; 1 bytes @ 0x8
   655                           
   656  0028                     MAS_INIT@c:	
   657                           ; 1 bytes @ 0x8
   658                           
   659  0028                     USART_Initialize@baudrate:	
   660                           ; 4 bytes @ 0x8
   661                           
   662                           
   663                           ; 4 bytes @ 0x8
   664  0028                     	ds	4
   665  002C                     ??_MAS_INIT:
   666  002C                     ??_USART_Initialize:	
   667                           ; 1 bytes @ 0xC
   668                           
   669                           
   670                           ; 1 bytes @ 0xC
   671  002C                     	ds	12
   672  0038                     USART_Initialize@x:
   673                           
   674                           ; 4 bytes @ 0x18
   675  0038                     	ds	4
   676  003C                     ??_main:
   677                           
   678                           ; 1 bytes @ 0x1C
   679  003C                     	ds	3
   680                           
   681                           	psect	maintext
   682  00B9                     __pmaintext:	
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   685 ;;
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 102 in file "PIC_MAIN.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0, pclath, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : B00/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0
   704 ;;      Temps:          0       3       0       0       0
   705 ;;      Totals:         0       3       0       0       0
   706 ;;Total ram usage:        3 bytes
   707 ;; Hardware stack levels required when called:    5
   708 ;; This function calls:
   709 ;;		_ADXL345_Init
   710 ;;		_ADXL345_Read
   711 ;;		_Setup
   712 ;; This function is called by:
   713 ;;		Startup code after reset
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _main
   719  00B9                     _main:
   720  00B9                     l1191:	
   721                           ;incstack = 0
   722                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   723                           
   724                           
   725                           ;PIC_MAIN.c: 103:     _delay((unsigned long)((500)*(4000000/4000.0)));
   726  00B9  3003               	movlw	3
   727  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   728  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   729  00BC  00BE               	movwf	??_main+2
   730  00BD  308A               	movlw	138
   731  00BE  00BD               	movwf	??_main+1
   732  00BF  3055               	movlw	85
   733  00C0  00BC               	movwf	??_main
   734  00C1                     u737:
   735  00C1  0BBC               	decfsz	??_main,f
   736  00C2  28C1               	goto	u737
   737  00C3  0BBD               	decfsz	??_main+1,f
   738  00C4  28C1               	goto	u737
   739  00C5  0BBE               	decfsz	??_main+2,f
   740  00C6  28C1               	goto	u737
   741  00C7                     l1193:
   742                           
   743                           ;PIC_MAIN.c: 105:     Setup();
   744  00C7  120A  118A  22BB  120A  118A  	fcall	_Setup
   745  00CC                     l1195:
   746                           
   747                           ;PIC_MAIN.c: 106:     ADXL345_Init();
   748  00CC  120A  118A  228A  120A  118A  	fcall	_ADXL345_Init
   749  00D1                     l1197:
   750                           
   751                           ;PIC_MAIN.c: 107:     OSCCONbits.IRCF = 0b111;
   752  00D1  3070               	movlw	112
   753  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   754  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   755  00D4  048F               	iorwf	15,f	;volatile
   756  00D5                     l1199:
   757                           
   758                           ;PIC_MAIN.c: 109:         accelerometer_val[0]=ADXL345_Read(0x32);
   759  00D5  3032               	movlw	50
   760  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   761  00D7  00A0               	movwf	ADXL345_Read@add
   762  00D8  3000               	movlw	0
   763  00D9  00A1               	movwf	ADXL345_Read@add+1
   764  00DA  120A  118A  220F  120A  118A  	fcall	_ADXL345_Read
   765  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   766  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   767  00E1  0820               	movf	?_ADXL345_Read,w
   768  00E2  00BC               	movwf	??_main
   769  00E3  083C               	movf	??_main,w
   770  00E4  00BF               	movwf	_accelerometer_val
   771  00E5                     l1201:
   772                           
   773                           ;PIC_MAIN.c: 110:         accelerometer_val[1]=ADXL345_Read(0x33);
   774  00E5  3033               	movlw	51
   775  00E6  00A0               	movwf	ADXL345_Read@add
   776  00E7  3000               	movlw	0
   777  00E8  00A1               	movwf	ADXL345_Read@add+1
   778  00E9  120A  118A  220F  120A  118A  	fcall	_ADXL345_Read
   779  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   780  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   781  00F0  0820               	movf	?_ADXL345_Read,w
   782  00F1  00BC               	movwf	??_main
   783  00F2  083C               	movf	??_main,w
   784  00F3  00C0               	movwf	_accelerometer_val+1
   785  00F4                     l1203:
   786                           
   787                           ;PIC_MAIN.c: 111:         accelerometer_val[2]=ADXL345_Read(0x34);
   788  00F4  3034               	movlw	52
   789  00F5  00A0               	movwf	ADXL345_Read@add
   790  00F6  3000               	movlw	0
   791  00F7  00A1               	movwf	ADXL345_Read@add+1
   792  00F8  120A  118A  220F  120A  118A  	fcall	_ADXL345_Read
   793  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   794  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   795  00FF  0820               	movf	?_ADXL345_Read,w
   796  0100  00BC               	movwf	??_main
   797  0101  083C               	movf	??_main,w
   798  0102  00C1               	movwf	_accelerometer_val+2
   799  0103                     l1205:
   800                           
   801                           ;PIC_MAIN.c: 112:         accelerometer_val[3]=ADXL345_Read(0x35);
   802  0103  3035               	movlw	53
   803  0104  00A0               	movwf	ADXL345_Read@add
   804  0105  3000               	movlw	0
   805  0106  00A1               	movwf	ADXL345_Read@add+1
   806  0107  120A  118A  220F  120A  118A  	fcall	_ADXL345_Read
   807  010C  1283               	bcf	3,5	;RP0=0, select bank0
   808  010D  1303               	bcf	3,6	;RP1=0, select bank0
   809  010E  0820               	movf	?_ADXL345_Read,w
   810  010F  00BC               	movwf	??_main
   811  0110  083C               	movf	??_main,w
   812  0111  00C2               	movwf	_accelerometer_val+3
   813  0112                     l1207:
   814                           
   815                           ;PIC_MAIN.c: 113:         accelerometer_val[4]=ADXL345_Read(0x36);
   816  0112  3036               	movlw	54
   817  0113  00A0               	movwf	ADXL345_Read@add
   818  0114  3000               	movlw	0
   819  0115  00A1               	movwf	ADXL345_Read@add+1
   820  0116  120A  118A  220F  120A  118A  	fcall	_ADXL345_Read
   821  011B  1283               	bcf	3,5	;RP0=0, select bank0
   822  011C  1303               	bcf	3,6	;RP1=0, select bank0
   823  011D  0820               	movf	?_ADXL345_Read,w
   824  011E  00BC               	movwf	??_main
   825  011F  083C               	movf	??_main,w
   826  0120  00C3               	movwf	_accelerometer_val+4
   827  0121                     l1209:
   828                           
   829                           ;PIC_MAIN.c: 114:         accelerometer_val[5]=ADXL345_Read(0x37);
   830  0121  3037               	movlw	55
   831  0122  00A0               	movwf	ADXL345_Read@add
   832  0123  3000               	movlw	0
   833  0124  00A1               	movwf	ADXL345_Read@add+1
   834  0125  120A  118A  220F  120A  118A  	fcall	_ADXL345_Read
   835  012A  1283               	bcf	3,5	;RP0=0, select bank0
   836  012B  1303               	bcf	3,6	;RP1=0, select bank0
   837  012C  0820               	movf	?_ADXL345_Read,w
   838  012D  00BC               	movwf	??_main
   839  012E  083C               	movf	??_main,w
   840  012F  00C4               	movwf	_accelerometer_val+5
   841  0130  28D5               	goto	l1199
   842  0131  120A  118A  280C   	ljmp	start
   843  0134                     __end_of_main:
   844                           
   845                           	psect	text1
   846  02BB                     __ptext1:	
   847 ;; *************** function _Setup *****************
   848 ;; Defined at:
   849 ;;		line 62 in file "PIC_MAIN.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0, pclath, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    3
   870 ;; This function calls:
   871 ;;		_MAS_INIT
   872 ;;		_USART_Initialize
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function _Setup
   880  02BB                     _Setup:
   881  02BB                     l1165:	
   882                           ;incstack = 0
   883                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
   884                           
   885                           
   886                           ;PIC_MAIN.c: 65:     ANSEL = 0;
   887  02BB  1683               	bsf	3,5	;RP0=1, select bank3
   888  02BC  1703               	bsf	3,6	;RP1=1, select bank3
   889  02BD  0188               	clrf	8	;volatile
   890                           
   891                           ;PIC_MAIN.c: 66:     TRISA = 0;
   892  02BE  1683               	bsf	3,5	;RP0=1, select bank1
   893  02BF  1303               	bcf	3,6	;RP1=0, select bank1
   894  02C0  0185               	clrf	5	;volatile
   895                           
   896                           ;PIC_MAIN.c: 67:     PORTA = 0;
   897  02C1  1283               	bcf	3,5	;RP0=0, select bank0
   898  02C2  1303               	bcf	3,6	;RP1=0, select bank0
   899  02C3  0185               	clrf	5	;volatile
   900  02C4                     l1167:
   901                           
   902                           ;PIC_MAIN.c: 68:     INTCONbits.GIE = 1;
   903  02C4  178B               	bsf	11,7	;volatile
   904  02C5                     l1169:
   905                           
   906                           ;PIC_MAIN.c: 69:     INTCONbits.PEIE = 1;
   907  02C5  170B               	bsf	11,6	;volatile
   908  02C6                     l1171:
   909                           
   910                           ;PIC_MAIN.c: 70:     PIE1bits.RCIE = 1;
   911  02C6  1683               	bsf	3,5	;RP0=1, select bank1
   912  02C7  1303               	bcf	3,6	;RP1=0, select bank1
   913  02C8  168C               	bsf	12,5	;volatile
   914  02C9                     l1173:
   915                           
   916                           ;PIC_MAIN.c: 71:     USART_Initialize(9600);
   917  02C9  3000               	movlw	0
   918  02CA  1283               	bcf	3,5	;RP0=0, select bank0
   919  02CB  1303               	bcf	3,6	;RP1=0, select bank0
   920  02CC  00AB               	movwf	USART_Initialize@baudrate+3
   921  02CD  3000               	movlw	0
   922  02CE  00AA               	movwf	USART_Initialize@baudrate+2
   923  02CF  3025               	movlw	37
   924  02D0  00A9               	movwf	USART_Initialize@baudrate+1
   925  02D1  3080               	movlw	128
   926  02D2  00A8               	movwf	USART_Initialize@baudrate
   927  02D3  120A  118A  2134  120A  118A  	fcall	_USART_Initialize
   928  02D8                     l1175:
   929                           
   930                           ;PIC_MAIN.c: 72:     MAS_INIT(100000);
   931  02D8  3000               	movlw	0
   932  02D9  1283               	bcf	3,5	;RP0=0, select bank0
   933  02DA  1303               	bcf	3,6	;RP1=0, select bank0
   934  02DB  00AB               	movwf	MAS_INIT@c+3
   935  02DC  3001               	movlw	1
   936  02DD  00AA               	movwf	MAS_INIT@c+2
   937  02DE  3086               	movlw	134
   938  02DF  00A9               	movwf	MAS_INIT@c+1
   939  02E0  30A0               	movlw	160
   940  02E1  00A8               	movwf	MAS_INIT@c
   941  02E2  120A  118A  2250  120A  118A  	fcall	_MAS_INIT
   942  02E7                     l98:
   943  02E7  0008               	return
   944  02E8                     __end_of_Setup:
   945                           
   946                           	psect	text2
   947  0134                     __ptext2:	
   948 ;; *************** function _USART_Initialize *****************
   949 ;; Defined at:
   950 ;;		line 16 in file "USART.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  baudrate        4    8[BANK0 ] const long 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  x               4   24[BANK0 ] long 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0, pclath, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   964 ;;      Params:         0       4       0       0       0
   965 ;;      Locals:         0       4       0       0       0
   966 ;;      Temps:          0      12       0       0       0
   967 ;;      Totals:         0      20       0       0       0
   968 ;;Total ram usage:       20 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    2
   971 ;; This function calls:
   972 ;;		___aldiv
   973 ;; This function is called by:
   974 ;;		_Setup
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _USART_Initialize
   980  0134                     _USART_Initialize:
   981  0134                     l1151:	
   982                           ;incstack = 0
   983                           ; Regs used in _USART_Initialize: [wreg+status,2+status,0+pclath+cstack]
   984                           
   985                           
   986                           ;USART.c: 17:     long int x;;USART.c: 20:     TXSTAbits.TX9 = 0;
   987  0134  1683               	bsf	3,5	;RP0=1, select bank1
   988  0135  1303               	bcf	3,6	;RP1=0, select bank1
   989  0136  1318               	bcf	24,6	;volatile
   990                           
   991                           ;USART.c: 22:     TXSTAbits.TXEN = 1;
   992  0137  1698               	bsf	24,5	;volatile
   993                           
   994                           ;USART.c: 24:     TXSTAbits.SYNC = 0;
   995  0138  1218               	bcf	24,4	;volatile
   996                           
   997                           ;USART.c: 26:     TXSTAbits.BRGH = 0;
   998  0139  1118               	bcf	24,2	;volatile
   999                           
  1000                           ;USART.c: 27:     BAUDCTLbits.BRG16 = 0;
  1001  013A  1683               	bsf	3,5	;RP0=1, select bank3
  1002  013B  1703               	bsf	3,6	;RP1=1, select bank3
  1003  013C  1187               	bcf	7,3	;volatile
  1004                           
  1005                           ;USART.c: 30:     RCSTAbits.SPEN = 1;
  1006  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1007  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1008  013F  1798               	bsf	24,7	;volatile
  1009                           
  1010                           ;USART.c: 32:     RCSTAbits.CREN = 1;
  1011  0140  1618               	bsf	24,4	;volatile
  1012  0141                     l1153:
  1013                           
  1014                           ;USART.c: 34:     x = (8000000 - baudrate*64)/(baudrate*64);
  1015  0141  0828               	movf	USART_Initialize@baudrate,w
  1016  0142  00AC               	movwf	??_USART_Initialize
  1017  0143  0829               	movf	USART_Initialize@baudrate+1,w
  1018  0144  00AD               	movwf	??_USART_Initialize+1
  1019  0145  082A               	movf	USART_Initialize@baudrate+2,w
  1020  0146  00AE               	movwf	??_USART_Initialize+2
  1021  0147  082B               	movf	USART_Initialize@baudrate+3,w
  1022  0148  00AF               	movwf	??_USART_Initialize+3
  1023  0149  3006               	movlw	6
  1024  014A                     u705:
  1025  014A  1003               	clrc
  1026  014B  0DAC               	rlf	??_USART_Initialize,f
  1027  014C  0DAD               	rlf	??_USART_Initialize+1,f
  1028  014D  0DAE               	rlf	??_USART_Initialize+2,f
  1029  014E  0DAF               	rlf	??_USART_Initialize+3,f
  1030  014F                     u700:
  1031  014F  3EFF               	addlw	-1
  1032  0150  1D03               	skipz
  1033  0151  294A               	goto	u705
  1034  0152  082F               	movf	??_USART_Initialize+3,w
  1035  0153  00A3               	movwf	___aldiv@divisor+3
  1036  0154  082E               	movf	??_USART_Initialize+2,w
  1037  0155  00A2               	movwf	___aldiv@divisor+2
  1038  0156  082D               	movf	??_USART_Initialize+1,w
  1039  0157  00A1               	movwf	___aldiv@divisor+1
  1040  0158  082C               	movf	??_USART_Initialize,w
  1041  0159  00A0               	movwf	___aldiv@divisor
  1042  015A  0828               	movf	USART_Initialize@baudrate,w
  1043  015B  00B0               	movwf	??_USART_Initialize+4
  1044  015C  0829               	movf	USART_Initialize@baudrate+1,w
  1045  015D  00B1               	movwf	??_USART_Initialize+5
  1046  015E  082A               	movf	USART_Initialize@baudrate+2,w
  1047  015F  00B2               	movwf	??_USART_Initialize+6
  1048  0160  082B               	movf	USART_Initialize@baudrate+3,w
  1049  0161  00B3               	movwf	??_USART_Initialize+7
  1050  0162  3006               	movlw	6
  1051  0163                     u715:
  1052  0163  1003               	clrc
  1053  0164  0DB0               	rlf	??_USART_Initialize+4,f
  1054  0165  0DB1               	rlf	??_USART_Initialize+5,f
  1055  0166  0DB2               	rlf	??_USART_Initialize+6,f
  1056  0167  0DB3               	rlf	??_USART_Initialize+7,f
  1057  0168                     u710:
  1058  0168  3EFF               	addlw	-1
  1059  0169  1D03               	skipz
  1060  016A  2963               	goto	u715
  1061  016B  3000               	movlw	0
  1062  016C  00B4               	movwf	??_USART_Initialize+8
  1063  016D  3012               	movlw	18
  1064  016E  00B5               	movwf	??_USART_Initialize+9
  1065  016F  307A               	movlw	122
  1066  0170  00B6               	movwf	??_USART_Initialize+10
  1067  0171  3000               	movlw	0
  1068  0172  00B7               	movwf	??_USART_Initialize+11
  1069  0173  0830               	movf	??_USART_Initialize+4,w
  1070  0174  02B4               	subwf	??_USART_Initialize+8,f
  1071  0175  0831               	movf	??_USART_Initialize+5,w
  1072  0176  1C03               	skipc
  1073  0177  0F31               	incfsz	??_USART_Initialize+5,w
  1074  0178  297A               	goto	u721
  1075  0179  297B               	goto	u722
  1076  017A                     u721:
  1077  017A  02B5               	subwf	??_USART_Initialize+9,f
  1078  017B                     u722:
  1079  017B  0832               	movf	??_USART_Initialize+6,w
  1080  017C  1C03               	skipc
  1081  017D  0F32               	incfsz	??_USART_Initialize+6,w
  1082  017E  2980               	goto	u723
  1083  017F  2981               	goto	u724
  1084  0180                     u723:
  1085  0180  02B6               	subwf	??_USART_Initialize+10,f
  1086  0181                     u724:
  1087  0181  0833               	movf	??_USART_Initialize+7,w
  1088  0182  1C03               	skipc
  1089  0183  0F33               	incfsz	??_USART_Initialize+7,w
  1090  0184  2986               	goto	u725
  1091  0185  2987               	goto	u726
  1092  0186                     u725:
  1093  0186  02B7               	subwf	??_USART_Initialize+11,f
  1094  0187                     u726:
  1095  0187  0837               	movf	??_USART_Initialize+11,w
  1096  0188  00A7               	movwf	___aldiv@dividend+3
  1097  0189  0836               	movf	??_USART_Initialize+10,w
  1098  018A  00A6               	movwf	___aldiv@dividend+2
  1099  018B  0835               	movf	??_USART_Initialize+9,w
  1100  018C  00A5               	movwf	___aldiv@dividend+1
  1101  018D  0834               	movf	??_USART_Initialize+8,w
  1102  018E  00A4               	movwf	___aldiv@dividend
  1103  018F  120A  118A  201C  120A  118A  	fcall	___aldiv
  1104  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0196  0823               	movf	?___aldiv+3,w
  1107  0197  00BB               	movwf	USART_Initialize@x+3
  1108  0198  0822               	movf	?___aldiv+2,w
  1109  0199  00BA               	movwf	USART_Initialize@x+2
  1110  019A  0821               	movf	?___aldiv+1,w
  1111  019B  00B9               	movwf	USART_Initialize@x+1
  1112  019C  0820               	movf	?___aldiv,w
  1113  019D  00B8               	movwf	USART_Initialize@x
  1114  019E                     l1155:
  1115                           
  1116                           ;USART.c: 35:     SPBRG = x;
  1117  019E  0838               	movf	USART_Initialize@x,w
  1118  019F  1683               	bsf	3,5	;RP0=1, select bank1
  1119  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  1120  01A1  0099               	movwf	25	;volatile
  1121  01A2                     l1157:
  1122                           
  1123                           ;USART.c: 38:     INTCONbits.GIE = 1;
  1124  01A2  178B               	bsf	11,7	;volatile
  1125  01A3                     l1159:
  1126                           
  1127                           ;USART.c: 40:     INTCONbits.PEIE = 1;
  1128  01A3  170B               	bsf	11,6	;volatile
  1129  01A4                     l1161:
  1130                           
  1131                           ;USART.c: 43:     PIE1bits.RCIE = 1;
  1132  01A4  168C               	bsf	12,5	;volatile
  1133  01A5                     l1163:
  1134                           
  1135                           ;USART.c: 45:     PIE1bits.TXIE = 1;
  1136  01A5  160C               	bsf	12,4	;volatile
  1137  01A6                     l65:
  1138  01A6  0008               	return
  1139  01A7                     __end_of_USART_Initialize:
  1140                           
  1141                           	psect	text3
  1142  001C                     __ptext3:	
  1143 ;; *************** function ___aldiv *****************
  1144 ;; Defined at:
  1145 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  divisor         4    0[BANK0 ] long 
  1148 ;;  dividend        4    4[BANK0 ] long 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  quotient        4    6[COMMON] long 
  1151 ;;  sign            1    5[COMMON] unsigned char 
  1152 ;;  counter         1    4[COMMON] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  4    0[BANK0 ] long 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         0       8       0       0       0
  1163 ;;      Locals:         6       0       0       0       0
  1164 ;;      Temps:          1       0       0       0       0
  1165 ;;      Totals:         7       8       0       0       0
  1166 ;;Total ram usage:       15 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    1
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_USART_Initialize
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function ___aldiv
  1178  001C                     ___aldiv:
  1179  001C                     l1099:	
  1180                           ;incstack = 0
  1181                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1182                           
  1183  001C  01F5               	clrf	___aldiv@sign
  1184  001D                     l1101:
  1185  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1186  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1187  001F  1FA3               	btfss	___aldiv@divisor+3,7
  1188  0020  2822               	goto	u591
  1189  0021  2823               	goto	u590
  1190  0022                     u591:
  1191  0022  2830               	goto	l282
  1192  0023                     u590:
  1193  0023                     l1103:
  1194  0023  09A0               	comf	___aldiv@divisor,f
  1195  0024  09A1               	comf	___aldiv@divisor+1,f
  1196  0025  09A2               	comf	___aldiv@divisor+2,f
  1197  0026  09A3               	comf	___aldiv@divisor+3,f
  1198  0027  0AA0               	incf	___aldiv@divisor,f
  1199  0028  1903               	skipnz
  1200  0029  0AA1               	incf	___aldiv@divisor+1,f
  1201  002A  1903               	skipnz
  1202  002B  0AA2               	incf	___aldiv@divisor+2,f
  1203  002C  1903               	skipnz
  1204  002D  0AA3               	incf	___aldiv@divisor+3,f
  1205  002E  01F5               	clrf	___aldiv@sign
  1206  002F  0AF5               	incf	___aldiv@sign,f
  1207  0030                     l282:
  1208  0030  1FA7               	btfss	___aldiv@dividend+3,7
  1209  0031  2833               	goto	u601
  1210  0032  2834               	goto	u600
  1211  0033                     u601:
  1212  0033  2843               	goto	l1109
  1213  0034                     u600:
  1214  0034                     l1105:
  1215  0034  09A4               	comf	___aldiv@dividend,f
  1216  0035  09A5               	comf	___aldiv@dividend+1,f
  1217  0036  09A6               	comf	___aldiv@dividend+2,f
  1218  0037  09A7               	comf	___aldiv@dividend+3,f
  1219  0038  0AA4               	incf	___aldiv@dividend,f
  1220  0039  1903               	skipnz
  1221  003A  0AA5               	incf	___aldiv@dividend+1,f
  1222  003B  1903               	skipnz
  1223  003C  0AA6               	incf	___aldiv@dividend+2,f
  1224  003D  1903               	skipnz
  1225  003E  0AA7               	incf	___aldiv@dividend+3,f
  1226  003F                     l1107:
  1227  003F  3001               	movlw	1
  1228  0040  00F3               	movwf	??___aldiv
  1229  0041  0873               	movf	??___aldiv,w
  1230  0042  06F5               	xorwf	___aldiv@sign,f
  1231  0043                     l1109:
  1232  0043  3000               	movlw	0
  1233  0044  00F9               	movwf	___aldiv@quotient+3
  1234  0045  3000               	movlw	0
  1235  0046  00F8               	movwf	___aldiv@quotient+2
  1236  0047  3000               	movlw	0
  1237  0048  00F7               	movwf	___aldiv@quotient+1
  1238  0049  3000               	movlw	0
  1239  004A  00F6               	movwf	___aldiv@quotient
  1240  004B                     l1111:
  1241  004B  0823               	movf	___aldiv@divisor+3,w
  1242  004C  0422               	iorwf	___aldiv@divisor+2,w
  1243  004D  0421               	iorwf	___aldiv@divisor+1,w
  1244  004E  0420               	iorwf	___aldiv@divisor,w
  1245  004F  1903               	skipnz
  1246  0050  2852               	goto	u611
  1247  0051  2853               	goto	u610
  1248  0052                     u611:
  1249  0052  28A0               	goto	l1131
  1250  0053                     u610:
  1251  0053                     l1113:
  1252  0053  01F4               	clrf	___aldiv@counter
  1253  0054  0AF4               	incf	___aldiv@counter,f
  1254  0055  2863               	goto	l1117
  1255  0056                     l1115:
  1256  0056  3001               	movlw	1
  1257  0057  00F3               	movwf	??___aldiv
  1258  0058                     u625:
  1259  0058  1003               	clrc
  1260  0059  0DA0               	rlf	___aldiv@divisor,f
  1261  005A  0DA1               	rlf	___aldiv@divisor+1,f
  1262  005B  0DA2               	rlf	___aldiv@divisor+2,f
  1263  005C  0DA3               	rlf	___aldiv@divisor+3,f
  1264  005D  0BF3               	decfsz	??___aldiv,f
  1265  005E  2858               	goto	u625
  1266  005F  3001               	movlw	1
  1267  0060  00F3               	movwf	??___aldiv
  1268  0061  0873               	movf	??___aldiv,w
  1269  0062  07F4               	addwf	___aldiv@counter,f
  1270  0063                     l1117:
  1271  0063  1FA3               	btfss	___aldiv@divisor+3,7
  1272  0064  2866               	goto	u631
  1273  0065  2867               	goto	u630
  1274  0066                     u631:
  1275  0066  2856               	goto	l1115
  1276  0067                     u630:
  1277  0067                     l1119:
  1278  0067  3001               	movlw	1
  1279  0068  00F3               	movwf	??___aldiv
  1280  0069                     u645:
  1281  0069  1003               	clrc
  1282  006A  0DF6               	rlf	___aldiv@quotient,f
  1283  006B  0DF7               	rlf	___aldiv@quotient+1,f
  1284  006C  0DF8               	rlf	___aldiv@quotient+2,f
  1285  006D  0DF9               	rlf	___aldiv@quotient+3,f
  1286  006E  0BF3               	decfsz	??___aldiv,f
  1287  006F  2869               	goto	u645
  1288  0070                     l1121:
  1289  0070  0823               	movf	___aldiv@divisor+3,w
  1290  0071  0227               	subwf	___aldiv@dividend+3,w
  1291  0072  1D03               	skipz
  1292  0073  287E               	goto	u655
  1293  0074  0822               	movf	___aldiv@divisor+2,w
  1294  0075  0226               	subwf	___aldiv@dividend+2,w
  1295  0076  1D03               	skipz
  1296  0077  287E               	goto	u655
  1297  0078  0821               	movf	___aldiv@divisor+1,w
  1298  0079  0225               	subwf	___aldiv@dividend+1,w
  1299  007A  1D03               	skipz
  1300  007B  287E               	goto	u655
  1301  007C  0820               	movf	___aldiv@divisor,w
  1302  007D  0224               	subwf	___aldiv@dividend,w
  1303  007E                     u655:
  1304  007E  1C03               	skipc
  1305  007F  2881               	goto	u651
  1306  0080  2882               	goto	u650
  1307  0081                     u651:
  1308  0081  2891               	goto	l1127
  1309  0082                     u650:
  1310  0082                     l1123:
  1311  0082  0820               	movf	___aldiv@divisor,w
  1312  0083  02A4               	subwf	___aldiv@dividend,f
  1313  0084  0821               	movf	___aldiv@divisor+1,w
  1314  0085  1C03               	skipc
  1315  0086  0F21               	incfsz	___aldiv@divisor+1,w
  1316  0087  02A5               	subwf	___aldiv@dividend+1,f
  1317  0088  0822               	movf	___aldiv@divisor+2,w
  1318  0089  1C03               	skipc
  1319  008A  0F22               	incfsz	___aldiv@divisor+2,w
  1320  008B  02A6               	subwf	___aldiv@dividend+2,f
  1321  008C  0823               	movf	___aldiv@divisor+3,w
  1322  008D  1C03               	skipc
  1323  008E  0F23               	incfsz	___aldiv@divisor+3,w
  1324  008F  02A7               	subwf	___aldiv@dividend+3,f
  1325  0090                     l1125:
  1326  0090  1476               	bsf	___aldiv@quotient,0
  1327  0091                     l1127:
  1328  0091  3001               	movlw	1
  1329  0092                     u665:
  1330  0092  1003               	clrc
  1331  0093  0CA3               	rrf	___aldiv@divisor+3,f
  1332  0094  0CA2               	rrf	___aldiv@divisor+2,f
  1333  0095  0CA1               	rrf	___aldiv@divisor+1,f
  1334  0096  0CA0               	rrf	___aldiv@divisor,f
  1335  0097  3EFF               	addlw	-1
  1336  0098  1D03               	skipz
  1337  0099  2892               	goto	u665
  1338  009A                     l1129:
  1339  009A  3001               	movlw	1
  1340  009B  02F4               	subwf	___aldiv@counter,f
  1341  009C  1D03               	btfss	3,2
  1342  009D  289F               	goto	u671
  1343  009E  28A0               	goto	u670
  1344  009F                     u671:
  1345  009F  2867               	goto	l1119
  1346  00A0                     u670:
  1347  00A0                     l1131:
  1348  00A0  0875               	movf	___aldiv@sign,w
  1349  00A1  1903               	btfsc	3,2
  1350  00A2  28A4               	goto	u681
  1351  00A3  28A5               	goto	u680
  1352  00A4                     u681:
  1353  00A4  28B0               	goto	l1135
  1354  00A5                     u680:
  1355  00A5                     l1133:
  1356  00A5  09F6               	comf	___aldiv@quotient,f
  1357  00A6  09F7               	comf	___aldiv@quotient+1,f
  1358  00A7  09F8               	comf	___aldiv@quotient+2,f
  1359  00A8  09F9               	comf	___aldiv@quotient+3,f
  1360  00A9  0AF6               	incf	___aldiv@quotient,f
  1361  00AA  1903               	skipnz
  1362  00AB  0AF7               	incf	___aldiv@quotient+1,f
  1363  00AC  1903               	skipnz
  1364  00AD  0AF8               	incf	___aldiv@quotient+2,f
  1365  00AE  1903               	skipnz
  1366  00AF  0AF9               	incf	___aldiv@quotient+3,f
  1367  00B0                     l1135:
  1368  00B0  0879               	movf	___aldiv@quotient+3,w
  1369  00B1  00A3               	movwf	?___aldiv+3
  1370  00B2  0878               	movf	___aldiv@quotient+2,w
  1371  00B3  00A2               	movwf	?___aldiv+2
  1372  00B4  0877               	movf	___aldiv@quotient+1,w
  1373  00B5  00A1               	movwf	?___aldiv+1
  1374  00B6  0876               	movf	___aldiv@quotient,w
  1375  00B7  00A0               	movwf	?___aldiv
  1376  00B8                     l292:
  1377  00B8  0008               	return
  1378  00B9                     __end_of___aldiv:
  1379                           
  1380                           	psect	text4
  1381  0250                     __ptext4:	
  1382 ;; *************** function _MAS_INIT *****************
  1383 ;; Defined at:
  1384 ;;		line 16 in file "I2C.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  c               4    8[BANK0 ] const unsigned long 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       4       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          0       4       0       0       0
  1401 ;;      Totals:         0       8       0       0       0
  1402 ;;Total ram usage:        8 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    2
  1405 ;; This function calls:
  1406 ;;		___lldiv
  1407 ;; This function is called by:
  1408 ;;		_Setup
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           
  1413                           ;psect for function _MAS_INIT
  1414  0250                     _MAS_INIT:
  1415  0250                     l1139:	
  1416                           ;incstack = 0
  1417                           ; Regs used in _MAS_INIT: [wreg+status,2+status,0+pclath+cstack]
  1418                           
  1419                           
  1420                           ;I2C.c: 17:     SSPCON = 0b00101000;
  1421  0250  3028               	movlw	40
  1422  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0253  0094               	movwf	20	;volatile
  1425  0254                     l1141:
  1426                           
  1427                           ;I2C.c: 18:     SSPCON2 = 0;
  1428  0254  1683               	bsf	3,5	;RP0=1, select bank1
  1429  0255  1303               	bcf	3,6	;RP1=0, select bank1
  1430  0256  0191               	clrf	17	;volatile
  1431  0257                     l1143:
  1432                           
  1433                           ;I2C.c: 19:     SSPADD = (8000000/(4*c))-1;
  1434  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0259  0828               	movf	MAS_INIT@c,w
  1437  025A  00AC               	movwf	??_MAS_INIT
  1438  025B  0829               	movf	MAS_INIT@c+1,w
  1439  025C  00AD               	movwf	??_MAS_INIT+1
  1440  025D  082A               	movf	MAS_INIT@c+2,w
  1441  025E  00AE               	movwf	??_MAS_INIT+2
  1442  025F  082B               	movf	MAS_INIT@c+3,w
  1443  0260  00AF               	movwf	??_MAS_INIT+3
  1444  0261  3002               	movlw	2
  1445  0262                     u695:
  1446  0262  1003               	clrc
  1447  0263  0DAC               	rlf	??_MAS_INIT,f
  1448  0264  0DAD               	rlf	??_MAS_INIT+1,f
  1449  0265  0DAE               	rlf	??_MAS_INIT+2,f
  1450  0266  0DAF               	rlf	??_MAS_INIT+3,f
  1451  0267                     u690:
  1452  0267  3EFF               	addlw	-1
  1453  0268  1D03               	skipz
  1454  0269  2A62               	goto	u695
  1455  026A  082F               	movf	??_MAS_INIT+3,w
  1456  026B  00A3               	movwf	___lldiv@divisor+3
  1457  026C  082E               	movf	??_MAS_INIT+2,w
  1458  026D  00A2               	movwf	___lldiv@divisor+2
  1459  026E  082D               	movf	??_MAS_INIT+1,w
  1460  026F  00A1               	movwf	___lldiv@divisor+1
  1461  0270  082C               	movf	??_MAS_INIT,w
  1462  0271  00A0               	movwf	___lldiv@divisor
  1463  0272  3000               	movlw	0
  1464  0273  00A7               	movwf	___lldiv@dividend+3
  1465  0274  307A               	movlw	122
  1466  0275  00A6               	movwf	___lldiv@dividend+2
  1467  0276  3012               	movlw	18
  1468  0277  00A5               	movwf	___lldiv@dividend+1
  1469  0278  3000               	movlw	0
  1470  0279  00A4               	movwf	___lldiv@dividend
  1471  027A  120A  118A  21A7  120A  118A  	fcall	___lldiv
  1472  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0281  0820               	movf	?___lldiv,w
  1475  0282  3EFF               	addlw	255
  1476  0283  1683               	bsf	3,5	;RP0=1, select bank1
  1477  0284  1303               	bcf	3,6	;RP1=0, select bank1
  1478  0285  0093               	movwf	19	;volatile
  1479  0286                     l1145:
  1480                           
  1481                           ;I2C.c: 20:     SSPSTAT = 0;
  1482  0286  0194               	clrf	20	;volatile
  1483  0287                     l1147:
  1484                           
  1485                           ;I2C.c: 21:     TRISC3 = 1;
  1486  0287  1587               	bsf	7,3	;volatile
  1487  0288                     l1149:
  1488                           
  1489                           ;I2C.c: 22:     TRISC4 = 1;
  1490  0288  1607               	bsf	7,4	;volatile
  1491  0289                     l29:
  1492  0289  0008               	return
  1493  028A                     __end_of_MAS_INIT:
  1494                           
  1495                           	psect	text5
  1496  01A7                     __ptext5:	
  1497 ;; *************** function ___lldiv *****************
  1498 ;; Defined at:
  1499 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  divisor         4    0[BANK0 ] unsigned long 
  1502 ;;  dividend        4    4[BANK0 ] unsigned long 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  quotient        4    4[COMMON] unsigned long 
  1505 ;;  counter         1    8[COMMON] unsigned char 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  4    0[BANK0 ] unsigned long 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1515 ;;      Params:         0       8       0       0       0
  1516 ;;      Locals:         5       0       0       0       0
  1517 ;;      Temps:          1       0       0       0       0
  1518 ;;      Totals:         6       8       0       0       0
  1519 ;;Total ram usage:       14 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    1
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_MAS_INIT
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function ___lldiv
  1531  01A7                     ___lldiv:
  1532  01A7                     l1075:	
  1533                           ;incstack = 0
  1534                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1535                           
  1536  01A7  3000               	movlw	0
  1537  01A8  00F7               	movwf	___lldiv@quotient+3
  1538  01A9  3000               	movlw	0
  1539  01AA  00F6               	movwf	___lldiv@quotient+2
  1540  01AB  3000               	movlw	0
  1541  01AC  00F5               	movwf	___lldiv@quotient+1
  1542  01AD  3000               	movlw	0
  1543  01AE  00F4               	movwf	___lldiv@quotient
  1544  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1545  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1546  01B1  0823               	movf	___lldiv@divisor+3,w
  1547  01B2  0422               	iorwf	___lldiv@divisor+2,w
  1548  01B3  0421               	iorwf	___lldiv@divisor+1,w
  1549  01B4  0420               	iorwf	___lldiv@divisor,w
  1550  01B5  1903               	skipnz
  1551  01B6  29B8               	goto	u521
  1552  01B7  29B9               	goto	u520
  1553  01B8                     u521:
  1554  01B8  2A06               	goto	l1095
  1555  01B9                     u520:
  1556  01B9                     l1077:
  1557  01B9  01F8               	clrf	___lldiv@counter
  1558  01BA  0AF8               	incf	___lldiv@counter,f
  1559  01BB  29C9               	goto	l1081
  1560  01BC                     l1079:
  1561  01BC  3001               	movlw	1
  1562  01BD  00F3               	movwf	??___lldiv
  1563  01BE                     u535:
  1564  01BE  1003               	clrc
  1565  01BF  0DA0               	rlf	___lldiv@divisor,f
  1566  01C0  0DA1               	rlf	___lldiv@divisor+1,f
  1567  01C1  0DA2               	rlf	___lldiv@divisor+2,f
  1568  01C2  0DA3               	rlf	___lldiv@divisor+3,f
  1569  01C3  0BF3               	decfsz	??___lldiv,f
  1570  01C4  29BE               	goto	u535
  1571  01C5  3001               	movlw	1
  1572  01C6  00F3               	movwf	??___lldiv
  1573  01C7  0873               	movf	??___lldiv,w
  1574  01C8  07F8               	addwf	___lldiv@counter,f
  1575  01C9                     l1081:
  1576  01C9  1FA3               	btfss	___lldiv@divisor+3,7
  1577  01CA  29CC               	goto	u541
  1578  01CB  29CD               	goto	u540
  1579  01CC                     u541:
  1580  01CC  29BC               	goto	l1079
  1581  01CD                     u540:
  1582  01CD                     l1083:
  1583  01CD  3001               	movlw	1
  1584  01CE  00F3               	movwf	??___lldiv
  1585  01CF                     u555:
  1586  01CF  1003               	clrc
  1587  01D0  0DF4               	rlf	___lldiv@quotient,f
  1588  01D1  0DF5               	rlf	___lldiv@quotient+1,f
  1589  01D2  0DF6               	rlf	___lldiv@quotient+2,f
  1590  01D3  0DF7               	rlf	___lldiv@quotient+3,f
  1591  01D4  0BF3               	decfsz	??___lldiv,f
  1592  01D5  29CF               	goto	u555
  1593  01D6                     l1085:
  1594  01D6  0823               	movf	___lldiv@divisor+3,w
  1595  01D7  0227               	subwf	___lldiv@dividend+3,w
  1596  01D8  1D03               	skipz
  1597  01D9  29E4               	goto	u565
  1598  01DA  0822               	movf	___lldiv@divisor+2,w
  1599  01DB  0226               	subwf	___lldiv@dividend+2,w
  1600  01DC  1D03               	skipz
  1601  01DD  29E4               	goto	u565
  1602  01DE  0821               	movf	___lldiv@divisor+1,w
  1603  01DF  0225               	subwf	___lldiv@dividend+1,w
  1604  01E0  1D03               	skipz
  1605  01E1  29E4               	goto	u565
  1606  01E2  0820               	movf	___lldiv@divisor,w
  1607  01E3  0224               	subwf	___lldiv@dividend,w
  1608  01E4                     u565:
  1609  01E4  1C03               	skipc
  1610  01E5  29E7               	goto	u561
  1611  01E6  29E8               	goto	u560
  1612  01E7                     u561:
  1613  01E7  29F7               	goto	l1091
  1614  01E8                     u560:
  1615  01E8                     l1087:
  1616  01E8  0820               	movf	___lldiv@divisor,w
  1617  01E9  02A4               	subwf	___lldiv@dividend,f
  1618  01EA  0821               	movf	___lldiv@divisor+1,w
  1619  01EB  1C03               	skipc
  1620  01EC  0F21               	incfsz	___lldiv@divisor+1,w
  1621  01ED  02A5               	subwf	___lldiv@dividend+1,f
  1622  01EE  0822               	movf	___lldiv@divisor+2,w
  1623  01EF  1C03               	skipc
  1624  01F0  0F22               	incfsz	___lldiv@divisor+2,w
  1625  01F1  02A6               	subwf	___lldiv@dividend+2,f
  1626  01F2  0823               	movf	___lldiv@divisor+3,w
  1627  01F3  1C03               	skipc
  1628  01F4  0F23               	incfsz	___lldiv@divisor+3,w
  1629  01F5  02A7               	subwf	___lldiv@dividend+3,f
  1630  01F6                     l1089:
  1631  01F6  1474               	bsf	___lldiv@quotient,0
  1632  01F7                     l1091:
  1633  01F7  3001               	movlw	1
  1634  01F8                     u575:
  1635  01F8  1003               	clrc
  1636  01F9  0CA3               	rrf	___lldiv@divisor+3,f
  1637  01FA  0CA2               	rrf	___lldiv@divisor+2,f
  1638  01FB  0CA1               	rrf	___lldiv@divisor+1,f
  1639  01FC  0CA0               	rrf	___lldiv@divisor,f
  1640  01FD  3EFF               	addlw	-1
  1641  01FE  1D03               	skipz
  1642  01FF  29F8               	goto	u575
  1643  0200                     l1093:
  1644  0200  3001               	movlw	1
  1645  0201  02F8               	subwf	___lldiv@counter,f
  1646  0202  1D03               	btfss	3,2
  1647  0203  2A05               	goto	u581
  1648  0204  2A06               	goto	u580
  1649  0205                     u581:
  1650  0205  29CD               	goto	l1083
  1651  0206                     u580:
  1652  0206                     l1095:
  1653  0206  0877               	movf	___lldiv@quotient+3,w
  1654  0207  00A3               	movwf	?___lldiv+3
  1655  0208  0876               	movf	___lldiv@quotient+2,w
  1656  0209  00A2               	movwf	?___lldiv+2
  1657  020A  0875               	movf	___lldiv@quotient+1,w
  1658  020B  00A1               	movwf	?___lldiv+1
  1659  020C  0874               	movf	___lldiv@quotient,w
  1660  020D  00A0               	movwf	?___lldiv
  1661  020E                     l253:
  1662  020E  0008               	return
  1663  020F                     __end_of___lldiv:
  1664                           
  1665                           	psect	text6
  1666  020F                     __ptext6:	
  1667 ;; *************** function _ADXL345_Read *****************
  1668 ;; Defined at:
  1669 ;;		line 28 in file "ADXL345.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  add             2    0[BANK0 ] int 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  retval          2    2[BANK0 ] int 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  2    0[BANK0 ] int 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       2       0       0       0
  1684 ;;      Locals:         0       2       0       0       0
  1685 ;;      Temps:          0       0       0       0       0
  1686 ;;      Totals:         0       4       0       0       0
  1687 ;;Total ram usage:        4 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    3
  1690 ;; This function calls:
  1691 ;;		_MAS_READ
  1692 ;;		_MAS_START
  1693 ;;		_MAS_STOP
  1694 ;;		_MAS_WRITE
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _ADXL345_Read
  1702  020F                     _ADXL345_Read:
  1703  020F                     l1185:	
  1704                           ;incstack = 0
  1705                           ; Regs used in _ADXL345_Read: [wreg+status,2+status,0+pclath+cstack]
  1706                           
  1707                           
  1708                           ;ADXL345.c: 29:          int retval;;ADXL345.c: 30:          MAS_START();
  1709  020F  120A  118A  236C  120A  118A  	fcall	_MAS_START
  1710                           
  1711                           ;ADXL345.c: 31:          MAS_WRITE(0xA6);
  1712  0214  30A6               	movlw	166
  1713  0215  00F3               	movwf	MAS_WRITE@d
  1714  0216  3000               	movlw	0
  1715  0217  00F4               	movwf	MAS_WRITE@d+1
  1716  0218  120A  118A  2359  120A  118A  	fcall	_MAS_WRITE
  1717                           
  1718                           ;ADXL345.c: 32:          MAS_WRITE(add);
  1719  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1720  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1721  021F  0821               	movf	ADXL345_Read@add+1,w
  1722  0220  00F4               	movwf	MAS_WRITE@d+1
  1723  0221  0820               	movf	ADXL345_Read@add,w
  1724  0222  00F3               	movwf	MAS_WRITE@d
  1725  0223  120A  118A  2359  120A  118A  	fcall	_MAS_WRITE
  1726                           
  1727                           ;ADXL345.c: 33:          MAS_START();
  1728  0228  120A  118A  236C  120A  118A  	fcall	_MAS_START
  1729                           
  1730                           ;ADXL345.c: 34:          MAS_WRITE(0xA7);
  1731  022D  30A7               	movlw	167
  1732  022E  00F3               	movwf	MAS_WRITE@d
  1733  022F  3000               	movlw	0
  1734  0230  00F4               	movwf	MAS_WRITE@d+1
  1735  0231  120A  118A  2359  120A  118A  	fcall	_MAS_WRITE
  1736                           
  1737                           ;ADXL345.c: 35:          retval=MAS_READ(0);
  1738  0236  3000               	movlw	0
  1739  0237  00F3               	movwf	MAS_READ@a
  1740  0238  00F4               	movwf	MAS_READ@a+1
  1741  0239  120A  118A  22E8  120A  118A  	fcall	_MAS_READ
  1742  023E  0874               	movf	?_MAS_READ+1,w
  1743  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0241  00A3               	movwf	ADXL345_Read@retval+1
  1746  0242  0873               	movf	?_MAS_READ,w
  1747  0243  00A2               	movwf	ADXL345_Read@retval
  1748                           
  1749                           ;ADXL345.c: 36:          MAS_STOP();
  1750  0244  120A  118A  2363  120A  118A  	fcall	_MAS_STOP
  1751  0249                     l1187:
  1752                           
  1753                           ;ADXL345.c: 37:          return retval;
  1754  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1755  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1756  024B  0823               	movf	ADXL345_Read@retval+1,w
  1757  024C  00A1               	movwf	?_ADXL345_Read+1
  1758  024D  0822               	movf	ADXL345_Read@retval,w
  1759  024E  00A0               	movwf	?_ADXL345_Read
  1760  024F                     l128:
  1761  024F  0008               	return
  1762  0250                     __end_of_ADXL345_Read:
  1763                           
  1764                           	psect	text7
  1765  02E8                     __ptext7:	
  1766 ;; *************** function _MAS_READ *****************
  1767 ;; Defined at:
  1768 ;;		line 49 in file "I2C.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  a               2    3[COMMON] unsigned short 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  temp            2    7[COMMON] unsigned short 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  2    3[COMMON] unsigned short 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0, pclath, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1782 ;;      Params:         2       0       0       0       0
  1783 ;;      Locals:         2       0       0       0       0
  1784 ;;      Temps:          2       0       0       0       0
  1785 ;;      Totals:         6       0       0       0       0
  1786 ;;Total ram usage:        6 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    2
  1789 ;; This function calls:
  1790 ;;		_MAS_WAIT
  1791 ;; This function is called by:
  1792 ;;		_ADXL345_Read
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _MAS_READ
  1798  02E8                     _MAS_READ:
  1799  02E8                     l993:	
  1800                           ;incstack = 0
  1801                           ; Regs used in _MAS_READ: [wreg+status,2+status,0+pclath+cstack]
  1802                           
  1803                           
  1804                           ;I2C.c: 50:     unsigned short temp;;I2C.c: 51:     MAS_WAIT();
  1805  02E8  120A  118A  234C  120A  118A  	fcall	_MAS_WAIT
  1806  02ED                     l995:
  1807                           
  1808                           ;I2C.c: 52:     RCEN = 1;
  1809  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  1810  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  1811  02EF  1591               	bsf	17,3	;volatile
  1812                           
  1813                           ;I2C.c: 53:     MAS_WAIT();
  1814  02F0  120A  118A  234C  120A  118A  	fcall	_MAS_WAIT
  1815  02F5                     l997:
  1816                           
  1817                           ;I2C.c: 54:     temp = SSPBUF;
  1818  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1819  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1820  02F7  0813               	movf	19,w	;volatile
  1821  02F8  00F5               	movwf	??_MAS_READ
  1822  02F9  01F6               	clrf	??_MAS_READ+1
  1823  02FA  0875               	movf	??_MAS_READ,w
  1824  02FB  00F7               	movwf	MAS_READ@temp
  1825  02FC  0876               	movf	??_MAS_READ+1,w
  1826  02FD  00F8               	movwf	MAS_READ@temp+1
  1827  02FE                     l999:
  1828                           
  1829                           ;I2C.c: 55:     MAS_WAIT();
  1830  02FE  120A  118A  234C  120A  118A  	fcall	_MAS_WAIT
  1831  0303                     l1001:
  1832                           
  1833                           ;I2C.c: 56:     ACKDT = (a)?0:1;
  1834  0303  0873               	movf	MAS_READ@a,w
  1835  0304  0474               	iorwf	MAS_READ@a+1,w
  1836  0305  1903               	btfsc	3,2
  1837  0306  2B08               	goto	u471
  1838  0307  2B0C               	goto	u470
  1839  0308                     u471:
  1840  0308  1683               	bsf	3,5	;RP0=1, select bank1
  1841  0309  1303               	bcf	3,6	;RP1=0, select bank1
  1842  030A  1691               	bsf	17,5	;volatile
  1843  030B  2B0F               	goto	u484
  1844  030C                     u470:
  1845  030C  1683               	bsf	3,5	;RP0=1, select bank1
  1846  030D  1303               	bcf	3,6	;RP1=0, select bank1
  1847  030E  1291               	bcf	17,5	;volatile
  1848  030F                     u484:
  1849  030F                     l1003:
  1850                           
  1851                           ;I2C.c: 57:     ACKEN = 1;
  1852  030F  1611               	bsf	17,4	;volatile
  1853  0310                     l1005:
  1854                           
  1855                           ;I2C.c: 58:     return temp;
  1856  0310  0878               	movf	MAS_READ@temp+1,w
  1857  0311  00F4               	movwf	?_MAS_READ+1
  1858  0312  0877               	movf	MAS_READ@temp,w
  1859  0313  00F3               	movwf	?_MAS_READ
  1860  0314                     l50:
  1861  0314  0008               	return
  1862  0315                     __end_of_MAS_READ:
  1863                           
  1864                           	psect	text8
  1865  028A                     __ptext8:	
  1866 ;; *************** function _ADXL345_Init *****************
  1867 ;; Defined at:
  1868 ;;		line 40 in file "ADXL345.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         0       0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0
  1884 ;;      Temps:          0       2       0       0       0
  1885 ;;      Totals:         0       2       0       0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    4
  1889 ;; This function calls:
  1890 ;;		_ADXL345_Write
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _ADXL345_Init
  1898  028A                     _ADXL345_Init:
  1899  028A                     l1179:	
  1900                           ;incstack = 0
  1901                           ; Regs used in _ADXL345_Init: [wreg+status,2+status,0+pclath+cstack]
  1902                           
  1903                           
  1904                           ;ADXL345.c: 41:          ADXL345_Write(0x31,0x0B);
  1905  028A  3031               	movlw	49
  1906  028B  00F5               	movwf	ADXL345_Write@add
  1907  028C  3000               	movlw	0
  1908  028D  00F6               	movwf	ADXL345_Write@add+1
  1909  028E  300B               	movlw	11
  1910  028F  00F7               	movwf	ADXL345_Write@data
  1911  0290  3000               	movlw	0
  1912  0291  00F8               	movwf	ADXL345_Write@data+1
  1913  0292  120A  118A  2315  120A  118A  	fcall	_ADXL345_Write
  1914  0297                     l1181:
  1915                           
  1916                           ;ADXL345.c: 42:          _delay((unsigned long)((2)*(8000000/4000.0)));
  1917  0297  3006               	movlw	6
  1918  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1919  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1920  029A  00A1               	movwf	??_ADXL345_Init+1
  1921  029B  302F               	movlw	47
  1922  029C  00A0               	movwf	??_ADXL345_Init
  1923  029D                     u747:
  1924  029D  0BA0               	decfsz	??_ADXL345_Init,f
  1925  029E  2A9D               	goto	u747
  1926  029F  0BA1               	decfsz	??_ADXL345_Init+1,f
  1927  02A0  2A9D               	goto	u747
  1928  02A1  2AA2               	nop2
  1929  02A2                     l1183:
  1930                           
  1931                           ;ADXL345.c: 43:          ADXL345_Write(0x2D,0x08);
  1932  02A2  302D               	movlw	45
  1933  02A3  00F5               	movwf	ADXL345_Write@add
  1934  02A4  3000               	movlw	0
  1935  02A5  00F6               	movwf	ADXL345_Write@add+1
  1936  02A6  3008               	movlw	8
  1937  02A7  00F7               	movwf	ADXL345_Write@data
  1938  02A8  3000               	movlw	0
  1939  02A9  00F8               	movwf	ADXL345_Write@data+1
  1940  02AA  120A  118A  2315  120A  118A  	fcall	_ADXL345_Write
  1941                           
  1942                           ;ADXL345.c: 44:          _delay((unsigned long)((2)*(8000000/4000.0)));
  1943  02AF  3006               	movlw	6
  1944  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1945  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1946  02B2  00A1               	movwf	??_ADXL345_Init+1
  1947  02B3  302F               	movlw	47
  1948  02B4  00A0               	movwf	??_ADXL345_Init
  1949  02B5                     u757:
  1950  02B5  0BA0               	decfsz	??_ADXL345_Init,f
  1951  02B6  2AB5               	goto	u757
  1952  02B7  0BA1               	decfsz	??_ADXL345_Init+1,f
  1953  02B8  2AB5               	goto	u757
  1954  02B9  2ABA               	nop2
  1955  02BA                     l131:
  1956  02BA  0008               	return
  1957  02BB                     __end_of_ADXL345_Init:
  1958                           
  1959                           	psect	text9
  1960  0315                     __ptext9:	
  1961 ;; *************** function _ADXL345_Write *****************
  1962 ;; Defined at:
  1963 ;;		line 18 in file "ADXL345.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  add             2    5[COMMON] int 
  1966 ;;  data            2    7[COMMON] int 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         4       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0
  1981 ;;      Totals:         4       0       0       0       0
  1982 ;;Total ram usage:        4 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    3
  1985 ;; This function calls:
  1986 ;;		_MAS_START
  1987 ;;		_MAS_STOP
  1988 ;;		_MAS_WRITE
  1989 ;; This function is called by:
  1990 ;;		_ADXL345_Init
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _ADXL345_Write
  1996  0315                     _ADXL345_Write:
  1997  0315                     l1023:	
  1998                           ;incstack = 0
  1999                           ; Regs used in _ADXL345_Write: [wreg+status,2+status,0+pclath+cstack]
  2000                           
  2001                           
  2002                           ;ADXL345.c: 18: void ADXL345_Write(int add, int data);ADXL345.c: 19: {;ADXL345.c: 20:   
      +                                 MAS_START();
  2003  0315  120A  118A  236C  120A  118A  	fcall	_MAS_START
  2004                           
  2005                           ;ADXL345.c: 21:          MAS_WRITE(0xA6);
  2006  031A  30A6               	movlw	166
  2007  031B  00F3               	movwf	MAS_WRITE@d
  2008  031C  3000               	movlw	0
  2009  031D  00F4               	movwf	MAS_WRITE@d+1
  2010  031E  120A  118A  2359  120A  118A  	fcall	_MAS_WRITE
  2011                           
  2012                           ;ADXL345.c: 22:          MAS_WRITE(add);
  2013  0323  0876               	movf	ADXL345_Write@add+1,w
  2014  0324  00F4               	movwf	MAS_WRITE@d+1
  2015  0325  0875               	movf	ADXL345_Write@add,w
  2016  0326  00F3               	movwf	MAS_WRITE@d
  2017  0327  120A  118A  2359  120A  118A  	fcall	_MAS_WRITE
  2018                           
  2019                           ;ADXL345.c: 23:          MAS_WRITE(data);
  2020  032C  0878               	movf	ADXL345_Write@data+1,w
  2021  032D  00F4               	movwf	MAS_WRITE@d+1
  2022  032E  0877               	movf	ADXL345_Write@data,w
  2023  032F  00F3               	movwf	MAS_WRITE@d
  2024  0330  120A  118A  2359  120A  118A  	fcall	_MAS_WRITE
  2025                           
  2026                           ;ADXL345.c: 24:          MAS_STOP();
  2027  0335  120A  118A  2363  120A  118A  	fcall	_MAS_STOP
  2028  033A                     l125:
  2029  033A  0008               	return
  2030  033B                     __end_of_ADXL345_Write:
  2031                           
  2032                           	psect	text10
  2033  0359                     __ptext10:	
  2034 ;; *************** function _MAS_WRITE *****************
  2035 ;; Defined at:
  2036 ;;		line 44 in file "I2C.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  d               2    3[COMMON] unsigned int 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0, pclath, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2050 ;;      Params:         2       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0
  2053 ;;      Totals:         2       0       0       0       0
  2054 ;;Total ram usage:        2 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    2
  2057 ;; This function calls:
  2058 ;;		_MAS_WAIT
  2059 ;; This function is called by:
  2060 ;;		_ADXL345_Write
  2061 ;;		_ADXL345_Read
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function _MAS_WRITE
  2067  0359                     _MAS_WRITE:
  2068  0359                     l913:	
  2069                           ;incstack = 0
  2070                           ; Regs used in _MAS_WRITE: [wreg+status,2+status,0+pclath+cstack]
  2071                           
  2072                           
  2073                           ;I2C.c: 45:     MAS_WAIT();
  2074  0359  120A  118A  234C  120A  118A  	fcall	_MAS_WAIT
  2075  035E                     l915:
  2076                           
  2077                           ;I2C.c: 46:     SSPBUF = d;
  2078  035E  0873               	movf	MAS_WRITE@d,w
  2079  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0361  0093               	movwf	19	;volatile
  2082  0362                     l47:
  2083  0362  0008               	return
  2084  0363                     __end_of_MAS_WRITE:
  2085                           
  2086                           	psect	text11
  2087  0363                     __ptext11:	
  2088 ;; *************** function _MAS_STOP *****************
  2089 ;; Defined at:
  2090 ;;		line 39 in file "I2C.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;		None
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0, pclath, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2104 ;;      Params:         0       0       0       0       0
  2105 ;;      Locals:         0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0
  2107 ;;      Totals:         0       0       0       0       0
  2108 ;;Total ram usage:        0 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:    2
  2111 ;; This function calls:
  2112 ;;		_MAS_WAIT
  2113 ;; This function is called by:
  2114 ;;		_ADXL345_Write
  2115 ;;		_ADXL345_Read
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           
  2120                           ;psect for function _MAS_STOP
  2121  0363                     _MAS_STOP:
  2122  0363                     l909:	
  2123                           ;incstack = 0
  2124                           ; Regs used in _MAS_STOP: [wreg+status,2+status,0+pclath+cstack]
  2125                           
  2126                           
  2127                           ;I2C.c: 40:     MAS_WAIT();
  2128  0363  120A  118A  234C  120A  118A  	fcall	_MAS_WAIT
  2129  0368                     l911:
  2130                           
  2131                           ;I2C.c: 41:     PEN = 1;
  2132  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2133  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2134  036A  1511               	bsf	17,2	;volatile
  2135  036B                     l44:
  2136  036B  0008               	return
  2137  036C                     __end_of_MAS_STOP:
  2138                           
  2139                           	psect	text12
  2140  036C                     __ptext12:	
  2141 ;; *************** function _MAS_START *****************
  2142 ;; Defined at:
  2143 ;;		line 29 in file "I2C.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0, pclath, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    2
  2164 ;; This function calls:
  2165 ;;		_MAS_WAIT
  2166 ;; This function is called by:
  2167 ;;		_ADXL345_Write
  2168 ;;		_ADXL345_Read
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           
  2173                           ;psect for function _MAS_START
  2174  036C                     _MAS_START:
  2175  036C                     l905:	
  2176                           ;incstack = 0
  2177                           ; Regs used in _MAS_START: [wreg+status,2+status,0+pclath+cstack]
  2178                           
  2179                           
  2180                           ;I2C.c: 30:     MAS_WAIT();
  2181  036C  120A  118A  234C  120A  118A  	fcall	_MAS_WAIT
  2182  0371                     l907:
  2183                           
  2184                           ;I2C.c: 31:     SEN = 1;
  2185  0371  1683               	bsf	3,5	;RP0=1, select bank1
  2186  0372  1303               	bcf	3,6	;RP1=0, select bank1
  2187  0373  1411               	bsf	17,0	;volatile
  2188  0374                     l38:
  2189  0374  0008               	return
  2190  0375                     __end_of_MAS_START:
  2191                           
  2192                           	psect	text13
  2193  034C                     __ptext13:	
  2194 ;; *************** function _MAS_WAIT *****************
  2195 ;; Defined at:
  2196 ;;		line 25 in file "I2C.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0
  2213 ;;      Totals:         0       0       0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    1
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_MAS_START
  2221 ;;		_MAS_STOP
  2222 ;;		_MAS_WRITE
  2223 ;;		_MAS_READ
  2224 ;;		_MAS_RST
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _MAS_WAIT
  2230  034C                     _MAS_WAIT:
  2231  034C                     l901:	
  2232                           ;incstack = 0
  2233                           ; Regs used in _MAS_WAIT: [wreg+status,2]
  2234                           
  2235  034C                     l32:	
  2236                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2237                           
  2238  034C  1683               	bsf	3,5	;RP0=1, select bank1
  2239  034D  1303               	bcf	3,6	;RP1=0, select bank1
  2240  034E  1914               	btfsc	20,2	;volatile
  2241  034F  2B51               	goto	u271
  2242  0350  2B52               	goto	u270
  2243  0351                     u271:
  2244  0351  2B4C               	goto	l32
  2245  0352                     u270:
  2246  0352                     l903:
  2247  0352  0811               	movf	17,w	;volatile
  2248  0353  391F               	andlw	31
  2249  0354  1D03               	btfss	3,2
  2250  0355  2B57               	goto	u281
  2251  0356  2B58               	goto	u280
  2252  0357                     u281:
  2253  0357  2B4C               	goto	l32
  2254  0358                     u280:
  2255  0358                     l35:
  2256  0358  0008               	return
  2257  0359                     __end_of_MAS_WAIT:
  2258                           
  2259                           	psect	text14
  2260  033B                     __ptext14:	
  2261 ;; *************** function _ISR *****************
  2262 ;; Defined at:
  2263 ;;		line 79 in file "PIC_MAIN.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;		None
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         0       0       0       0       0
  2278 ;;      Locals:         0       0       0       0       0
  2279 ;;      Temps:          3       0       0       0       0
  2280 ;;      Totals:         3       0       0       0       0
  2281 ;;Total ram usage:        3 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		Interrupt level 1
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function _ISR
  2292  033B                     _ISR:
  2293  033B                     i1l877:
  2294                           
  2295                           ;PIC_MAIN.c: 80:     if (PIR1bits.RCIF){
  2296  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2297  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2298  033D  1E8C               	btfss	12,5	;volatile
  2299  033E  2B40               	goto	u26_21
  2300  033F  2B41               	goto	u26_20
  2301  0340                     u26_21:
  2302  0340  2B45               	goto	i1l104
  2303  0341                     u26_20:
  2304  0341                     i1l879:
  2305                           
  2306                           ;PIC_MAIN.c: 81:         Read_val = RCREG;
  2307  0341  081A               	movf	26,w	;volatile
  2308  0342  00F0               	movwf	??_ISR
  2309  0343  0870               	movf	??_ISR,w
  2310  0344  00FA               	movwf	_Read_val
  2311  0345                     i1l104:
  2312  0345  0872               	movf	??_ISR+2,w
  2313  0346  008A               	movwf	10
  2314  0347  0E71               	swapf	??_ISR+1,w
  2315  0348  0083               	movwf	3
  2316  0349  0EFE               	swapf	btemp,f
  2317  034A  0E7E               	swapf	btemp,w
  2318  034B  0009               	retfie
  2319  034C                     __end_of_ISR:
  2320  007E                     btemp	set	126	;btemp
  2321  007E                     wtemp0	set	126
  2322                           
  2323                           	psect	intentry
  2324  0004                     __pintentry:	
  2325                           ;incstack = 0
  2326                           ; Regs used in _ISR: [wreg]
  2327                           
  2328  0004                     interrupt_function:
  2329  007E                     saved_w	set	btemp
  2330  0004  00FE               	movwf	btemp
  2331  0005  0E03               	swapf	3,w
  2332  0006  00F1               	movwf	??_ISR+1
  2333  0007  080A               	movf	10,w
  2334  0008  00F2               	movwf	??_ISR+2
  2335  0009  120A  118A  2B3B   	ljmp	_ISR
  2336                           
  2337                           	psect	config
  2338                           
  2339                           ;Config register CONFIG1 @ 0x2007
  2340                           ;	Oscillator Selection bits
  2341                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2342                           ;	Watchdog Timer Enable bit
  2343                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2344                           ;	Power-up Timer Enable bit
  2345                           ;	PWRTE = OFF, PWRT disabled
  2346                           ;	RE3/MCLR pin function select bit
  2347                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2348                           ;	Code Protection bit
  2349                           ;	CP = OFF, Program memory code protection is disabled
  2350                           ;	Data Code Protection bit
  2351                           ;	CPD = OFF, Data memory code protection is disabled
  2352                           ;	Brown Out Reset Selection bits
  2353                           ;	BOREN = OFF, BOR disabled
  2354                           ;	Internal External Switchover bit
  2355                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2356                           ;	Fail-Safe Clock Monitor Enabled bit
  2357                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2358                           ;	Low Voltage Programming Enable bit
  2359                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2360                           ;	In-Circuit Debugger Mode bit
  2361                           ;	DEBUG = 0x1, unprogrammed default
  2362  2007                     	org	8199
  2363  2007  20D4               	dw	8404
  2364                           
  2365                           ;Config register CONFIG2 @ 0x2008
  2366                           ;	Brown-out Reset Selection bit
  2367                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2368                           ;	Flash Program Memory Self Write Enable bits
  2369                           ;	WRT = OFF, Write protection off
  2370  2008                     	org	8200
  2371  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     31      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _USART_Initialize->___aldiv
    _MAS_INIT->___lldiv
    _ADXL345_Read->_MAS_READ
    _ADXL345_Init->_ADXL345_Write
    _ADXL345_Write->_MAS_WRITE

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _Setup->_USART_Initialize
    _USART_Initialize->___aldiv
    _MAS_INIT->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3383
                                             28 BANK0      3     3      0
                       _ADXL345_Init
                       _ADXL345_Read
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    1353
                           _MAS_INIT
                   _USART_Initialize
 ---------------------------------------------------------------------------------
 (2) _USART_Initialize                                    20    16      4     811
                                              8 BANK0     20    16      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     625
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _MAS_INIT                                             8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _ADXL345_Read                                         4     2      2    1204
                                              0 BANK0      4     2      2
                           _MAS_READ
                          _MAS_START
                           _MAS_STOP
                          _MAS_WRITE
 ---------------------------------------------------------------------------------
 (2) _MAS_READ                                             6     4      2     121
                                              3 COMMON     6     4      2
                           _MAS_WAIT
 ---------------------------------------------------------------------------------
 (1) _ADXL345_Init                                         2     2      0     826
                                              0 BANK0      2     2      0
                      _ADXL345_Write
 ---------------------------------------------------------------------------------
 (2) _ADXL345_Write                                        4     0      4     826
                                              5 COMMON     4     0      4
                          _MAS_START
                           _MAS_STOP
                          _MAS_WRITE
 ---------------------------------------------------------------------------------
 (2) _MAS_WRITE                                            2     0      2     478
                                              3 COMMON     2     0      2
                           _MAS_WAIT
 ---------------------------------------------------------------------------------
 (2) _MAS_STOP                                             0     0      0       0
                           _MAS_WAIT
 ---------------------------------------------------------------------------------
 (2) _MAS_START                                            0     0      0       0
                           _MAS_WAIT
 ---------------------------------------------------------------------------------
 (3) _MAS_WAIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADXL345_Init
     _ADXL345_Write
       _MAS_START
         _MAS_WAIT
       _MAS_STOP
         _MAS_WAIT
       _MAS_WRITE
         _MAS_WAIT
   _ADXL345_Read
     _MAS_READ
       _MAS_WAIT
     _MAS_START
       _MAS_WAIT
     _MAS_STOP
       _MAS_WAIT
     _MAS_WRITE
       _MAS_WAIT
   _Setup
     _MAS_INIT
       ___lldiv
     _USART_Initialize
       ___aldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 21:31:29 2021

                       l32 034C                         l50 0314                         l35 0358  
                       l44 036B                         l29 0289                         l38 0374  
                       l47 0362                         l65 01A6                         l98 02E7  
 __end_of_USART_Initialize 01A7                        l131 02BA                        l125 033A  
                      l128 024F                        l253 020E                        l282 0030  
                      l292 00B8                        l901 034C                        l903 0352  
                      l911 0368                        l905 036C                        l913 0359  
                      l907 0371                        l915 035E                        l909 0363  
                      l993 02E8                        l995 02ED                        l997 02F5  
                      l999 02FE                        u270 0352                        u271 0351  
                      u280 0358                        u520 01B9                        u600 0034  
                      _PEN 048A                        u281 0357                        u521 01B8  
                      u601 0033                        u610 0053                        u611 0052  
                      u540 01CD                        u700 014F                        _ISR 033B  
                      u541 01CC                        u470 030C                        u630 0067  
                      u710 0168                        u471 0308                        u535 01BE  
                      u631 0066                        u560 01E8                        u561 01E7  
                      u625 0058                        u721 017A                        u705 014A  
                      u650 0082                        u722 017B                        u555 01CF  
                      u651 0081                        u723 0180                        u715 0163  
                      u484 030F                        u580 0206                        u724 0181  
                      _SEN 0488                        u581 0205                        u565 01E4  
                      u645 0069                        u725 0186                        u670 00A0  
                      u590 0023                        u726 0187                        u575 01F8  
                      u671 009F                        u655 007E                        u591 0022  
                      u680 00A5                        u681 00A4                        u665 0092  
                      u737 00C1                        u690 0267                        u747 029D  
                      u757 02B5                        u695 0262                       ?_ISR 0070  
    __size_of_ADXL345_Init 0031      __size_of_ADXL345_Read 0041                       l1001 0303  
                     l1003 030F                       l1005 0310                       l1101 001D  
                     l1023 0315                       l1111 004B                       l1103 0023  
                     l1121 0070                       l1113 0053                       l1105 0034  
                     l1201 00E5                       l1123 0082                       l1115 0056  
                     l1131 00A0                       l1107 003F                       l1203 00F4  
                     l1141 0254                       l1133 00A5                       l1125 0090  
                     l1117 0063                       l1109 0043                       l1205 0103  
                     l1143 0257                       l1135 00B0                       l1127 0091  
                     l1119 0067                       l1151 0134                       l1207 0112  
                     l1081 01C9                       l1145 0286                       l1129 009A  
                     l1161 01A4                       l1153 0141                       l1209 0121  
                     l1091 01F7                       l1083 01CD                       l1075 01A7  
                     l1147 0287                       l1139 0250                       l1163 01A5  
                     l1155 019E                       l1171 02C6                       l1181 0297  
                     l1093 0200                       l1085 01D6                       l1077 01B9  
                     l1149 0288                       l1157 01A2                       l1173 02C9  
                     l1165 02BB                       l1183 02A2                       l1087 01E8  
                     l1079 01BC                       l1095 0206                       l1159 01A3  
                     l1175 02D8                       l1167 02C4                       l1191 00B9  
                     l1185 020F                       l1089 01F6                       l1169 02C5  
                     l1193 00C7                       l1179 028A                       l1187 0249  
                     l1099 001C                       l1195 00CC                       l1197 00D1  
                     l1199 00D5                       _RCEN 048B                       _RSEN 0489  
                     _main 00B9                       btemp 007E                       start 000C  
       __size_of_MAS_START 0009         __size_of_MAS_WRITE 000A                      ??_ISR 0070  
         __end_of_MAS_INIT 028A           __end_of_MAS_READ 0315           __end_of_MAS_WAIT 0359  
         __end_of_MAS_STOP 036C            __end_of___aldiv 00B9                      ?_main 0070  
                    _ACKEN 048C                      _ACKDT 048D     __size_of_ADXL345_Write 0026  
                    _ANSEL 0188            __end_of___lldiv 020F                      i1l104 0345  
             _ADXL345_Init 028A               _ADXL345_Read 020F                      i1l877 033B  
                    i1l879 0341                      _RCREG 001A                      u26_20 0341  
                    u26_21 0340                      _SPBRG 0099                      _PORTA 0005  
                    _TRISA 0085                      _Setup 02BB                      pclath 000A  
                    status 0003                      wtemp0 007E           ADXL345_Write@add 0075  
          __initialization 000F               __end_of_main 0134                     ??_main 003C  
                   ?_Setup 0070          __end_of_MAS_START 0375          __end_of_MAS_WRITE 0363  
            _ADXL345_Write 0315                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___aldiv 0073                  ??___lldiv 0073         ADXL345_Read@retval 0022  
                   saved_w 007E             ?_ADXL345_Write 0075          ADXL345_Write@data 0077  
  __end_of__initialization 0018                  ?_MAS_INIT 0028                  ?_MAS_READ 0073  
                ?_MAS_WAIT 0070                  ?_MAS_STOP 0070               MAS_READ@temp 0077  
           __pcstackCOMMON 0070              __end_of_Setup 02E8                  MAS_INIT@c 0028  
                MAS_READ@a 0073          ?_USART_Initialize 0028         ??_USART_Initialize 002C  
                  ??_Setup 007A                 __pbssBANK0 003F                 ??_MAS_INIT 002C  
               ??_MAS_READ 0075                 ??_MAS_WAIT 0073                 ??_MAS_STOP 0073  
               __pmaintext 00B9                 __pintentry 0004                    _SSPCON2 0091  
          ??_ADXL345_Write 0079                    _SSPSTAT 0094                    ___aldiv 001C  
                  ___lldiv 01A7                    __ptext1 02BB                    __ptext2 0134  
                  __ptext3 001C                    __ptext4 0250                    __ptext5 01A7  
                  __ptext6 020F                    __ptext7 02E8                    __ptext8 028A  
                  __ptext9 0315               __size_of_ISR 0011           ___aldiv@dividend 0024  
     end_of_initialization 0018                  _MAS_START 036C                  _MAS_WRITE 0359  
          ___lldiv@divisor 0020            ___lldiv@counter 0078          USART_Initialize@x 0038  
                _RCSTAbits 0018           ___aldiv@quotient 0076                 ?_MAS_START 0070  
               ?_MAS_WRITE 0073                  _TXSTAbits 0098            ADXL345_Read@add 0020  
        __size_of_MAS_INIT 003A          __size_of_MAS_READ 002D          __size_of_MAS_WAIT 000D  
        __size_of_MAS_STOP 0009                _BAUDCTLbits 0187          _accelerometer_val 003F  
      start_initialization 000F                __end_of_ISR 034C                 MAS_WRITE@d 0073  
__size_of_USART_Initialize 0073              ?_ADXL345_Init 0070              ?_ADXL345_Read 0020  
              __pbssCOMMON 007A                  ___latbits 0002              __pcstackBANK0 0020  
              ??_MAS_START 0073                ??_MAS_WRITE 0075                   ?___aldiv 0020  
                 ?___lldiv 0020             ??_ADXL345_Init 0020             ??_ADXL345_Read 0079  
           __size_of_Setup 002D      __end_of_ADXL345_Write 033B            ___aldiv@divisor 0020  
        interrupt_function 0004            ___aldiv@counter 0074                   _MAS_INIT 0250  
                 _MAS_READ 02E8                   _MAS_WAIT 034C                   _MAS_STOP 0363  
                 _PIE1bits 008C                   _PIR1bits 000C           _USART_Initialize 0134  
                 _Read_val 007A           __size_of___aldiv 009D           __size_of___lldiv 0068  
                 __ptext10 0359                   __ptext11 0363                   __ptext12 036C  
                 __ptext13 034C                   __ptext14 033B              __size_of_main 007B  
     __end_of_ADXL345_Init 02BB       __end_of_ADXL345_Read 0250                 _INTCONbits 000B  
                 intlevel1 0000           ___lldiv@dividend 0024                 _OSCCONbits 008F  
         ___lldiv@quotient 0074               ___aldiv@sign 0075   USART_Initialize@baudrate 0028  
