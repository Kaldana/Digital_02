

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 14 20:49:02 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  0019                     _TXREG	set	25
   453  0005                     _PORTAbits	set	5
   454  001A                     _RCREG	set	26
   455  000C                     _PIR1bits	set	12
   456  0009                     _PORTE	set	9
   457  0008                     _PORTD	set	8
   458  0006                     _PORTB	set	6
   459  0005                     _PORTA	set	5
   460  000B                     _INTCONbits	set	11
   461  0018                     _RCSTAbits	set	24
   462  0013                     _SSPBUF	set	19
   463  0014                     _SSPCON	set	20
   464  008F                     _OSCCONbits	set	143
   465  0089                     _TRISE	set	137
   466  0088                     _TRISD	set	136
   467  0086                     _TRISB	set	134
   468  0085                     _TRISA	set	133
   469  008C                     _PIE1bits	set	140
   470  0099                     _SPBRG	set	153
   471  0098                     _TXSTAbits	set	152
   472  0094                     _SSPSTAT	set	148
   473  0093                     _SSPADD	set	147
   474  0091                     _SSPCON2	set	145
   475  048C                     _ACKEN	set	1164
   476  048D                     _ACKDT	set	1165
   477  048B                     _RCEN	set	1163
   478  048A                     _PEN	set	1162
   479  0489                     _RSEN	set	1161
   480  0488                     _SEN	set	1160
   481  043C                     _TRISC4	set	1084
   482  043B                     _TRISC3	set	1083
   483  0189                     _ANSELH	set	393
   484  0188                     _ANSEL	set	392
   485  0187                     _BAUDCTLbits	set	391
   486                           
   487                           	psect	cinit
   488  0011                     start_initialization:	
   489                           ; #config settings
   490                           
   491  0011                     __initialization:
   492                           
   493                           ; Clear objects allocated to COMMON
   494  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   495  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   496  0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   497                           
   498                           ; Clear objects allocated to BANK0
   499  0014  1283               	bcf	3,5	;RP0=0, select bank0
   500  0015  1303               	bcf	3,6	;RP1=0, select bank0
   501  0016  01C2               	clrf	__pbssBANK0& (0+127)
   502  0017  01C3               	clrf	(__pbssBANK0+1)& (0+127)
   503  0018  01C4               	clrf	(__pbssBANK0+2)& (0+127)
   504  0019  01C5               	clrf	(__pbssBANK0+3)& (0+127)
   505  001A  01C6               	clrf	(__pbssBANK0+4)& (0+127)
   506  001B  01C7               	clrf	(__pbssBANK0+5)& (0+127)
   507  001C  01C8               	clrf	(__pbssBANK0+6)& (0+127)
   508  001D  01C9               	clrf	(__pbssBANK0+7)& (0+127)
   509  001E                     end_of_initialization:	
   510                           ;End of C runtime variable initialization code
   511                           
   512  001E                     __end_of__initialization:
   513  001E  0183               	clrf	3
   514  001F  120A  118A  2932   	ljmp	_main	;jump to C main() function
   515                           
   516                           	psect	bssCOMMON
   517  0077                     __pbssCOMMON:
   518  0077                     _dato:
   519  0077                     	ds	2
   520  0079                     _Read_val:
   521  0079                     	ds	1
   522                           
   523                           	psect	bssBANK0
   524  0042                     __pbssBANK0:
   525  0042                     _accelerometer_val:
   526  0042                     	ds	6
   527  0048                     _controlvar:
   528  0048                     	ds	2
   529                           
   530                           	psect	cstackCOMMON
   531  0070                     __pcstackCOMMON:
   532  0070                     ?_ADXL345_Init:
   533  0070                     ?_MAS_WAIT:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_MAS_START:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_MAS_STOP:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_Setup:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_ISR:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ??_ISR:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_main:	
   552                           ; 1 bytes @ 0x0
   553                           
   554                           
   555                           ; 1 bytes @ 0x0
   556  0070                     	ds	4
   557  0074                     ??_MAS_WAIT:
   558  0074                     ??_MAS_START:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0074                     ??_MAS_STOP:	
   562                           ; 1 bytes @ 0x4
   563                           
   564  0074                     ?_MAS_WRITE:	
   565                           ; 1 bytes @ 0x4
   566                           
   567  0074                     ??___lldiv:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0074                     ??___aldiv:	
   571                           ; 1 bytes @ 0x4
   572                           
   573  0074                     ?_MAS_READ:	
   574                           ; 1 bytes @ 0x4
   575                           
   576  0074                     MAS_WRITE@d:	
   577                           ; 2 bytes @ 0x4
   578                           
   579  0074                     MAS_READ@a:	
   580                           ; 2 bytes @ 0x4
   581                           
   582                           
   583                           ; 2 bytes @ 0x4
   584  0074                     	ds	2
   585  0076                     ??_ADXL345_Read:
   586  0076                     ??_MAS_WRITE:	
   587                           ; 1 bytes @ 0x6
   588                           
   589  0076                     ??_Setup:	
   590                           ; 1 bytes @ 0x6
   591                           
   592  0076                     ??_main:	
   593                           ; 1 bytes @ 0x6
   594                           
   595  0076                     ??_ADXL345_Write:	
   596                           ; 1 bytes @ 0x6
   597                           
   598                           
   599                           ; 1 bytes @ 0x6
   600  0076                     	ds	1
   601                           
   602                           	psect	cstackBANK0
   603  0020                     __pcstackBANK0:
   604  0020                     ??_MAS_READ:
   605  0020                     ?_ADXL345_Write:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0020                     ?___lldiv:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0020                     ?___aldiv:	
   612                           ; 4 bytes @ 0x0
   613                           
   614  0020                     ADXL345_Write@add:	
   615                           ; 4 bytes @ 0x0
   616                           
   617  0020                     ___lldiv@divisor:	
   618                           ; 2 bytes @ 0x0
   619                           
   620  0020                     ___aldiv@divisor:	
   621                           ; 4 bytes @ 0x0
   622                           
   623                           
   624                           ; 4 bytes @ 0x0
   625  0020                     	ds	2
   626  0022                     MAS_READ@temp:
   627  0022                     ADXL345_Write@data:	
   628                           ; 2 bytes @ 0x2
   629                           
   630                           
   631                           ; 2 bytes @ 0x2
   632  0022                     	ds	2
   633  0024                     ??_ADXL345_Init:
   634  0024                     ?_ADXL345_Read:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0024                     ADXL345_Read@add:	
   638                           ; 2 bytes @ 0x4
   639                           
   640  0024                     ___lldiv@dividend:	
   641                           ; 2 bytes @ 0x4
   642                           
   643  0024                     ___aldiv@dividend:	
   644                           ; 4 bytes @ 0x4
   645                           
   646                           
   647                           ; 4 bytes @ 0x4
   648  0024                     	ds	2
   649  0026                     ADXL345_Read@retval:
   650                           
   651                           ; 2 bytes @ 0x6
   652  0026                     	ds	2
   653  0028                     ___aldiv@counter:
   654  0028                     ___lldiv@quotient:	
   655                           ; 1 bytes @ 0x8
   656                           
   657                           
   658                           ; 4 bytes @ 0x8
   659  0028                     	ds	1
   660  0029                     ___aldiv@sign:
   661                           
   662                           ; 1 bytes @ 0x9
   663  0029                     	ds	1
   664  002A                     ___aldiv@quotient:
   665                           
   666                           ; 4 bytes @ 0xA
   667  002A                     	ds	2
   668  002C                     ___lldiv@counter:
   669                           
   670                           ; 1 bytes @ 0xC
   671  002C                     	ds	1
   672  002D                     ?_MAS_INIT:
   673  002D                     MAS_INIT@c:	
   674                           ; 1 bytes @ 0xD
   675                           
   676                           
   677                           ; 4 bytes @ 0xD
   678  002D                     	ds	1
   679  002E                     ?_USART_Initialize:
   680  002E                     USART_Initialize@baudrate:	
   681                           ; 1 bytes @ 0xE
   682                           
   683                           
   684                           ; 4 bytes @ 0xE
   685  002E                     	ds	3
   686  0031                     ??_MAS_INIT:
   687                           
   688                           ; 1 bytes @ 0x11
   689  0031                     	ds	1
   690  0032                     ??_USART_Initialize:
   691                           
   692                           ; 1 bytes @ 0x12
   693  0032                     	ds	12
   694  003E                     USART_Initialize@x:
   695                           
   696                           ; 4 bytes @ 0x1E
   697  003E                     	ds	4
   698                           
   699                           	psect	maintext
   700  0132                     __pmaintext:	
   701 ;;
   702 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   703 ;;
   704 ;; *************** function _main *****************
   705 ;; Defined at:
   706 ;;		line 126 in file "PIC_MAIN.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : B00/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       0       0       0       0
   721 ;;      Locals:         0       0       0       0       0
   722 ;;      Temps:          1       0       0       0       0
   723 ;;      Totals:         1       0       0       0       0
   724 ;;Total ram usage:        1 bytes
   725 ;; Hardware stack levels required when called:    6
   726 ;; This function calls:
   727 ;;		_ADXL345_Read
   728 ;;		_Setup
   729 ;; This function is called by:
   730 ;;		Startup code after reset
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _main
   736  0132                     _main:
   737  0132                     l1286:	
   738                           ;incstack = 0
   739                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   740                           
   741                           
   742                           ;PIC_MAIN.c: 128:     Setup();
   743  0132  120A  118A  2290  120A  118A  	fcall	_Setup
   744  0137                     l1288:
   745                           
   746                           ;PIC_MAIN.c: 129:     OSCCONbits.IRCF = 0b111;
   747  0137  3070               	movlw	112
   748  0138  1683               	bsf	3,5	;RP0=1, select bank1
   749  0139  1303               	bcf	3,6	;RP1=0, select bank1
   750  013A  048F               	iorwf	15,f	;volatile
   751  013B                     l1290:
   752                           
   753                           ;PIC_MAIN.c: 132:         accelerometer_val[0]=ADXL345_Read(0x32);
   754  013B  3032               	movlw	50
   755  013C  1283               	bcf	3,5	;RP0=0, select bank0
   756  013D  00A4               	movwf	ADXL345_Read@add
   757  013E  3000               	movlw	0
   758  013F  00A5               	movwf	ADXL345_Read@add+1
   759  0140  120A  118A  224F  120A  118A  	fcall	_ADXL345_Read
   760  0145  1283               	bcf	3,5	;RP0=0, select bank0
   761  0146  1303               	bcf	3,6	;RP1=0, select bank0
   762  0147  0824               	movf	?_ADXL345_Read,w
   763  0148  00F6               	movwf	??_main
   764  0149  0876               	movf	??_main,w
   765  014A  00C2               	movwf	_accelerometer_val
   766  014B                     l1292:
   767                           
   768                           ;PIC_MAIN.c: 133:         accelerometer_val[1]=ADXL345_Read(0x33);
   769  014B  3033               	movlw	51
   770  014C  00A4               	movwf	ADXL345_Read@add
   771  014D  3000               	movlw	0
   772  014E  00A5               	movwf	ADXL345_Read@add+1
   773  014F  120A  118A  224F  120A  118A  	fcall	_ADXL345_Read
   774  0154  1283               	bcf	3,5	;RP0=0, select bank0
   775  0155  1303               	bcf	3,6	;RP1=0, select bank0
   776  0156  0824               	movf	?_ADXL345_Read,w
   777  0157  00F6               	movwf	??_main
   778  0158  0876               	movf	??_main,w
   779  0159  00C3               	movwf	_accelerometer_val+1
   780  015A                     l1294:
   781                           
   782                           ;PIC_MAIN.c: 134:         accelerometer_val[2]=ADXL345_Read(0x34);
   783  015A  3034               	movlw	52
   784  015B  00A4               	movwf	ADXL345_Read@add
   785  015C  3000               	movlw	0
   786  015D  00A5               	movwf	ADXL345_Read@add+1
   787  015E  120A  118A  224F  120A  118A  	fcall	_ADXL345_Read
   788  0163  1283               	bcf	3,5	;RP0=0, select bank0
   789  0164  1303               	bcf	3,6	;RP1=0, select bank0
   790  0165  0824               	movf	?_ADXL345_Read,w
   791  0166  00F6               	movwf	??_main
   792  0167  0876               	movf	??_main,w
   793  0168  00C4               	movwf	_accelerometer_val+2
   794  0169                     l1296:
   795                           
   796                           ;PIC_MAIN.c: 135:         accelerometer_val[3]=ADXL345_Read(0x35);
   797  0169  3035               	movlw	53
   798  016A  00A4               	movwf	ADXL345_Read@add
   799  016B  3000               	movlw	0
   800  016C  00A5               	movwf	ADXL345_Read@add+1
   801  016D  120A  118A  224F  120A  118A  	fcall	_ADXL345_Read
   802  0172  1283               	bcf	3,5	;RP0=0, select bank0
   803  0173  1303               	bcf	3,6	;RP1=0, select bank0
   804  0174  0824               	movf	?_ADXL345_Read,w
   805  0175  00F6               	movwf	??_main
   806  0176  0876               	movf	??_main,w
   807  0177  00C5               	movwf	_accelerometer_val+3
   808  0178                     l1298:
   809                           
   810                           ;PIC_MAIN.c: 136:         accelerometer_val[4]=ADXL345_Read(0x36);
   811  0178  3036               	movlw	54
   812  0179  00A4               	movwf	ADXL345_Read@add
   813  017A  3000               	movlw	0
   814  017B  00A5               	movwf	ADXL345_Read@add+1
   815  017C  120A  118A  224F  120A  118A  	fcall	_ADXL345_Read
   816  0181  1283               	bcf	3,5	;RP0=0, select bank0
   817  0182  1303               	bcf	3,6	;RP1=0, select bank0
   818  0183  0824               	movf	?_ADXL345_Read,w
   819  0184  00F6               	movwf	??_main
   820  0185  0876               	movf	??_main,w
   821  0186  00C6               	movwf	_accelerometer_val+4
   822  0187                     l1300:
   823                           
   824                           ;PIC_MAIN.c: 137:         accelerometer_val[5]=ADXL345_Read(0x37);
   825  0187  3037               	movlw	55
   826  0188  00A4               	movwf	ADXL345_Read@add
   827  0189  3000               	movlw	0
   828  018A  00A5               	movwf	ADXL345_Read@add+1
   829  018B  120A  118A  224F  120A  118A  	fcall	_ADXL345_Read
   830  0190  1283               	bcf	3,5	;RP0=0, select bank0
   831  0191  1303               	bcf	3,6	;RP1=0, select bank0
   832  0192  0824               	movf	?_ADXL345_Read,w
   833  0193  00F6               	movwf	??_main
   834  0194  0876               	movf	??_main,w
   835  0195  00C7               	movwf	_accelerometer_val+5
   836  0196                     l1302:
   837                           
   838                           ;PIC_MAIN.c: 138:         PORTB = accelerometer_val[2];
   839  0196  0844               	movf	_accelerometer_val+2,w
   840  0197  0086               	movwf	6	;volatile
   841  0198  293B               	goto	l1290
   842  0199  120A  118A  280E   	ljmp	start
   843  019C                     __end_of_main:
   844                           
   845                           	psect	text1
   846  0290                     __ptext1:	
   847 ;; *************** function _Setup *****************
   848 ;; Defined at:
   849 ;;		line 63 in file "PIC_MAIN.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0, pclath, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    5
   870 ;; This function calls:
   871 ;;		_ADXL345_Init
   872 ;;		_MAS_INIT
   873 ;;		_USART_Initialize
   874 ;; This function is called by:
   875 ;;		_main
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           
   880                           ;psect for function _Setup
   881  0290                     _Setup:
   882  0290                     l1268:	
   883                           ;incstack = 0
   884                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
   885                           
   886                           
   887                           ;PIC_MAIN.c: 66:     ANSEL = 0;
   888  0290  1683               	bsf	3,5	;RP0=1, select bank3
   889  0291  1703               	bsf	3,6	;RP1=1, select bank3
   890  0292  0188               	clrf	8	;volatile
   891                           
   892                           ;PIC_MAIN.c: 67:     TRISA = 0;
   893  0293  1683               	bsf	3,5	;RP0=1, select bank1
   894  0294  1303               	bcf	3,6	;RP1=0, select bank1
   895  0295  0185               	clrf	5	;volatile
   896                           
   897                           ;PIC_MAIN.c: 68:     PORTA = 0;
   898  0296  1283               	bcf	3,5	;RP0=0, select bank0
   899  0297  1303               	bcf	3,6	;RP1=0, select bank0
   900  0298  0185               	clrf	5	;volatile
   901                           
   902                           ;PIC_MAIN.c: 69:     ANSELH = 0;
   903  0299  1683               	bsf	3,5	;RP0=1, select bank3
   904  029A  1703               	bsf	3,6	;RP1=1, select bank3
   905  029B  0189               	clrf	9	;volatile
   906                           
   907                           ;PIC_MAIN.c: 70:     TRISB = 0;
   908  029C  1683               	bsf	3,5	;RP0=1, select bank1
   909  029D  1303               	bcf	3,6	;RP1=0, select bank1
   910  029E  0186               	clrf	6	;volatile
   911                           
   912                           ;PIC_MAIN.c: 71:     PORTB = 0;
   913  029F  1283               	bcf	3,5	;RP0=0, select bank0
   914  02A0  1303               	bcf	3,6	;RP1=0, select bank0
   915  02A1  0186               	clrf	6	;volatile
   916                           
   917                           ;PIC_MAIN.c: 73:     TRISD = 0;
   918  02A2  1683               	bsf	3,5	;RP0=1, select bank1
   919  02A3  1303               	bcf	3,6	;RP1=0, select bank1
   920  02A4  0188               	clrf	8	;volatile
   921                           
   922                           ;PIC_MAIN.c: 74:     PORTD = 0;
   923  02A5  1283               	bcf	3,5	;RP0=0, select bank0
   924  02A6  1303               	bcf	3,6	;RP1=0, select bank0
   925  02A7  0188               	clrf	8	;volatile
   926                           
   927                           ;PIC_MAIN.c: 76:     TRISE = 0;
   928  02A8  1683               	bsf	3,5	;RP0=1, select bank1
   929  02A9  1303               	bcf	3,6	;RP1=0, select bank1
   930  02AA  0189               	clrf	9	;volatile
   931                           
   932                           ;PIC_MAIN.c: 77:     PORTE = 0;
   933  02AB  1283               	bcf	3,5	;RP0=0, select bank0
   934  02AC  1303               	bcf	3,6	;RP1=0, select bank0
   935  02AD  0189               	clrf	9	;volatile
   936  02AE                     l1270:
   937                           
   938                           ;PIC_MAIN.c: 79:     USART_Initialize(9600);
   939  02AE  3000               	movlw	0
   940  02AF  00B1               	movwf	USART_Initialize@baudrate+3
   941  02B0  3000               	movlw	0
   942  02B1  00B0               	movwf	USART_Initialize@baudrate+2
   943  02B2  3025               	movlw	37
   944  02B3  00AF               	movwf	USART_Initialize@baudrate+1
   945  02B4  3080               	movlw	128
   946  02B5  00AE               	movwf	USART_Initialize@baudrate
   947  02B6  120A  118A  20BF  120A  118A  	fcall	_USART_Initialize
   948  02BB                     l1272:
   949                           
   950                           ;PIC_MAIN.c: 81:     MAS_INIT(100000);
   951  02BB  3000               	movlw	0
   952  02BC  1283               	bcf	3,5	;RP0=0, select bank0
   953  02BD  1303               	bcf	3,6	;RP1=0, select bank0
   954  02BE  00B0               	movwf	MAS_INIT@c+3
   955  02BF  3001               	movlw	1
   956  02C0  00AF               	movwf	MAS_INIT@c+2
   957  02C1  3086               	movlw	134
   958  02C2  00AE               	movwf	MAS_INIT@c+1
   959  02C3  30A0               	movlw	160
   960  02C4  00AD               	movwf	MAS_INIT@c
   961  02C5  120A  118A  22D0  120A  118A  	fcall	_MAS_INIT
   962  02CA                     l1274:
   963                           
   964                           ;PIC_MAIN.c: 83:     ADXL345_Init();
   965  02CA  120A  118A  230A  120A  118A  	fcall	_ADXL345_Init
   966  02CF                     l114:
   967  02CF  0008               	return
   968  02D0                     __end_of_Setup:
   969                           
   970                           	psect	text2
   971  00BF                     __ptext2:	
   972 ;; *************** function _USART_Initialize *****************
   973 ;; Defined at:
   974 ;;		line 16 in file "USART.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  baudrate        4   14[BANK0 ] const long 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  x               4   30[BANK0 ] long 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       4       0       0       0
   989 ;;      Locals:         0       4       0       0       0
   990 ;;      Temps:          0      12       0       0       0
   991 ;;      Totals:         0      20       0       0       0
   992 ;;Total ram usage:       20 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    2
   995 ;; This function calls:
   996 ;;		___aldiv
   997 ;; This function is called by:
   998 ;;		_Setup
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function _USART_Initialize
  1004  00BF                     _USART_Initialize:
  1005  00BF                     l1248:	
  1006                           ;incstack = 0
  1007                           ; Regs used in _USART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1008                           
  1009                           
  1010                           ;USART.c: 17:     long int x;;USART.c: 20:     TXSTAbits.TX9 = 0;
  1011  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1012  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1013  00C1  1318               	bcf	24,6	;volatile
  1014                           
  1015                           ;USART.c: 22:     TXSTAbits.TXEN = 1;
  1016  00C2  1698               	bsf	24,5	;volatile
  1017                           
  1018                           ;USART.c: 24:     TXSTAbits.SYNC = 0;
  1019  00C3  1218               	bcf	24,4	;volatile
  1020                           
  1021                           ;USART.c: 26:     TXSTAbits.BRGH = 0;
  1022  00C4  1118               	bcf	24,2	;volatile
  1023                           
  1024                           ;USART.c: 27:     BAUDCTLbits.BRG16 = 0;
  1025  00C5  1683               	bsf	3,5	;RP0=1, select bank3
  1026  00C6  1703               	bsf	3,6	;RP1=1, select bank3
  1027  00C7  1187               	bcf	7,3	;volatile
  1028                           
  1029                           ;USART.c: 29:     RCSTAbits.SPEN = 1;
  1030  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1031  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1032  00CA  1798               	bsf	24,7	;volatile
  1033                           
  1034                           ;USART.c: 31:     RCSTAbits.CREN = 1;
  1035  00CB  1618               	bsf	24,4	;volatile
  1036  00CC                     l1250:
  1037                           
  1038                           ;USART.c: 33:     x = (8000000 - baudrate*64)/(baudrate*64);
  1039  00CC  082E               	movf	USART_Initialize@baudrate,w
  1040  00CD  00B2               	movwf	??_USART_Initialize
  1041  00CE  082F               	movf	USART_Initialize@baudrate+1,w
  1042  00CF  00B3               	movwf	??_USART_Initialize+1
  1043  00D0  0830               	movf	USART_Initialize@baudrate+2,w
  1044  00D1  00B4               	movwf	??_USART_Initialize+2
  1045  00D2  0831               	movf	USART_Initialize@baudrate+3,w
  1046  00D3  00B5               	movwf	??_USART_Initialize+3
  1047  00D4  3006               	movlw	6
  1048  00D5                     u875:
  1049  00D5  1003               	clrc
  1050  00D6  0DB2               	rlf	??_USART_Initialize,f
  1051  00D7  0DB3               	rlf	??_USART_Initialize+1,f
  1052  00D8  0DB4               	rlf	??_USART_Initialize+2,f
  1053  00D9  0DB5               	rlf	??_USART_Initialize+3,f
  1054  00DA                     u870:
  1055  00DA  3EFF               	addlw	-1
  1056  00DB  1D03               	skipz
  1057  00DC  28D5               	goto	u875
  1058  00DD  0835               	movf	??_USART_Initialize+3,w
  1059  00DE  00A3               	movwf	___aldiv@divisor+3
  1060  00DF  0834               	movf	??_USART_Initialize+2,w
  1061  00E0  00A2               	movwf	___aldiv@divisor+2
  1062  00E1  0833               	movf	??_USART_Initialize+1,w
  1063  00E2  00A1               	movwf	___aldiv@divisor+1
  1064  00E3  0832               	movf	??_USART_Initialize,w
  1065  00E4  00A0               	movwf	___aldiv@divisor
  1066  00E5  082E               	movf	USART_Initialize@baudrate,w
  1067  00E6  00B6               	movwf	??_USART_Initialize+4
  1068  00E7  082F               	movf	USART_Initialize@baudrate+1,w
  1069  00E8  00B7               	movwf	??_USART_Initialize+5
  1070  00E9  0830               	movf	USART_Initialize@baudrate+2,w
  1071  00EA  00B8               	movwf	??_USART_Initialize+6
  1072  00EB  0831               	movf	USART_Initialize@baudrate+3,w
  1073  00EC  00B9               	movwf	??_USART_Initialize+7
  1074  00ED  3006               	movlw	6
  1075  00EE                     u885:
  1076  00EE  1003               	clrc
  1077  00EF  0DB6               	rlf	??_USART_Initialize+4,f
  1078  00F0  0DB7               	rlf	??_USART_Initialize+5,f
  1079  00F1  0DB8               	rlf	??_USART_Initialize+6,f
  1080  00F2  0DB9               	rlf	??_USART_Initialize+7,f
  1081  00F3                     u880:
  1082  00F3  3EFF               	addlw	-1
  1083  00F4  1D03               	skipz
  1084  00F5  28EE               	goto	u885
  1085  00F6  3000               	movlw	0
  1086  00F7  00BA               	movwf	??_USART_Initialize+8
  1087  00F8  3012               	movlw	18
  1088  00F9  00BB               	movwf	??_USART_Initialize+9
  1089  00FA  307A               	movlw	122
  1090  00FB  00BC               	movwf	??_USART_Initialize+10
  1091  00FC  3000               	movlw	0
  1092  00FD  00BD               	movwf	??_USART_Initialize+11
  1093  00FE  0836               	movf	??_USART_Initialize+4,w
  1094  00FF  02BA               	subwf	??_USART_Initialize+8,f
  1095  0100  0837               	movf	??_USART_Initialize+5,w
  1096  0101  1C03               	skipc
  1097  0102  0F37               	incfsz	??_USART_Initialize+5,w
  1098  0103  2905               	goto	u891
  1099  0104  2906               	goto	u892
  1100  0105                     u891:
  1101  0105  02BB               	subwf	??_USART_Initialize+9,f
  1102  0106                     u892:
  1103  0106  0838               	movf	??_USART_Initialize+6,w
  1104  0107  1C03               	skipc
  1105  0108  0F38               	incfsz	??_USART_Initialize+6,w
  1106  0109  290B               	goto	u893
  1107  010A  290C               	goto	u894
  1108  010B                     u893:
  1109  010B  02BC               	subwf	??_USART_Initialize+10,f
  1110  010C                     u894:
  1111  010C  0839               	movf	??_USART_Initialize+7,w
  1112  010D  1C03               	skipc
  1113  010E  0F39               	incfsz	??_USART_Initialize+7,w
  1114  010F  2911               	goto	u895
  1115  0110  2912               	goto	u896
  1116  0111                     u895:
  1117  0111  02BD               	subwf	??_USART_Initialize+11,f
  1118  0112                     u896:
  1119  0112  083D               	movf	??_USART_Initialize+11,w
  1120  0113  00A7               	movwf	___aldiv@dividend+3
  1121  0114  083C               	movf	??_USART_Initialize+10,w
  1122  0115  00A6               	movwf	___aldiv@dividend+2
  1123  0116  083B               	movf	??_USART_Initialize+9,w
  1124  0117  00A5               	movwf	___aldiv@dividend+1
  1125  0118  083A               	movf	??_USART_Initialize+8,w
  1126  0119  00A4               	movwf	___aldiv@dividend
  1127  011A  120A  118A  2022  120A  118A  	fcall	___aldiv
  1128  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0121  0823               	movf	?___aldiv+3,w
  1131  0122  00C1               	movwf	USART_Initialize@x+3
  1132  0123  0822               	movf	?___aldiv+2,w
  1133  0124  00C0               	movwf	USART_Initialize@x+2
  1134  0125  0821               	movf	?___aldiv+1,w
  1135  0126  00BF               	movwf	USART_Initialize@x+1
  1136  0127  0820               	movf	?___aldiv,w
  1137  0128  00BE               	movwf	USART_Initialize@x
  1138  0129                     l1252:
  1139                           
  1140                           ;USART.c: 34:     SPBRG = x;
  1141  0129  083E               	movf	USART_Initialize@x,w
  1142  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1143  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1144  012C  0099               	movwf	25	;volatile
  1145  012D                     l1254:
  1146                           
  1147                           ;USART.c: 37:     INTCONbits.GIE = 1;
  1148  012D  178B               	bsf	11,7	;volatile
  1149  012E                     l1256:
  1150                           
  1151                           ;USART.c: 39:     INTCONbits.PEIE = 1;
  1152  012E  170B               	bsf	11,6	;volatile
  1153  012F                     l1258:
  1154                           
  1155                           ;USART.c: 42:     PIE1bits.RCIE = 1;
  1156  012F  168C               	bsf	12,5	;volatile
  1157  0130                     l1260:
  1158                           
  1159                           ;USART.c: 44:     PIE1bits.TXIE = 1;
  1160  0130  160C               	bsf	12,4	;volatile
  1161  0131                     l65:
  1162  0131  0008               	return
  1163  0132                     __end_of_USART_Initialize:
  1164                           
  1165                           	psect	text3
  1166  0022                     __ptext3:	
  1167 ;; *************** function ___aldiv *****************
  1168 ;; Defined at:
  1169 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  divisor         4    0[BANK0 ] long 
  1172 ;;  dividend        4    4[BANK0 ] long 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  quotient        4   10[BANK0 ] long 
  1175 ;;  sign            1    9[BANK0 ] unsigned char 
  1176 ;;  counter         1    8[BANK0 ] unsigned char 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  4    0[BANK0 ] long 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1186 ;;      Params:         0       8       0       0       0
  1187 ;;      Locals:         0       6       0       0       0
  1188 ;;      Temps:          1       0       0       0       0
  1189 ;;      Totals:         1      14       0       0       0
  1190 ;;Total ram usage:       15 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    1
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_USART_Initialize
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           
  1201                           ;psect for function ___aldiv
  1202  0022                     ___aldiv:
  1203  0022                     l1180:	
  1204                           ;incstack = 0
  1205                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1206                           
  1207  0022  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0023  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0024  01A9               	clrf	___aldiv@sign
  1210  0025                     l1182:
  1211  0025  1FA3               	btfss	___aldiv@divisor+3,7
  1212  0026  2828               	goto	u741
  1213  0027  2829               	goto	u740
  1214  0028                     u741:
  1215  0028  2836               	goto	l305
  1216  0029                     u740:
  1217  0029                     l1184:
  1218  0029  09A0               	comf	___aldiv@divisor,f
  1219  002A  09A1               	comf	___aldiv@divisor+1,f
  1220  002B  09A2               	comf	___aldiv@divisor+2,f
  1221  002C  09A3               	comf	___aldiv@divisor+3,f
  1222  002D  0AA0               	incf	___aldiv@divisor,f
  1223  002E  1903               	skipnz
  1224  002F  0AA1               	incf	___aldiv@divisor+1,f
  1225  0030  1903               	skipnz
  1226  0031  0AA2               	incf	___aldiv@divisor+2,f
  1227  0032  1903               	skipnz
  1228  0033  0AA3               	incf	___aldiv@divisor+3,f
  1229  0034  01A9               	clrf	___aldiv@sign
  1230  0035  0AA9               	incf	___aldiv@sign,f
  1231  0036                     l305:
  1232  0036  1FA7               	btfss	___aldiv@dividend+3,7
  1233  0037  2839               	goto	u751
  1234  0038  283A               	goto	u750
  1235  0039                     u751:
  1236  0039  2849               	goto	l1190
  1237  003A                     u750:
  1238  003A                     l1186:
  1239  003A  09A4               	comf	___aldiv@dividend,f
  1240  003B  09A5               	comf	___aldiv@dividend+1,f
  1241  003C  09A6               	comf	___aldiv@dividend+2,f
  1242  003D  09A7               	comf	___aldiv@dividend+3,f
  1243  003E  0AA4               	incf	___aldiv@dividend,f
  1244  003F  1903               	skipnz
  1245  0040  0AA5               	incf	___aldiv@dividend+1,f
  1246  0041  1903               	skipnz
  1247  0042  0AA6               	incf	___aldiv@dividend+2,f
  1248  0043  1903               	skipnz
  1249  0044  0AA7               	incf	___aldiv@dividend+3,f
  1250  0045                     l1188:
  1251  0045  3001               	movlw	1
  1252  0046  00F4               	movwf	??___aldiv
  1253  0047  0874               	movf	??___aldiv,w
  1254  0048  06A9               	xorwf	___aldiv@sign,f
  1255  0049                     l1190:
  1256  0049  3000               	movlw	0
  1257  004A  00AD               	movwf	___aldiv@quotient+3
  1258  004B  3000               	movlw	0
  1259  004C  00AC               	movwf	___aldiv@quotient+2
  1260  004D  3000               	movlw	0
  1261  004E  00AB               	movwf	___aldiv@quotient+1
  1262  004F  3000               	movlw	0
  1263  0050  00AA               	movwf	___aldiv@quotient
  1264  0051                     l1192:
  1265  0051  0823               	movf	___aldiv@divisor+3,w
  1266  0052  0422               	iorwf	___aldiv@divisor+2,w
  1267  0053  0421               	iorwf	___aldiv@divisor+1,w
  1268  0054  0420               	iorwf	___aldiv@divisor,w
  1269  0055  1903               	skipnz
  1270  0056  2858               	goto	u761
  1271  0057  2859               	goto	u760
  1272  0058                     u761:
  1273  0058  28A6               	goto	l1212
  1274  0059                     u760:
  1275  0059                     l1194:
  1276  0059  01A8               	clrf	___aldiv@counter
  1277  005A  0AA8               	incf	___aldiv@counter,f
  1278  005B  2869               	goto	l1198
  1279  005C                     l1196:
  1280  005C  3001               	movlw	1
  1281  005D  00F4               	movwf	??___aldiv
  1282  005E                     u775:
  1283  005E  1003               	clrc
  1284  005F  0DA0               	rlf	___aldiv@divisor,f
  1285  0060  0DA1               	rlf	___aldiv@divisor+1,f
  1286  0061  0DA2               	rlf	___aldiv@divisor+2,f
  1287  0062  0DA3               	rlf	___aldiv@divisor+3,f
  1288  0063  0BF4               	decfsz	??___aldiv,f
  1289  0064  285E               	goto	u775
  1290  0065  3001               	movlw	1
  1291  0066  00F4               	movwf	??___aldiv
  1292  0067  0874               	movf	??___aldiv,w
  1293  0068  07A8               	addwf	___aldiv@counter,f
  1294  0069                     l1198:
  1295  0069  1FA3               	btfss	___aldiv@divisor+3,7
  1296  006A  286C               	goto	u781
  1297  006B  286D               	goto	u780
  1298  006C                     u781:
  1299  006C  285C               	goto	l1196
  1300  006D                     u780:
  1301  006D                     l1200:
  1302  006D  3001               	movlw	1
  1303  006E  00F4               	movwf	??___aldiv
  1304  006F                     u795:
  1305  006F  1003               	clrc
  1306  0070  0DAA               	rlf	___aldiv@quotient,f
  1307  0071  0DAB               	rlf	___aldiv@quotient+1,f
  1308  0072  0DAC               	rlf	___aldiv@quotient+2,f
  1309  0073  0DAD               	rlf	___aldiv@quotient+3,f
  1310  0074  0BF4               	decfsz	??___aldiv,f
  1311  0075  286F               	goto	u795
  1312  0076                     l1202:
  1313  0076  0823               	movf	___aldiv@divisor+3,w
  1314  0077  0227               	subwf	___aldiv@dividend+3,w
  1315  0078  1D03               	skipz
  1316  0079  2884               	goto	u805
  1317  007A  0822               	movf	___aldiv@divisor+2,w
  1318  007B  0226               	subwf	___aldiv@dividend+2,w
  1319  007C  1D03               	skipz
  1320  007D  2884               	goto	u805
  1321  007E  0821               	movf	___aldiv@divisor+1,w
  1322  007F  0225               	subwf	___aldiv@dividend+1,w
  1323  0080  1D03               	skipz
  1324  0081  2884               	goto	u805
  1325  0082  0820               	movf	___aldiv@divisor,w
  1326  0083  0224               	subwf	___aldiv@dividend,w
  1327  0084                     u805:
  1328  0084  1C03               	skipc
  1329  0085  2887               	goto	u801
  1330  0086  2888               	goto	u800
  1331  0087                     u801:
  1332  0087  2897               	goto	l1208
  1333  0088                     u800:
  1334  0088                     l1204:
  1335  0088  0820               	movf	___aldiv@divisor,w
  1336  0089  02A4               	subwf	___aldiv@dividend,f
  1337  008A  0821               	movf	___aldiv@divisor+1,w
  1338  008B  1C03               	skipc
  1339  008C  0F21               	incfsz	___aldiv@divisor+1,w
  1340  008D  02A5               	subwf	___aldiv@dividend+1,f
  1341  008E  0822               	movf	___aldiv@divisor+2,w
  1342  008F  1C03               	skipc
  1343  0090  0F22               	incfsz	___aldiv@divisor+2,w
  1344  0091  02A6               	subwf	___aldiv@dividend+2,f
  1345  0092  0823               	movf	___aldiv@divisor+3,w
  1346  0093  1C03               	skipc
  1347  0094  0F23               	incfsz	___aldiv@divisor+3,w
  1348  0095  02A7               	subwf	___aldiv@dividend+3,f
  1349  0096                     l1206:
  1350  0096  142A               	bsf	___aldiv@quotient,0
  1351  0097                     l1208:
  1352  0097  3001               	movlw	1
  1353  0098                     u815:
  1354  0098  1003               	clrc
  1355  0099  0CA3               	rrf	___aldiv@divisor+3,f
  1356  009A  0CA2               	rrf	___aldiv@divisor+2,f
  1357  009B  0CA1               	rrf	___aldiv@divisor+1,f
  1358  009C  0CA0               	rrf	___aldiv@divisor,f
  1359  009D  3EFF               	addlw	-1
  1360  009E  1D03               	skipz
  1361  009F  2898               	goto	u815
  1362  00A0                     l1210:
  1363  00A0  3001               	movlw	1
  1364  00A1  02A8               	subwf	___aldiv@counter,f
  1365  00A2  1D03               	btfss	3,2
  1366  00A3  28A5               	goto	u821
  1367  00A4  28A6               	goto	u820
  1368  00A5                     u821:
  1369  00A5  286D               	goto	l1200
  1370  00A6                     u820:
  1371  00A6                     l1212:
  1372  00A6  0829               	movf	___aldiv@sign,w
  1373  00A7  1903               	btfsc	3,2
  1374  00A8  28AA               	goto	u831
  1375  00A9  28AB               	goto	u830
  1376  00AA                     u831:
  1377  00AA  28B6               	goto	l1216
  1378  00AB                     u830:
  1379  00AB                     l1214:
  1380  00AB  09AA               	comf	___aldiv@quotient,f
  1381  00AC  09AB               	comf	___aldiv@quotient+1,f
  1382  00AD  09AC               	comf	___aldiv@quotient+2,f
  1383  00AE  09AD               	comf	___aldiv@quotient+3,f
  1384  00AF  0AAA               	incf	___aldiv@quotient,f
  1385  00B0  1903               	skipnz
  1386  00B1  0AAB               	incf	___aldiv@quotient+1,f
  1387  00B2  1903               	skipnz
  1388  00B3  0AAC               	incf	___aldiv@quotient+2,f
  1389  00B4  1903               	skipnz
  1390  00B5  0AAD               	incf	___aldiv@quotient+3,f
  1391  00B6                     l1216:
  1392  00B6  082D               	movf	___aldiv@quotient+3,w
  1393  00B7  00A3               	movwf	?___aldiv+3
  1394  00B8  082C               	movf	___aldiv@quotient+2,w
  1395  00B9  00A2               	movwf	?___aldiv+2
  1396  00BA  082B               	movf	___aldiv@quotient+1,w
  1397  00BB  00A1               	movwf	?___aldiv+1
  1398  00BC  082A               	movf	___aldiv@quotient,w
  1399  00BD  00A0               	movwf	?___aldiv
  1400  00BE                     l315:
  1401  00BE  0008               	return
  1402  00BF                     __end_of___aldiv:
  1403                           
  1404                           	psect	text4
  1405  02D0                     __ptext4:	
  1406 ;; *************** function _MAS_INIT *****************
  1407 ;; Defined at:
  1408 ;;		line 15 in file "I2C.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  c               4   13[BANK0 ] const unsigned long 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1422 ;;      Params:         0       4       0       0       0
  1423 ;;      Locals:         0       0       0       0       0
  1424 ;;      Temps:          0       4       0       0       0
  1425 ;;      Totals:         0       8       0       0       0
  1426 ;;Total ram usage:        8 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    2
  1429 ;; This function calls:
  1430 ;;		___lldiv
  1431 ;; This function is called by:
  1432 ;;		_Setup
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _MAS_INIT
  1438  02D0                     _MAS_INIT:
  1439  02D0                     l1220:	
  1440                           ;incstack = 0
  1441                           ; Regs used in _MAS_INIT: [wreg+status,2+status,0+pclath+cstack]
  1442                           
  1443                           
  1444                           ;I2C.c: 16:     SSPCON = 0b00101000;
  1445  02D0  3028               	movlw	40
  1446  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1447  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1448  02D3  0094               	movwf	20	;volatile
  1449  02D4                     l1222:
  1450                           
  1451                           ;I2C.c: 17:     SSPCON2 = 0;
  1452  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  1453  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  1454  02D6  0191               	clrf	17	;volatile
  1455  02D7                     l1224:
  1456                           
  1457                           ;I2C.c: 18:     SSPADD = (8000000/(4*c))-1;
  1458  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1459  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1460  02D9  082D               	movf	MAS_INIT@c,w
  1461  02DA  00B1               	movwf	??_MAS_INIT
  1462  02DB  082E               	movf	MAS_INIT@c+1,w
  1463  02DC  00B2               	movwf	??_MAS_INIT+1
  1464  02DD  082F               	movf	MAS_INIT@c+2,w
  1465  02DE  00B3               	movwf	??_MAS_INIT+2
  1466  02DF  0830               	movf	MAS_INIT@c+3,w
  1467  02E0  00B4               	movwf	??_MAS_INIT+3
  1468  02E1  3002               	movlw	2
  1469  02E2                     u845:
  1470  02E2  1003               	clrc
  1471  02E3  0DB1               	rlf	??_MAS_INIT,f
  1472  02E4  0DB2               	rlf	??_MAS_INIT+1,f
  1473  02E5  0DB3               	rlf	??_MAS_INIT+2,f
  1474  02E6  0DB4               	rlf	??_MAS_INIT+3,f
  1475  02E7                     u840:
  1476  02E7  3EFF               	addlw	-1
  1477  02E8  1D03               	skipz
  1478  02E9  2AE2               	goto	u845
  1479  02EA  0834               	movf	??_MAS_INIT+3,w
  1480  02EB  00A3               	movwf	___lldiv@divisor+3
  1481  02EC  0833               	movf	??_MAS_INIT+2,w
  1482  02ED  00A2               	movwf	___lldiv@divisor+2
  1483  02EE  0832               	movf	??_MAS_INIT+1,w
  1484  02EF  00A1               	movwf	___lldiv@divisor+1
  1485  02F0  0831               	movf	??_MAS_INIT,w
  1486  02F1  00A0               	movwf	___lldiv@divisor
  1487  02F2  3000               	movlw	0
  1488  02F3  00A7               	movwf	___lldiv@dividend+3
  1489  02F4  307A               	movlw	122
  1490  02F5  00A6               	movwf	___lldiv@dividend+2
  1491  02F6  3012               	movlw	18
  1492  02F7  00A5               	movwf	___lldiv@dividend+1
  1493  02F8  3000               	movlw	0
  1494  02F9  00A4               	movwf	___lldiv@dividend
  1495  02FA  120A  118A  219C  120A  118A  	fcall	___lldiv
  1496  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0300  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0301  0820               	movf	?___lldiv,w
  1499  0302  3EFF               	addlw	255
  1500  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1502  0305  0093               	movwf	19	;volatile
  1503  0306                     l1226:
  1504                           
  1505                           ;I2C.c: 19:     SSPSTAT = 0;
  1506  0306  0194               	clrf	20	;volatile
  1507  0307                     l1228:
  1508                           
  1509                           ;I2C.c: 20:     TRISC3 = 1;
  1510  0307  1587               	bsf	7,3	;volatile
  1511  0308                     l1230:
  1512                           
  1513                           ;I2C.c: 21:     TRISC4 = 1;
  1514  0308  1607               	bsf	7,4	;volatile
  1515  0309                     l29:
  1516  0309  0008               	return
  1517  030A                     __end_of_MAS_INIT:
  1518                           
  1519                           	psect	text5
  1520  019C                     __ptext5:	
  1521 ;; *************** function ___lldiv *****************
  1522 ;; Defined at:
  1523 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  divisor         4    0[BANK0 ] unsigned long 
  1526 ;;  dividend        4    4[BANK0 ] unsigned long 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  quotient        4    8[BANK0 ] unsigned long 
  1529 ;;  counter         1   12[BANK0 ] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  4    0[BANK0 ] unsigned long 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, status,0
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1539 ;;      Params:         0       8       0       0       0
  1540 ;;      Locals:         0       5       0       0       0
  1541 ;;      Temps:          1       0       0       0       0
  1542 ;;      Totals:         1      13       0       0       0
  1543 ;;Total ram usage:       14 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_MAS_INIT
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function ___lldiv
  1555  019C                     ___lldiv:
  1556  019C                     l1156:	
  1557                           ;incstack = 0
  1558                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1559                           
  1560  019C  3000               	movlw	0
  1561  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1562  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1563  019F  00AB               	movwf	___lldiv@quotient+3
  1564  01A0  3000               	movlw	0
  1565  01A1  00AA               	movwf	___lldiv@quotient+2
  1566  01A2  3000               	movlw	0
  1567  01A3  00A9               	movwf	___lldiv@quotient+1
  1568  01A4  3000               	movlw	0
  1569  01A5  00A8               	movwf	___lldiv@quotient
  1570  01A6  0823               	movf	___lldiv@divisor+3,w
  1571  01A7  0422               	iorwf	___lldiv@divisor+2,w
  1572  01A8  0421               	iorwf	___lldiv@divisor+1,w
  1573  01A9  0420               	iorwf	___lldiv@divisor,w
  1574  01AA  1903               	skipnz
  1575  01AB  29AD               	goto	u671
  1576  01AC  29AE               	goto	u670
  1577  01AD                     u671:
  1578  01AD  29FB               	goto	l1176
  1579  01AE                     u670:
  1580  01AE                     l1158:
  1581  01AE  01AC               	clrf	___lldiv@counter
  1582  01AF  0AAC               	incf	___lldiv@counter,f
  1583  01B0  29BE               	goto	l1162
  1584  01B1                     l1160:
  1585  01B1  3001               	movlw	1
  1586  01B2  00F4               	movwf	??___lldiv
  1587  01B3                     u685:
  1588  01B3  1003               	clrc
  1589  01B4  0DA0               	rlf	___lldiv@divisor,f
  1590  01B5  0DA1               	rlf	___lldiv@divisor+1,f
  1591  01B6  0DA2               	rlf	___lldiv@divisor+2,f
  1592  01B7  0DA3               	rlf	___lldiv@divisor+3,f
  1593  01B8  0BF4               	decfsz	??___lldiv,f
  1594  01B9  29B3               	goto	u685
  1595  01BA  3001               	movlw	1
  1596  01BB  00F4               	movwf	??___lldiv
  1597  01BC  0874               	movf	??___lldiv,w
  1598  01BD  07AC               	addwf	___lldiv@counter,f
  1599  01BE                     l1162:
  1600  01BE  1FA3               	btfss	___lldiv@divisor+3,7
  1601  01BF  29C1               	goto	u691
  1602  01C0  29C2               	goto	u690
  1603  01C1                     u691:
  1604  01C1  29B1               	goto	l1160
  1605  01C2                     u690:
  1606  01C2                     l1164:
  1607  01C2  3001               	movlw	1
  1608  01C3  00F4               	movwf	??___lldiv
  1609  01C4                     u705:
  1610  01C4  1003               	clrc
  1611  01C5  0DA8               	rlf	___lldiv@quotient,f
  1612  01C6  0DA9               	rlf	___lldiv@quotient+1,f
  1613  01C7  0DAA               	rlf	___lldiv@quotient+2,f
  1614  01C8  0DAB               	rlf	___lldiv@quotient+3,f
  1615  01C9  0BF4               	decfsz	??___lldiv,f
  1616  01CA  29C4               	goto	u705
  1617  01CB                     l1166:
  1618  01CB  0823               	movf	___lldiv@divisor+3,w
  1619  01CC  0227               	subwf	___lldiv@dividend+3,w
  1620  01CD  1D03               	skipz
  1621  01CE  29D9               	goto	u715
  1622  01CF  0822               	movf	___lldiv@divisor+2,w
  1623  01D0  0226               	subwf	___lldiv@dividend+2,w
  1624  01D1  1D03               	skipz
  1625  01D2  29D9               	goto	u715
  1626  01D3  0821               	movf	___lldiv@divisor+1,w
  1627  01D4  0225               	subwf	___lldiv@dividend+1,w
  1628  01D5  1D03               	skipz
  1629  01D6  29D9               	goto	u715
  1630  01D7  0820               	movf	___lldiv@divisor,w
  1631  01D8  0224               	subwf	___lldiv@dividend,w
  1632  01D9                     u715:
  1633  01D9  1C03               	skipc
  1634  01DA  29DC               	goto	u711
  1635  01DB  29DD               	goto	u710
  1636  01DC                     u711:
  1637  01DC  29EC               	goto	l1172
  1638  01DD                     u710:
  1639  01DD                     l1168:
  1640  01DD  0820               	movf	___lldiv@divisor,w
  1641  01DE  02A4               	subwf	___lldiv@dividend,f
  1642  01DF  0821               	movf	___lldiv@divisor+1,w
  1643  01E0  1C03               	skipc
  1644  01E1  0F21               	incfsz	___lldiv@divisor+1,w
  1645  01E2  02A5               	subwf	___lldiv@dividend+1,f
  1646  01E3  0822               	movf	___lldiv@divisor+2,w
  1647  01E4  1C03               	skipc
  1648  01E5  0F22               	incfsz	___lldiv@divisor+2,w
  1649  01E6  02A6               	subwf	___lldiv@dividend+2,f
  1650  01E7  0823               	movf	___lldiv@divisor+3,w
  1651  01E8  1C03               	skipc
  1652  01E9  0F23               	incfsz	___lldiv@divisor+3,w
  1653  01EA  02A7               	subwf	___lldiv@dividend+3,f
  1654  01EB                     l1170:
  1655  01EB  1428               	bsf	___lldiv@quotient,0
  1656  01EC                     l1172:
  1657  01EC  3001               	movlw	1
  1658  01ED                     u725:
  1659  01ED  1003               	clrc
  1660  01EE  0CA3               	rrf	___lldiv@divisor+3,f
  1661  01EF  0CA2               	rrf	___lldiv@divisor+2,f
  1662  01F0  0CA1               	rrf	___lldiv@divisor+1,f
  1663  01F1  0CA0               	rrf	___lldiv@divisor,f
  1664  01F2  3EFF               	addlw	-1
  1665  01F3  1D03               	skipz
  1666  01F4  29ED               	goto	u725
  1667  01F5                     l1174:
  1668  01F5  3001               	movlw	1
  1669  01F6  02AC               	subwf	___lldiv@counter,f
  1670  01F7  1D03               	btfss	3,2
  1671  01F8  29FA               	goto	u731
  1672  01F9  29FB               	goto	u730
  1673  01FA                     u731:
  1674  01FA  29C2               	goto	l1164
  1675  01FB                     u730:
  1676  01FB                     l1176:
  1677  01FB  082B               	movf	___lldiv@quotient+3,w
  1678  01FC  00A3               	movwf	?___lldiv+3
  1679  01FD  082A               	movf	___lldiv@quotient+2,w
  1680  01FE  00A2               	movwf	?___lldiv+2
  1681  01FF  0829               	movf	___lldiv@quotient+1,w
  1682  0200  00A1               	movwf	?___lldiv+1
  1683  0201  0828               	movf	___lldiv@quotient,w
  1684  0202  00A0               	movwf	?___lldiv
  1685  0203                     l276:
  1686  0203  0008               	return
  1687  0204                     __end_of___lldiv:
  1688                           
  1689                           	psect	text6
  1690  030A                     __ptext6:	
  1691 ;; *************** function _ADXL345_Init *****************
  1692 ;; Defined at:
  1693 ;;		line 40 in file "ADXL345.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0
  1709 ;;      Temps:          0       2       0       0       0
  1710 ;;      Totals:         0       2       0       0       0
  1711 ;;Total ram usage:        2 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    4
  1714 ;; This function calls:
  1715 ;;		_ADXL345_Write
  1716 ;; This function is called by:
  1717 ;;		_Setup
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           
  1722                           ;psect for function _ADXL345_Init
  1723  030A                     _ADXL345_Init:
  1724  030A                     l1262:	
  1725                           ;incstack = 0
  1726                           ; Regs used in _ADXL345_Init: [wreg+status,2+status,0+pclath+cstack]
  1727                           
  1728                           
  1729                           ;ADXL345.c: 41:          ADXL345_Write(0x31,0x0B);
  1730  030A  3031               	movlw	49
  1731  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1732  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1733  030D  00A0               	movwf	ADXL345_Write@add
  1734  030E  3000               	movlw	0
  1735  030F  00A1               	movwf	ADXL345_Write@add+1
  1736  0310  300B               	movlw	11
  1737  0311  00A2               	movwf	ADXL345_Write@data
  1738  0312  3000               	movlw	0
  1739  0313  00A3               	movwf	ADXL345_Write@data+1
  1740  0314  120A  118A  236E  120A  118A  	fcall	_ADXL345_Write
  1741  0319                     l1264:
  1742                           
  1743                           ;ADXL345.c: 42:          _delay((unsigned long)((2)*(8000000/4000.0)));
  1744  0319  3006               	movlw	6
  1745  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1746  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1747  031C  00A5               	movwf	??_ADXL345_Init+1
  1748  031D  302F               	movlw	47
  1749  031E  00A4               	movwf	??_ADXL345_Init
  1750  031F                     u907:
  1751  031F  0BA4               	decfsz	??_ADXL345_Init,f
  1752  0320  2B1F               	goto	u907
  1753  0321  0BA5               	decfsz	??_ADXL345_Init+1,f
  1754  0322  2B1F               	goto	u907
  1755  0323  2B24               	nop2
  1756  0324                     l1266:
  1757                           
  1758                           ;ADXL345.c: 43:          ADXL345_Write(0x2D,0x08);
  1759  0324  302D               	movlw	45
  1760  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0327  00A0               	movwf	ADXL345_Write@add
  1763  0328  3000               	movlw	0
  1764  0329  00A1               	movwf	ADXL345_Write@add+1
  1765  032A  3008               	movlw	8
  1766  032B  00A2               	movwf	ADXL345_Write@data
  1767  032C  3000               	movlw	0
  1768  032D  00A3               	movwf	ADXL345_Write@data+1
  1769  032E  120A  118A  236E  120A  118A  	fcall	_ADXL345_Write
  1770                           
  1771                           ;ADXL345.c: 44:          _delay((unsigned long)((2)*(8000000/4000.0)));
  1772  0333  3006               	movlw	6
  1773  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0336  00A5               	movwf	??_ADXL345_Init+1
  1776  0337  302F               	movlw	47
  1777  0338  00A4               	movwf	??_ADXL345_Init
  1778  0339                     u917:
  1779  0339  0BA4               	decfsz	??_ADXL345_Init,f
  1780  033A  2B39               	goto	u917
  1781  033B  0BA5               	decfsz	??_ADXL345_Init+1,f
  1782  033C  2B39               	goto	u917
  1783  033D  2B3E               	nop2
  1784  033E                     l154:
  1785  033E  0008               	return
  1786  033F                     __end_of_ADXL345_Init:
  1787                           
  1788                           	psect	text7
  1789  036E                     __ptext7:	
  1790 ;; *************** function _ADXL345_Write *****************
  1791 ;; Defined at:
  1792 ;;		line 18 in file "ADXL345.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  add             2    0[BANK0 ] int 
  1795 ;;  data            2    2[BANK0 ] int 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, pclath, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1807 ;;      Params:         0       4       0       0       0
  1808 ;;      Locals:         0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0
  1810 ;;      Totals:         0       4       0       0       0
  1811 ;;Total ram usage:        4 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    3
  1814 ;; This function calls:
  1815 ;;		_MAS_START
  1816 ;;		_MAS_STOP
  1817 ;;		_MAS_WRITE
  1818 ;; This function is called by:
  1819 ;;		_ADXL345_Init
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _ADXL345_Write
  1825  036E                     _ADXL345_Write:
  1826  036E                     l1154:	
  1827                           ;incstack = 0
  1828                           ; Regs used in _ADXL345_Write: [wreg+status,2+status,0+pclath+cstack]
  1829                           
  1830                           
  1831                           ;ADXL345.c: 18: void ADXL345_Write(int add, int data);ADXL345.c: 19: {;ADXL345.c: 20:   
      +                                 MAS_START();
  1832  036E  120A  118A  23B8  120A  118A  	fcall	_MAS_START
  1833                           
  1834                           ;ADXL345.c: 21:          MAS_WRITE(0xA6);
  1835  0373  30A6               	movlw	166
  1836  0374  00F4               	movwf	MAS_WRITE@d
  1837  0375  3000               	movlw	0
  1838  0376  00F5               	movwf	MAS_WRITE@d+1
  1839  0377  120A  118A  23A5  120A  118A  	fcall	_MAS_WRITE
  1840                           
  1841                           ;ADXL345.c: 22:          MAS_WRITE(add);
  1842  037C  1283               	bcf	3,5	;RP0=0, select bank0
  1843  037D  1303               	bcf	3,6	;RP1=0, select bank0
  1844  037E  0821               	movf	ADXL345_Write@add+1,w
  1845  037F  00F5               	movwf	MAS_WRITE@d+1
  1846  0380  0820               	movf	ADXL345_Write@add,w
  1847  0381  00F4               	movwf	MAS_WRITE@d
  1848  0382  120A  118A  23A5  120A  118A  	fcall	_MAS_WRITE
  1849                           
  1850                           ;ADXL345.c: 23:          MAS_WRITE(data);
  1851  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0389  0823               	movf	ADXL345_Write@data+1,w
  1854  038A  00F5               	movwf	MAS_WRITE@d+1
  1855  038B  0822               	movf	ADXL345_Write@data,w
  1856  038C  00F4               	movwf	MAS_WRITE@d
  1857  038D  120A  118A  23A5  120A  118A  	fcall	_MAS_WRITE
  1858                           
  1859                           ;ADXL345.c: 24:          MAS_STOP();
  1860  0392  120A  118A  23AF  120A  118A  	fcall	_MAS_STOP
  1861  0397                     l148:
  1862  0397  0008               	return
  1863  0398                     __end_of_ADXL345_Write:
  1864                           
  1865                           	psect	text8
  1866  024F                     __ptext8:	
  1867 ;; *************** function _ADXL345_Read *****************
  1868 ;; Defined at:
  1869 ;;		line 28 in file "ADXL345.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  add             2    4[BANK0 ] int 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  retval          2    6[BANK0 ] int 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2    4[BANK0 ] int 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0, pclath, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         0       2       0       0       0
  1884 ;;      Locals:         0       2       0       0       0
  1885 ;;      Temps:          0       0       0       0       0
  1886 ;;      Totals:         0       4       0       0       0
  1887 ;;Total ram usage:        4 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    3
  1890 ;; This function calls:
  1891 ;;		_MAS_READ
  1892 ;;		_MAS_START
  1893 ;;		_MAS_STOP
  1894 ;;		_MAS_WRITE
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _ADXL345_Read
  1902  024F                     _ADXL345_Read:
  1903  024F                     l1276:	
  1904                           ;incstack = 0
  1905                           ; Regs used in _ADXL345_Read: [wreg+status,2+status,0+pclath+cstack]
  1906                           
  1907                           
  1908                           ;ADXL345.c: 29:          int retval;;ADXL345.c: 30:          MAS_START();
  1909  024F  120A  118A  23B8  120A  118A  	fcall	_MAS_START
  1910                           
  1911                           ;ADXL345.c: 31:          MAS_WRITE(0xA6);
  1912  0254  30A6               	movlw	166
  1913  0255  00F4               	movwf	MAS_WRITE@d
  1914  0256  3000               	movlw	0
  1915  0257  00F5               	movwf	MAS_WRITE@d+1
  1916  0258  120A  118A  23A5  120A  118A  	fcall	_MAS_WRITE
  1917                           
  1918                           ;ADXL345.c: 32:          MAS_WRITE(add);
  1919  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1920  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1921  025F  0825               	movf	ADXL345_Read@add+1,w
  1922  0260  00F5               	movwf	MAS_WRITE@d+1
  1923  0261  0824               	movf	ADXL345_Read@add,w
  1924  0262  00F4               	movwf	MAS_WRITE@d
  1925  0263  120A  118A  23A5  120A  118A  	fcall	_MAS_WRITE
  1926                           
  1927                           ;ADXL345.c: 33:          MAS_START();
  1928  0268  120A  118A  23B8  120A  118A  	fcall	_MAS_START
  1929                           
  1930                           ;ADXL345.c: 34:          MAS_WRITE(0xA7);
  1931  026D  30A7               	movlw	167
  1932  026E  00F4               	movwf	MAS_WRITE@d
  1933  026F  3000               	movlw	0
  1934  0270  00F5               	movwf	MAS_WRITE@d+1
  1935  0271  120A  118A  23A5  120A  118A  	fcall	_MAS_WRITE
  1936                           
  1937                           ;ADXL345.c: 35:          retval=MAS_READ(0);
  1938  0276  3000               	movlw	0
  1939  0277  00F4               	movwf	MAS_READ@a
  1940  0278  00F5               	movwf	MAS_READ@a+1
  1941  0279  120A  118A  233F  120A  118A  	fcall	_MAS_READ
  1942  027E  0875               	movf	?_MAS_READ+1,w
  1943  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0281  00A7               	movwf	ADXL345_Read@retval+1
  1946  0282  0874               	movf	?_MAS_READ,w
  1947  0283  00A6               	movwf	ADXL345_Read@retval
  1948                           
  1949                           ;ADXL345.c: 36:          MAS_STOP();
  1950  0284  120A  118A  23AF  120A  118A  	fcall	_MAS_STOP
  1951  0289                     l1278:
  1952                           
  1953                           ;ADXL345.c: 37:          return retval;
  1954  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1955  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1956  028B  0827               	movf	ADXL345_Read@retval+1,w
  1957  028C  00A5               	movwf	?_ADXL345_Read+1
  1958  028D  0826               	movf	ADXL345_Read@retval,w
  1959  028E  00A4               	movwf	?_ADXL345_Read
  1960  028F                     l151:
  1961  028F  0008               	return
  1962  0290                     __end_of_ADXL345_Read:
  1963                           
  1964                           	psect	text9
  1965  03A5                     __ptext9:	
  1966 ;; *************** function _MAS_WRITE *****************
  1967 ;; Defined at:
  1968 ;;		line 43 in file "I2C.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  d               2    4[COMMON] int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0, pclath, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         2       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0
  1985 ;;      Totals:         2       0       0       0       0
  1986 ;;Total ram usage:        2 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    2
  1989 ;; This function calls:
  1990 ;;		_MAS_WAIT
  1991 ;; This function is called by:
  1992 ;;		_ADXL345_Write
  1993 ;;		_ADXL345_Read
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _MAS_WRITE
  1999  03A5                     _MAS_WRITE:
  2000  03A5                     l1150:	
  2001                           ;incstack = 0
  2002                           ; Regs used in _MAS_WRITE: [wreg+status,2+status,0+pclath+cstack]
  2003                           
  2004                           
  2005                           ;I2C.c: 44:     MAS_WAIT();
  2006  03A5  120A  118A  2398  120A  118A  	fcall	_MAS_WAIT
  2007  03AA                     l1152:
  2008                           
  2009                           ;I2C.c: 45:     SSPBUF = d;
  2010  03AA  0874               	movf	MAS_WRITE@d,w
  2011  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2012  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2013  03AD  0093               	movwf	19	;volatile
  2014  03AE                     l47:
  2015  03AE  0008               	return
  2016  03AF                     __end_of_MAS_WRITE:
  2017                           
  2018                           	psect	text10
  2019  03AF                     __ptext10:	
  2020 ;; *************** function _MAS_STOP *****************
  2021 ;; Defined at:
  2022 ;;		line 38 in file "I2C.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, pclath, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         0       0       0       0       0
  2037 ;;      Locals:         0       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0
  2039 ;;      Totals:         0       0       0       0       0
  2040 ;;Total ram usage:        0 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    2
  2043 ;; This function calls:
  2044 ;;		_MAS_WAIT
  2045 ;; This function is called by:
  2046 ;;		_ADXL345_Write
  2047 ;;		_ADXL345_Read
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _MAS_STOP
  2053  03AF                     _MAS_STOP:
  2054  03AF                     l1146:	
  2055                           ;incstack = 0
  2056                           ; Regs used in _MAS_STOP: [wreg+status,2+status,0+pclath+cstack]
  2057                           
  2058                           
  2059                           ;I2C.c: 39:     MAS_WAIT();
  2060  03AF  120A  118A  2398  120A  118A  	fcall	_MAS_WAIT
  2061  03B4                     l1148:
  2062                           
  2063                           ;I2C.c: 40:     PEN = 1;
  2064  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2065  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2066  03B6  1511               	bsf	17,2	;volatile
  2067  03B7                     l44:
  2068  03B7  0008               	return
  2069  03B8                     __end_of_MAS_STOP:
  2070                           
  2071                           	psect	text11
  2072  03B8                     __ptext11:	
  2073 ;; *************** function _MAS_START *****************
  2074 ;; Defined at:
  2075 ;;		line 28 in file "I2C.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0
  2092 ;;      Totals:         0       0       0       0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    2
  2096 ;; This function calls:
  2097 ;;		_MAS_WAIT
  2098 ;; This function is called by:
  2099 ;;		_ADXL345_Write
  2100 ;;		_ADXL345_Read
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           
  2105                           ;psect for function _MAS_START
  2106  03B8                     _MAS_START:
  2107  03B8                     l1142:	
  2108                           ;incstack = 0
  2109                           ; Regs used in _MAS_START: [wreg+status,2+status,0+pclath+cstack]
  2110                           
  2111                           
  2112                           ;I2C.c: 29:     MAS_WAIT();
  2113  03B8  120A  118A  2398  120A  118A  	fcall	_MAS_WAIT
  2114  03BD                     l1144:
  2115                           
  2116                           ;I2C.c: 30:     SEN = 1;
  2117  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2118  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2119  03BF  1411               	bsf	17,0	;volatile
  2120  03C0                     l38:
  2121  03C0  0008               	return
  2122  03C1                     __end_of_MAS_START:
  2123                           
  2124                           	psect	text12
  2125  033F                     __ptext12:	
  2126 ;; *************** function _MAS_READ *****************
  2127 ;; Defined at:
  2128 ;;		line 48 in file "I2C.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  a               2    4[COMMON] int 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  temp            2    2[BANK0 ] int 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  2    4[COMMON] int 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0, pclath, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2142 ;;      Params:         2       0       0       0       0
  2143 ;;      Locals:         0       2       0       0       0
  2144 ;;      Temps:          0       2       0       0       0
  2145 ;;      Totals:         2       4       0       0       0
  2146 ;;Total ram usage:        6 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    2
  2149 ;; This function calls:
  2150 ;;		_MAS_WAIT
  2151 ;; This function is called by:
  2152 ;;		_ADXL345_Read
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _MAS_READ
  2158  033F                     _MAS_READ:
  2159  033F                     l1232:	
  2160                           ;incstack = 0
  2161                           ; Regs used in _MAS_READ: [wreg+status,2+status,0+pclath+cstack]
  2162                           
  2163                           
  2164                           ;I2C.c: 49:     int temp;;I2C.c: 50:     MAS_WAIT();
  2165  033F  120A  118A  2398  120A  118A  	fcall	_MAS_WAIT
  2166  0344                     l1234:
  2167                           
  2168                           ;I2C.c: 51:     RCEN = 1;
  2169  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0346  1591               	bsf	17,3	;volatile
  2172                           
  2173                           ;I2C.c: 52:     MAS_WAIT();
  2174  0347  120A  118A  2398  120A  118A  	fcall	_MAS_WAIT
  2175  034C                     l1236:
  2176                           
  2177                           ;I2C.c: 53:     temp = SSPBUF;
  2178  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2179  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2180  034E  0813               	movf	19,w	;volatile
  2181  034F  00A0               	movwf	??_MAS_READ
  2182  0350  01A1               	clrf	??_MAS_READ+1
  2183  0351  0820               	movf	??_MAS_READ,w
  2184  0352  00A2               	movwf	MAS_READ@temp
  2185  0353  0821               	movf	??_MAS_READ+1,w
  2186  0354  00A3               	movwf	MAS_READ@temp+1
  2187  0355                     l1238:
  2188                           
  2189                           ;I2C.c: 54:     MAS_WAIT();
  2190  0355  120A  118A  2398  120A  118A  	fcall	_MAS_WAIT
  2191  035A                     l1240:
  2192                           
  2193                           ;I2C.c: 55:     ACKDT = (a)?0:1;
  2194  035A  0874               	movf	MAS_READ@a,w
  2195  035B  0475               	iorwf	MAS_READ@a+1,w
  2196  035C  1903               	btfsc	3,2
  2197  035D  2B5F               	goto	u851
  2198  035E  2B63               	goto	u850
  2199  035F                     u851:
  2200  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2201  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2202  0361  1691               	bsf	17,5	;volatile
  2203  0362  2B66               	goto	u864
  2204  0363                     u850:
  2205  0363  1683               	bsf	3,5	;RP0=1, select bank1
  2206  0364  1303               	bcf	3,6	;RP1=0, select bank1
  2207  0365  1291               	bcf	17,5	;volatile
  2208  0366                     u864:
  2209  0366                     l1242:
  2210                           
  2211                           ;I2C.c: 56:     ACKEN = 1;
  2212  0366  1611               	bsf	17,4	;volatile
  2213  0367                     l1244:
  2214                           
  2215                           ;I2C.c: 57:     return temp;
  2216  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2218  0369  0823               	movf	MAS_READ@temp+1,w
  2219  036A  00F5               	movwf	?_MAS_READ+1
  2220  036B  0822               	movf	MAS_READ@temp,w
  2221  036C  00F4               	movwf	?_MAS_READ
  2222  036D                     l50:
  2223  036D  0008               	return
  2224  036E                     __end_of_MAS_READ:
  2225                           
  2226                           	psect	text13
  2227  0398                     __ptext13:	
  2228 ;; *************** function _MAS_WAIT *****************
  2229 ;; Defined at:
  2230 ;;		line 24 in file "I2C.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2244 ;;      Params:         0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    1
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_MAS_START
  2255 ;;		_MAS_STOP
  2256 ;;		_MAS_WRITE
  2257 ;;		_MAS_READ
  2258 ;;		_MAS_RST
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           
  2263                           ;psect for function _MAS_WAIT
  2264  0398                     _MAS_WAIT:
  2265  0398                     l1138:	
  2266                           ;incstack = 0
  2267                           ; Regs used in _MAS_WAIT: [wreg+status,2]
  2268                           
  2269  0398                     l32:	
  2270                           ;I2C.c: 25:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2271                           
  2272  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2273  0399  1303               	bcf	3,6	;RP1=0, select bank1
  2274  039A  1914               	btfsc	20,2	;volatile
  2275  039B  2B9D               	goto	u651
  2276  039C  2B9E               	goto	u650
  2277  039D                     u651:
  2278  039D  2B98               	goto	l32
  2279  039E                     u650:
  2280  039E                     l1140:
  2281  039E  0811               	movf	17,w	;volatile
  2282  039F  391F               	andlw	31
  2283  03A0  1D03               	btfss	3,2
  2284  03A1  2BA3               	goto	u661
  2285  03A2  2BA4               	goto	u660
  2286  03A3                     u661:
  2287  03A3  2B98               	goto	l32
  2288  03A4                     u660:
  2289  03A4                     l35:
  2290  03A4  0008               	return
  2291  03A5                     __end_of_MAS_WAIT:
  2292                           
  2293                           	psect	text14
  2294  0204                     __ptext14:	
  2295 ;; *************** function _ISR *****************
  2296 ;; Defined at:
  2297 ;;		line 90 in file "PIC_MAIN.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0
  2313 ;;      Temps:          4       0       0       0       0
  2314 ;;      Totals:         4       0       0       0       0
  2315 ;;Total ram usage:        4 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		Interrupt level 1
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _ISR
  2326  0204                     _ISR:
  2327  0204                     i1l1090:
  2328                           
  2329                           ;PIC_MAIN.c: 92:     if (PIR1bits.RCIF == 1) {
  2330  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2331  0205  1303               	bcf	3,6	;RP1=0, select bank0
  2332  0206  1E8C               	btfss	12,5	;volatile
  2333  0207  2A09               	goto	u58_21
  2334  0208  2A0A               	goto	u58_20
  2335  0209                     u58_21:
  2336  0209  2A2C               	goto	i1l119
  2337  020A                     u58_20:
  2338  020A                     i1l1092:
  2339                           
  2340                           ;PIC_MAIN.c: 94:         Read_val = RCREG;
  2341  020A  081A               	movf	26,w	;volatile
  2342  020B  00F0               	movwf	??_ISR
  2343  020C  0870               	movf	??_ISR,w
  2344  020D  00F9               	movwf	_Read_val
  2345  020E                     i1l1094:
  2346                           
  2347                           ;PIC_MAIN.c: 97:         if (Read_val == 2) {
  2348  020E  3002               	movlw	2
  2349  020F  0679               	xorwf	_Read_val,w
  2350  0210  1D03               	btfss	3,2
  2351  0211  2A13               	goto	u59_21
  2352  0212  2A14               	goto	u59_20
  2353  0213                     u59_21:
  2354  0213  2A17               	goto	i1l1100
  2355  0214                     u59_20:
  2356  0214                     i1l1096:
  2357                           
  2358                           ;PIC_MAIN.c: 98:             PORTAbits.RA0 = 1;
  2359  0214  1405               	bsf	5,0	;volatile
  2360  0215                     i1l1098:
  2361                           
  2362                           ;PIC_MAIN.c: 99:             PORTB = 1;
  2363  0215  3001               	movlw	1
  2364  0216  0086               	movwf	6	;volatile
  2365  0217                     i1l1100:
  2366                           
  2367                           ;PIC_MAIN.c: 101:         if (Read_val == 3) {
  2368  0217  3003               	movlw	3
  2369  0218  0679               	xorwf	_Read_val,w
  2370  0219  1D03               	btfss	3,2
  2371  021A  2A1C               	goto	u60_21
  2372  021B  2A1D               	goto	u60_20
  2373  021C                     u60_21:
  2374  021C  2A1E               	goto	i1l1104
  2375  021D                     u60_20:
  2376  021D                     i1l1102:
  2377                           
  2378                           ;PIC_MAIN.c: 102:             PORTAbits.RA0 = 0;
  2379  021D  1005               	bcf	5,0	;volatile
  2380  021E                     i1l1104:
  2381                           
  2382                           ;PIC_MAIN.c: 104:         if (Read_val == 4) {
  2383  021E  3004               	movlw	4
  2384  021F  0679               	xorwf	_Read_val,w
  2385  0220  1D03               	btfss	3,2
  2386  0221  2A23               	goto	u61_21
  2387  0222  2A24               	goto	u61_20
  2388  0223                     u61_21:
  2389  0223  2A25               	goto	i1l1108
  2390  0224                     u61_20:
  2391  0224                     i1l1106:
  2392                           
  2393                           ;PIC_MAIN.c: 105:             PORTAbits.RA1 = 1;
  2394  0224  1485               	bsf	5,1	;volatile
  2395  0225                     i1l1108:
  2396                           
  2397                           ;PIC_MAIN.c: 107:         if (Read_val == 5) {
  2398  0225  3005               	movlw	5
  2399  0226  0679               	xorwf	_Read_val,w
  2400  0227  1D03               	btfss	3,2
  2401  0228  2A2A               	goto	u62_21
  2402  0229  2A2B               	goto	u62_20
  2403  022A                     u62_21:
  2404  022A  2A2C               	goto	i1l119
  2405  022B                     u62_20:
  2406  022B                     i1l1110:
  2407                           
  2408                           ;PIC_MAIN.c: 108:             PORTAbits.RA1 = 0;
  2409  022B  1085               	bcf	5,1	;volatile
  2410  022C                     i1l119:	
  2411                           ;PIC_MAIN.c: 110:     }
  2412                           
  2413                           
  2414                           ;PIC_MAIN.c: 112:     if(PIR1bits.TXIF == 1){
  2415  022C  1E0C               	btfss	12,4	;volatile
  2416  022D  2A2F               	goto	u63_21
  2417  022E  2A30               	goto	u63_20
  2418  022F                     u63_21:
  2419  022F  2A46               	goto	i1l127
  2420  0230                     u63_20:
  2421  0230                     i1l1112:
  2422                           
  2423                           ;PIC_MAIN.c: 113:         TXREG = accelerometer_val[dato];
  2424  0230  0877               	movf	_dato,w
  2425  0231  3E42               	addlw	(low (_accelerometer_val| 0))& (0+255)
  2426  0232  0084               	movwf	4
  2427  0233  1383               	bcf	3,7	;select IRP bank0
  2428  0234  0800               	movf	0,w
  2429  0235  0099               	movwf	25	;volatile
  2430  0236                     i1l1114:
  2431                           
  2432                           ;PIC_MAIN.c: 114:         if (dato == 5){
  2433  0236  3005               	movlw	5
  2434  0237  0677               	xorwf	_dato,w
  2435  0238  0478               	iorwf	_dato+1,w
  2436  0239  1D03               	btfss	3,2
  2437  023A  2A3C               	goto	u64_21
  2438  023B  2A3D               	goto	u64_20
  2439  023C                     u64_21:
  2440  023C  2A40               	goto	i1l1118
  2441  023D                     u64_20:
  2442  023D                     i1l1116:
  2443                           
  2444                           ;PIC_MAIN.c: 115:             dato = 0;
  2445  023D  01F7               	clrf	_dato
  2446  023E  01F8               	clrf	_dato+1
  2447                           
  2448                           ;PIC_MAIN.c: 116:         }
  2449  023F  2A46               	goto	i1l127
  2450  0240                     i1l1118:
  2451                           
  2452                           ;PIC_MAIN.c: 118:             dato++;
  2453  0240  3001               	movlw	1
  2454  0241  07F7               	addwf	_dato,f
  2455  0242  1803               	skipnc
  2456  0243  0AF8               	incf	_dato+1,f
  2457  0244  3000               	movlw	0
  2458  0245  07F8               	addwf	_dato+1,f
  2459  0246                     i1l127:
  2460  0246  0873               	movf	??_ISR+3,w
  2461  0247  008A               	movwf	10
  2462  0248  0872               	movf	??_ISR+2,w
  2463  0249  0084               	movwf	4
  2464  024A  0E71               	swapf	??_ISR+1,w
  2465  024B  0083               	movwf	3
  2466  024C  0EFE               	swapf	btemp,f
  2467  024D  0E7E               	swapf	btemp,w
  2468  024E  0009               	retfie
  2469  024F                     __end_of_ISR:
  2470  007E                     btemp	set	126	;btemp
  2471  007E                     wtemp0	set	126
  2472                           
  2473                           	psect	intentry
  2474  0004                     __pintentry:	
  2475                           ;incstack = 0
  2476                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  2477                           
  2478  0004                     interrupt_function:
  2479  007E                     saved_w	set	btemp
  2480  0004  00FE               	movwf	btemp
  2481  0005  0E03               	swapf	3,w
  2482  0006  00F1               	movwf	??_ISR+1
  2483  0007  0804               	movf	4,w
  2484  0008  00F2               	movwf	??_ISR+2
  2485  0009  080A               	movf	10,w
  2486  000A  00F3               	movwf	??_ISR+3
  2487  000B  120A  118A  2A04   	ljmp	_ISR
  2488                           
  2489                           	psect	config
  2490                           
  2491                           ;Config register CONFIG1 @ 0x2007
  2492                           ;	Oscillator Selection bits
  2493                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2494                           ;	Watchdog Timer Enable bit
  2495                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2496                           ;	Power-up Timer Enable bit
  2497                           ;	PWRTE = OFF, PWRT disabled
  2498                           ;	RE3/MCLR pin function select bit
  2499                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2500                           ;	Code Protection bit
  2501                           ;	CP = OFF, Program memory code protection is disabled
  2502                           ;	Data Code Protection bit
  2503                           ;	CPD = OFF, Data memory code protection is disabled
  2504                           ;	Brown Out Reset Selection bits
  2505                           ;	BOREN = OFF, BOR disabled
  2506                           ;	Internal External Switchover bit
  2507                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2508                           ;	Fail-Safe Clock Monitor Enabled bit
  2509                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2510                           ;	Low Voltage Programming Enable bit
  2511                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2512                           ;	In-Circuit Debugger Mode bit
  2513                           ;	DEBUG = 0x1, unprogrammed default
  2514  2007                     	org	8199
  2515  2007  20D4               	dw	8404
  2516                           
  2517                           ;Config register CONFIG2 @ 0x2008
  2518                           ;	Brown-out Reset Selection bit
  2519                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2520                           ;	Flash Program Memory Self Write Enable bits
  2521                           ;	WRT = OFF, Write protection off
  2522  2008                     	org	8200
  2523  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     34      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _USART_Initialize->___aldiv
    _MAS_INIT->___lldiv
    _ADXL345_Write->_MAS_WRITE
    _ADXL345_Read->_MAS_READ
    _ADXL345_Read->_MAS_WRITE

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _Setup->_USART_Initialize
    _USART_Initialize->___aldiv
    _MAS_INIT->___lldiv
    _ADXL345_Init->_ADXL345_Write
    _ADXL345_Read->_MAS_READ

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3677
                                              6 COMMON     1     1      0
                       _ADXL345_Read
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    2346
                       _ADXL345_Init
                           _MAS_INIT
                   _USART_Initialize
 ---------------------------------------------------------------------------------
 (2) _USART_Initialize                                    20    16      4     811
                                             14 BANK0     20    16      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     625
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _MAS_INIT                                             8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _ADXL345_Init                                         2     2      0     993
                                              4 BANK0      2     2      0
                      _ADXL345_Write
 ---------------------------------------------------------------------------------
 (3) _ADXL345_Write                                        4     0      4     993
                                              0 BANK0      4     0      4
                          _MAS_START
                           _MAS_STOP
                          _MAS_WRITE
 ---------------------------------------------------------------------------------
 (1) _ADXL345_Read                                         4     2      2    1331
                                              4 BANK0      4     2      2
                           _MAS_READ
                          _MAS_START
                           _MAS_STOP
                          _MAS_WRITE
 ---------------------------------------------------------------------------------
 (4) _MAS_WRITE                                            2     0      2     571
                                              4 COMMON     2     0      2
                           _MAS_WAIT
 ---------------------------------------------------------------------------------
 (4) _MAS_STOP                                             0     0      0       0
                           _MAS_WAIT
 ---------------------------------------------------------------------------------
 (4) _MAS_START                                            0     0      0       0
                           _MAS_WAIT
 ---------------------------------------------------------------------------------
 (2) _MAS_READ                                             6     4      2     155
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
                           _MAS_WAIT
 ---------------------------------------------------------------------------------
 (5) _MAS_WAIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADXL345_Read
     _MAS_READ
       _MAS_WAIT
     _MAS_START
       _MAS_WAIT
     _MAS_STOP
       _MAS_WAIT
     _MAS_WRITE
       _MAS_WAIT
   _Setup
     _ADXL345_Init
       _ADXL345_Write
         _MAS_START
           _MAS_WAIT
         _MAS_STOP
           _MAS_WAIT
         _MAS_WRITE
           _MAS_WAIT
     _MAS_INIT
       ___lldiv
     _USART_Initialize
       ___aldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      34       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      34      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 14 20:49:02 2021

                       l32 0398                         l50 036D                         l35 03A4  
                       l44 03B7                         l29 0309                         l38 03C0  
                       l47 03AE                         l65 0131   __end_of_USART_Initialize 0132  
                      l114 02CF                        l151 028F                        l305 0036  
                      l154 033E                        l315 00BE                        l148 0397  
                      l276 0203                        _PEN 048A                        _ISR 0204  
                      u710 01DD                        u711 01DC                        u800 0088  
                      u705 01C4                        u801 0087                        u650 039E  
                      u730 01FB                        u651 039D                        u731 01FA  
                      u715 01D9                        u660 03A4                        u820 00A6  
                      u740 0029                        _SEN 0488                        u661 03A3  
                      u725 01ED                        u821 00A5                        u805 0084  
                      u741 0028                        u670 01AE                        u830 00AB  
                      u750 003A                        u671 01AD                        u831 00AA  
                      u815 0098                        u751 0039                        u840 02E7  
                      u760 0059                        u761 0058                        u850 0363  
                      u690 01C2                        u851 035F                        u907 031F  
                      u691 01C1                        u780 006D                        u917 0339  
                      u685 01B3                        u845 02E2                        u781 006C  
                      u870 00DA                        u775 005E                        u864 0366  
                      u880 00F3                        u795 006F                        u891 0105  
                      u875 00D5                        u892 0106                        u893 010B  
                      u885 00EE                        u894 010C                        u895 0111  
                      u896 0112                        fsr0 0004                        indf 0000  
                     ?_ISR 0070      __size_of_ADXL345_Init 0035      __size_of_ADXL345_Read 0041  
                     l1200 006D                       l1210 00A0                       l1202 0076  
                     l1140 039E                       l1220 02D0                       l1204 0088  
                     l1212 00A6                       l1300 0187                       l1142 03B8  
                     l1150 03A5                       l1230 0308                       l1222 02D4  
                     l1214 00AB                       l1206 0096                       l1302 0196  
                     l1240 035A                       l1232 033F                       l1144 03BD  
                     l1152 03AA                       l1160 01B1                       l1224 02D7  
                     l1216 00B6                       l1208 0097                       l1138 0398  
                     l1242 0366                       l1234 0344                       l1146 03AF  
                     l1154 036E                       l1170 01EB                       l1162 01BE  
                     l1226 0306                       l1250 00CC                       l1244 0367  
                     l1236 034C                       l1148 03B4                       l1172 01EC  
                     l1164 01C2                       l1156 019C                       l1228 0307  
                     l1180 0022                       l1260 0130                       l1252 0129  
                     l1238 0355                       l1262 030A                       l1174 01F5  
                     l1166 01CB                       l1158 01AE                       l1190 0049  
                     l1182 0025                       l1254 012D                       l1270 02AE  
                     l1264 0319                       l1168 01DD                       l1176 01FB  
                     l1192 0051                       l1184 0029                       l1256 012E  
                     l1248 00BF                       l1272 02BB                       l1266 0324  
                     l1194 0059                       l1186 003A                       l1258 012F  
                     l1274 02CA                       l1290 013B                       l1276 024F  
                     l1196 005C                       l1188 0045                       l1268 0290  
                     l1292 014B                       l1278 0289                       l1198 0069  
                     l1294 015A                       l1286 0132                       l1296 0169  
                     l1288 0137                       l1298 0178                       _RCEN 048B  
                     _RSEN 0489                       _dato 0077                       _main 0132  
                     btemp 007E                       start 000E         __size_of_MAS_START 0009  
       __size_of_MAS_WRITE 000A                      ??_ISR 0070           __end_of_MAS_INIT 030A  
         __end_of_MAS_READ 036E           __end_of_MAS_WAIT 03A5           __end_of_MAS_STOP 03B8  
          __end_of___aldiv 00BF                      ?_main 0070                      _ACKEN 048C  
                    _ACKDT 048D     __size_of_ADXL345_Write 002A                      _ANSEL 0188  
          __end_of___lldiv 0204                      i1l127 0246                      i1l119 022C  
             _ADXL345_Init 030A               _ADXL345_Read 024F                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009                      u60_20 021D  
                    u60_21 021C                      u61_20 0224                      u61_21 0223  
                    u62_20 022B                      u62_21 022A                      u63_20 0230  
                    u63_21 022F                      u64_20 023D                      u64_21 023C  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      u58_20 020A                      u58_21 0209  
                    u59_20 0214                      u59_21 0213                      _TXREG 0019  
                    _Setup 0290                      pclath 000A                      status 0003  
                    wtemp0 007E           ADXL345_Write@add 0020            __initialization 0011  
             __end_of_main 019C                     ??_main 0076                     ?_Setup 0070  
        __end_of_MAS_START 03C1          __end_of_MAS_WRITE 03AF                     _ANSELH 0189  
                   i1l1100 0217                     i1l1110 022B                     i1l1102 021D  
                   i1l1112 0230                     i1l1104 021E                     i1l1114 0236  
                   i1l1106 0224                     i1l1116 023D                     i1l1108 0225  
                   i1l1118 0240                     i1l1090 0204                     i1l1092 020A  
                   i1l1094 020E                     i1l1096 0214                     i1l1098 0215  
            _ADXL345_Write 036E                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___aldiv 0074                  ??___lldiv 0074         ADXL345_Read@retval 0026  
                   saved_w 007E             ?_ADXL345_Write 0020          ADXL345_Write@data 0022  
  __end_of__initialization 001E                  ?_MAS_INIT 002D                  ?_MAS_READ 0074  
                ?_MAS_WAIT 0070                  ?_MAS_STOP 0070               MAS_READ@temp 0022  
           __pcstackCOMMON 0070              __end_of_Setup 02D0                  MAS_INIT@c 002D  
                MAS_READ@a 0074          ?_USART_Initialize 002E         ??_USART_Initialize 0032  
                  ??_Setup 0076                 __pbssBANK0 0042                 ??_MAS_INIT 0031  
               ??_MAS_READ 0020                 ??_MAS_WAIT 0074                 ??_MAS_STOP 0074  
               __pmaintext 0132                 __pintentry 0004                    _SSPCON2 0091  
          ??_ADXL345_Write 0076                    _SSPSTAT 0094                 _controlvar 0048  
                  ___aldiv 0022                    ___lldiv 019C                    __ptext1 0290  
                  __ptext2 00BF                    __ptext3 0022                    __ptext4 02D0  
                  __ptext5 019C                    __ptext6 030A                    __ptext7 036E  
                  __ptext8 024F                    __ptext9 03A5               __size_of_ISR 004B  
         ___aldiv@dividend 0024       end_of_initialization 001E                  _MAS_START 03B8  
                _MAS_WRITE 03A5            ___lldiv@divisor 0020            ___lldiv@counter 002C  
        USART_Initialize@x 003E                  _RCSTAbits 0018           ___aldiv@quotient 002A  
                _PORTAbits 0005                 ?_MAS_START 0070                 ?_MAS_WRITE 0074  
                _TXSTAbits 0098            ADXL345_Read@add 0024          __size_of_MAS_INIT 003A  
        __size_of_MAS_READ 002F          __size_of_MAS_WAIT 000D          __size_of_MAS_STOP 0009  
              _BAUDCTLbits 0187          _accelerometer_val 0042        start_initialization 0011  
              __end_of_ISR 024F                 MAS_WRITE@d 0074  __size_of_USART_Initialize 0073  
            ?_ADXL345_Init 0070              ?_ADXL345_Read 0024                __pbssCOMMON 0077  
                ___latbits 0002              __pcstackBANK0 0020                ??_MAS_START 0074  
              ??_MAS_WRITE 0076                   ?___aldiv 0020                   ?___lldiv 0020  
           ??_ADXL345_Init 0024             ??_ADXL345_Read 0076             __size_of_Setup 0040  
    __end_of_ADXL345_Write 0398            ___aldiv@divisor 0020          interrupt_function 0004  
          ___aldiv@counter 0028                   _MAS_INIT 02D0                   _MAS_READ 033F  
                 _MAS_WAIT 0398                   _MAS_STOP 03AF                   _PIE1bits 008C  
                 _PIR1bits 000C           _USART_Initialize 00BF                   _Read_val 0079  
         __size_of___aldiv 009D           __size_of___lldiv 0068                   __ptext10 03AF  
                 __ptext11 03B8                   __ptext12 033F                   __ptext13 0398  
                 __ptext14 0204              __size_of_main 006A       __end_of_ADXL345_Init 033F  
     __end_of_ADXL345_Read 0290                 _INTCONbits 000B                   intlevel1 0000  
         ___lldiv@dividend 0024                 _OSCCONbits 008F           ___lldiv@quotient 0028  
             ___aldiv@sign 0029   USART_Initialize@baudrate 002E  
