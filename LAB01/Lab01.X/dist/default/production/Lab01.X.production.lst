

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 01 02:55:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205                           
   206                           	psect	idataCOMMON
   207  06FE                     __pidataCOMMON:
   208                           
   209                           ;initializer for _cont2
   210  06FE  3401               	retlw	1
   211                           
   212                           ;initializer for _cont
   213  06FF  3401               	retlw	1
   214  0006                     _PORTBbits	set	6
   215  0005                     _PORTAbits	set	5
   216  0009                     _PORTEbits	set	9
   217  0009                     _PORTE	set	9
   218  0008                     _PORTD	set	8
   219  0007                     _PORTC	set	7
   220  0006                     _PORTB	set	6
   221  0005                     _PORTA	set	5
   222  0089                     _TRISE	set	137
   223  0088                     _TRISD	set	136
   224  0087                     _TRISC	set	135
   225  0086                     _TRISB	set	134
   226  0085                     _TRISA	set	133
   227  0189                     _ANSELH	set	393
   228  0188                     _ANSEL	set	392
   229                           
   230                           	psect	cinit
   231  07EE                     start_initialization:	
   232                           ; #config settings
   233                           
   234  07EE                     __initialization:
   235                           
   236                           ; Initialize objects allocated to COMMON
   237  07EE  120A  118A  26FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   238  07F3  00F8               	movwf	__pdataCOMMON& (0+127)
   239  07F4  120A  118A  26FF  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   240  07F9  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   241                           
   242                           ; Clear objects allocated to COMMON
   243  07FA  01F6               	clrf	__pbssCOMMON& (0+127)
   244  07FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   245  07FC                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248  07FC                     __end_of__initialization:
   249  07FC  0183               	clrf	3
   250  07FD  120A  118A  2F65   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMMON
   253  0076                     __pbssCOMMON:
   254  0076                     _juego:
   255  0076                     	ds	2
   256                           
   257                           	psect	dataCOMMON
   258  0078                     __pdataCOMMON:
   259  0078                     _cont2:
   260  0078                     	ds	1
   261  0079                     _cont:
   262  0079                     	ds	1
   263                           
   264                           	psect	cstackCOMMON
   265  0070                     __pcstackCOMMON:
   266  0070                     ?_Setup:
   267  0070                     ??_Setup:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_Semaforo:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ??_Semaforo:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_main:	
   277                           ; 1 bytes @ 0x0
   278                           
   279                           
   280                           ; 1 bytes @ 0x0
   281  0070                     	ds	3
   282  0073                     ??_main:
   283                           
   284                           ; 1 bytes @ 0x3
   285  0073                     	ds	3
   286                           
   287                           	psect	maintext
   288  0765                     __pmaintext:	
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 114 in file "Lab01.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0, pclath, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : B00/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          3       0       0       0       0
   311 ;;      Totals:         3       0       0       0       0
   312 ;;Total ram usage:        3 bytes
   313 ;; Hardware stack levels required when called:    1
   314 ;; This function calls:
   315 ;;		_Semaforo
   316 ;;		_Setup
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           
   323                           ;psect for function _main
   324  0765                     _main:
   325  0765                     l707:	
   326                           ;incstack = 0
   327                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   328                           
   329                           
   330                           ;Lab01.c: 115:     Setup();
   331  0765  120A  118A  2700  120A  118A  	fcall	_Setup
   332  076A                     l709:
   333                           
   334                           ;Lab01.c: 117:         if (PORTAbits.RA2 == 0) {
   335  076A  1283               	bcf	3,5	;RP0=0, select bank0
   336  076B  1303               	bcf	3,6	;RP1=0, select bank0
   337  076C  1905               	btfsc	5,2	;volatile
   338  076D  2F6F               	goto	u11
   339  076E  2F70               	goto	u10
   340  076F                     u11:
   341  076F  2F79               	goto	l713
   342  0770                     u10:
   343  0770                     l711:
   344                           
   345                           ;Lab01.c: 118:             _delay((unsigned long)((50)*(8000000/4000.0)));
   346  0770  3082               	movlw	130
   347  0771  00F4               	movwf	??_main+1
   348  0772  30DD               	movlw	221
   349  0773  00F3               	movwf	??_main
   350  0774                     u107:
   351  0774  0BF3               	decfsz	??_main,f
   352  0775  2F74               	goto	u107
   353  0776  0BF4               	decfsz	??_main+1,f
   354  0777  2F74               	goto	u107
   355  0778  2F79               	nop2
   356  0779                     l713:
   357                           
   358                           ;Lab01.c: 121:         if (PORTAbits.RA2 == 1) {
   359  0779  1283               	bcf	3,5	;RP0=0, select bank0
   360  077A  1303               	bcf	3,6	;RP1=0, select bank0
   361  077B  1D05               	btfss	5,2	;volatile
   362  077C  2F7E               	goto	u21
   363  077D  2F7F               	goto	u20
   364  077E                     u21:
   365  077E  2F6A               	goto	l709
   366  077F                     u20:
   367  077F                     l715:
   368                           
   369                           ;Lab01.c: 122:             Semaforo();
   370  077F  120A  118A  2724  120A  118A  	fcall	_Semaforo
   371                           
   372                           ;Lab01.c: 123:             while (juego == 1){
   373  0784  2FE4               	goto	l52
   374  0785                     l717:
   375                           
   376                           ;Lab01.c: 124:                 _delay((unsigned long)((50)*(8000000/4000.0)));
   377  0785  3082               	movlw	130
   378  0786  00F4               	movwf	??_main+1
   379  0787  30DD               	movlw	221
   380  0788  00F3               	movwf	??_main
   381  0789                     u117:
   382  0789  0BF3               	decfsz	??_main,f
   383  078A  2F89               	goto	u117
   384  078B  0BF4               	decfsz	??_main+1,f
   385  078C  2F89               	goto	u117
   386  078D  2F8E               	nop2
   387  078E                     l719:
   388                           
   389                           ;Lab01.c: 125:                 if (PORTAbits.RA0 == 1){
   390  078E  1283               	bcf	3,5	;RP0=0, select bank0
   391  078F  1303               	bcf	3,6	;RP1=0, select bank0
   392  0790  1C05               	btfss	5,0	;volatile
   393  0791  2F93               	goto	u31
   394  0792  2F94               	goto	u30
   395  0793                     u31:
   396  0793  2FBA               	goto	l735
   397  0794                     u30:
   398  0794                     l721:
   399                           
   400                           ;Lab01.c: 127:                     _delay((unsigned long)((150)*(8000000/4000.0)));
   401  0794  3002               	movlw	2
   402  0795  00F5               	movwf	??_main+2
   403  0796  3086               	movlw	134
   404  0797  00F4               	movwf	??_main+1
   405  0798  3099               	movlw	153
   406  0799  00F3               	movwf	??_main
   407  079A                     u127:
   408  079A  0BF3               	decfsz	??_main,f
   409  079B  2F9A               	goto	u127
   410  079C  0BF4               	decfsz	??_main+1,f
   411  079D  2F9A               	goto	u127
   412  079E  0BF5               	decfsz	??_main+2,f
   413  079F  2F9A               	goto	u127
   414                           
   415                           ;Lab01.c: 129:                     PORTC = cont;
   416  07A0  0879               	movf	_cont,w
   417  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   418  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   419  07A3  0087               	movwf	7	;volatile
   420  07A4                     l723:
   421                           
   422                           ;Lab01.c: 131:                     if (cont == 1){
   423  07A4  0379               	decf	_cont,w
   424  07A5  1D03               	btfss	3,2
   425  07A6  2FA8               	goto	u41
   426  07A7  2FA9               	goto	u40
   427  07A8                     u41:
   428  07A8  2FB0               	goto	l727
   429  07A9                     u40:
   430  07A9                     l725:
   431                           
   432                           ;Lab01.c: 132:                         cont = cont*2;
   433  07A9  0879               	movf	_cont,w
   434  07AA  00F3               	movwf	??_main
   435  07AB  0773               	addwf	??_main,w
   436  07AC  00F4               	movwf	??_main+1
   437  07AD  0874               	movf	??_main+1,w
   438  07AE  00F9               	movwf	_cont
   439                           
   440                           ;Lab01.c: 133:                     }
   441  07AF  2FBA               	goto	l735
   442  07B0                     l727:
   443  07B0  0879               	movf	_cont,w
   444  07B1  1D03               	btfss	3,2
   445  07B2  2FB4               	goto	u51
   446  07B3  2FB5               	goto	u50
   447  07B4                     u51:
   448  07B4  2FA9               	goto	l725
   449  07B5                     u50:
   450  07B5                     l729:
   451                           
   452                           ;Lab01.c: 136:                         PORTBbits.RB0 = 1;
   453  07B5  1406               	bsf	6,0	;volatile
   454                           
   455                           ;Lab01.c: 137:                         cont = 1;
   456  07B6  01F9               	clrf	_cont
   457  07B7  0AF9               	incf	_cont,f
   458  07B8                     l731:
   459                           
   460                           ;Lab01.c: 138:                         juego = 0;
   461  07B8  01F6               	clrf	_juego
   462  07B9  01F7               	clrf	_juego+1
   463  07BA                     l735:	
   464                           ;Lab01.c: 139:                     }
   465                           
   466                           
   467                           ;Lab01.c: 144:                 if (PORTAbits.RA1 == 1){
   468  07BA  1C85               	btfss	5,1	;volatile
   469  07BB  2FBD               	goto	u61
   470  07BC  2FBE               	goto	u60
   471  07BD                     u61:
   472  07BD  2FE4               	goto	l52
   473  07BE                     u60:
   474  07BE                     l737:
   475                           
   476                           ;Lab01.c: 145:                     _delay((unsigned long)((150)*(8000000/4000.0)));
   477  07BE  3002               	movlw	2
   478  07BF  00F5               	movwf	??_main+2
   479  07C0  3086               	movlw	134
   480  07C1  00F4               	movwf	??_main+1
   481  07C2  3099               	movlw	153
   482  07C3  00F3               	movwf	??_main
   483  07C4                     u137:
   484  07C4  0BF3               	decfsz	??_main,f
   485  07C5  2FC4               	goto	u137
   486  07C6  0BF4               	decfsz	??_main+1,f
   487  07C7  2FC4               	goto	u137
   488  07C8  0BF5               	decfsz	??_main+2,f
   489  07C9  2FC4               	goto	u137
   490                           
   491                           ;Lab01.c: 146:                     PORTD = cont2;
   492  07CA  0878               	movf	_cont2,w
   493  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   494  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   495  07CD  0088               	movwf	8	;volatile
   496  07CE                     l739:
   497                           
   498                           ;Lab01.c: 147:                     if (cont2 == 1){
   499  07CE  0378               	decf	_cont2,w
   500  07CF  1D03               	btfss	3,2
   501  07D0  2FD2               	goto	u71
   502  07D1  2FD3               	goto	u70
   503  07D2                     u71:
   504  07D2  2FDA               	goto	l743
   505  07D3                     u70:
   506  07D3                     l741:
   507                           
   508                           ;Lab01.c: 148:                         cont2 = cont2*2;
   509  07D3  0878               	movf	_cont2,w
   510  07D4  00F3               	movwf	??_main
   511  07D5  0773               	addwf	??_main,w
   512  07D6  00F4               	movwf	??_main+1
   513  07D7  0874               	movf	??_main+1,w
   514  07D8  00F8               	movwf	_cont2
   515                           
   516                           ;Lab01.c: 149:                     }
   517  07D9  2FE4               	goto	l52
   518  07DA                     l743:
   519  07DA  0878               	movf	_cont2,w
   520  07DB  1D03               	btfss	3,2
   521  07DC  2FDE               	goto	u81
   522  07DD  2FDF               	goto	u80
   523  07DE                     u81:
   524  07DE  2FD3               	goto	l741
   525  07DF                     u80:
   526  07DF                     l745:
   527                           
   528                           ;Lab01.c: 151:                         PORTBbits.RB1 = 1;
   529  07DF  1486               	bsf	6,1	;volatile
   530                           
   531                           ;Lab01.c: 152:                         cont2 = 1;
   532  07E0  01F8               	clrf	_cont2
   533  07E1  0AF8               	incf	_cont2,f
   534  07E2                     l747:
   535                           
   536                           ;Lab01.c: 153:                         juego = 0;
   537  07E2  01F6               	clrf	_juego
   538  07E3  01F7               	clrf	_juego+1
   539  07E4                     l52:	
   540                           ;Lab01.c: 159:             }
   541                           
   542                           
   543                           ;Lab01.c: 123:             while (juego == 1){
   544  07E4  0376               	decf	_juego,w
   545  07E5  0477               	iorwf	_juego+1,w
   546  07E6  1903               	btfsc	3,2
   547  07E7  2FE9               	goto	u91
   548  07E8  2FEA               	goto	u90
   549  07E9                     u91:
   550  07E9  2F85               	goto	l717
   551  07EA                     u90:
   552  07EA  2F6A               	goto	l709
   553  07EB  120A  118A  2800   	ljmp	start
   554  07EE                     __end_of_main:
   555                           
   556                           	psect	text1
   557  0700                     __ptext1:	
   558 ;; *************** function _Setup *****************
   559 ;; Defined at:
   560 ;;		line 59 in file "Lab01.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   574 ;;      Params:         0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           
   588                           ;psect for function _Setup
   589  0700                     _Setup:
   590  0700                     l659:	
   591                           ;incstack = 0
   592                           ; Regs used in _Setup: [wreg+status,2]
   593                           
   594                           
   595                           ;Lab01.c: 61:     ANSEL = 0;
   596  0700  1683               	bsf	3,5	;RP0=1, select bank3
   597  0701  1703               	bsf	3,6	;RP1=1, select bank3
   598  0702  0188               	clrf	8	;volatile
   599                           
   600                           ;Lab01.c: 62:     ANSELH = 0;
   601  0703  0189               	clrf	9	;volatile
   602  0704                     l661:
   603                           
   604                           ;Lab01.c: 64:     TRISA = 0b00000111;
   605  0704  3007               	movlw	7
   606  0705  1683               	bsf	3,5	;RP0=1, select bank1
   607  0706  1303               	bcf	3,6	;RP1=0, select bank1
   608  0707  0085               	movwf	5	;volatile
   609  0708                     l663:
   610                           
   611                           ;Lab01.c: 65:     PORTA = 0;
   612  0708  1283               	bcf	3,5	;RP0=0, select bank0
   613  0709  1303               	bcf	3,6	;RP1=0, select bank0
   614  070A  0185               	clrf	5	;volatile
   615  070B                     l665:
   616                           
   617                           ;Lab01.c: 67:     TRISB = 0;
   618  070B  1683               	bsf	3,5	;RP0=1, select bank1
   619  070C  1303               	bcf	3,6	;RP1=0, select bank1
   620  070D  0186               	clrf	6	;volatile
   621  070E                     l667:
   622                           
   623                           ;Lab01.c: 68:     PORTB = 0;
   624  070E  1283               	bcf	3,5	;RP0=0, select bank0
   625  070F  1303               	bcf	3,6	;RP1=0, select bank0
   626  0710  0186               	clrf	6	;volatile
   627  0711                     l669:
   628                           
   629                           ;Lab01.c: 70:     TRISC = 0;
   630  0711  1683               	bsf	3,5	;RP0=1, select bank1
   631  0712  1303               	bcf	3,6	;RP1=0, select bank1
   632  0713  0187               	clrf	7	;volatile
   633  0714                     l671:
   634                           
   635                           ;Lab01.c: 71:     PORTC = 0;
   636  0714  1283               	bcf	3,5	;RP0=0, select bank0
   637  0715  1303               	bcf	3,6	;RP1=0, select bank0
   638  0716  0187               	clrf	7	;volatile
   639  0717                     l673:
   640                           
   641                           ;Lab01.c: 73:     TRISD = 0;
   642  0717  1683               	bsf	3,5	;RP0=1, select bank1
   643  0718  1303               	bcf	3,6	;RP1=0, select bank1
   644  0719  0188               	clrf	8	;volatile
   645  071A                     l675:
   646                           
   647                           ;Lab01.c: 74:     PORTD = 0;
   648  071A  1283               	bcf	3,5	;RP0=0, select bank0
   649  071B  1303               	bcf	3,6	;RP1=0, select bank0
   650  071C  0188               	clrf	8	;volatile
   651  071D                     l677:
   652                           
   653                           ;Lab01.c: 76:     TRISE = 0;
   654  071D  1683               	bsf	3,5	;RP0=1, select bank1
   655  071E  1303               	bcf	3,6	;RP1=0, select bank1
   656  071F  0189               	clrf	9	;volatile
   657  0720                     l679:
   658                           
   659                           ;Lab01.c: 77:     PORTE = 0;
   660  0720  1283               	bcf	3,5	;RP0=0, select bank0
   661  0721  1303               	bcf	3,6	;RP1=0, select bank0
   662  0722  0189               	clrf	9	;volatile
   663  0723                     l41:
   664  0723  0008               	return
   665  0724                     __end_of_Setup:
   666                           
   667                           	psect	text2
   668  0724                     __ptext2:	
   669 ;; *************** function _Semaforo *****************
   670 ;; Defined at:
   671 ;;		line 85 in file "Lab01.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          3       0       0       0       0
   688 ;;      Totals:         3       0       0       0       0
   689 ;;Total ram usage:        3 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _Semaforo
   700  0724                     _Semaforo:
   701  0724                     l681:	
   702                           ;incstack = 0
   703                           ; Regs used in _Semaforo: [wreg+status,2]
   704                           
   705                           
   706                           ;Lab01.c: 87:     PORTB = 0;
   707  0724  1283               	bcf	3,5	;RP0=0, select bank0
   708  0725  1303               	bcf	3,6	;RP1=0, select bank0
   709  0726  0186               	clrf	6	;volatile
   710                           
   711                           ;Lab01.c: 88:     PORTC = 0;
   712  0727  0187               	clrf	7	;volatile
   713                           
   714                           ;Lab01.c: 89:     PORTD = 0;
   715  0728  0188               	clrf	8	;volatile
   716  0729                     l683:
   717                           
   718                           ;Lab01.c: 92:     PORTEbits.RE0 = 1;
   719  0729  1409               	bsf	9,0	;volatile
   720  072A                     l685:
   721                           
   722                           ;Lab01.c: 93:     _delay((unsigned long)((500)*(8000000/4000.0)));
   723  072A  3006               	movlw	6
   724  072B  00F2               	movwf	??_Semaforo+2
   725  072C  3013               	movlw	19
   726  072D  00F1               	movwf	??_Semaforo+1
   727  072E  30AD               	movlw	173
   728  072F  00F0               	movwf	??_Semaforo
   729  0730                     u147:
   730  0730  0BF0               	decfsz	??_Semaforo,f
   731  0731  2F30               	goto	u147
   732  0732  0BF1               	decfsz	??_Semaforo+1,f
   733  0733  2F30               	goto	u147
   734  0734  0BF2               	decfsz	??_Semaforo+2,f
   735  0735  2F30               	goto	u147
   736  0736  2F37               	nop2
   737  0737                     l687:
   738                           
   739                           ;Lab01.c: 94:     PORTEbits.RE0 = 0;
   740  0737  1283               	bcf	3,5	;RP0=0, select bank0
   741  0738  1303               	bcf	3,6	;RP1=0, select bank0
   742  0739  1009               	bcf	9,0	;volatile
   743  073A                     l689:
   744                           
   745                           ;Lab01.c: 96:     PORTEbits.RE1 = 1;
   746  073A  1489               	bsf	9,1	;volatile
   747  073B                     l691:
   748                           
   749                           ;Lab01.c: 97:     _delay((unsigned long)((500)*(8000000/4000.0)));
   750  073B  3006               	movlw	6
   751  073C  00F2               	movwf	??_Semaforo+2
   752  073D  3013               	movlw	19
   753  073E  00F1               	movwf	??_Semaforo+1
   754  073F  30AD               	movlw	173
   755  0740  00F0               	movwf	??_Semaforo
   756  0741                     u157:
   757  0741  0BF0               	decfsz	??_Semaforo,f
   758  0742  2F41               	goto	u157
   759  0743  0BF1               	decfsz	??_Semaforo+1,f
   760  0744  2F41               	goto	u157
   761  0745  0BF2               	decfsz	??_Semaforo+2,f
   762  0746  2F41               	goto	u157
   763  0747  2F48               	nop2
   764  0748                     l693:
   765                           
   766                           ;Lab01.c: 98:     PORTEbits.RE1 = 0;
   767  0748  1283               	bcf	3,5	;RP0=0, select bank0
   768  0749  1303               	bcf	3,6	;RP1=0, select bank0
   769  074A  1089               	bcf	9,1	;volatile
   770  074B                     l695:
   771                           
   772                           ;Lab01.c: 100:     PORTEbits.RE2 = 1;
   773  074B  1509               	bsf	9,2	;volatile
   774  074C                     l697:
   775                           
   776                           ;Lab01.c: 101:     _delay((unsigned long)((500)*(8000000/4000.0)));
   777  074C  3006               	movlw	6
   778  074D  00F2               	movwf	??_Semaforo+2
   779  074E  3013               	movlw	19
   780  074F  00F1               	movwf	??_Semaforo+1
   781  0750  30AD               	movlw	173
   782  0751  00F0               	movwf	??_Semaforo
   783  0752                     u167:
   784  0752  0BF0               	decfsz	??_Semaforo,f
   785  0753  2F52               	goto	u167
   786  0754  0BF1               	decfsz	??_Semaforo+1,f
   787  0755  2F52               	goto	u167
   788  0756  0BF2               	decfsz	??_Semaforo+2,f
   789  0757  2F52               	goto	u167
   790  0758  2F59               	nop2
   791  0759                     l699:
   792                           
   793                           ;Lab01.c: 102:     PORTEbits.RE2 = 0;
   794  0759  1283               	bcf	3,5	;RP0=0, select bank0
   795  075A  1303               	bcf	3,6	;RP1=0, select bank0
   796  075B  1109               	bcf	9,2	;volatile
   797  075C                     l701:
   798                           
   799                           ;Lab01.c: 105:     juego = 1;
   800  075C  3001               	movlw	1
   801  075D  00F6               	movwf	_juego
   802  075E  3000               	movlw	0
   803  075F  00F7               	movwf	_juego+1
   804  0760                     l703:
   805                           
   806                           ;Lab01.c: 106:     cont = 1;
   807  0760  01F9               	clrf	_cont
   808  0761  0AF9               	incf	_cont,f
   809  0762                     l705:
   810                           
   811                           ;Lab01.c: 107:     cont2 = 1;
   812  0762  01F8               	clrf	_cont2
   813  0763  0AF8               	incf	_cont2,f
   814  0764                     l44:
   815  0764  0008               	return
   816  0765                     __end_of_Semaforo:
   817  007E                     btemp	set	126	;btemp
   818  007E                     wtemp0	set	126
   819                           
   820                           	psect	config
   821                           
   822                           ;Config register CONFIG1 @ 0x2007
   823                           ;	Oscillator Selection bits
   824                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   825                           ;	Watchdog Timer Enable bit
   826                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   827                           ;	Power-up Timer Enable bit
   828                           ;	PWRTE = OFF, PWRT disabled
   829                           ;	RE3/MCLR pin function select bit
   830                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   831                           ;	Code Protection bit
   832                           ;	CP = OFF, Program memory code protection is disabled
   833                           ;	Data Code Protection bit
   834                           ;	CPD = OFF, Data memory code protection is disabled
   835                           ;	Brown Out Reset Selection bits
   836                           ;	BOREN = OFF, BOR disabled
   837                           ;	Internal External Switchover bit
   838                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   839                           ;	Fail-Safe Clock Monitor Enabled bit
   840                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   841                           ;	Low Voltage Programming Enable bit
   842                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   843                           ;	In-Circuit Debugger Mode bit
   844                           ;	DEBUG = 0x1, unprogrammed default
   845  2007                     	org	8199
   846  2007  20D1               	dw	8401
   847                           
   848                           ;Config register CONFIG2 @ 0x2008
   849                           ;	Brown-out Reset Selection bit
   850                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   851                           ;	Flash Program Memory Self Write Enable bits
   852                           ;	WRT = OFF, Write protection off
   853  2008                     	org	8200
   854  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                           _Semaforo
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Semaforo
   _Setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       A      12        0.0%
ABS                  0      0       A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 01 02:55:55 2021

                     l41 0723                       l44 0764                       l52 07E4  
                     u10 0770                       u11 076F                       u20 077F  
                     u21 077E                       u30 0794                       u31 0793  
                     u40 07A9                       u41 07A8                       u50 07B5  
                     u51 07B4                       u60 07BE                       u61 07BD  
                     u70 07D3                       u71 07D2                       u80 07DF  
                     u81 07DE                       u90 07EA                       u91 07E9  
                    l701 075C                      l703 0760                      l711 0770  
                    l705 0762                      l721 0794                      l713 0779  
                    l731 07B8                      l723 07A4                      l715 077F  
                    l707 0765                      l661 0704                      l741 07D3  
                    l725 07A9                      l717 0785                      l709 076A  
                    l671 0714                      l663 0708                      l743 07DA  
                    l727 07B0                      l735 07BA                      l719 078E  
                    l681 0724                      l673 0717                      l665 070B  
                    l745 07DF                      l737 07BE                      l729 07B5  
                    l691 073B                      l683 0729                      l675 071A  
                    l667 070E                      l659 0700                      l747 07E2  
                    l739 07CE                      l693 0748                      l685 072A  
                    l677 071D                      l669 0711                      l695 074B  
                    l687 0737                      l679 0720                      l697 074C  
                    l689 073A                      l699 0759                      u107 0774  
                    u117 0789                      u127 079A                      u137 07C4  
                    u147 0730                      u157 0741                      u167 0752  
                   _cont 0079                     _main 0765                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _Setup 0700                    _cont2 0078  
                  _juego 0076                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0073  
       __end_of_Semaforo 0765                   ?_Setup 0070                   _ANSELH 0189  
           __pdataCOMMON 0078  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_Setup 0724                  ??_Setup 0070                ?_Semaforo 0070  
             __pmaintext 0765               ??_Semaforo 0070                  __ptext1 0700  
                __ptext2 0724     end_of_initialization 07FC                _PORTAbits 0005  
              _PORTBbits 0006                _PORTEbits 0009            __pidataCOMMON 06FE  
    start_initialization 07EE        __size_of_Semaforo 0041              __pbssCOMMON 0076  
              ___latbits 0002           __size_of_Setup 0024                 _Semaforo 0724  
          __size_of_main 0089  
